// RO data = 776/776 bytes
// RW data = 16/135254752 bytes
// Stack size = 1048576 bytes
// RO data = [64, 37, 35, 42, 43, 61, 45, 32, 46, 32, 0, 0, 128, 2, 0, 0, 104, 1, 0, 0, 32, 32, 32, 32, 160, 0, 0, 0, 72, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 58, 32, 44, 32, 108, 101, 110, 103, 116, 104, 58, 32, 0, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 55, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 112, 116, 114, 58, 32, 0, 0, 0, 104, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 58, 32, 0, 0, 136, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 114, 111, 99, 101, 115, 115, 105, 110, 103, 32, 120, 32, 105, 109, 97, 103, 101, 32, 116, 111, 32, 32, 65, 83, 67, 73, 73, 0, 0, 0, 0, 168, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 179, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 180, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 179, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 67, 114, 101, 97, 116, 105, 110, 103, 32, 105, 109, 97, 103, 101, 32, 115, 108, 105, 99, 101, 46, 46, 46, 73, 109, 97, 103, 101, 32, 115, 108, 105, 99, 101, 32, 99, 114, 101, 97, 116, 101, 100, 44, 32, 102, 105, 114, 115, 116, 32, 98, 121, 116, 101, 115, 58, 32, 0, 0, 0, 0, 0, 0, 0, 47, 1, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 114, 116, 105, 110, 103, 32, 65, 83, 67, 73, 73, 32, 99, 111, 110, 118, 101, 114, 115, 105, 111, 110, 46, 46, 46, 65, 83, 67, 73, 73, 32, 97, 114, 116, 32, 103, 101, 110, 101, 114, 97, 116, 101, 100, 44, 32, 108, 101, 110, 103, 116, 104, 58, 32, 0, 0, 0, 0, 0, 0, 0, 132, 1, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 114, 101, 102, 105, 110, 101, 58, 32, 102, 101, 116, 99, 104, 32, 102, 97, 105, 108, 101, 100, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 1923
// Code size = 5777 bytes

      :                          @0
     0: 28 c3 02 00 00           jump @45
      :                          @1
     5: 28 a6 08 00 00           jump @118
      :                          @2
    10: 28 aa 08                 jump @119
      :                          @3
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    36: 7c 77                    a0 = u8 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 05 0e                 jump @247
      :                          @6
    49: 7c 77                    a0 = u8 [a0]
    51: 33 0b 81 00              a4 = 0x81
    55: 95 19 7f                 a2 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 bc                    a5 = a4
    64: 84 7b 0f                 a4 = a0 & 0xf
    67: 97 77 38                 a0 = a0 << 0x38
    70: 98 77 3c                 a0 = a0 >> 0x3c
    73: 88 b3 0a                 t1 = a4 <u 0xa
    76: 33 0a 30                 a3 = 0x30
    79: da 32 0a                 a3 = t0 if t1 == 0
    82: be ba 0a                 i32 a3 = a3 + a4
    85: 78 9a                    u8 [a2] = a3
    87: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    90: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    93: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    96: 28 31                    jump @11
      :                          @9
    98: 7c 77                    a0 = u8 [a0]
   100: 33 0b 81 00              a4 = 0x81
   104: 95 19 7f                 a2 = sp + 0x7f
   107: 33 02 37                 t0 = 0x37
   110: 01                       fallthrough
      :                          @10
   111: 64 bc                    a5 = a4
   113: 84 7b 0f                 a4 = a0 & 0xf
   116: 97 77 38                 a0 = a0 << 0x38
   119: 98 77 3c                 a0 = a0 >> 0x3c
   122: 88 b3 0a                 t1 = a4 <u 0xa
   125: 33 0a 30                 a3 = 0x30
   128: da 32 0a                 a3 = t0 if t1 == 0
   131: be ba 0a                 i32 a3 = a3 + a4
   134: 78 9a                    u8 [a2] = a3
   136: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   139: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   142: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   145: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   148: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   153: 9a bb 81 00              a4 = 0x81 - a4
   157: 64 1a                    a3 = sp
   159: c8 7a 0a                 a3 = a3 + a0
   162: 33 09 02                 a2 = 0x2
   165: 64 87                    a0 = a1
   167: 33 08 3e 02 01           a1 = 0x1023e
   172: 50 10 02 ae 0e           ra = 2, jump @257
      :                          @13 [@dyn 1]
   177: 82 10 80 00              ra = u64 [sp + 0x80]
   181: 95 11 88 00              sp = sp + 0x88
   185: 32 00                    ret
      :                          @14
   187: 00                       trap
      :                          @15 [@dyn 2]
   188: 95 11 60 ff              sp = sp + 0xffffffffffffff60
   192: 7b 10 98 00              u64 [sp + 0x98] = ra
   196: 7b 15 90 00              u64 [sp + 0x90] = s0
   200: 7b 16 88 00              u64 [sp + 0x88] = s1
   204: 82 89 28                 a2 = u64 [a1 + 0x28]
   207: 82 7a                    a3 = u64 [a0]
   209: 7b 1a 18                 u64 [sp + 0x18] = a3
   212: 82 76 08                 s1 = u64 [a0 + 0x8]
   215: 7b 18 20                 u64 [sp + 0x20] = a1
   218: 82 87 20                 a0 = u64 [a1 + 0x20]
   221: 82 9a 18                 a3 = u64 [a2 + 0x18]
   224: 33 08 00 02 01           a1 = 0x10200
   229: 33 09 01                 a2 = 0x1
   232: 33 05 01                 s0 = 0x1
   235: b4 a0 01 06              ra = 6, jump [a3]
      :                          @16 [@dyn 3]
   239: 51 06 1e                 jump @21 if s1 == 0
      :                          @17
   242: 52 07 be 00              jump @28 if a0 != 0
      :                          @18
   246: 82 18 20                 a1 = u64 [sp + 0x20]
   249: 80 89 34                 a2 = u32 [a1 + 0x34]
   252: 84 97 04                 a0 = a2 & 0x4
   255: 52 07 16                 jump @22 if a0 != 0
      :                          @19
   258: 82 17 18                 a0 = u64 [sp + 0x18]
   261: 50 10 08 08 ff           ra = 8, jump @3
      :                          @20 [@dyn 4]
   266: 28 a3 00                 jump @27
      :                          @21
   269: 64 79                    a2 = a0
   271: 82 18 20                 a1 = u64 [sp + 0x20]
   274: 28 84 01                 jump @42
      :                          @22
   277: 7b 19 10                 u64 [sp + 0x10] = a2
   280: 82 89 28                 a2 = u64 [a1 + 0x28]
   283: 82 87 20                 a0 = u64 [a1 + 0x20]
   286: 7b 19 08                 u64 [sp + 0x8] = a2
   289: 82 9a 18                 a3 = u64 [a2 + 0x18]
   292: 33 08 3c 02 01           a1 = 0x1023c
   297: 33 09 01                 a2 = 0x1
   300: 33 05 01                 s0 = 0x1
   303: 7b 17                    u64 [sp] = a0
   305: b4 a0 01 0a              ra = 10, jump [a3]
      :                          @23 [@dyn 5]
   309: 52 07 7b                 jump @28 if a0 != 0
      :                          @24
   312: 33 05 01                 s0 = 0x1
   315: 78 15 47                 u8 [sp + 0x47] = s0
   318: 82 17                    a0 = u64 [sp]
   320: 7b 17 28                 u64 [sp + 0x28] = a0
   323: 82 17 08                 a0 = u64 [sp + 0x8]
   326: 7b 17 30                 u64 [sp + 0x30] = a0
   329: 95 17 47                 a0 = sp + 0x47
   332: 7b 17 38                 u64 [sp + 0x38] = a0
   335: 82 1c 20                 a5 = u64 [sp + 0x20]
   338: 81 c2 30                 t0 = i32 [a5 + 0x30]
   341: 7c c8 38                 a1 = u8 [a5 + 0x38]
   344: 82 c9                    a2 = u64 [a5]
   346: 82 ca 08                 a3 = u64 [a5 + 0x8]
   349: 82 cb 10                 a4 = u64 [a5 + 0x10]
   352: 82 cc 18                 a5 = u64 [a5 + 0x18]
   355: 82 17 10                 a0 = u64 [sp + 0x10]
   358: 7a 17 7c                 u32 [sp + 0x7c] = a0
   361: 7a 12 78                 u32 [sp + 0x78] = t0
   364: 78 18 80 00              u8 [sp + 0x80] = a1
   368: 7b 19 48                 u64 [sp + 0x48] = a2
   371: 7b 1a 50                 u64 [sp + 0x50] = a3
   374: 7b 1b 58                 u64 [sp + 0x58] = a4
   377: 7b 1c 60                 u64 [sp + 0x60] = a5
   380: 95 17 28                 a0 = sp + 0x28
   383: 7b 17 68                 u64 [sp + 0x68] = a0
   386: 33 07 08 02 01           a0 = 0x10208
   391: 7b 17 70                 u64 [sp + 0x70] = a0
   394: 95 18 48                 a1 = sp + 0x48
   397: 82 17 18                 a0 = u64 [sp + 0x18]
   400: 50 10 0c 7d fe           ra = 12, jump @3
      :                          @25 [@dyn 6]
   405: 52 07 1b                 jump @28 if a0 != 0
      :                          @26
   408: 82 18 70                 a1 = u64 [sp + 0x70]
   411: 82 17 68                 a0 = u64 [sp + 0x68]
   414: 82 8a 18                 a3 = u64 [a1 + 0x18]
   417: 33 08 3a 02 01           a1 = 0x1023a
   422: 33 09 02                 a2 = 0x2
   425: b4 a0 01 0e              ra = 14, jump [a3]
      :                          @27 [@dyn 7]
   429: 64 75                    s0 = a0
   431: 01                       fallthrough
      :                          @28
   432: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   435: 82 18 20                 a1 = u64 [sp + 0x20]
   438: 64 59                    a2 = s0
   440: 51 06 de 00              jump @42 if s1 == 0
      :                          @29
   444: 82 15 18                 s0 = u64 [sp + 0x18]
   447: 95 55 01                 s0 = s0 + 0x1
   450: 33 07 38 02 01           a0 = 0x10238
   455: 7b 17 18                 u64 [sp + 0x18] = a0
   458: 33 07 08 02 01           a0 = 0x10208
   463: 7b 17 10                 u64 [sp + 0x10] = a0
   466: 33 07 3a 02 01           a0 = 0x1023a
   471: 7b 17 08                 u64 [sp + 0x8] = a0
   474: 28 13                    jump @32
      :                          @30
   476: 33 09 01                 a2 = 0x1
   479: 82 18 20                 a1 = u64 [sp + 0x20]
   482: 01                       fallthrough
      :                          @31
   483: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   486: 95 55 01                 s0 = s0 + 0x1
   489: 51 06 ad 00              jump @42 if s1 == 0
      :                          @32
   493: 84 97 ff 00              a0 = a2 & 0xff
   497: 33 09 01                 a2 = 0x1
   500: 52 07 ef                 jump @31 if a0 != 0
      :                          @33
   503: 80 8b 34                 a4 = u32 [a1 + 0x34]
   506: 82 87 20                 a0 = u64 [a1 + 0x20]
   509: 82 89 28                 a2 = u64 [a1 + 0x28]
   512: 84 ba 04                 a3 = a4 & 0x4
   515: 52 0a 27                 jump @38 if a3 != 0
      :                          @34
   518: 82 9a 18                 a3 = u64 [a2 + 0x18]
   521: 33 09 02                 a2 = 0x2
   524: 82 18 18                 a1 = u64 [sp + 0x18]
   527: b4 a0 01 10              ra = 16, jump [a3]
      :                          @35 [@dyn 8]
   531: 82 18 20                 a1 = u64 [sp + 0x20]
   534: 33 09 01                 a2 = 0x1
   537: 52 07 ca                 jump @31 if a0 != 0
      :                          @36
   540: 64 57                    a0 = s0
   542: 50 10 12 ef fd           ra = 18, jump @3
      :                          @37 [@dyn 9]
   547: 82 18 20                 a1 = u64 [sp + 0x20]
   550: 64 79                    a2 = a0
   552: 28 bb                    jump @31
      :                          @38
   554: 46 11 47 01              u8 [sp + 71] = 0x1
   558: 7b 17 28                 u64 [sp + 0x28] = a0
   561: 7b 19 30                 u64 [sp + 0x30] = a2
   564: 95 17 47                 a0 = sp + 0x47
   567: 7b 17 38                 u64 [sp + 0x38] = a0
   570: 81 87 30                 a0 = i32 [a1 + 0x30]
   573: 7c 89 38                 a2 = u8 [a1 + 0x38]
   576: 82 8a                    a3 = u64 [a1]
   578: 82 83 08                 t1 = u64 [a1 + 0x8]
   581: 82 8c 10                 a5 = u64 [a1 + 0x10]
   584: 82 82 18                 t0 = u64 [a1 + 0x18]
   587: 7a 1b 7c                 u32 [sp + 0x7c] = a4
   590: 7a 17 78                 u32 [sp + 0x78] = a0
   593: 78 19 80 00              u8 [sp + 0x80] = a2
   597: 7b 1a 48                 u64 [sp + 0x48] = a3
   600: 7b 13 50                 u64 [sp + 0x50] = t1
   603: 7b 1c 58                 u64 [sp + 0x58] = a5
   606: 7b 12 60                 u64 [sp + 0x60] = t0
   609: 95 17 28                 a0 = sp + 0x28
   612: 7b 17 68                 u64 [sp + 0x68] = a0
   615: 82 17 10                 a0 = u64 [sp + 0x10]
   618: 7b 17 70                 u64 [sp + 0x70] = a0
   621: 95 18 48                 a1 = sp + 0x48
   624: 64 57                    a0 = s0
   626: 50 10 14 9b fd           ra = 20, jump @3
      :                          @39 [@dyn 10]
   631: 52 07 65 ff              jump @30 if a0 != 0
      :                          @40
   635: 82 18 70                 a1 = u64 [sp + 0x70]
   638: 82 17 68                 a0 = u64 [sp + 0x68]
   641: 82 8a 18                 a3 = u64 [a1 + 0x18]
   644: 33 09 02                 a2 = 0x2
   647: 82 18 08                 a1 = u64 [sp + 0x8]
   650: b4 a0 01 16              ra = 22, jump [a3]
      :                          @41 [@dyn 11]
   654: 64 79                    a2 = a0
   656: 82 18 20                 a1 = u64 [sp + 0x20]
   659: 28 50 ff                 jump @31
      :                          @42
   662: 33 07 01                 a0 = 0x1
   665: 52 09 18                 jump @44 if a2 != 0
      :                          @43
   668: 82 89 28                 a2 = u64 [a1 + 0x28]
   671: 82 87 20                 a0 = u64 [a1 + 0x20]
   674: 82 9a 18                 a3 = u64 [a2 + 0x18]
   677: 33 08 3d 02 01           a1 = 0x1023d
   682: 33 09 01                 a2 = 0x1
   685: b4 a0 01 18              ra = 24, jump [a3]
      :                          @44 [@dyn 12]
   689: 82 10 98 00              ra = u64 [sp + 0x98]
   693: 82 15 90 00              s0 = u64 [sp + 0x90]
   697: 82 16 88 00              s1 = u64 [sp + 0x88]
   701: 95 11 a0 00              sp = sp + 0xa0
   705: 32 00                    ret
      :                          @45 [export #0: 'refine']
   707: 95 11 50 fe              sp = sp + 0xfffffffffffffe50
   711: 7b 10 a8 01              u64 [sp + 0x1a8] = ra
   715: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
   719: 7b 16 98 01              u64 [sp + 0x198] = s1
   723: 49 21 d0 00 ff ff ff f7  u64 [sp + 208] = 0xfffffffff7ffffff
   731: 7b 17 e0 00              u64 [sp + 0xe0] = a0
   735: 7b 18 e8 00              u64 [sp + 0xe8] = a1
   739: 95 17 e0 00              a0 = sp + 0xe0
   743: 7b 17 18 01              u64 [sp + 0x118] = a0
   747: 33 07 80 00              a0 = 0x80
   751: 7b 17 d8 00              u64 [sp + 0xd8] = a0
   755: 7b 17 20 01              u64 [sp + 0x120] = a0
   759: 95 17 e8 00              a0 = sp + 0xe8
   763: 7b 17 28 01              u64 [sp + 0x128] = a0
   767: 33 07 50                 a0 = 0x50
   770: 7b 17 30 01              u64 [sp + 0x130] = a0
   774: 33 07 48 00 01           a0 = 0x10048
   779: 7b 17 48 01              u64 [sp + 0x148] = a0
   783: 49 21 50 01 02           u64 [sp + 336] = 0x2
   788: 49 21 68 01              u64 [sp + 360] = 0
   792: 95 18 18 01              a1 = sp + 0x118
   796: 7b 18 58 01              u64 [sp + 0x158] = a1
   800: 49 21 60 01 02           u64 [sp + 352] = 0x2
   805: 95 17 00 01              a0 = sp + 0x100
   809: 95 18 48 01              a1 = sp + 0x148
   813: 50 10 1a d4 07           ra = 26, jump @176
      :                          @46 [@dyn 13]
   818: 82 15 08 01              s0 = u64 [sp + 0x108]
   822: 82 1b 10 01              a4 = u64 [sp + 0x110]
   826: 82 16 00 01              s1 = u64 [sp + 0x100]
   830: 33 07 02                 a0 = 0x2
   833: 33 08                    a1 = 0
   835: 33 09                    a2 = 0
   837: 64 5a                    a3 = s0
   839: 33 00 1c                 ra = 0x1c
   842: 0a 64                    ecalli 100 // 'log'
   844: 01                       fallthrough
      :                          @47 [@dyn 14]
   845: 82 17 d0 00              a0 = u64 [sp + 0xd0]
   849: c8 67 07                 a0 = a0 + s1
   852: 53 47 00 00 00 f8 29     jump @53 if a0 <u 4160749568
      :                          @48
   859: 33 07 d0 d2 12           a0 = 0x12d2d0
   864: 95 77 00 00 00 08        a0 = a0 + 0x8000000
   870: 01                       fallthrough
      :                          @49
   871: 82 78                    a1 = u64 [a0]
   873: c9 87 09                 a2 = a0 - a1
   876: ab 59 11                 jump @53 if a2 != s0
      :                          @50
   879: c9 68 09                 a2 = a1 - s1
   882: 01                       fallthrough
      :                          @51
   883: 82 7a                    a3 = u64 [a0]
   885: ab 8a f2                 jump @49 if a3 != a1
      :                          @52
   888: 7b 79                    u64 [a0] = a2
   890: 33 0b                    a4 = 0
   892: 01                       fallthrough
      :                          @53
   893: 33 07 11 00 03           a0 = 0x30011
   898: 7b 17 f0 00              u64 [sp + 0xf0] = a0
   902: 95 17 f0 00              a0 = sp + 0xf0
   906: 7b 17 00 01              u64 [sp + 0x100] = a0
   910: 82 17 d8 00              a0 = u64 [sp + 0xd8]
   914: 7b 17 08 01              u64 [sp + 0x108] = a0
   918: 33 07 78 00 01           a0 = 0x10078
   923: 7b 17 48 01              u64 [sp + 0x148] = a0
   927: 49 21 50 01 01           u64 [sp + 336] = 0x1
   932: 49 21 68 01              u64 [sp + 360] = 0
   936: 95 18 00 01              a1 = sp + 0x100
   940: 7b 18 58 01              u64 [sp + 0x158] = a1
   944: 49 21 60 01 01           u64 [sp + 352] = 0x1
   949: 95 17 18 01              a0 = sp + 0x118
   953: 95 18 48 01              a1 = sp + 0x148
   957: 50 10 1e 44 07           ra = 30, jump @176
      :                          @54 [@dyn 15]
   962: 82 15 20 01              s0 = u64 [sp + 0x120]
   966: 82 1b 28 01              a4 = u64 [sp + 0x128]
   970: 82 16 18 01              s1 = u64 [sp + 0x118]
   974: 33 07 02                 a0 = 0x2
   977: 33 08                    a1 = 0
   979: 33 09                    a2 = 0
   981: 64 5a                    a3 = s0
   983: 33 00 20                 ra = 0x20
   986: 0a 64                    ecalli 100 // 'log'
   988: 01                       fallthrough
      :                          @55 [@dyn 16]
   989: 82 17 d0 00              a0 = u64 [sp + 0xd0]
   993: c8 67 07                 a0 = a0 + s1
   996: 53 47 00 00 00 f8 27     jump @61 if a0 <u 4160749568
      :                          @56
  1003: 33 07 d0 d2 12           a0 = 0x12d2d0
  1008: 95 77 00 00 00 08        a0 = a0 + 0x8000000
  1014: 01                       fallthrough
      :                          @57
  1015: 82 78                    a1 = u64 [a0]
  1017: c9 87 09                 a2 = a0 - a1
  1020: ab 59 0f                 jump @61 if a2 != s0
      :                          @58
  1023: c9 68 09                 a2 = a1 - s1
  1026: 01                       fallthrough
      :                          @59
  1027: 82 7a                    a3 = u64 [a0]
  1029: ab 8a f2                 jump @57 if a3 != a1
      :                          @60
  1032: 7b 79                    u64 [a0] = a2
  1034: 01                       fallthrough
      :                          @61
  1035: 49 21 c0 00              u64 [sp + 192] = 0
  1039: 49 21 a0 00 00 8c 0a     u64 [sp + 160] = 0xa8c00
  1046: 33 07 80 00              a0 = 0x80
  1050: 7b 17 98 00              u64 [sp + 0x98] = a0
  1054: 33 07 98 00 01           a0 = 0x10098
  1059: 7b 17 90 00              u64 [sp + 0x90] = a0
  1063: 33 07 0c 00 01           a0 = 0x1000c
  1068: 7b 17 88 00              u64 [sp + 0x88] = a0
  1072: 33 07 7e                 a0 = 0x7e
  1075: 7b 17 80 00              u64 [sp + 0x80] = a0
  1079: 33 07 10 00 01           a0 = 0x10010
  1084: 7b 17 78                 u64 [sp + 0x78] = a0
  1087: 33 07 18 00 01           a0 = 0x10018
  1092: 7b 17 70                 u64 [sp + 0x70] = a0
  1095: 33 07 1c 00 01           a0 = 0x1001c
  1100: 7b 17 68                 u64 [sp + 0x68] = a0
  1103: 33 07 c8 00 01           a0 = 0x100c8
  1108: 7b 17 60                 u64 [sp + 0x60] = a0
  1111: 33 07 d0 d2 12           a0 = 0x12d2d0
  1116: 95 77 00 00 00 08        a0 = a0 + 0x8000000
  1122: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1126: 33 07 18 01 01           a0 = 0x10118
  1131: 7b 17 58                 u64 [sp + 0x58] = a0
  1134: 33 07 04                 a0 = 0x4
  1137: 7b 17 50                 u64 [sp + 0x50] = a0
  1140: 33 07 58 01 01           a0 = 0x10158
  1145: 7b 17 48                 u64 [sp + 0x48] = a0
  1148: 33 07 68 01 01           a0 = 0x10168
  1153: 7b 17 40                 u64 [sp + 0x40] = a0
  1156: 49 11 38 00 84 03        u64 [sp + 56] = 0x38400
  1162: 33 07 50                 a0 = 0x50
  1165: 7b 17 30                 u64 [sp + 0x30] = a0
  1168: 33 07 a8 01 01           a0 = 0x101a8
  1173: 7b 17 28                 u64 [sp + 0x28] = a0
  1176: 33 07 11 f1 11           a0 = 0x11f111
  1181: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1185: 49 01 00 ca 9a 3b        u64 [sp + 0] = 0x3b9aca00
  1191: 33 07 00 00 01           a0 = 0x10000
  1196: 7b 17 20                 u64 [sp + 0x20] = a0
  1199: 33 07 11 8c 0d           a0 = 0xd8c11
  1204: 7b 17 18                 u64 [sp + 0x18] = a0
  1207: 49 11 10 7b 14           u64 [sp + 16] = 0x147b
  1212: 33 07 11 10 11           a0 = 0x111011
  1217: 7b 17 08                 u64 [sp + 0x8] = a0
  1220: 49 21 d8 00 b4 e1 00     u64 [sp + 216] = 0xe1b4
  1227: 49 21 a8 00 00 2d        u64 [sp + 168] = 0x2d00
  1233: 01                       fallthrough
      :                          @62
  1234: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  1238: 33 0a 1e                 a3 = 0x1e
  1241: 33 08                    a1 = 0
  1243: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  1247: 33 0b                    a4 = 0
  1249: 33 0c                    a5 = 0
  1251: 0a 01                    ecalli 1 // 'fetch'
  1253: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  1257: 95 17 f8 00              a0 = sp + 0xf8
  1261: 7b 17 00 01              u64 [sp + 0x100] = a0
  1265: 82 17 98 00              a0 = u64 [sp + 0x98]
  1269: 7b 17 08 01              u64 [sp + 0x108] = a0
  1273: 82 17 90 00              a0 = u64 [sp + 0x90]
  1277: 7b 17 48 01              u64 [sp + 0x148] = a0
  1281: 49 21 50 01 01           u64 [sp + 336] = 0x1
  1286: 49 21 68 01              u64 [sp + 360] = 0
  1290: 95 18 00 01              a1 = sp + 0x100
  1294: 7b 18 58 01              u64 [sp + 0x158] = a1
  1298: 49 21 60 01 01           u64 [sp + 352] = 0x1
  1303: 95 17 18 01              a0 = sp + 0x118
  1307: 95 18 48 01              a1 = sp + 0x148
  1311: 50 10 22 e2 05           ra = 34, jump @176
      :                          @63 [@dyn 17]
  1316: 82 15 20 01              s0 = u64 [sp + 0x120]
  1320: 82 1b 28 01              a4 = u64 [sp + 0x128]
  1324: 82 16 18 01              s1 = u64 [sp + 0x118]
  1328: 33 07 02                 a0 = 0x2
  1331: 33 08                    a1 = 0
  1333: 33 09                    a2 = 0
  1335: 64 5a                    a3 = s0
  1337: 33 00 24                 ra = 0x24
  1340: 0a 64                    ecalli 100 // 'log'
  1342: 01                       fallthrough
      :                          @64 [@dyn 18]
  1343: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  1347: c8 67 07                 a0 = a0 + s1
  1350: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  1354: 53 47 00 00 00 f8 1b     jump @69 if a0 <u 4160749568
      :                          @65
  1361: 82 b7                    a0 = u64 [a4]
  1363: c9 7b 08                 a1 = a4 - a0
  1366: ab 58 0f                 jump @69 if a1 != s0
      :                          @66
  1369: c9 67 08                 a1 = a0 - s1
  1372: 01                       fallthrough
      :                          @67
  1373: 82 b9                    a2 = u64 [a4]
  1375: ab 79 f2                 jump @65 if a2 != a0
      :                          @68
  1378: 7b b8                    u64 [a4] = a1
  1380: 01                       fallthrough
      :                          @69
  1381: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  1385: 51 17 ff 16 03           jump @115 if a0 == 4294967295
      :                          @70
  1390: 82 17 88 00              a0 = u64 [sp + 0x88]
  1394: 7b 17 48 01              u64 [sp + 0x148] = a0
  1398: 82 17 80 00              a0 = u64 [sp + 0x80]
  1402: 7b 17 50 01              u64 [sp + 0x150] = a0
  1406: 82 18 78                 a1 = u64 [sp + 0x78]
  1409: 7b 18 58 01              u64 [sp + 0x158] = a1
  1413: 7b 17 60 01              u64 [sp + 0x160] = a0
  1417: 82 18 70                 a1 = u64 [sp + 0x70]
  1420: 7b 18 68 01              u64 [sp + 0x168] = a1
  1424: 7b 17 70 01              u64 [sp + 0x170] = a0
  1428: 82 18 68                 a1 = u64 [sp + 0x68]
  1431: 7b 18 78 01              u64 [sp + 0x178] = a1
  1435: 7b 17 80 01              u64 [sp + 0x180] = a0
  1439: 82 17 60                 a0 = u64 [sp + 0x60]
  1442: 7b 17 18 01              u64 [sp + 0x118] = a0
  1446: 49 21 20 01 05           u64 [sp + 288] = 0x5
  1451: 49 21 38 01              u64 [sp + 312] = 0
  1455: 95 17 48 01              a0 = sp + 0x148
  1459: 7b 17 28 01              u64 [sp + 0x128] = a0
  1463: 49 21 30 01 04           u64 [sp + 304] = 0x4
  1468: 95 17 00 01              a0 = sp + 0x100
  1472: 95 18 18 01              a1 = sp + 0x118
  1476: 50 10 26 3d 05           ra = 38, jump @176
      :                          @71 [@dyn 19]
  1481: 82 15 08 01              s0 = u64 [sp + 0x108]
  1485: 82 1b 10 01              a4 = u64 [sp + 0x110]
  1489: 82 16 00 01              s1 = u64 [sp + 0x100]
  1493: 33 07 02                 a0 = 0x2
  1496: 33 08                    a1 = 0
  1498: 33 09                    a2 = 0
  1500: 64 5a                    a3 = s0
  1502: 33 00 28                 ra = 0x28
  1505: 0a 64                    ecalli 100 // 'log'
  1507: 01                       fallthrough
      :                          @72 [@dyn 20]
  1508: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  1512: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  1516: c8 67 07                 a0 = a0 + s1
  1519: 53 47 00 00 00 f8 1b     jump @77 if a0 <u 4160749568
      :                          @73
  1526: 82 b7                    a0 = u64 [a4]
  1528: c9 7b 08                 a1 = a4 - a0
  1531: ab 58 0f                 jump @77 if a1 != s0
      :                          @74
  1534: c9 67 08                 a1 = a0 - s1
  1537: 01                       fallthrough
      :                          @75
  1538: 82 b9                    a2 = u64 [a4]
  1540: ab 79 f2                 jump @73 if a2 != a0
      :                          @76
  1543: 7b b8                    u64 [a4] = a1
  1545: 01                       fallthrough
      :                          @77
  1546: 33 07 02                 a0 = 0x2
  1549: 33 0b 17                 a4 = 0x17
  1552: 33 08                    a1 = 0
  1554: 33 09                    a2 = 0
  1556: 82 1a 58                 a3 = u64 [sp + 0x58]
  1559: 0a 64                    ecalli 100 // 'log'
  1561: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  1565: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1569: 7b 17 00 01              u64 [sp + 0x100] = a0
  1573: 49 21 08 01 08           u64 [sp + 264] = 0x8
  1578: 95 17 00 01              a0 = sp + 0x100
  1582: 7b 17 88 01              u64 [sp + 0x188] = a0
  1586: 82 17 50                 a0 = u64 [sp + 0x50]
  1589: 7b 17 90 01              u64 [sp + 0x190] = a0
  1593: 82 17 48                 a0 = u64 [sp + 0x48]
  1596: 7b 17 48 01              u64 [sp + 0x148] = a0
  1600: 49 21 50 01 01           u64 [sp + 336] = 0x1
  1605: 49 21 68 01              u64 [sp + 360] = 0
  1609: 95 18 88 01              a1 = sp + 0x188
  1613: 7b 18 58 01              u64 [sp + 0x158] = a1
  1617: 49 21 60 01 01           u64 [sp + 352] = 0x1
  1622: 95 17 18 01              a0 = sp + 0x118
  1626: 95 18 48 01              a1 = sp + 0x148
  1630: 50 10 2a a3 04           ra = 42, jump @176
      :                          @78 [@dyn 21]
  1635: 82 15 20 01              s0 = u64 [sp + 0x120]
  1639: 82 1b 28 01              a4 = u64 [sp + 0x128]
  1643: 82 16 18 01              s1 = u64 [sp + 0x118]
  1647: 33 07 02                 a0 = 0x2
  1650: 33 08                    a1 = 0
  1652: 33 09                    a2 = 0
  1654: 64 5a                    a3 = s0
  1656: 33 00 2c                 ra = 0x2c
  1659: 0a 64                    ecalli 100 // 'log'
  1661: 01                       fallthrough
      :                          @79 [@dyn 22]
  1662: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  1666: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  1670: c8 67 07                 a0 = a0 + s1
  1673: 53 47 00 00 00 f8 1b     jump @84 if a0 <u 4160749568
      :                          @80
  1680: 82 b7                    a0 = u64 [a4]
  1682: c9 7b 08                 a1 = a4 - a0
  1685: ab 58 0f                 jump @84 if a1 != s0
      :                          @81
  1688: c9 67 08                 a1 = a0 - s1
  1691: 01                       fallthrough
      :                          @82
  1692: 82 b9                    a2 = u64 [a4]
  1694: ab 79 f2                 jump @80 if a2 != a0
      :                          @83
  1697: 7b b8                    u64 [a4] = a1
  1699: 01                       fallthrough
      :                          @84
  1700: 33 07 02                 a0 = 0x2
  1703: 33 0b 1c                 a4 = 0x1c
  1706: 33 08                    a1 = 0
  1708: 33 09                    a2 = 0
  1710: 82 1a 40                 a3 = u64 [sp + 0x40]
  1713: 33 00 2e                 ra = 0x2e
  1716: 0a 64                    ecalli 100 // 'log'
  1718: 01                       fallthrough
      :                          @85 [@dyn 23]
  1719: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1723: 83 77 01                 i32 a0 = a0 + 0x1
  1726: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1730: 82 17 b0 00              a0 = u64 [sp + 0xb0]
  1734: 95 77 02                 a0 = a0 + 0x2
  1737: 82 18 18                 a1 = u64 [sp + 0x18]
  1740: 82 19 38                 a2 = u64 [sp + 0x38]
  1743: 33 02 1e                 t0 = 0x1e
  1746: 33 03 3b                 t1 = 0x3b
  1749: 33 06 0b                 s1 = 0xb
  1752: 82 15 10                 s0 = u64 [sp + 0x10]
  1755: 01                       fallthrough
      :                          @86
  1756: 7c 7a fe                 a3 = u8 [a0 + 0xfffffffffffffffe]
  1759: 7c 7b ff                 a4 = u8 [a0 + 0xffffffffffffffff]
  1762: 7c 7c                    a5 = u8 [a0]
  1764: ca 2a 0a                 a3 = a3 * t0
  1767: ca 3b 0b                 a4 = a4 * t1
  1770: ca 6c 0c                 a5 = a5 * s1
  1773: c8 cb 0b                 a4 = a4 + a5
  1776: c8 ba 0a                 a3 = a3 + a4
  1779: ca 5a 0a                 a3 = a3 * s0
  1782: 98 aa 13                 a3 = a3 >> 0x13
  1785: 78 8a                    u8 [a1] = a3
  1787: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  1790: 95 88 01                 a1 = a1 + 0x1
  1793: 95 77 03                 a0 = a0 + 0x3
  1796: 52 09 d8                 jump @86 if a2 != 0
      :                          @87
  1799: 33 04                    t2 = 0
  1801: 33 02                    t0 = 0
  1803: 33 07                    a0 = 0
  1805: 82 13 20                 t1 = u64 [sp + 0x20]
  1808: 33 06 11 8c 0d           s1 = 0xd8c11
  1813: 33 00 48                 ra = 0x48
  1816: 01                       fallthrough
      :                          @88
  1817: aa 02 55                 jump @95 if t0 == ra
      :                          @89
  1820: 33 08                    a1 = 0
  1822: 83 22 01                 i32 t0 = t0 + 0x1
  1825: 82 1b a8 00              a4 = u64 [sp + 0xa8]
  1829: c9 7b 0b                 a4 = a4 - a0
  1832: 33 0c 11 10 11           a5 = 0x111011
  1837: c8 7c 0c                 a5 = a5 + a0
  1840: 64 45                    s0 = t2
  1842: 28 0d                    jump @91
      :                          @90
  1844: 95 88 01                 a1 = a1 + 0x1
  1847: 95 55 04                 s0 = s0 + 0x4
  1850: 51 28 a0 00 21           jump @94 if a1 == 160
      :                          @91
  1855: aa 8b 2f                 jump @95 if a4 == a1
      :                          @92
  1858: 98 59 0a                 a2 = s0 >> 0xa
  1861: 55 29 e1 00 ef           jump @90 if a2 >=u 225
      :                          @93
  1866: 33 09 11 8c 0d           a2 = 0xd8c11
  1871: c8 59 09                 a2 = a2 + s0
  1874: 7c 99                    a2 = u8 [a2]
  1876: c8 8c 0a                 a3 = a5 + a1
  1879: 78 a9                    u8 [a3] = a2
  1881: 28 db                    jump @90
      :                          @94
  1883: c8 87 07                 a0 = a0 + a1
  1886: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
  1889: 95 4a ff 07              a3 = t2 + 0x7ff
  1893: 95 a4 81 04              t2 = a3 + 0x481
  1897: 53 29 ff 2c b0           jump @88 if a2 <u 11519
      :                          @95
  1902: 33 02                    t0 = 0
  1904: 33 09                    a2 = 0
  1906: 82 14 08                 t2 = u64 [sp + 0x8]
  1909: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  1913: 33 08 00 10              a1 = 0x1000
  1917: 01                       fallthrough
      :                          @96
  1918: 95 22 01                 t0 = t0 + 0x1
  1921: 33 0b a0 00              a4 = 0xa0
  1925: 64 4c                    a5 = t2
  1927: 01                       fallthrough
      :                          @97
  1928: 64 95                    s0 = a2
  1930: 82 19 d8 00              a2 = u64 [sp + 0xd8]
  1934: aa 95 45                 jump @102 if s0 == a2
      :                          @98
  1937: 7c c6                    s1 = u8 [a5]
  1939: 97 69 03                 a2 = s1 << 0x3
  1942: c8 69 09                 a2 = a2 + s1
  1945: 83 86 11                 i32 s1 = a1 + 0x11
  1948: ca 69 09                 a2 = a2 * s1
  1951: 98 99 14                 a2 = a2 >> 0x14
  1954: c8 39 09                 a2 = a2 + t1
  1957: 7c 99                    a2 = u8 [a2]
  1959: c8 57 0a                 a3 = a0 + s0
  1962: 78 a9                    u8 [a3] = a2
  1964: 95 59 01                 a2 = s0 + 0x1
  1967: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  1970: 95 cc 01                 a5 = a5 + 0x1
  1973: 52 0b d3                 jump @97 if a4 != 0
      :                          @99
  1976: 33 0b b3 e1 00           a4 = 0xe1b3
  1981: ae b5 bb 00              jump @114 if s0 >=u a4
      :                          @100
  1985: c8 79 09                 a2 = a2 + a0
  1988: 46 09 0a                 u8 [a2 + 0] = 0xa
  1991: 95 59 02                 a2 = s0 + 0x2
  1994: 95 44 a0 00              t2 = t2 + 0xa0
  1998: ab 02 b0                 jump @96 if t0 != ra
      :                          @101
  2001: 28 05                    jump @103
      :                          @102
  2003: 64 59                    a2 = s0
  2005: 01                       fallthrough
      :                          @103
  2006: 7b 19 88 01              u64 [sp + 0x188] = a2
  2010: 95 17 88 01              a0 = sp + 0x188
  2014: 7b 17 00 01              u64 [sp + 0x100] = a0
  2018: 82 17 30                 a0 = u64 [sp + 0x30]
  2021: 7b 17 08 01              u64 [sp + 0x108] = a0
  2025: 82 17 28                 a0 = u64 [sp + 0x28]
  2028: 7b 17 48 01              u64 [sp + 0x148] = a0
  2032: 49 21 50 01 01           u64 [sp + 336] = 0x1
  2037: 49 21 68 01              u64 [sp + 360] = 0
  2041: 95 18 00 01              a1 = sp + 0x100
  2045: 7b 18 58 01              u64 [sp + 0x158] = a1
  2049: 49 21 60 01 01           u64 [sp + 352] = 0x1
  2054: 95 17 18 01              a0 = sp + 0x118
  2058: 95 18 48 01              a1 = sp + 0x148
  2062: 50 10 30 f3 02           ra = 48, jump @176
      :                          @104 [@dyn 24]
  2067: 82 15 20 01              s0 = u64 [sp + 0x120]
  2071: 82 1b 28 01              a4 = u64 [sp + 0x128]
  2075: 82 16 18 01              s1 = u64 [sp + 0x118]
  2079: 33 07 02                 a0 = 0x2
  2082: 33 08                    a1 = 0
  2084: 33 09                    a2 = 0
  2086: 64 5a                    a3 = s0
  2088: 33 00 32                 ra = 0x32
  2091: 0a 64                    ecalli 100 // 'log'
  2093: 01                       fallthrough
      :                          @105 [@dyn 25]
  2094: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  2098: c8 67 07                 a0 = a0 + s1
  2101: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  2105: 53 47 00 00 00 f8 1b     jump @110 if a0 <u 4160749568
      :                          @106
  2112: 82 b7                    a0 = u64 [a4]
  2114: c9 7b 08                 a1 = a4 - a0
  2117: ab 58 0f                 jump @110 if a1 != s0
      :                          @107
  2120: c9 67 08                 a1 = a0 - s1
  2123: 01                       fallthrough
      :                          @108
  2124: 82 b9                    a2 = u64 [a4]
  2126: ab 79 f2                 jump @106 if a2 != a0
      :                          @109
  2129: 7b b8                    u64 [a4] = a1
  2131: 01                       fallthrough
      :                          @110
  2132: 82 1b 88 01              a4 = u64 [sp + 0x188]
  2136: 82 1a b8 00              a3 = u64 [sp + 0xb8]
  2140: 55 3b b5 e1 00 4e        jump @117 if a4 >=u 57781
      :                          @111
  2146: 33 07 0a                 a0 = 0xa
  2149: 33 08                    a1 = 0
  2151: 33 09                    a2 = 0
  2153: 0a 64                    ecalli 100 // 'log'
  2155: 01                       fallthrough
      :                          @112
  2156: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  2160: 82 18                    a1 = u64 [sp]
  2162: ab 87 60 fc              jump @62 if a0 != a1
      :                          @113
  2166: 28 1b                    jump @116
      :                          @114
  2168: 82 19 d8 00              a2 = u64 [sp + 0xd8]
  2172: 28 5a ff                 jump @103
      :                          @115
  2175: 33 0a b8 01 01           a3 = 0x101b8
  2180: 33 07 02                 a0 = 0x2
  2183: 33 0b 14                 a4 = 0x14
  2186: 33 08                    a1 = 0
  2188: 33 09                    a2 = 0
  2190: 0a 64                    ecalli 100 // 'log'
  2192: 01                       fallthrough
      :                          @116
  2193: 33 07 00 00 01           a0 = 0x10000
  2198: 33 08                    a1 = 0
  2200: 82 10 a8 01              ra = u64 [sp + 0x1a8]
  2204: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
  2208: 82 16 98 01              s1 = u64 [sp + 0x198]
  2212: 95 11 b0 01              sp = sp + 0x1b0
  2216: 32 00                    ret
      :                          @117
  2218: 00                       trap
      :                          @118 [export #1: 'accumulate']
  2219: 33 07 00 00 01           a0 = 0x10000
  2224: 33 08                    a1 = 0
  2226: 32 00                    ret
      :                          @119 [export #2: 'on_transfer']
  2228: 33 07 00 00 01           a0 = 0x10000
  2233: 33 08                    a1 = 0
  2235: 32 00                    ret
      :                          @120
  2237: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2240: 7b 10 40                 u64 [sp + 0x40] = ra
  2243: 7b 15 38                 u64 [sp + 0x38] = s0
  2246: 7b 16 30                 u64 [sp + 0x30] = s1
  2249: c8 89 09                 a2 = a2 + a1
  2252: ac 89 52                 jump @128 if a2 <u a1
      :                          @121
  2255: 64 75                    s0 = a0
  2257: 82 77                    a0 = u64 [a0]
  2259: 97 78 01                 a1 = a0 << 0x1
  2262: 33 0a 08                 a3 = 0x8
  2265: e4 a9 09                 a2 = maxu(a2, a3)
  2268: e4 98 06                 s1 = maxu(a1, a2)
  2271: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2274: 98 88 3f                 a1 = a1 >> 0x3f
  2277: 51 07 12                 jump @123 if a0 == 0
      :                          @122
  2280: 82 59 08                 a2 = u64 [s0 + 0x8]
  2283: 7b 19 18                 u64 [sp + 0x18] = a2
  2286: 49 11 20 01              u64 [sp + 32] = 0x1
  2290: 7b 17 28                 u64 [sp + 0x28] = a0
  2293: 28 06                    jump @124
      :                          @123
  2295: 49 11 20                 u64 [sp + 32] = 0
  2298: 01                       fallthrough
      :                          @124
  2299: 64 17                    a0 = sp
  2301: 95 1a 18                 a3 = sp + 0x18
  2304: 64 69                    a2 = s1
  2306: 50 10 34 32              ra = 52, jump @132
      :                          @125 [@dyn 26]
  2310: 82 18                    a1 = u64 [sp]
  2312: 82 17 08                 a0 = u64 [sp + 0x8]
  2315: 51 08 14                 jump @129 if a1 == 0
      :                          @126
  2318: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2328: aa 87 0d                 jump @130 if a0 == a1
      :                          @127
  2331: 52 07 18                 jump @131 if a0 != 0
      :                          @128
  2334: 00                       trap
      :                          @129
  2335: 7b 57 08                 u64 [s0 + 0x8] = a0
  2338: 7b 56                    u64 [s0] = s1
  2340: 01                       fallthrough
      :                          @130
  2341: 82 10 40                 ra = u64 [sp + 0x40]
  2344: 82 15 38                 s0 = u64 [sp + 0x38]
  2347: 82 16 30                 s1 = u64 [sp + 0x30]
  2350: 95 11 48                 sp = sp + 0x48
  2353: 32 00                    ret
      :                          @131
  2355: 00                       trap
      :                          @132
  2356: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2359: 7b 10 30                 u64 [sp + 0x30] = ra
  2362: 7b 15 28                 u64 [sp + 0x28] = s0
  2365: 7b 16 20                 u64 [sp + 0x20] = s1
  2368: 64 95                    s0 = a2
  2370: 64 72                    t0 = a0
  2372: 51 08 7c                 jump @142 if a1 == 0
      :                          @133
  2375: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2378: 51 07 7f                 jump @143 if a0 == 0
      :                          @134
  2381: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2384: 51 09 ae 00              jump @150 if a2 == 0
      :                          @135
  2388: 82 a8                    a1 = u64 [a3]
  2390: 33 06 d0 d2 12           s1 = 0x12d2d0
  2395: 33 03 00 00 00 08        t1 = 0x8000000
  2401: c8 36 06                 s1 = s1 + t1
  2404: 01                       fallthrough
      :                          @136
  2405: 82 6a                    a3 = u64 [s1]
  2407: c8 5a 07                 a0 = a3 + s0
  2410: ac a7 d4 00              jump @156 if a0 <u a3
      :                          @137
  2414: 95 7b 01                 a4 = a0 + 0x1
  2417: 88 bc 01                 a5 = a4 <u 0x1
  2420: d8 b3 0b                 a4 = t1 <u a4
  2423: d4 cb 0b                 a4 = a4 | a5
  2426: 52 0b c4 00              jump @156 if a4 != 0
      :                          @138
  2430: 82 6b                    a4 = u64 [s1]
  2432: ab ab e5                 jump @136 if a4 != a3
      :                          @139
  2435: 7b 67                    u64 [s1] = a0
  2437: 33 0c                    a5 = 0
  2439: 7b 12 18                 u64 [sp + 0x18] = t0
  2442: 33 0a d0 d2 12           a3 = 0x12d2d0
  2447: 33 0b 00 00 00 08        a4 = 0x8000000
  2453: 7b 1a                    u64 [sp] = a3
  2455: c8 ba 0a                 a3 = a3 + a4
  2458: c9 7a 07                 a0 = a3 - a0
  2461: 7b 17 10                 u64 [sp + 0x10] = a0
  2464: 7b 18 08                 u64 [sp + 0x8] = a1
  2467: 64 96                    s1 = a2
  2469: 50 10 36 d5 03           ra = 54, jump @226
      :                          @140 [@dyn 27]
  2474: 54 46 00 00 00 08 9c 00  jump @157 if s1 <=u 134217728
      :                          @141
  2482: 82 12 18                 t0 = u64 [sp + 0x18]
  2485: 82 18 10                 a1 = u64 [sp + 0x10]
  2488: 33 07                    a0 = 0
  2490: 7b 28 08                 u64 [t0 + 0x8] = a1
  2493: 28 b9 00                 jump @163
      :                          @142
  2496: 49 12 08                 u64 [t0 + 8] = 0
  2499: 33 07 01                 a0 = 0x1
  2502: 28 b0 00                 jump @163
      :                          @143
  2505: 33 09 d0 d2 12           a2 = 0x12d2d0
  2510: 33 07 00 00 00 08        a0 = 0x8000000
  2516: c8 79 09                 a2 = a2 + a0
  2519: 01                       fallthrough
      :                          @144
  2520: 82 9a                    a3 = u64 [a2]
  2522: c8 5a 08                 a1 = a3 + s0
  2525: ac a8 61                 jump @156 if a1 <u a3
      :                          @145
  2528: 95 8b 01                 a4 = a1 + 0x1
  2531: 88 bc 01                 a5 = a4 <u 0x1
  2534: d8 b7 0b                 a4 = a0 <u a4
  2537: d4 cb 0b                 a4 = a4 | a5
  2540: 52 0b 52                 jump @156 if a4 != 0
      :                          @146
  2543: 82 9b                    a4 = u64 [a2]
  2545: ab ab e7                 jump @144 if a4 != a3
      :                          @147
  2548: 7b 98                    u64 [a2] = a1
  2550: 33 0c                    a5 = 0
  2552: 01                       fallthrough
      :                          @148
  2553: ab ab df                 jump @144 if a4 != a3
      :                          @149
  2556: 28 32                    jump @155
      :                          @150
  2558: 33 09 d0 d2 12           a2 = 0x12d2d0
  2563: 33 07 00 00 00 08        a0 = 0x8000000
  2569: c8 79 09                 a2 = a2 + a0
  2572: 01                       fallthrough
      :                          @151
  2573: 82 9a                    a3 = u64 [a2]
  2575: c8 5a 08                 a1 = a3 + s0
  2578: ac a8 2c                 jump @156 if a1 <u a3
      :                          @152
  2581: 95 8b 01                 a4 = a1 + 0x1
  2584: 88 bc 01                 a5 = a4 <u 0x1
  2587: d8 b7 0b                 a4 = a0 <u a4
  2590: d4 cb 0b                 a4 = a4 | a5
  2593: 52 0b 1d                 jump @156 if a4 != 0
      :                          @153
  2596: 82 9b                    a4 = u64 [a2]
  2598: ab ab e7                 jump @151 if a4 != a3
      :                          @154
  2601: 7b 98                    u64 [a2] = a1
  2603: 33 0c                    a5 = 0
  2605: 01                       fallthrough
      :                          @155
  2606: 33 07 d0 d2 12 08        a0 = 0x812d2d0
  2612: c9 87 08                 a1 = a0 - a1
  2615: 33 07                    a0 = 0
  2617: 7b 28 08                 u64 [t0 + 0x8] = a1
  2620: 28 3a                    jump @163
      :                          @156
  2622: 33 07 01                 a0 = 0x1
  2625: 7b 27 08                 u64 [t0 + 0x8] = a0
  2628: 28 32                    jump @163
      :                          @157
  2630: 64 6c                    a5 = s1
  2632: 82 17                    a0 = u64 [sp]
  2634: 95 77 00 00 00 08        a0 = a0 + 0x8000000
  2640: 82 12 18                 t0 = u64 [sp + 0x18]
  2643: 82 16 08                 s1 = u64 [sp + 0x8]
  2646: 01                       fallthrough
      :                          @158
  2647: 82 78                    a1 = u64 [a0]
  2649: c9 87 09                 a2 = a0 - a1
  2652: ab 69 11                 jump @162 if a2 != s1
      :                          @159
  2655: c9 c8 09                 a2 = a1 - a5
  2658: 01                       fallthrough
      :                          @160
  2659: 82 7a                    a3 = u64 [a0]
  2661: ab 8a f2                 jump @158 if a3 != a1
      :                          @161
  2664: 7b 79                    u64 [a0] = a2
  2666: 33 0b                    a4 = 0
  2668: 01                       fallthrough
      :                          @162
  2669: 82 18 10                 a1 = u64 [sp + 0x10]
  2672: 33 07                    a0 = 0
  2674: 7b 28 08                 u64 [t0 + 0x8] = a1
  2677: 01                       fallthrough
      :                          @163
  2678: 7b 25 10                 u64 [t0 + 0x10] = s0
  2681: 7b 27                    u64 [t0] = a0
  2683: 82 10 30                 ra = u64 [sp + 0x30]
  2686: 82 15 28                 s0 = u64 [sp + 0x28]
  2689: 82 16 20                 s1 = u64 [sp + 0x20]
  2692: 95 11 38                 sp = sp + 0x38
  2695: 32 00                    ret
      :                          @164
  2697: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2700: 7b 10 40                 u64 [sp + 0x40] = ra
  2703: 7b 15 38                 u64 [sp + 0x38] = s0
  2706: 7b 16 30                 u64 [sp + 0x30] = s1
  2709: 95 88 01                 a1 = a1 + 0x1
  2712: 51 08 53                 jump @172 if a1 == 0
      :                          @165
  2715: 64 75                    s0 = a0
  2717: 82 77                    a0 = u64 [a0]
  2719: 97 79 01                 a2 = a0 << 0x1
  2722: 33 0a 08                 a3 = 0x8
  2725: e4 a8 08                 a1 = maxu(a1, a3)
  2728: e4 89 06                 s1 = maxu(a2, a1)
  2731: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2734: 98 88 3f                 a1 = a1 >> 0x3f
  2737: 51 07 12                 jump @167 if a0 == 0
      :                          @166
  2740: 82 59 08                 a2 = u64 [s0 + 0x8]
  2743: 7b 19 18                 u64 [sp + 0x18] = a2
  2746: 49 11 20 01              u64 [sp + 32] = 0x1
  2750: 7b 17 28                 u64 [sp + 0x28] = a0
  2753: 28 06                    jump @168
      :                          @167
  2755: 49 11 20                 u64 [sp + 32] = 0
  2758: 01                       fallthrough
      :                          @168
  2759: 64 17                    a0 = sp
  2761: 95 1a 18                 a3 = sp + 0x18
  2764: 64 69                    a2 = s1
  2766: 50 10 38 66 fe           ra = 56, jump @132
      :                          @169 [@dyn 28]
  2771: 82 18                    a1 = u64 [sp]
  2773: 82 17 08                 a0 = u64 [sp + 0x8]
  2776: 51 08 14                 jump @173 if a1 == 0
      :                          @170
  2779: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2789: aa 87 0d                 jump @174 if a0 == a1
      :                          @171
  2792: 52 07 18                 jump @175 if a0 != 0
      :                          @172
  2795: 00                       trap
      :                          @173
  2796: 7b 57 08                 u64 [s0 + 0x8] = a0
  2799: 7b 56                    u64 [s0] = s1
  2801: 01                       fallthrough
      :                          @174
  2802: 82 10 40                 ra = u64 [sp + 0x40]
  2805: 82 15 38                 s0 = u64 [sp + 0x38]
  2808: 82 16 30                 s1 = u64 [sp + 0x30]
  2811: 95 11 48                 sp = sp + 0x48
  2814: 32 00                    ret
      :                          @175
  2816: 00                       trap
      :                          @176
  2817: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2820: 7b 10 30                 u64 [sp + 0x30] = ra
  2823: 7b 15 28                 u64 [sp + 0x28] = s0
  2826: 7b 16 20                 u64 [sp + 0x20] = s1
  2829: 64 89                    a2 = a1
  2831: 82 8a 08                 a3 = u64 [a1 + 0x8]
  2834: 64 75                    s0 = a0
  2836: 51 0a 35                 jump @181 if a3 == 0
      :                          @177
  2839: 82 98                    a1 = u64 [a2]
  2841: 33 07                    a0 = 0
  2843: 95 8b 08                 a4 = a1 + 0x8
  2846: 01                       fallthrough
      :                          @178
  2847: 82 bc                    a5 = u64 [a4]
  2849: c8 c7 07                 a0 = a0 + a5
  2852: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2855: 95 bb 10                 a4 = a4 + 0x10
  2858: 52 0a f5                 jump @178 if a3 != 0
      :                          @179
  2861: 82 9a 18                 a3 = u64 [a2 + 0x18]
  2864: 51 0a 24                 jump @183 if a3 == 0
      :                          @180
  2867: 82 88 08                 a1 = u64 [a1 + 0x8]
  2870: 8e 88                    a1 = a1 >u 0
  2872: 88 7a 10                 a3 = a0 <u 0x10
  2875: 85 aa 01                 a3 = a3 ^ 0x1
  2878: d4 a8 08                 a1 = a1 | a3
  2881: 89 7a                    a3 = a0 <s 0
  2883: e0 a8 08                 a1 = a1 & ~a3
  2886: 52 08 0a                 jump @182 if a1 != 0
      :                          @181
  2889: 33 07                    a0 = 0
  2891: 33 08 01                 a1 = 0x1
  2894: 28 4c                    jump @191
      :                          @182
  2896: 97 77 01                 a0 = a0 << 0x1
  2899: 01                       fallthrough
      :                          @183
  2900: 51 07 42                 jump @190 if a0 == 0
      :                          @184
  2903: 57 07 7a                 jump @196 if a0 <s 0
      :                          @185
  2906: 64 52                    t0 = s0
  2908: 33 0b d0 d2 12           a4 = 0x12d2d0
  2913: 33 08 00 00 00 08        a1 = 0x8000000
  2919: c8 8b 0b                 a4 = a4 + a1
  2922: 01                       fallthrough
      :                          @186
  2923: 82 bc                    a5 = u64 [a4]
  2925: c8 7c 0a                 a3 = a5 + a0
  2928: ac ca 5f                 jump @194 if a3 <u a5
      :                          @187
  2931: 95 a5 01                 s0 = a3 + 0x1
  2934: 88 56 01                 s1 = s0 <u 0x1
  2937: d8 58 05                 s0 = a1 <u s0
  2940: d4 65 05                 s0 = s0 | s1
  2943: 52 05 50                 jump @194 if s0 != 0
      :                          @188
  2946: 82 b6                    s1 = u64 [a4]
  2948: ab c6 e7                 jump @186 if s1 != a5
      :                          @189
  2951: 7b ba                    u64 [a4] = a3
  2953: 33 08 d0 d2 12 08        a1 = 0x812d2d0
  2959: c9 a8 08                 a1 = a1 - a3
  2962: 64 25                    s0 = t0
  2964: 28 06                    jump @191
      :                          @190
  2966: 33 08 01                 a1 = 0x1
  2969: 01                       fallthrough
      :                          @191
  2970: 7b 17                    u64 [sp] = a0
  2972: 7b 18 08                 u64 [sp + 0x8] = a1
  2975: 49 11 10                 u64 [sp + 16] = 0
  2978: 33 08 d0 01 01           a1 = 0x101d0
  2983: 64 17                    a0 = sp
  2985: 50 10 3a 20 06           ra = 58, jump @309
      :                          @192 [@dyn 29]
  2990: 52 07 22                 jump @195 if a0 != 0
      :                          @193
  2993: 82 17 10                 a0 = u64 [sp + 0x10]
  2996: 82 18 08                 a1 = u64 [sp + 0x8]
  2999: 82 19                    a2 = u64 [sp]
  3001: 7b 57 10                 u64 [s0 + 0x10] = a0
  3004: 7b 58 08                 u64 [s0 + 0x8] = a1
  3007: 7b 59                    u64 [s0] = a2
  3009: 82 10 30                 ra = u64 [sp + 0x30]
  3012: 82 15 28                 s0 = u64 [sp + 0x28]
  3015: 82 16 20                 s1 = u64 [sp + 0x20]
  3018: 95 11 38                 sp = sp + 0x38
  3021: 32 00                    ret
      :                          @194
  3023: 00                       trap
      :                          @195
  3024: 00                       trap
      :                          @196
  3025: 00                       trap
      :                          @197 [@dyn 30]
  3026: 82 72                    t0 = u64 [a0]
  3028: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  3034: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
  3040: ac 9a 29                 jump @203 if a3 <u a2
      :                          @198
  3043: 82 77 08                 a0 = u64 [a0 + 0x8]
  3046: 33 09 d0 d2 12           a2 = 0x12d2d0
  3051: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  3057: 01                       fallthrough
      :                          @199
  3058: 82 9a                    a3 = u64 [a2]
  3060: c9 a9 0b                 a4 = a2 - a3
  3063: ab 7b 12                 jump @203 if a4 != a0
      :                          @200
  3066: c9 2a 0b                 a4 = a3 - t0
  3069: 01                       fallthrough
      :                          @201
  3070: 82 9c                    a5 = u64 [a2]
  3072: ab ac f2                 jump @199 if a5 != a3
      :                          @202
  3075: 7b 9b                    u64 [a2] = a4
  3077: 33 08                    a1 = 0
  3079: 32 00                    ret
      :                          @203
  3081: 32 00                    ret
      :                          @204 [@dyn 31]
  3083: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3086: 7b 10 18                 u64 [sp + 0x18] = ra
  3089: 7b 15 10                 u64 [sp + 0x10] = s0
  3092: 7b 16 08                 u64 [sp + 0x8] = s1
  3095: 64 75                    s0 = a0
  3097: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3100: 82 77                    a0 = u64 [a0]
  3102: c9 a7 07                 a0 = a0 - a3
  3105: 64 96                    s1 = a2
  3107: ac 97 2a                 jump @207 if a0 <u a2
      :                          @205
  3110: 7b 1a                    u64 [sp] = a3
  3112: 82 57 08                 a0 = u64 [s0 + 0x8]
  3115: c8 a7 07                 a0 = a0 + a3
  3118: 64 69                    a2 = s1
  3120: 50 10 40 4a 01           ra = 64, jump @226
      :                          @206 [@dyn 32]
  3125: 82 17                    a0 = u64 [sp]
  3127: c8 76 06                 s1 = s1 + a0
  3130: 7b 56 10                 u64 [s0 + 0x10] = s1
  3133: 33 07                    a0 = 0
  3135: 82 10 18                 ra = u64 [sp + 0x18]
  3138: 82 15 10                 s0 = u64 [sp + 0x10]
  3141: 82 16 08                 s1 = u64 [sp + 0x8]
  3144: 95 11 20                 sp = sp + 0x20
  3147: 32 00                    ret
      :                          @207
  3149: 64 57                    a0 = s0
  3151: 7b 18                    u64 [sp] = a1
  3153: 64 a8                    a1 = a3
  3155: 64 69                    a2 = s1
  3157: 50 10 42 68 fc           ra = 66, jump @120
      :                          @208 [@dyn 33]
  3162: 82 18                    a1 = u64 [sp]
  3164: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3167: 28 c7                    jump @205
      :                          @209 [@dyn 34]
  3169: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3172: 7b 10 20                 u64 [sp + 0x20] = ra
  3175: 7b 15 18                 u64 [sp + 0x18] = s0
  3178: 7b 16 10                 u64 [sp + 0x10] = s1
  3181: 64 86                    s1 = a1
  3183: 83 88                    i32 a1 = a1 + 0
  3185: 33 09 80 00              a2 = 0x80
  3189: 64 7a                    a3 = a0
  3191: ae 98 2b                 jump @214 if a1 >=u a2
      :                          @210
  3194: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3197: 82 a7                    a0 = u64 [a3]
  3199: ab 78 12                 jump @213 if a1 != a0
      :                          @211
  3202: 64 a7                    a0 = a3
  3204: 64 a5                    s0 = a3
  3206: 50 10 46 03 fe           ra = 70, jump @164
      :                          @212 [@dyn 35]
  3211: 64 5a                    a3 = s0
  3213: 82 58 10                 a1 = u64 [s0 + 0x10]
  3216: 01                       fallthrough
      :                          @213
  3217: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3220: c8 87 07                 a0 = a0 + a1
  3223: 78 76                    u8 [a0] = s1
  3225: 95 88 01                 a1 = a1 + 0x1
  3228: 7b a8 10                 u64 [a3 + 0x10] = a1
  3231: 28 ab 00                 jump @222
      :                          @214
  3234: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3237: 48 11 0c                 u32 [sp + 12] = 0
  3240: 52 07 1c                 jump @216 if a0 != 0
      :                          @215
  3243: 98 67 06                 a0 = s1 >> 0x6
  3246: 86 77 c0 00              a0 = a0 | 0xc0
  3250: 78 17 0c                 u8 [sp + 0xc] = a0
  3253: 84 67 3f                 a0 = s1 & 0x3f
  3256: 86 77 80 00              a0 = a0 | 0x80
  3260: 78 17 0d                 u8 [sp + 0xd] = a0
  3263: 33 06 02                 s1 = 0x2
  3266: 28 63                    jump @219
      :                          @216
  3268: 8b 67 10                 i32 a0 = s1 >> 0x10
  3271: 52 07 29                 jump @218 if a0 != 0
      :                          @217
  3274: 98 67 0c                 a0 = s1 >> 0xc
  3277: 86 77 e0 00              a0 = a0 | 0xe0
  3281: 78 17 0c                 u8 [sp + 0xc] = a0
  3284: 97 67 34                 a0 = s1 << 0x34
  3287: 98 77 3a                 a0 = a0 >> 0x3a
  3290: 95 77 80 00              a0 = a0 + 0x80
  3294: 78 17 0d                 u8 [sp + 0xd] = a0
  3297: 84 67 3f                 a0 = s1 & 0x3f
  3300: 86 77 80 00              a0 = a0 | 0x80
  3304: 78 17 0e                 u8 [sp + 0xe] = a0
  3307: 33 06 03                 s1 = 0x3
  3310: 28 37                    jump @219
      :                          @218
  3312: 97 67 2b                 a0 = s1 << 0x2b
  3315: 98 77 3d                 a0 = a0 >> 0x3d
  3318: 95 77 f0 00              a0 = a0 + 0xf0
  3322: 78 17 0c                 u8 [sp + 0xc] = a0
  3325: 97 67 2e                 a0 = s1 << 0x2e
  3328: 98 77 3a                 a0 = a0 >> 0x3a
  3331: 95 77 80 00              a0 = a0 + 0x80
  3335: 78 17 0d                 u8 [sp + 0xd] = a0
  3338: 97 67 34                 a0 = s1 << 0x34
  3341: 98 77 3a                 a0 = a0 >> 0x3a
  3344: 95 77 80 00              a0 = a0 + 0x80
  3348: 78 17 0e                 u8 [sp + 0xe] = a0
  3351: 84 67 3f                 a0 = s1 & 0x3f
  3354: 86 77 80 00              a0 = a0 | 0x80
  3358: 78 17 0f                 u8 [sp + 0xf] = a0
  3361: 33 06 04                 s1 = 0x4
  3364: 01                       fallthrough
      :                          @219
  3365: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3368: 82 a7                    a0 = u64 [a3]
  3370: c9 57 07                 a0 = a0 - s0
  3373: ac 67 2d                 jump @223 if a0 <u s1
      :                          @220
  3376: 7b 1a                    u64 [sp] = a3
  3378: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3381: c8 57 07                 a0 = a0 + s0
  3384: 95 18 0c                 a1 = sp + 0xc
  3387: 64 69                    a2 = s1
  3389: 50 10 48 3d              ra = 72, jump @226
      :                          @221 [@dyn 36]
  3393: c8 56 06                 s1 = s1 + s0
  3396: 82 17                    a0 = u64 [sp]
  3398: 7b 76 10                 u64 [a0 + 0x10] = s1
  3401: 01                       fallthrough
      :                          @222
  3402: 33 07                    a0 = 0
  3404: 82 10 20                 ra = u64 [sp + 0x20]
  3407: 82 15 18                 s0 = u64 [sp + 0x18]
  3410: 82 16 10                 s1 = u64 [sp + 0x10]
  3413: 95 11 28                 sp = sp + 0x28
  3416: 32 00                    ret
      :                          @223
  3418: 64 a7                    a0 = a3
  3420: 64 58                    a1 = s0
  3422: 64 69                    a2 = s1
  3424: 64 a5                    s0 = a3
  3426: 50 10 4a 5b fb           ra = 74, jump @120
      :                          @224 [@dyn 37]
  3431: 64 5a                    a3 = s0
  3433: 82 55 10                 s0 = u64 [s0 + 0x10]
  3436: 28 c4                    jump @220
      :                          @225 [@dyn 38]
  3438: 64 8a                    a3 = a1
  3440: 33 08 d0 01 01           a1 = 0x101d0
  3445: 64 a9                    a2 = a3
  3447: 28 52 04                 jump @309
      :                          @226
  3450: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3453: 7b 10 18                 u64 [sp + 0x18] = ra
  3456: 7b 15 10                 u64 [sp + 0x10] = s0
  3459: 7b 16 08                 u64 [sp + 0x8] = s1
  3462: 53 19 10 64              jump @235 if a2 <u 16
      :                          @227
  3466: 8d 7a                    i32 a3 = -a0
  3468: 84 a2 07                 t0 = a3 & 0x7
  3471: c8 27 0b                 a4 = a0 + t0
  3474: 51 02 15                 jump @230 if t0 == 0
      :                          @228
  3477: 64 8c                    a5 = a1
  3479: 64 75                    s0 = a0
  3481: 01                       fallthrough
      :                          @229
  3482: 7c ca                    a3 = u8 [a5]
  3484: 78 5a                    u8 [s0] = a3
  3486: 95 55 01                 s0 = s0 + 0x1
  3489: 95 cc 01                 a5 = a5 + 0x1
  3492: ac b5 f6                 jump @229 if s0 <u a4
      :                          @230
  3495: c8 28 03                 t1 = a1 + t0
  3498: c9 29 02                 t0 = a2 - t0
  3501: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3504: 84 38 07                 a1 = t1 & 0x7
  3507: c8 4b 0a                 a3 = a4 + t2
  3510: 51 08 3b                 jump @237 if a1 == 0
      :                          @231
  3513: 58 04 4b                 jump @240 if t2 <=s 0
      :                          @232
  3516: 97 38 03                 a1 = t1 << 0x3
  3519: 84 80 38                 ra = a1 & 0x38
  3522: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3525: 82 c5                    s0 = u64 [a5]
  3527: 8d 88                    i32 a1 = -a1
  3529: 84 88 38                 a1 = a1 & 0x38
  3532: 95 cc 08                 a5 = a5 + 0x8
  3535: 01                       fallthrough
      :                          @233
  3536: 82 c6                    s1 = u64 [a5]
  3538: d0 05 05                 s0 = s0 >> ra
  3541: cf 86 09                 a2 = s1 << a1
  3544: d4 59 09                 a2 = a2 | s0
  3547: 7b b9                    u64 [a4] = a2
  3549: 95 bb 08                 a4 = a4 + 0x8
  3552: 95 cc 08                 a5 = a5 + 0x8
  3555: 64 65                    s0 = s1
  3557: ac ab eb                 jump @233 if a4 <u a3
      :                          @234
  3560: 28 1c                    jump @240
      :                          @235
  3562: 64 7a                    a3 = a0
  3564: 52 09 21                 jump @241 if a2 != 0
      :                          @236
  3567: 28 2f                    jump @243
      :                          @237
  3569: 58 04 13                 jump @240 if t2 <=s 0
      :                          @238
  3572: 64 38                    a1 = t1
  3574: 01                       fallthrough
      :                          @239
  3575: 82 89                    a2 = u64 [a1]
  3577: 7b b9                    u64 [a4] = a2
  3579: 95 bb 08                 a4 = a4 + 0x8
  3582: 95 88 08                 a1 = a1 + 0x8
  3585: ac ab f6                 jump @239 if a4 <u a3
      :                          @240
  3588: c8 43 08                 a1 = t1 + t2
  3591: 84 29 07                 a2 = t0 & 0x7
  3594: 51 09 14                 jump @243 if a2 == 0
      :                          @241
  3597: c8 a9 09                 a2 = a2 + a3
  3600: 01                       fallthrough
      :                          @242
  3601: 7c 8b                    a4 = u8 [a1]
  3603: 78 ab                    u8 [a3] = a4
  3605: 95 aa 01                 a3 = a3 + 0x1
  3608: 95 88 01                 a1 = a1 + 0x1
  3611: ac 9a f6                 jump @242 if a3 <u a2
      :                          @243
  3614: 82 10 18                 ra = u64 [sp + 0x18]
  3617: 82 15 10                 s0 = u64 [sp + 0x10]
  3620: 82 16 08                 s1 = u64 [sp + 0x8]
  3623: 95 11 20                 sp = sp + 0x20
  3626: 32 00                    ret
      :                          @244 [@dyn 39]
  3628: 82 77                    a0 = u64 [a0]
  3630: 01                       fallthrough
      :                          @245
  3631: 28                       jump @245
      :                          @246 [@dyn 40]
  3632: 82 77                    a0 = u64 [a0]
  3634: 01                       fallthrough
      :                          @247
  3635: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  3638: 7b 10 50                 u64 [sp + 0x50] = ra
  3641: 7b 15 48                 u64 [sp + 0x48] = s0
  3644: 7b 16 40                 u64 [sp + 0x40] = s1
  3647: 7b 18                    u64 [sp] = a1
  3649: 98 79 04                 a2 = a0 >> 0x4
  3652: 33 08 27                 a1 = 0x27
  3655: 53 29 71 02 81 00        jump @250 if a2 <u 625
      :                          @248
  3661: 33 08 27                 a1 = 0x27
  3664: 95 1a 3e                 a3 = sp + 0x3e
  3667: 3a 09 00 00 03           a2 = u64 [0x30000]
  3672: 7b 19 10                 u64 [sp + 0x10] = a2
  3675: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  3681: 33 04 7b 14              t2 = 0x147b
  3685: 33 0b 40 02 01           a4 = 0x10240
  3690: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  3696: 01                       fallthrough
      :                          @249
  3697: 64 72                    t0 = a0
  3699: 82 17 10                 a0 = u64 [sp + 0x10]
  3702: d6 72 07                 a0 = t0 mulhu a0
  3705: 98 77 0b                 a0 = a0 >> 0xb
  3708: 82 19 08                 a2 = u64 [sp + 0x8]
  3711: c0 97 0c                 i32 a5 = a0 * a2
  3714: c8 2c 06                 s1 = a5 + t0
  3717: 97 6c 30                 a5 = s1 << 0x30
  3720: 98 cc 32                 a5 = a5 >> 0x32
  3723: ca 4c 0c                 a5 = a5 * t2
  3726: 98 c3 11                 t1 = a5 >> 0x11
  3729: 98 cc 10                 a5 = a5 >> 0x10
  3732: 84 cc fe 07              a5 = a5 & 0x7fe
  3736: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  3739: c8 69 09                 a2 = a2 + s1
  3742: 97 99 31                 a2 = a2 << 0x31
  3745: 98 99 30                 a2 = a2 >> 0x30
  3748: c8 bc 0c                 a5 = a5 + a4
  3751: 7c c6                    s1 = u8 [a5]
  3753: 7c cc 01                 a5 = u8 [a5 + 0x1]
  3756: c8 b9 09                 a2 = a2 + a4
  3759: 7c 95 01                 s0 = u8 [a2 + 0x1]
  3762: 7c 99                    a2 = u8 [a2]
  3764: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  3767: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  3770: 78 a5 01                 u8 [a3 + 0x1] = s0
  3773: 78 a9                    u8 [a3] = a2
  3775: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  3778: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  3781: ac 20 ac                 jump @249 if ra <u t0
      :                          @250
  3784: 54 17 63 3b              jump @252 if a0 <=u 99
      :                          @251
  3788: 97 79 30                 a2 = a0 << 0x30
  3791: 98 99 32                 a2 = a2 >> 0x32
  3794: 96 99 7b 14              a2 = a2 * 0x147b
  3798: 98 99 11                 a2 = a2 >> 0x11
  3801: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  3804: c8 a7 07                 a0 = a0 + a3
  3807: 97 77 31                 a0 = a0 << 0x31
  3810: 98 77 30                 a0 = a0 >> 0x30
  3813: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  3816: 33 0a 40 02 01           a3 = 0x10240
  3821: c8 a7 07                 a0 = a0 + a3
  3824: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  3827: 7c 77                    a0 = u8 [a0]
  3829: 95 1b 19                 a4 = sp + 0x19
  3832: c8 8b 0b                 a4 = a4 + a1
  3835: 78 ba 01                 u8 [a4 + 0x1] = a3
  3838: 78 b7                    u8 [a4] = a0
  3840: 64 97                    a0 = a2
  3842: 01                       fallthrough
      :                          @252
  3843: 55 17 0a 14              jump @254 if a0 >=u 10
      :                          @253
  3847: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  3850: 95 19 19                 a2 = sp + 0x19
  3853: c8 89 09                 a2 = a2 + a1
  3856: 83 77 30                 i32 a0 = a0 + 0x30
  3859: 78 97                    u8 [a2] = a0
  3861: 28 21                    jump @255
      :                          @254
  3863: 97 77 01                 a0 = a0 << 0x1
  3866: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  3869: 33 09 40 02 01           a2 = 0x10240
  3874: c8 97 07                 a0 = a0 + a2
  3877: 7c 79 01                 a2 = u8 [a0 + 0x1]
  3880: 7c 77                    a0 = u8 [a0]
  3882: 95 1a 19                 a3 = sp + 0x19
  3885: c8 8a 0a                 a3 = a3 + a1
  3888: 78 a9 01                 u8 [a3 + 0x1] = a2
  3891: 78 a7                    u8 [a3] = a0
  3893: 01                       fallthrough
      :                          @255
  3894: 95 1a 19                 a3 = sp + 0x19
  3897: c8 8a 0a                 a3 = a3 + a1
  3900: 9a 8b 27                 a4 = 0x27 - a1
  3903: 33 08 00 02 01           a1 = 0x10200
  3908: 82 17                    a0 = u64 [sp]
  3910: 33 09                    a2 = 0
  3912: 50 10 52 12              ra = 82, jump @257
      :                          @256 [@dyn 41]
  3916: 82 10 50                 ra = u64 [sp + 0x50]
  3919: 82 15 48                 s0 = u64 [sp + 0x48]
  3922: 82 16 40                 s1 = u64 [sp + 0x40]
  3925: 95 11 58                 sp = sp + 0x58
  3928: 32 00                    ret
      :                          @257
  3930: 95 11 98                 sp = sp + 0xffffffffffffff98
  3933: 7b 10 60                 u64 [sp + 0x60] = ra
  3936: 7b 15 58                 u64 [sp + 0x58] = s0
  3939: 7b 16 50                 u64 [sp + 0x50] = s1
  3942: 80 73 34                 t1 = u32 [a0 + 0x34]
  3945: 7b 1a 20                 u64 [sp + 0x20] = a3
  3948: 64 9c                    a5 = a2
  3950: 84 36 01                 s1 = t1 & 0x1
  3953: 33 02 2b                 t0 = 0x2b
  3956: 33 09 00 00 11           a2 = 0x110000
  3961: 84 3a 04                 a3 = t1 & 0x4
  3964: 7b 1b 28                 u64 [sp + 0x28] = a4
  3967: c8 b6 04                 t2 = s1 + a4
  3970: 7b 1c 30                 u64 [sp + 0x30] = a5
  3973: 52 0a 10                 jump @260 if a3 != 0
      :                          @258
  3976: 49 11 38                 u64 [sp + 56] = 0
  3979: 82 78                    a1 = u64 [a0]
  3981: 94 69 2b                 a2 = 0x2b if s1 != 0
  3984: 52 08 35                 jump @264 if a1 != 0
      :                          @259
  3987: 28 56                    jump @269
      :                          @260
  3989: 7b 18 38                 u64 [sp + 0x38] = a1
  3992: 33 09                    a2 = 0
  3994: 51 0c 1b                 jump @263 if a5 == 0
      :                          @261
  3997: 82 1b 38                 a4 = u64 [sp + 0x38]
  4000: 01                       fallthrough
      :                          @262
  4001: 7d b5                    s0 = i8 [a4]
  4003: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4006: 85 5a 01                 a3 = s0 ^ 0x1
  4009: c8 a9 09                 a2 = a2 + a3
  4012: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4015: 95 bb 01                 a4 = a4 + 0x1
  4018: 52 0c ef                 jump @262 if a5 != 0
      :                          @263
  4021: c8 94 04                 t2 = t2 + a2
  4024: 33 09 00 00 11           a2 = 0x110000
  4029: 82 78                    a1 = u64 [a0]
  4031: db 62 09                 a2 = t0 if s1 != 0
  4034: 51 08 27                 jump @269 if a1 == 0
      :                          @264
  4037: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4040: ae a4 21                 jump @269 if t2 >=u a3
      :                          @265
  4043: 84 38 08                 a1 = t1 & 0x8
  4046: 52 08 50                 jump @272 if a1 != 0
      :                          @266
  4049: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4052: c9 4a 0a                 a3 = a3 - t2
  4055: 7b 19 18                 u64 [sp + 0x18] = a2
  4058: 5a 16 01 9d 00           jump @279 if s1 >s 1
      :                          @267
  4063: 52 06 aa 00              jump @281 if s1 != 0
      :                          @268
  4067: 7b 1a 10                 u64 [sp + 0x10] = a3
  4070: 28 a9 00                 jump @282
      :                          @269
  4073: 82 75 20                 s0 = u64 [a0 + 0x20]
  4076: 82 76 28                 s1 = u64 [a0 + 0x28]
  4079: 64 57                    a0 = s0
  4081: 64 68                    a1 = s1
  4083: 82 1a 38                 a3 = u64 [sp + 0x38]
  4086: 82 1b 30                 a4 = u64 [sp + 0x30]
  4089: 50 10 54 6c 01           ra = 84, jump @302
      :                          @270 [@dyn 42]
  4094: 33 08 01                 a1 = 0x1
  4097: 52 07 bb 00              jump @287 if a0 != 0
      :                          @271
  4101: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4104: 64 57                    a0 = s0
  4106: 82 18 20                 a1 = u64 [sp + 0x20]
  4109: 82 19 28                 a2 = u64 [sp + 0x28]
  4112: 82 10 60                 ra = u64 [sp + 0x60]
  4115: 82 15 58                 s0 = u64 [sp + 0x58]
  4118: 82 16 50                 s1 = u64 [sp + 0x50]
  4121: 95 11 68                 sp = sp + 0x68
  4124: 32 0c                    jump [a5]
      :                          @272
  4126: 7b 1a 40                 u64 [sp + 0x40] = a3
  4129: 64 45                    s0 = t2
  4131: 81 78 30                 a1 = i32 [a0 + 0x30]
  4134: 7b 18 10                 u64 [sp + 0x10] = a1
  4137: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4140: 7b 1a 08                 u64 [sp + 0x8] = a3
  4143: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4146: 82 78 28                 a1 = u64 [a0 + 0x28]
  4149: 48 17 30 30              u32 [a0 + 48] = 0x30
  4153: 7b 17                    u64 [sp] = a0
  4155: 46 17 38 01              u8 [a0 + 56] = 0x1
  4159: 7b 1a 48                 u64 [sp + 0x48] = a3
  4162: 64 a7                    a0 = a3
  4164: 64 86                    s1 = a1
  4166: 82 1a 38                 a3 = u64 [sp + 0x38]
  4169: 82 1b 30                 a4 = u64 [sp + 0x30]
  4172: 50 10 56 19 01           ra = 86, jump @302
      :                          @273 [@dyn 43]
  4177: 52 07 67                 jump @286 if a0 != 0
      :                          @274
  4180: 82 17 40                 a0 = u64 [sp + 0x40]
  4183: c9 57 05                 s0 = a0 - s0
  4186: 95 55 01                 s0 = s0 + 0x1
  4189: 01                       fallthrough
      :                          @275
  4190: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4193: 51 05 c6 00              jump @297 if s0 == 0
      :                          @276
  4197: 82 69 20                 a2 = u64 [s1 + 0x20]
  4200: 33 08 30                 a1 = 0x30
  4203: 82 17 48                 a0 = u64 [sp + 0x48]
  4206: b4 90 01 58              ra = 88, jump [a2]
      :                          @277 [@dyn 44]
  4210: 51 07 ec                 jump @275 if a0 == 0
      :                          @278
  4213: 28 43                    jump @286
      :                          @279
  4215: 52 16 02 12              jump @281 if s1 != 2
      :                          @280
  4219: 98 a6 01                 s1 = a3 >> 0x1
  4222: 95 a8 01                 a1 = a3 + 0x1
  4225: 98 88 01                 a1 = a1 >> 0x1
  4228: 7b 18 10                 u64 [sp + 0x10] = a1
  4231: 28 08                    jump @282
      :                          @281
  4233: 64 a6                    s1 = a3
  4235: 49 11 10                 u64 [sp + 16] = 0
  4238: 01                       fallthrough
      :                          @282
  4239: 82 78 20                 a1 = u64 [a0 + 0x20]
  4242: 7b 18 48                 u64 [sp + 0x48] = a1
  4245: 82 75 28                 s0 = u64 [a0 + 0x28]
  4248: 81 77 30                 a0 = i32 [a0 + 0x30]
  4251: 7b 17 40                 u64 [sp + 0x40] = a0
  4254: 95 66 01                 s1 = s1 + 0x1
  4257: 01                       fallthrough
      :                          @283
  4258: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4261: 51 06 27                 jump @288 if s1 == 0
      :                          @284
  4264: 82 59 20                 a2 = u64 [s0 + 0x20]
  4267: 82 17 48                 a0 = u64 [sp + 0x48]
  4270: 82 18 40                 a1 = u64 [sp + 0x40]
  4273: b4 90 01 5a              ra = 90, jump [a2]
      :                          @285 [@dyn 45]
  4277: 51 07 ed                 jump @283 if a0 == 0
      :                          @286
  4280: 33 08 01                 a1 = 0x1
  4283: 01                       fallthrough
      :                          @287
  4284: 64 87                    a0 = a1
  4286: 82 10 60                 ra = u64 [sp + 0x60]
  4289: 82 15 58                 s0 = u64 [sp + 0x58]
  4292: 82 16 50                 s1 = u64 [sp + 0x50]
  4295: 95 11 68                 sp = sp + 0x68
  4298: 32 00                    ret
      :                          @288
  4300: 82 16 48                 s1 = u64 [sp + 0x48]
  4303: 64 67                    a0 = s1
  4305: 64 58                    a1 = s0
  4307: 82 19 18                 a2 = u64 [sp + 0x18]
  4310: 82 1a 38                 a3 = u64 [sp + 0x38]
  4313: 82 1b 30                 a4 = u64 [sp + 0x30]
  4316: 50 10 5c 89 00           ra = 92, jump @302
      :                          @289 [@dyn 46]
  4321: 33 08 01                 a1 = 0x1
  4324: 52 07 d8                 jump @287 if a0 != 0
      :                          @290
  4327: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4330: 64 67                    a0 = s1
  4332: 82 18 20                 a1 = u64 [sp + 0x20]
  4335: 82 19 28                 a2 = u64 [sp + 0x28]
  4338: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @291 [@dyn 47]
  4342: 33 08 01                 a1 = 0x1
  4345: 52 07 c3                 jump @287 if a0 != 0
      :                          @292
  4348: 82 17 10                 a0 = u64 [sp + 0x10]
  4351: 9a 77                    a0 = -a0
  4353: 7b 17 38                 u64 [sp + 0x38] = a0
  4356: 33 06 ff                 s1 = 0xffffffffffffffff
  4359: 01                       fallthrough
      :                          @293
  4360: 82 17 38                 a0 = u64 [sp + 0x38]
  4363: c8 67 07                 a0 = a0 + s1
  4366: 51 17 ff 42              jump @300 if a0 == 4294967295
      :                          @294
  4370: 82 59 20                 a2 = u64 [s0 + 0x20]
  4373: 82 17 48                 a0 = u64 [sp + 0x48]
  4376: 82 18 40                 a1 = u64 [sp + 0x40]
  4379: b4 90 01 60              ra = 96, jump [a2]
      :                          @295 [@dyn 48]
  4383: 95 66 01                 s1 = s1 + 0x1
  4386: 51 07 e6                 jump @293 if a0 == 0
      :                          @296
  4389: 28 37                    jump @301
      :                          @297
  4391: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4394: 82 17 48                 a0 = u64 [sp + 0x48]
  4397: 82 18 20                 a1 = u64 [sp + 0x20]
  4400: 82 19 28                 a2 = u64 [sp + 0x28]
  4403: b4 a0 01 62              ra = 98, jump [a3]
      :                          @298 [@dyn 49]
  4407: 33 08 01                 a1 = 0x1
  4410: 52 07 82                 jump @287 if a0 != 0
      :                          @299
  4413: 33 08                    a1 = 0
  4415: 82 16                    s1 = u64 [sp]
  4417: 82 17 10                 a0 = u64 [sp + 0x10]
  4420: 7a 67 30                 u32 [s1 + 0x30] = a0
  4423: 82 17 08                 a0 = u64 [sp + 0x8]
  4426: 78 67 38                 u8 [s1 + 0x38] = a0
  4429: 28 6f ff                 jump @287
      :                          @300
  4432: 82 16 10                 s1 = u64 [sp + 0x10]
  4435: 82 17 10                 a0 = u64 [sp + 0x10]
  4438: d8 76 08                 a1 = s1 <u a0
  4441: 28 63 ff                 jump @287
      :                          @301
  4444: 82 17 10                 a0 = u64 [sp + 0x10]
  4447: d8 76 08                 a1 = s1 <u a0
  4450: 28 5a ff                 jump @287
      :                          @302
  4453: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4456: 7b 10 20                 u64 [sp + 0x20] = ra
  4459: 7b 15 18                 u64 [sp + 0x18] = s0
  4462: 7b 16 10                 u64 [sp + 0x10] = s1
  4465: 83 9c                    i32 a5 = a2 + 0
  4467: 33 02 00 00 11           t0 = 0x110000
  4472: 64 a6                    s1 = a3
  4474: 64 85                    s0 = a1
  4476: 64 7a                    a3 = a0
  4478: aa 2c 20                 jump @305 if a5 == t0
      :                          @303
  4481: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4484: 64 a7                    a0 = a3
  4486: 64 98                    a1 = a2
  4488: 7b 1b 08                 u64 [sp + 0x8] = a4
  4491: 7b 1a                    u64 [sp] = a3
  4493: b4 c0 01 64              ra = 100, jump [a5]
      :                          @304 [@dyn 50]
  4497: 82 1a                    a3 = u64 [sp]
  4499: 82 1b 08                 a4 = u64 [sp + 0x8]
  4502: 64 78                    a1 = a0
  4504: 33 07 01                 a0 = 0x1
  4507: 52 08 20                 jump @308 if a1 != 0
      :                          @305
  4510: 51 06 1a                 jump @307 if s1 == 0
      :                          @306
  4513: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4516: 64 a7                    a0 = a3
  4518: 64 68                    a1 = s1
  4520: 64 b9                    a2 = a4
  4522: 82 10 20                 ra = u64 [sp + 0x20]
  4525: 82 15 18                 s0 = u64 [sp + 0x18]
  4528: 82 16 10                 s1 = u64 [sp + 0x10]
  4531: 95 11 28                 sp = sp + 0x28
  4534: 32 0c                    jump [a5]
      :                          @307
  4536: 33 07                    a0 = 0
  4538: 01                       fallthrough
      :                          @308
  4539: 82 10 20                 ra = u64 [sp + 0x20]
  4542: 82 15 18                 s0 = u64 [sp + 0x18]
  4545: 82 16 10                 s1 = u64 [sp + 0x10]
  4548: 95 11 28                 sp = sp + 0x28
  4551: 32 00                    ret
      :                          @309
  4553: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4557: 7b 10 80 00              u64 [sp + 0x80] = ra
  4561: 7b 15 78                 u64 [sp + 0x78] = s0
  4564: 7b 16 70                 u64 [sp + 0x70] = s1
  4567: 49 11 60 20              u64 [sp + 96] = 0x20
  4571: 33 0a 03                 a3 = 0x3
  4574: 78 1a 68                 u8 [sp + 0x68] = a3
  4577: 82 96 20                 s1 = u64 [a2 + 0x20]
  4580: 49 11 30                 u64 [sp + 48] = 0
  4583: 49 11 40                 u64 [sp + 64] = 0
  4586: 7b 17 50                 u64 [sp + 0x50] = a0
  4589: 7b 18 58                 u64 [sp + 0x58] = a1
  4592: 51 06 07 01              jump @331 if s1 == 0
      :                          @310
  4596: 82 97 28                 a0 = u64 [a2 + 0x28]
  4599: 51 07 74 01              jump @341 if a0 == 0
      :                          @311
  4603: 49 11 28                 u64 [sp + 40] = 0
  4606: 82 95                    s0 = u64 [a2]
  4608: 7b 19 08                 u64 [sp + 0x8] = a2
  4611: 82 98 10                 a1 = u64 [a2 + 0x10]
  4614: 7b 18 18                 u64 [sp + 0x18] = a1
  4617: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4620: 97 88 03                 a1 = a1 << 0x3
  4623: 98 88 03                 a1 = a1 >> 0x3
  4626: 95 88 01                 a1 = a1 + 0x1
  4629: 7b 18                    u64 [sp] = a1
  4631: 95 55 08                 s0 = s0 + 0x8
  4634: 96 78 38                 a1 = a0 * 0x38
  4637: 95 66 18                 s1 = s1 + 0x18
  4640: 33 07 4e                 a0 = 0x4e
  4643: 7b 17 10                 u64 [sp + 0x10] = a0
  4646: 01                       fallthrough
      :                          @312
  4647: 7b 18 20                 u64 [sp + 0x20] = a1
  4650: 82 59                    a2 = u64 [s0]
  4652: 51 09 17                 jump @315 if a2 == 0
      :                          @313
  4655: 82 1a 58                 a3 = u64 [sp + 0x58]
  4658: 82 17 50                 a0 = u64 [sp + 0x50]
  4661: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  4664: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4667: b4 a0 01 66              ra = 102, jump [a3]
      :                          @314 [@dyn 51]
  4671: 52 07 51 01              jump @344 if a0 != 0
      :                          @315
  4675: 81 67 10                 a0 = i32 [s1 + 0x10]
  4678: 7a 17 60                 u32 [sp + 0x60] = a0
  4681: 7c 67 18                 a0 = u8 [s1 + 0x18]
  4684: 78 17 68                 u8 [sp + 0x68] = a0
  4687: 81 67 14                 a0 = i32 [s1 + 0x14]
  4690: 7a 17 64                 u32 [sp + 0x64] = a0
  4693: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4696: 82 67                    a0 = u64 [s1]
  4698: 51 08 26                 jump @320 if a1 == 0
      :                          @316
  4701: 52 18 01 16              jump @318 if a1 != 1
      :                          @317
  4705: 97 77 04                 a0 = a0 << 0x4
  4708: 82 18 18                 a1 = u64 [sp + 0x18]
  4711: c8 87 07                 a0 = a0 + a1
  4714: 82 78 08                 a1 = u64 [a0 + 0x8]
  4717: 82 19 10                 a2 = u64 [sp + 0x10]
  4720: aa 98 07                 jump @319 if a1 == a2
      :                          @318
  4723: 33 08                    a1 = 0
  4725: 28 0f                    jump @321
      :                          @319
  4727: 82 77                    a0 = u64 [a0]
  4729: 82 77                    a0 = u64 [a0]
  4731: 33 08 01                 a1 = 0x1
  4734: 28 06                    jump @321
      :                          @320
  4736: 33 08 01                 a1 = 0x1
  4739: 01                       fallthrough
      :                          @321
  4740: 7b 18 30                 u64 [sp + 0x30] = a1
  4743: 7b 17 38                 u64 [sp + 0x38] = a0
  4746: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  4749: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  4752: 51 08 26                 jump @326 if a1 == 0
      :                          @322
  4755: 52 18 01 16              jump @324 if a1 != 1
      :                          @323
  4759: 97 77 04                 a0 = a0 << 0x4
  4762: 82 18 18                 a1 = u64 [sp + 0x18]
  4765: c8 87 07                 a0 = a0 + a1
  4768: 82 78 08                 a1 = u64 [a0 + 0x8]
  4771: 82 19 10                 a2 = u64 [sp + 0x10]
  4774: aa 98 07                 jump @325 if a1 == a2
      :                          @324
  4777: 33 08                    a1 = 0
  4779: 28 0f                    jump @327
      :                          @325
  4781: 82 77                    a0 = u64 [a0]
  4783: 82 77                    a0 = u64 [a0]
  4785: 33 08 01                 a1 = 0x1
  4788: 28 06                    jump @327
      :                          @326
  4790: 33 08 01                 a1 = 0x1
  4793: 01                       fallthrough
      :                          @327
  4794: 7b 18 40                 u64 [sp + 0x40] = a1
  4797: 7b 17 48                 u64 [sp + 0x48] = a0
  4800: 82 67 08                 a0 = u64 [s1 + 0x8]
  4803: 97 77 04                 a0 = a0 << 0x4
  4806: 82 18 18                 a1 = u64 [sp + 0x18]
  4809: c8 78 08                 a1 = a1 + a0
  4812: 82 87                    a0 = u64 [a1]
  4814: 82 89 08                 a2 = u64 [a1 + 0x8]
  4817: 95 18 30                 a1 = sp + 0x30
  4820: b4 90 01 68              ra = 104, jump [a2]
      :                          @328 [@dyn 52]
  4824: 52 07 b8 00              jump @344 if a0 != 0
      :                          @329
  4828: 95 55 10                 s0 = s0 + 0x10
  4831: 82 18 20                 a1 = u64 [sp + 0x20]
  4834: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  4837: 95 66 38                 s1 = s1 + 0x38
  4840: 82 17 28                 a0 = u64 [sp + 0x28]
  4843: 95 77 01                 a0 = a0 + 0x1
  4846: 7b 17 28                 u64 [sp + 0x28] = a0
  4849: 52 08 36 ff              jump @312 if a1 != 0
      :                          @330
  4853: 28 69                    jump @339
      :                          @331
  4855: 82 97 18                 a0 = u64 [a2 + 0x18]
  4858: 51 07 71                 jump @341 if a0 == 0
      :                          @332
  4861: 82 95 10                 s0 = u64 [a2 + 0x10]
  4864: 33 0a                    a3 = 0
  4866: 97 78 04                 a1 = a0 << 0x4
  4869: c8 58 08                 a1 = a1 + s0
  4872: 7b 18 20                 u64 [sp + 0x20] = a1
  4875: 7b 19 08                 u64 [sp + 0x8] = a2
  4878: 82 96                    s1 = u64 [a2]
  4880: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  4883: 97 77 04                 a0 = a0 << 0x4
  4886: 98 77 04                 a0 = a0 >> 0x4
  4889: 95 77 01                 a0 = a0 + 0x1
  4892: 7b 17                    u64 [sp] = a0
  4894: 95 66 08                 s1 = s1 + 0x8
  4897: 01                       fallthrough
      :                          @333
  4898: 7b 1a 28                 u64 [sp + 0x28] = a3
  4901: 82 69                    a2 = u64 [s1]
  4903: 51 09 16                 jump @336 if a2 == 0
      :                          @334
  4906: 82 1a 58                 a3 = u64 [sp + 0x58]
  4909: 82 17 50                 a0 = u64 [sp + 0x50]
  4912: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4915: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4918: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @335 [@dyn 53]
  4922: 52 07 56                 jump @344 if a0 != 0
      :                          @336
  4925: 82 57                    a0 = u64 [s0]
  4927: 82 59 08                 a2 = u64 [s0 + 0x8]
  4930: 95 18 30                 a1 = sp + 0x30
  4933: b4 90 01 6c              ra = 108, jump [a2]
      :                          @337 [@dyn 54]
  4937: 52 07 47                 jump @344 if a0 != 0
      :                          @338
  4940: 95 66 10                 s1 = s1 + 0x10
  4943: 95 55 10                 s0 = s0 + 0x10
  4946: 82 1a 28                 a3 = u64 [sp + 0x28]
  4949: 95 aa 01                 a3 = a3 + 0x1
  4952: 82 17 20                 a0 = u64 [sp + 0x20]
  4955: ab 75 c7                 jump @333 if s0 != a0
      :                          @339
  4958: 82 19 08                 a2 = u64 [sp + 0x8]
  4961: 82 1a                    a3 = u64 [sp]
  4963: 82 97 08                 a0 = u64 [a2 + 0x8]
  4966: ac 7a 0d                 jump @342 if a3 <u a0
      :                          @340
  4969: 28 2c                    jump @345
      :                          @341
  4971: 33 0a                    a3 = 0
  4973: 82 97 08                 a0 = u64 [a2 + 0x8]
  4976: 54 07 25                 jump @345 if a0 <=u 0
      :                          @342
  4979: 82 97                    a0 = u64 [a2]
  4981: 97 a8 04                 a1 = a3 << 0x4
  4984: c8 87 09                 a2 = a0 + a1
  4987: 82 1a 58                 a3 = u64 [sp + 0x58]
  4990: 82 17 50                 a0 = u64 [sp + 0x50]
  4993: 82 98                    a1 = u64 [a2]
  4995: 82 99 08                 a2 = u64 [a2 + 0x8]
  4998: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5001: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @343 [@dyn 55]
  5005: 51 07 08                 jump @345 if a0 == 0
      :                          @344
  5008: 33 07 01                 a0 = 0x1
  5011: 28 05                    jump @346
      :                          @345
  5013: 33 07                    a0 = 0
  5015: 01                       fallthrough
      :                          @346
  5016: 82 10 80 00              ra = u64 [sp + 0x80]
  5020: 82 15 78                 s0 = u64 [sp + 0x78]
  5023: 82 16 70                 s1 = u64 [sp + 0x70]
  5026: 95 11 88 00              sp = sp + 0x88
  5030: 32 00                    ret
      :                          @347 [@dyn 56]
  5032: 32 00                    ret
      :                          @348 [@dyn 57]
  5034: 95 11 80                 sp = sp + 0xffffffffffffff80
  5037: 7b 10 78                 u64 [sp + 0x78] = ra
  5040: 7b 15 70                 u64 [sp + 0x70] = s0
  5043: 7b 16 68                 u64 [sp + 0x68] = s1
  5046: 64 92                    t0 = a2
  5048: 33 00                    ra = 0
  5050: 33 0b                    a4 = 0
  5052: 33 05                    s0 = 0
  5054: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5064: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5070: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5080: 82 79 10                 a2 = u64 [a0 + 0x10]
  5083: 7b 19 48                 u64 [sp + 0x48] = a2
  5086: 82 79                    a2 = u64 [a0]
  5088: 7b 19 38                 u64 [sp + 0x38] = a2
  5091: 82 77 08                 a0 = u64 [a0 + 0x8]
  5094: 7b 17 30                 u64 [sp + 0x30] = a0
  5097: 33 07 14 00 01           a0 = 0x10014
  5102: 7b 17 08                 u64 [sp + 0x8] = a0
  5105: 3a 07 08 00 03           a0 = u64 [0x30008]
  5110: 7b 17 60                 u64 [sp + 0x60] = a0
  5113: 7b 18 58                 u64 [sp + 0x58] = a1
  5116: 95 88 08                 a1 = a1 + 0x8
  5119: 7b 18                    u64 [sp] = a1
  5121: 33 0c 0a                 a5 = 0xa
  5124: 7b 12 20                 u64 [sp + 0x20] = t0
  5127: 7b 13 18                 u64 [sp + 0x18] = t1
  5130: 7b 14 10                 u64 [sp + 0x10] = t2
  5133: 28 3a                    jump @352
      :                          @349
  5135: 64 06                    s1 = ra
  5137: c8 89 07                 a0 = a2 + a1
  5140: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5143: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5146: 88 77 01                 a0 = a0 <u 0x1
  5149: 01                       fallthrough
      :                          @350
  5150: 82 1a 48                 a3 = u64 [sp + 0x48]
  5153: 78 a7                    u8 [a3] = a0
  5155: 82 17 30                 a0 = u64 [sp + 0x30]
  5158: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5161: 82 17 38                 a0 = u64 [sp + 0x38]
  5164: b4 a0 01 74              ra = 116, jump [a3]
      :                          @351 [@dyn 58]
  5168: 64 5b                    a4 = s0
  5170: 82 12 20                 t0 = u64 [sp + 0x20]
  5173: 82 13 18                 t1 = u64 [sp + 0x18]
  5176: 82 14 10                 t2 = u64 [sp + 0x10]
  5179: 64 60                    ra = s1
  5181: 33 0c 0a                 a5 = 0xa
  5184: 82 15 40                 s0 = u64 [sp + 0x40]
  5187: 52 07 63 01              jump @393 if a0 != 0
      :                          @352
  5191: 84 57 ff 00              a0 = s0 & 0xff
  5195: 52 07 57 01              jump @392 if a0 != 0
      :                          @353
  5199: 7b 1b 50                 u64 [sp + 0x50] = a4
  5202: ae 02 0a                 jump @356 if t0 >=u ra
      :                          @354
  5205: 28 ef 00                 jump @383
      :                          @355
  5208: ac 02 ec 00              jump @383 if t0 <u ra
      :                          @356
  5212: c9 02 08                 a1 = t0 - ra
  5215: 82 16 58                 s1 = u64 [sp + 0x58]
  5218: c8 06 06                 s1 = s1 + ra
  5221: 55 18 10 1d              jump @362 if a1 >=u 16
      :                          @357
  5225: aa 02 d8 00              jump @382 if t0 == ra
      :                          @358
  5229: 33 0a                    a3 = 0
  5231: 01                       fallthrough
      :                          @359
  5232: c8 a6 07                 a0 = s1 + a3
  5235: 7c 77                    a0 = u8 [a0]
  5237: aa c7 a5 00              jump @377 if a0 == a5
      :                          @360
  5241: 95 aa 01                 a3 = a3 + 0x1
  5244: ab a8 f4                 jump @359 if a1 != a3
      :                          @361
  5247: 28 c2 00                 jump @382
      :                          @362
  5250: 95 69 07                 a2 = s1 + 0x7
  5253: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5256: c9 6a 07                 a0 = a3 - s1
  5259: d3 6a 0a                 a3 = a3 ^ s1
  5262: 88 aa 01                 a3 = a3 <u 0x1
  5265: 88 7b 01                 a4 = a0 <u 0x1
  5268: d4 ba 0a                 a3 = a3 | a4
  5271: 51 0a 45                 jump @368 if a3 == 0
      :                          @363
  5274: 33 07                    a0 = 0
  5276: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5279: 82 1b                    a4 = u64 [sp]
  5281: c8 0b 0b                 a4 = a4 + ra
  5284: 28 08                    jump @365
      :                          @364
  5286: 82 1b                    a4 = u64 [sp]
  5288: c8 0b 0b                 a4 = a4 + ra
  5291: 01                       fallthrough
      :                          @365
  5292: c8 76 0c                 a5 = s1 + a0
  5295: 82 cc                    a5 = u64 [a5]
  5297: c8 7b 09                 a2 = a4 + a0
  5300: 82 99                    a2 = u64 [a2]
  5302: d3 4c 05                 s0 = a5 ^ t2
  5305: c8 35 05                 s0 = s0 + t1
  5308: e0 c5 0c                 a5 = s0 & ~a5
  5311: d3 49 05                 s0 = a2 ^ t2
  5314: c8 35 05                 s0 = s0 + t1
  5317: e0 95 09                 a2 = s0 & ~a2
  5320: d4 c9 09                 a2 = a2 | a5
  5323: 82 1c 60                 a5 = u64 [sp + 0x60]
  5326: d2 c9 09                 a2 = a2 & a5
  5329: 52 09 1f                 jump @371 if a2 != 0
      :                          @366
  5332: 95 77 10                 a0 = a0 + 0x10
  5335: ae 7a d5                 jump @365 if a3 >=u a0
      :                          @367
  5338: 28 16                    jump @371
      :                          @368
  5340: c8 a6 0b                 a4 = s1 + a3
  5343: 7c bb                    a4 = u8 [a4]
  5345: aa cb 51                 jump @380 if a4 == a5
      :                          @369
  5348: 95 aa 01                 a3 = a3 + 0x1
  5351: ab a7 f5                 jump @368 if a0 != a3
      :                          @370
  5354: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5357: ae 7a b9                 jump @364 if a3 >=u a0
      :                          @371
  5360: aa 87 9a 00              jump @389 if a0 == a1
      :                          @372
  5364: 33 0a                    a3 = 0
  5366: c8 76 06                 s1 = s1 + a0
  5369: c9 72 08                 a1 = t0 - a0
  5372: c9 08 08                 a1 = a1 - ra
  5375: 33 0c 0a                 a5 = 0xa
  5378: 82 1b 50                 a4 = u64 [sp + 0x50]
  5381: 01                       fallthrough
      :                          @373
  5382: c8 a6 09                 a2 = s1 + a3
  5385: 7c 99                    a2 = u8 [a2]
  5387: aa c9 0b                 jump @376 if a2 == a5
      :                          @374
  5390: 95 aa 01                 a3 = a3 + 0x1
  5393: ab a8 f5                 jump @373 if a1 != a3
      :                          @375
  5396: 28 2d                    jump @382
      :                          @376
  5398: c8 7a 0a                 a3 = a3 + a0
  5401: 01                       fallthrough
      :                          @377
  5402: c8 0a 0a                 a3 = a3 + ra
  5405: 95 a0 01                 ra = a3 + 0x1
  5408: ae 2a 38 ff              jump @355 if a3 >=u t0
      :                          @378
  5412: 82 17 58                 a0 = u64 [sp + 0x58]
  5415: c8 7a 0a                 a3 = a3 + a0
  5418: 7c a7                    a0 = u8 [a3]
  5420: ab c7 2c ff              jump @355 if a0 != a5
      :                          @379
  5424: 28 61                    jump @390
      :                          @380
  5426: 82 1b 50                 a4 = u64 [sp + 0x50]
  5429: c8 0a 0a                 a3 = a3 + ra
  5432: 95 a0 01                 ra = a3 + 0x1
  5435: ac 2a e9                 jump @378 if a3 <u t0
      :                          @381
  5438: 28 1a ff                 jump @355
      :                          @382
  5441: 64 20                    ra = t0
  5443: 01                       fallthrough
      :                          @383
  5444: 49 11 40 01              u64 [sp + 64] = 0x1
  5448: 64 b5                    s0 = a4
  5450: 64 26                    s1 = t0
  5452: aa 2b 56                 jump @392 if a4 == t0
      :                          @384
  5455: 82 17 48                 a0 = u64 [sp + 0x48]
  5458: 7c 77                    a0 = u8 [a0]
  5460: 51 07 22                 jump @387 if a0 == 0
      :                          @385
  5463: 82 17 30                 a0 = u64 [sp + 0x30]
  5466: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5469: 33 09 04                 a2 = 0x4
  5472: 82 17 38                 a0 = u64 [sp + 0x38]
  5475: 82 18 08                 a1 = u64 [sp + 0x8]
  5478: 7b 10 28                 u64 [sp + 0x28] = ra
  5481: b4 a0 01 76              ra = 118, jump [a3]
      :                          @386 [@dyn 59]
  5485: 82 1b 50                 a4 = u64 [sp + 0x50]
  5488: 82 10 28                 ra = u64 [sp + 0x28]
  5491: 52 07 33                 jump @393 if a0 != 0
      :                          @387
  5494: c9 b6 09                 a2 = s1 - a4
  5497: 82 18 58                 a1 = u64 [sp + 0x58]
  5500: c8 b8 08                 a1 = a1 + a4
  5503: ab b6 90 fe              jump @349 if s1 != a4
      :                          @388
  5507: 64 06                    s1 = ra
  5509: 33 07                    a0 = 0
  5511: 28 97 fe                 jump @350
      :                          @389
  5514: 64 20                    ra = t0
  5516: 82 1b 50                 a4 = u64 [sp + 0x50]
  5519: 28 b5                    jump @383
      :                          @390
  5521: 49 11 40                 u64 [sp + 64] = 0
  5524: 64 05                    s0 = ra
  5526: 64 06                    s1 = ra
  5528: 82 17 48                 a0 = u64 [sp + 0x48]
  5531: 7c 77                    a0 = u8 [a0]
  5533: 52 07 ba                 jump @385 if a0 != 0
      :                          @391
  5536: 28 d6                    jump @387
      :                          @392
  5538: 33 07                    a0 = 0
  5540: 28 06                    jump @394
      :                          @393
  5542: 33 07 01                 a0 = 0x1
  5545: 01                       fallthrough
      :                          @394
  5546: 82 10 78                 ra = u64 [sp + 0x78]
  5549: 82 15 70                 s0 = u64 [sp + 0x70]
  5552: 82 16 68                 s1 = u64 [sp + 0x68]
  5555: 95 11 80 00              sp = sp + 0x80
  5559: 32 00                    ret
      :                          @395 [@dyn 60]
  5561: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5564: 7b 10 20                 u64 [sp + 0x20] = ra
  5567: 7b 15 18                 u64 [sp + 0x18] = s0
  5570: 7b 16 10                 u64 [sp + 0x10] = s1
  5573: 82 75 10                 s0 = u64 [a0 + 0x10]
  5576: 7c 59                    a2 = u8 [s0]
  5578: 82 7b                    a4 = u64 [a0]
  5580: 82 76 08                 s1 = u64 [a0 + 0x8]
  5583: 51 09 32                 jump @399 if a2 == 0
      :                          @396
  5586: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5589: 7b 18 08                 u64 [sp + 0x8] = a1
  5592: 33 08 14 00 01           a1 = 0x10014
  5597: 33 09 04                 a2 = 0x4
  5600: 64 b7                    a0 = a4
  5602: 7b 1b                    u64 [sp] = a4
  5604: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @397 [@dyn 61]
  5608: 82 18 08                 a1 = u64 [sp + 0x8]
  5611: 82 1b                    a4 = u64 [sp]
  5613: 51 07 14                 jump @399 if a0 == 0
      :                          @398
  5616: 33 07 01                 a0 = 0x1
  5619: 82 10 20                 ra = u64 [sp + 0x20]
  5622: 82 15 18                 s0 = u64 [sp + 0x18]
  5625: 82 16 10                 s1 = u64 [sp + 0x10]
  5628: 95 11 28                 sp = sp + 0x28
  5631: 32 00                    ret
      :                          @399
  5633: 83 87                    i32 a0 = a1 + 0
  5635: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5638: 88 77 01                 a0 = a0 <u 0x1
  5641: 78 57                    u8 [s0] = a0
  5643: 82 6c 20                 a5 = u64 [s1 + 0x20]
  5646: 64 b7                    a0 = a4
  5648: 82 10 20                 ra = u64 [sp + 0x20]
  5651: 82 15 18                 s0 = u64 [sp + 0x18]
  5654: 82 16 10                 s1 = u64 [sp + 0x10]
  5657: 95 11 28                 sp = sp + 0x28
  5660: 32 0c                    jump [a5]
      :                          @400 [@dyn 62]
  5662: 64 8a                    a3 = a1
  5664: 33 08 08 02 01           a1 = 0x10208
  5669: 64 a9                    a2 = a3
  5671: 28 a2 fb                 jump @309
      :                          @401 [@dyn 63]
  5674: 80 77                    a0 = u32 [a0]
  5676: 28 07 f8                 jump @247
      :                          @402 [@dyn 64]
  5679: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5683: 7b 10 80 00              u64 [sp + 0x80] = ra
  5687: 82 7b                    a4 = u64 [a0]
  5689: 33 09 81 00              a2 = 0x81
  5693: 95 17 7f                 a0 = sp + 0x7f
  5696: 33 02 57                 t0 = 0x57
  5699: 01                       fallthrough
      :                          @403
  5700: 64 9c                    a5 = a2
  5702: 98 ba 04                 a3 = a4 >> 0x4
  5705: 84 bb 0f                 a4 = a4 & 0xf
  5708: 88 b3 0a                 t1 = a4 <u 0xa
  5711: 33 09 30                 a2 = 0x30
  5714: da 32 09                 a2 = t0 if t1 == 0
  5717: be b9 09                 i32 a2 = a2 + a4
  5720: 78 79                    u8 [a0] = a2
  5722: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5725: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
  5728: 64 ab                    a4 = a3
  5730: 52 0a e2                 jump @403 if a3 != 0
      :                          @404
  5733: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  5736: 56 27 80 00 28           jump @407 if a0 >u 128
      :                          @405
  5741: 9a 9b 81 00              a4 = 0x81 - a2
  5745: 64 1a                    a3 = sp
  5747: c8 7a 0a                 a3 = a3 + a0
  5750: 33 09 02                 a2 = 0x2
  5753: 64 87                    a0 = a1
  5755: 33 08 3e 02 01           a1 = 0x1023e
  5760: 50 20 82 00 da f8        ra = 130, jump @257
      :                          @406 [@dyn 65]
  5766: 82 10 80 00              ra = u64 [sp + 0x80]
  5770: 95 11 88 00              sp = sp + 0x88
  5774: 32 00                    ret
      :                          @407
  5776: 00                       trap
