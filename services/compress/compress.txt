// RO data = 495/496 bytes
// RW data = 48/65616 bytes
// Stack size = 65536 bytes
// RO data = [83, 108, 105, 99, 101, 87, 114, 105, 116, 101, 69, 114, 114, 111, 114, 79, 107, 69, 114, 114, 87, 114, 105, 116, 101, 69, 114, 114, 111, 114, 82, 101, 115, 117, 108, 116, 58, 32, 0, 0, 30, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 67, 111, 109, 112, 114, 101, 115, 115, 32, 79, 117, 116, 112, 117, 116, 58, 32, 0, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 68, 101, 99, 111, 109, 112, 114, 101, 115, 115, 32, 82, 101, 115, 117, 108, 116, 58, 32, 0, 0, 0, 0, 0, 96, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 68, 101, 99, 111, 109, 112, 114, 101, 115, 115, 32, 79, 117, 116, 112, 117, 116, 58, 32, 0, 0, 0, 0, 0, 136, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 0, 0, 41, 91, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 138, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 40, 40, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [153, 30, 71, 248, 74, 121, 236, 17, 199, 250, 140, 152, 235, 170, 195, 47, 181, 166, 241, 144, 155, 151, 149, 170, 20, 248, 33, 216, 19, 213, 251, 199, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2190
// Code size = 6456 bytes

      :                          @0
     0: 28 cf 03 00 00           jump @62
      :                          @1
     5: 28 2f 0a 00 00           jump @161
      :                          @2
    10: 28 33 0a                 jump @162
      :                          @3 [@dyn 1]
    13: 82 89 28                 a2 = u64 [a1 + 0x28]
    16: 82 87 20                 a0 = u64 [a1 + 0x20]
    19: 82 9c 18                 a5 = u64 [a2 + 0x18]
    22: 33 08 00 00 01           a1 = 0x10000
    27: 33 09 0f                 a2 = 0xf
    30: 32 0c                    jump [a5]
      :                          @4 [@dyn 2]
    32: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    36: 7b 10 80 00              u64 [sp + 0x80] = ra
    40: 80 89 34                 a2 = u32 [a1 + 0x34]
    43: 82 77                    a0 = u64 [a0]
    45: 84 9a 10                 a3 = a2 & 0x10
    48: 52 0a 16                 jump @7 if a3 != 0
      :                          @5
    51: 84 99 20                 a2 = a2 & 0x20
    54: 52 09 40                 jump @10 if a2 != 0
      :                          @6
    57: 82 77                    a0 = u64 [a0]
    59: 82 10 80 00              ra = u64 [sp + 0x80]
    63: 95 11 88 00              sp = sp + 0x88
    67: 28 c5 0f                 jump @302
      :                          @7
    70: 82 7b                    a4 = u64 [a0]
    72: 33 09 81 00              a2 = 0x81
    76: 95 17 7f                 a0 = sp + 0x7f
    79: 33 02 57                 t0 = 0x57
    82: 01                       fallthrough
      :                          @8
    83: 64 9c                    a5 = a2
    85: 98 ba 04                 a3 = a4 >> 0x4
    88: 84 bb 0f                 a4 = a4 & 0xf
    91: 88 b3 0a                 t1 = a4 <u 0xa
    94: 33 09 30                 a2 = 0x30
    97: da 32 09                 a2 = t0 if t1 == 0
   100: be b9 09                 i32 a2 = a2 + a4
   103: 78 79                    u8 [a0] = a2
   105: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   108: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   111: 64 ab                    a4 = a3
   113: 52 0a e2                 jump @8 if a3 != 0
      :                          @9
   116: 28 30                    jump @12
      :                          @10
   118: 82 7b                    a4 = u64 [a0]
   120: 33 09 81 00              a2 = 0x81
   124: 95 17 7f                 a0 = sp + 0x7f
   127: 33 02 37                 t0 = 0x37
   130: 01                       fallthrough
      :                          @11
   131: 64 9c                    a5 = a2
   133: 98 ba 04                 a3 = a4 >> 0x4
   136: 84 bb 0f                 a4 = a4 & 0xf
   139: 88 b3 0a                 t1 = a4 <u 0xa
   142: 33 09 30                 a2 = 0x30
   145: da 32 09                 a2 = t0 if t1 == 0
   148: be b9 09                 i32 a2 = a2 + a4
   151: 78 79                    u8 [a0] = a2
   153: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   156: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   159: 64 ab                    a4 = a3
   161: 52 0a e2                 jump @11 if a3 != 0
      :                          @12
   164: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   167: 56 27 80 00 27           jump @15 if a0 >u 128
      :                          @13
   172: 9a 9b 81 00              a4 = 0x81 - a2
   176: 64 1a                    a3 = sp
   178: c8 7a 0a                 a3 = a3 + a0
   181: 33 09 02                 a2 = 0x2
   184: 64 87                    a0 = a1
   186: 33 08 25 01 01           a1 = 0x10125
   191: 50 10 06 70 10           ra = 6, jump @312
      :                          @14 [@dyn 3]
   196: 82 10 80 00              ra = u64 [sp + 0x80]
   200: 95 11 88 00              sp = sp + 0x88
   204: 32 00                    ret
      :                          @15
   206: 00                       trap
      :                          @16
   207: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   211: 7b 10 80 00              u64 [sp + 0x80] = ra
   215: 80 89 34                 a2 = u32 [a1 + 0x34]
   218: 84 9a 10                 a3 = a2 & 0x10
   221: 52 0a 16                 jump @19 if a3 != 0
      :                          @17
   224: 84 99 20                 a2 = a2 & 0x20
   227: 52 09 41                 jump @22 if a2 != 0
      :                          @18
   230: 7c 77                    a0 = u8 [a0]
   232: 82 10 80 00              ra = u64 [sp + 0x80]
   236: 95 11 88 00              sp = sp + 0x88
   240: 28 18 0f                 jump @302
      :                          @19
   243: 7c 77                    a0 = u8 [a0]
   245: 33 0b 81 00              a4 = 0x81
   249: 95 19 7f                 a2 = sp + 0x7f
   252: 33 02 57                 t0 = 0x57
   255: 01                       fallthrough
      :                          @20
   256: 64 bc                    a5 = a4
   258: 84 7b 0f                 a4 = a0 & 0xf
   261: 97 77 38                 a0 = a0 << 0x38
   264: 98 77 3c                 a0 = a0 >> 0x3c
   267: 88 b3 0a                 t1 = a4 <u 0xa
   270: 33 0a 30                 a3 = 0x30
   273: da 32 0a                 a3 = t0 if t1 == 0
   276: be ba 0a                 i32 a3 = a3 + a4
   279: 78 9a                    u8 [a2] = a3
   281: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   284: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   287: 52 07 e1                 jump @20 if a0 != 0
      :                          @21
   290: 28 31                    jump @24
      :                          @22
   292: 7c 77                    a0 = u8 [a0]
   294: 33 0b 81 00              a4 = 0x81
   298: 95 19 7f                 a2 = sp + 0x7f
   301: 33 02 37                 t0 = 0x37
   304: 01                       fallthrough
      :                          @23
   305: 64 bc                    a5 = a4
   307: 84 7b 0f                 a4 = a0 & 0xf
   310: 97 77 38                 a0 = a0 << 0x38
   313: 98 77 3c                 a0 = a0 >> 0x3c
   316: 88 b3 0a                 t1 = a4 <u 0xa
   319: 33 0a 30                 a3 = 0x30
   322: da 32 0a                 a3 = t0 if t1 == 0
   325: be ba 0a                 i32 a3 = a3 + a4
   328: 78 9a                    u8 [a2] = a3
   330: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   333: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   336: 52 07 e1                 jump @23 if a0 != 0
      :                          @24
   339: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   342: 56 27 80 00 27           jump @27 if a0 >u 128
      :                          @25
   347: 9a bb 81 00              a4 = 0x81 - a4
   351: 64 1a                    a3 = sp
   353: c8 7a 0a                 a3 = a3 + a0
   356: 33 09 02                 a2 = 0x2
   359: 64 87                    a0 = a1
   361: 33 08 25 01 01           a1 = 0x10125
   366: 50 10 08 c1 0f           ra = 8, jump @312
      :                          @26 [@dyn 4]
   371: 82 10 80 00              ra = u64 [sp + 0x80]
   375: 95 11 88 00              sp = sp + 0x88
   379: 32 00                    ret
      :                          @27
   381: 00                       trap
      :                          @28 [@dyn 5]
   382: 95 11 f0                 sp = sp + 0xfffffffffffffff0
   385: 7b 10 08                 u64 [sp + 0x8] = ra
   388: 82 79                    a2 = u64 [a0]
   390: 64 87                    a0 = a1
   392: 7b 19                    u64 [sp] = a2
   394: 33 08 14 00 01           a1 = 0x10014
   399: 33 0b 02                 a4 = 0x2
   402: 33 09 0a                 a2 = 0xa
   405: 64 1a                    a3 = sp
   407: 50 10 0c 6b 16           ra = 12, jump @456
      :                          @29 [@dyn 6]
   412: 82 10 08                 ra = u64 [sp + 0x8]
   415: 95 11 10                 sp = sp + 0x10
   418: 32 00                    ret
      :                          @30 [@dyn 7]
   420: 95 11 68 ff              sp = sp + 0xffffffffffffff68
   424: 7b 10 90 00              u64 [sp + 0x90] = ra
   428: 7b 15 88 00              u64 [sp + 0x88] = s0
   432: 7b 16 80 00              u64 [sp + 0x80] = s1
   436: 82 89 28                 a2 = u64 [a1 + 0x28]
   439: 7b 18 18                 u64 [sp + 0x18] = a1
   442: 82 8a 20                 a3 = u64 [a1 + 0x20]
   445: 82 9b 18                 a4 = u64 [a2 + 0x18]
   448: 64 75                    s0 = a0
   450: 33 08 e1 00 01           a1 = 0x100e1
   455: 33 09 01                 a2 = 0x1
   458: 64 a7                    a0 = a3
   460: b4 b0 01 10              ra = 16, jump [a4]
      :                          @31 [@dyn 8]
   464: 33 09 01                 a2 = 0x1
   467: 52 07 b2 00              jump @42 if a0 != 0
      :                          @32
   471: 82 18 18                 a1 = u64 [sp + 0x18]
   474: 80 86 34                 s1 = u32 [a1 + 0x34]
   477: 84 67 04                 a0 = s1 & 0x4
   480: 52 07 0d                 jump @35 if a0 != 0
      :                          @33
   483: 64 57                    a0 = s0
   485: 50 10 12 ea fe           ra = 18, jump @16
      :                          @34 [@dyn 9]
   490: 28 98 00                 jump @41
      :                          @35
   493: 82 89 28                 a2 = u64 [a1 + 0x28]
   496: 82 87 20                 a0 = u64 [a1 + 0x20]
   499: 7b 19 10                 u64 [sp + 0x10] = a2
   502: 82 9a 18                 a3 = u64 [a2 + 0x18]
   505: 33 08 23 01 01           a1 = 0x10123
   510: 33 09 01                 a2 = 0x1
   513: 7b 17 08                 u64 [sp + 0x8] = a0
   516: b4 a0 01 14              ra = 20, jump [a3]
      :                          @36 [@dyn 10]
   520: 33 09 01                 a2 = 0x1
   523: 52 07 7a                 jump @42 if a0 != 0
      :                          @37
   526: 46 11 3f 01              u8 [sp + 63] = 0x1
   530: 82 17 08                 a0 = u64 [sp + 0x8]
   533: 7b 17 20                 u64 [sp + 0x20] = a0
   536: 82 17 10                 a0 = u64 [sp + 0x10]
   539: 7b 17 28                 u64 [sp + 0x28] = a0
   542: 95 17 3f                 a0 = sp + 0x3f
   545: 7b 17 30                 u64 [sp + 0x30] = a0
   548: 82 1c 18                 a5 = u64 [sp + 0x18]
   551: 81 c7 30                 a0 = i32 [a5 + 0x30]
   554: 7c c8 38                 a1 = u8 [a5 + 0x38]
   557: 82 c9                    a2 = u64 [a5]
   559: 82 ca 08                 a3 = u64 [a5 + 0x8]
   562: 82 cb 10                 a4 = u64 [a5 + 0x10]
   565: 82 cc 18                 a5 = u64 [a5 + 0x18]
   568: 7a 16 74                 u32 [sp + 0x74] = s1
   571: 7a 17 70                 u32 [sp + 0x70] = a0
   574: 78 18 78                 u8 [sp + 0x78] = a1
   577: 7b 19 40                 u64 [sp + 0x40] = a2
   580: 7b 1a 48                 u64 [sp + 0x48] = a3
   583: 7b 1b 50                 u64 [sp + 0x50] = a4
   586: 7b 1c 58                 u64 [sp + 0x58] = a5
   589: 95 17 20                 a0 = sp + 0x20
   592: 7b 17 60                 u64 [sp + 0x60] = a0
   595: 33 07 e8 00 01           a0 = 0x100e8
   600: 7b 17 68                 u64 [sp + 0x68] = a0
   603: 95 18 40                 a1 = sp + 0x40
   606: 64 57                    a0 = s0
   608: 50 10 16 6f fe           ra = 22, jump @16
      :                          @38 [@dyn 11]
   613: 51 07 08                 jump @40 if a0 == 0
      :                          @39
   616: 33 09 01                 a2 = 0x1
   619: 28 1a                    jump @42
      :                          @40
   621: 82 18 68                 a1 = u64 [sp + 0x68]
   624: 82 17 60                 a0 = u64 [sp + 0x60]
   627: 82 8a 18                 a3 = u64 [a1 + 0x18]
   630: 33 08 1e 01 01           a1 = 0x1011e
   635: 33 09 02                 a2 = 0x2
   638: b4 a0 01 18              ra = 24, jump [a3]
      :                          @41 [@dyn 12]
   642: 64 79                    a2 = a0
   644: 01                       fallthrough
      :                          @42
   645: 95 55 01                 s0 = s0 + 0x1
   648: 33 06 07 10              s1 = 0x1007
   652: 33 07 1c 01 01           a0 = 0x1011c
   657: 7b 17 10                 u64 [sp + 0x10] = a0
   660: 33 07 e8 00 01           a0 = 0x100e8
   665: 7b 17 08                 u64 [sp + 0x8] = a0
   668: 33 07 1e 01 01           a0 = 0x1011e
   673: 7b 17                    u64 [sp] = a0
   675: 82 18 18                 a1 = u64 [sp + 0x18]
   678: 28 13                    jump @45
      :                          @43
   680: 82 18 18                 a1 = u64 [sp + 0x18]
   683: 33 09 01                 a2 = 0x1
   686: 01                       fallthrough
      :                          @44
   687: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   690: 95 55 01                 s0 = s0 + 0x1
   693: 51 06 aa 00              jump @55 if s1 == 0
      :                          @45
   697: 84 97 01                 a0 = a2 & 0x1
   700: 33 09 01                 a2 = 0x1
   703: 52 07 f0                 jump @44 if a0 != 0
      :                          @46
   706: 80 8b 34                 a4 = u32 [a1 + 0x34]
   709: 82 87 20                 a0 = u64 [a1 + 0x20]
   712: 82 89 28                 a2 = u64 [a1 + 0x28]
   715: 84 ba 04                 a3 = a4 & 0x4
   718: 52 0a 27                 jump @51 if a3 != 0
      :                          @47
   721: 82 9a 18                 a3 = u64 [a2 + 0x18]
   724: 33 09 02                 a2 = 0x2
   727: 82 18 10                 a1 = u64 [sp + 0x10]
   730: b4 a0 01 1a              ra = 26, jump [a3]
      :                          @48 [@dyn 13]
   734: 33 09 01                 a2 = 0x1
   737: 82 18 18                 a1 = u64 [sp + 0x18]
   740: 52 07 cb                 jump @44 if a0 != 0
      :                          @49
   743: 64 57                    a0 = s0
   745: 50 10 1c e6 fd           ra = 28, jump @16
      :                          @50 [@dyn 14]
   750: 82 18 18                 a1 = u64 [sp + 0x18]
   753: 64 79                    a2 = a0
   755: 28 bc                    jump @44
      :                          @51
   757: 46 11 3f 01              u8 [sp + 63] = 0x1
   761: 7b 17 20                 u64 [sp + 0x20] = a0
   764: 7b 19 28                 u64 [sp + 0x28] = a2
   767: 95 17 3f                 a0 = sp + 0x3f
   770: 7b 17 30                 u64 [sp + 0x30] = a0
   773: 81 87 30                 a0 = i32 [a1 + 0x30]
   776: 7c 89 38                 a2 = u8 [a1 + 0x38]
   779: 82 8a                    a3 = u64 [a1]
   781: 82 83 08                 t1 = u64 [a1 + 0x8]
   784: 82 8c 10                 a5 = u64 [a1 + 0x10]
   787: 82 82 18                 t0 = u64 [a1 + 0x18]
   790: 7a 1b 74                 u32 [sp + 0x74] = a4
   793: 7a 17 70                 u32 [sp + 0x70] = a0
   796: 78 19 78                 u8 [sp + 0x78] = a2
   799: 7b 1a 40                 u64 [sp + 0x40] = a3
   802: 7b 13 48                 u64 [sp + 0x48] = t1
   805: 7b 1c 50                 u64 [sp + 0x50] = a5
   808: 7b 12 58                 u64 [sp + 0x58] = t0
   811: 95 17 20                 a0 = sp + 0x20
   814: 7b 17 60                 u64 [sp + 0x60] = a0
   817: 82 17 08                 a0 = u64 [sp + 0x8]
   820: 7b 17 68                 u64 [sp + 0x68] = a0
   823: 95 18 40                 a1 = sp + 0x40
   826: 64 57                    a0 = s0
   828: 50 10 1e 93 fd           ra = 30, jump @16
      :                          @52 [@dyn 15]
   833: 52 07 67 ff              jump @43 if a0 != 0
      :                          @53
   837: 82 18 68                 a1 = u64 [sp + 0x68]
   840: 82 17 60                 a0 = u64 [sp + 0x60]
   843: 82 8a 18                 a3 = u64 [a1 + 0x18]
   846: 33 09 02                 a2 = 0x2
   849: 82 18                    a1 = u64 [sp]
   851: b4 a0 01 20              ra = 32, jump [a3]
      :                          @54 [@dyn 16]
   855: 64 79                    a2 = a0
   857: 82 18 18                 a1 = u64 [sp + 0x18]
   860: 28 53 ff                 jump @44
      :                          @55
   863: 33 07 01                 a0 = 0x1
   866: 52 09 18                 jump @57 if a2 != 0
      :                          @56
   869: 82 89 28                 a2 = u64 [a1 + 0x28]
   872: 82 87 20                 a0 = u64 [a1 + 0x20]
   875: 82 9a 18                 a3 = u64 [a2 + 0x18]
   878: 33 08 24 01 01           a1 = 0x10124
   883: 33 09 01                 a2 = 0x1
   886: b4 a0 01 22              ra = 34, jump [a3]
      :                          @57 [@dyn 17]
   890: 82 10 90 00              ra = u64 [sp + 0x90]
   894: 82 15 88 00              s0 = u64 [sp + 0x88]
   898: 82 16 80 00              s1 = u64 [sp + 0x80]
   902: 95 11 98 00              sp = sp + 0x98
   906: 32 00                    ret
      :                          @58 [@dyn 18]
   908: 95 11 f0                 sp = sp + 0xfffffffffffffff0
   911: 7b 10 08                 u64 [sp + 0x8] = ra
   914: 64 79                    a2 = a0
   916: 82 7a                    a3 = u64 [a0]
   918: 64 87                    a0 = a1
   920: 95 99 08                 a2 = a2 + 0x8
   923: 51 0a 18                 jump @60 if a3 == 0
      :                          @59
   926: 7b 19                    u64 [sp] = a2
   928: 33 08 11 00 01           a1 = 0x10011
   933: 33 0b 0a                 a4 = 0xa
   936: 33 09 03                 a2 = 0x3
   939: 64 1a                    a3 = sp
   941: 33 00 26                 ra = 0x26
   944: 28 52 14                 jump @456
      :                          @60
   947: 7b 19                    u64 [sp] = a2
   949: 33 08 0f 00 01           a1 = 0x1000f
   954: 33 0b 04                 a4 = 0x4
   957: 33 09 02                 a2 = 0x2
   960: 64 1a                    a3 = sp
   962: 50 10 26 40 14           ra = 38, jump @456
      :                          @61 [@dyn 19]
   967: 82 10 08                 ra = u64 [sp + 0x8]
   970: 95 11 10                 sp = sp + 0x10
   973: 32 00                    ret
      :                          @62 [export #0: 'refine']
   975: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   979: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   983: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   987: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   991: 95 11 48 df              sp = sp + 0xffffffffffffdf48
   995: 33 09 08 10              a2 = 0x1008
   999: 95 17 40                 a0 = sp + 0x40
  1002: 95 15 40                 s0 = sp + 0x40
  1005: 33 08                    a1 = 0
  1007: 50 10 28 ba 0b           ra = 40, jump @287
      :                          @63 [@dyn 20]
  1012: 3a 08 00 00 03           a1 = u64 [0x30000]
  1017: 3a 07 08 00 03           a0 = u64 [0x30008]
  1022: 3a 0a 10 00 03           a3 = u64 [0x30010]
  1027: 3a 06 18 00 03           s1 = u64 [0x30018]
  1032: 33 0b f8 ef              a4 = 0xffffffffffffeff8
  1036: 01                       fallthrough
      :                          @64
  1037: c8 6a 0c                 a5 = a3 + s1
  1040: 9e cc 29                 a5 = a5 >>r 0x29
  1043: c8 6c 09                 a2 = a5 + s1
  1046: 78 59                    u8 [s0] = a2
  1048: 98 9c 38                 a5 = a2 >> 0x38
  1051: 78 5c 07                 u8 [s0 + 0x7] = a5
  1054: 98 9c 30                 a5 = a2 >> 0x30
  1057: 78 5c 06                 u8 [s0 + 0x6] = a5
  1060: 98 9c 28                 a5 = a2 >> 0x28
  1063: 78 5c 05                 u8 [s0 + 0x5] = a5
  1066: 98 9c 20                 a5 = a2 >> 0x20
  1069: 78 5c 04                 u8 [s0 + 0x4] = a5
  1072: 98 9c 18                 a5 = a2 >> 0x18
  1075: 78 5c 03                 u8 [s0 + 0x3] = a5
  1078: 98 9c 10                 a5 = a2 >> 0x10
  1081: 78 5c 02                 u8 [s0 + 0x2] = a5
  1084: 98 99 08                 a2 = a2 >> 0x8
  1087: 78 59 01                 u8 [s0 + 0x1] = a2
  1090: 95 55 08                 s0 = s0 + 0x8
  1093: 97 79 11                 a2 = a0 << 0x11
  1096: d3 68 08                 a1 = a1 ^ s1
  1099: d3 7a 0a                 a3 = a3 ^ a0
  1102: d3 87 07                 a0 = a0 ^ a1
  1105: d3 a6 06                 s1 = s1 ^ a3
  1108: d3 98 08                 a1 = a1 ^ a2
  1111: 95 bb 08                 a4 = a4 + 0x8
  1114: 9e aa 13                 a3 = a3 >>r 0x13
  1117: 52 0b b0                 jump @64 if a4 != 0
      :                          @65
  1120: 33 09 08 10              a2 = 0x1008
  1124: 95 17 48 10              a0 = sp + 0x1048
  1128: 33 08                    a1 = 0
  1130: 7b 19 08                 u64 [sp + 0x8] = a2
  1133: 50 10 2a 3c 0b           ra = 42, jump @287
      :                          @66 [@dyn 21]
  1138: 95 17 98 20              a0 = sp + 0x2098
  1142: 33 08 20                 a1 = 0x20
  1145: 33 09 ef 03              a2 = 0x3ef
  1149: 50 10 2c 2c 0b           ra = 44, jump @287
      :                          @67 [@dyn 22]
  1154: 95 17 87 24              a0 = sp + 0x2487
  1158: 95 18 40                 a1 = sp + 0x40
  1161: 33 09 11 04              a2 = 0x411
  1165: 7b 19 10                 u64 [sp + 0x10] = a2
  1168: 50 10 2e 67 0a           ra = 46, jump @269
      :                          @68 [@dyn 23]
  1173: 33 00 ef 03              ra = 0x3ef
  1177: 95 16 98 20              s1 = sp + 0x2098
  1181: 33 03 00 10              t1 = 0x1000
  1185: 33 0c                    a5 = 0
  1187: 33 07                    a0 = 0
  1189: 33 02                    t0 = 0
  1191: 49 11 20                 u64 [sp + 32] = 0
  1194: 33 05 00 08              s0 = 0x800
  1198: 28 0c                    jump @70
      :                          @69
  1200: 82 1c 30                 a5 = u64 [sp + 0x30]
  1203: 82 15 18                 s0 = u64 [sp + 0x18]
  1206: ae 50 d1 01              jump @101 if ra >=u s0
      :                          @70
  1210: 7b 12 38                 u64 [sp + 0x38] = t0
  1213: 7b 1c 30                 u64 [sp + 0x30] = a5
  1216: 64 79                    a2 = a0
  1218: 7b 15 18                 u64 [sp + 0x18] = s0
  1221: c9 05 07                 a0 = s0 - ra
  1224: 33 08 11                 a1 = 0x11
  1227: e6 87 08                 a1 = minu(a0, a1)
  1230: c8 06 07                 a0 = s1 + ra
  1233: 7c 72                    t0 = u8 [a0]
  1235: 7b 19 28                 u64 [sp + 0x28] = a2
  1238: d8 09 07                 a0 = a2 <u ra
  1241: 85 77 01                 a0 = a0 ^ 0x1
  1244: 88 8a 02                 a3 = a1 <u 0x2
  1247: d4 a7 07                 a0 = a0 | a3
  1250: 52 07 4c                 jump @80 if a0 != 0
      :                          @71
  1253: 33 0a                    a3 = 0
  1255: 33 04 01                 t2 = 0x1
  1258: 64 05                    s0 = ra
  1260: 82 17 28                 a0 = u64 [sp + 0x28]
  1263: 28 0f                    jump @74
      :                          @72
  1265: d8 94 0b                 a4 = t2 <u a2
  1268: e4 49 04                 t2 = maxu(a2, t2)
  1271: db b5 0a                 a3 = s0 if a4 != 0
  1274: 01                       fallthrough
      :                          @73
  1275: ae 57 2f                 jump @79 if a0 >=u s0
      :                          @74
  1278: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  1281: c8 56 0c                 a5 = s1 + s0
  1284: 7c cc                    a5 = u8 [a5]
  1286: ab 2c f5                 jump @73 if a5 != t0
      :                          @75
  1289: 33 09 01                 a2 = 0x1
  1292: 01                       fallthrough
      :                          @76
  1293: c8 59 0b                 a4 = a2 + s0
  1296: c8 6b 0b                 a4 = a4 + s1
  1299: 7c bb                    a4 = u8 [a4]
  1301: c8 09 0c                 a5 = a2 + ra
  1304: c8 6c 0c                 a5 = a5 + s1
  1307: 7c cc                    a5 = u8 [a5]
  1309: ab cb d4                 jump @72 if a4 != a5
      :                          @77
  1312: 95 99 01                 a2 = a2 + 0x1
  1315: ab 89 ea                 jump @76 if a2 != a1
      :                          @78
  1318: 64 89                    a2 = a1
  1320: 28 c9                    jump @72
      :                          @79
  1322: 55 14 02 5f              jump @85 if t2 >=u 2
      :                          @80
  1326: 82 17 38                 a0 = u64 [sp + 0x38]
  1329: 8a 77 09                 i32 a0 = a0 << 0x9
  1332: d4 27 07                 a0 = a0 | t0
  1335: 95 72 00 01              t0 = a0 + 0x100
  1339: 82 1a 20                 a3 = u64 [sp + 0x20]
  1342: 95 a8 09                 a1 = a3 + 0x9
  1345: 84 89 ff 00              a2 = a1 & 0xff
  1349: 33 04 01                 t2 = 0x1
  1352: 53 19 08 9f 00           jump @90 if a2 <u 8
      :                          @81
  1357: 83 a9 01                 i32 a2 = a3 + 0x1
  1360: 97 99 38                 a2 = a2 << 0x38
  1363: 98 99 3b                 a2 = a2 >> 0x3b
  1366: 82 17 30                 a0 = u64 [sp + 0x30]
  1369: c8 79 09                 a2 = a2 + a0
  1372: 95 99 01                 a2 = a2 + 0x1
  1375: 01                       fallthrough
      :                          @82
  1376: 83 3a 08                 i32 a3 = t1 + 0x8
  1379: aa a7 3c 01              jump @103 if a0 == a3
      :                          @83
  1383: 95 1a 48 10              a3 = sp + 0x1048
  1387: c8 7a 0a                 a3 = a3 + a0
  1390: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  1393: c6 82 0b                 i32 a4 = t0 >> a1
  1396: 95 77 01                 a0 = a0 + 0x1
  1399: 84 7c ff 00              a5 = a0 & 0xff
  1403: 84 95 ff 00              s0 = a2 & 0xff
  1407: 78 ab                    u8 [a3] = a4
  1409: ab c5 df                 jump @82 if s0 != a5
      :                          @84
  1412: 7b 17 30                 u64 [sp + 0x30] = a0
  1415: 28 60                    jump @90
      :                          @85
  1417: 97 aa 36                 a3 = a3 << 0x36
  1420: 98 aa 32                 a3 = a3 >> 0x32
  1423: 83 48 fe                 i32 a1 = t2 + 0xfffffffffffffffe
  1426: 82 17 38                 a0 = u64 [sp + 0x38]
  1429: 8a 79 0f                 i32 a2 = a0 << 0xf
  1432: d4 89 09                 a2 = a2 | a1
  1435: 82 1c 20                 a5 = u64 [sp + 0x20]
  1438: 95 c8 0f                 a1 = a5 + 0xf
  1441: 84 8b ff 00              a4 = a1 & 0xff
  1445: d4 a9 02                 t0 = a2 | a3
  1448: 53 1b 08 3f              jump @90 if a4 <u 8
      :                          @86
  1452: 83 c9 07                 i32 a2 = a5 + 0x7
  1455: 97 99 38                 a2 = a2 << 0x38
  1458: 98 99 3b                 a2 = a2 >> 0x3b
  1461: 82 1b 30                 a4 = u64 [sp + 0x30]
  1464: c8 b9 09                 a2 = a2 + a4
  1467: 95 99 01                 a2 = a2 + 0x1
  1470: 01                       fallthrough
      :                          @87
  1471: 83 3a 08                 i32 a3 = t1 + 0x8
  1474: aa ab dd 00              jump @103 if a4 == a3
      :                          @88
  1478: 95 1a 48 10              a3 = sp + 0x1048
  1482: c8 ba 0a                 a3 = a3 + a4
  1485: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  1488: c6 82 07                 i32 a0 = t0 >> a1
  1491: 95 bb 01                 a4 = a4 + 0x1
  1494: 84 bc ff 00              a5 = a4 & 0xff
  1498: 84 95 ff 00              s0 = a2 & 0xff
  1502: 78 a7                    u8 [a3] = a0
  1504: ab c5 df                 jump @87 if s0 != a5
      :                          @89
  1507: 7b 1b 30                 u64 [sp + 0x30] = a4
  1510: 01                       fallthrough
      :                          @90
  1511: 64 89                    a2 = a1
  1513: 82 17 28                 a0 = u64 [sp + 0x28]
  1516: c8 40 00                 ra = ra + t2
  1519: c8 47 07                 a0 = a0 + t2
  1522: 7b 19 20                 u64 [sp + 0x20] = a2
  1525: 53 20 ef 07 bb fe        jump @69 if ra <u 2031
      :                          @91
  1531: 7b 12 38                 u64 [sp + 0x38] = t0
  1534: 64 76                    s1 = a0
  1536: 95 17 98 20              a0 = sp + 0x2098
  1540: 33 09 00 04              a2 = 0x400
  1544: 95 18 98 24              a1 = sp + 0x2498
  1548: 64 05                    s0 = ra
  1550: 50 10 30 e9 08           ra = 48, jump @269
      :                          @92 [@dyn 24]
  1555: 64 50                    ra = s0
  1557: 82 15 18                 s0 = u64 [sp + 0x18]
  1560: 95 55 00 fc              s0 = s0 + 0xfffffffffffffc00
  1564: 95 00 00 fc              ra = ra + 0xfffffffffffffc00
  1568: 95 67 00 fc              a0 = s1 + 0xfffffffffffffc00
  1572: 56 25 ff 07 46           jump @98 if s0 >u 2047
      :                          @93
  1577: 64 74                    t2 = a0
  1579: 33 03 00 10              t1 = 0x1000
  1583: 82 19 08                 a2 = u64 [sp + 0x8]
  1586: 95 16 98 20              s1 = sp + 0x2098
  1590: 95 1a 40                 a3 = sp + 0x40
  1593: 82 1b 10                 a4 = u64 [sp + 0x10]
  1596: 82 1c 30                 a5 = u64 [sp + 0x30]
  1599: 82 12 38                 t0 = u64 [sp + 0x38]
  1602: 01                       fallthrough
      :                          @94
  1603: aa 9b 3b                 jump @100 if a4 == a2
      :                          @95
  1606: c8 ba 07                 a0 = a3 + a4
  1609: 7c 77                    a0 = u8 [a0]
  1611: c8 56 08                 a1 = s1 + s0
  1614: 78 87                    u8 [a1] = a0
  1616: 95 55 01                 s0 = s0 + 0x1
  1619: 83 37 00 f8              i32 a0 = t1 + 0xfffffffffffff800
  1623: 95 bb 01                 a4 = a4 + 0x1
  1626: ab 75 e9                 jump @94 if s0 != a0
      :                          @96
  1629: 7b 1b 10                 u64 [sp + 0x10] = a4
  1632: 64 75                    s0 = a0
  1634: 64 47                    a0 = t2
  1636: ac 50 56 fe              jump @70 if ra <u s0
      :                          @97
  1640: 28 1f                    jump @101
      :                          @98
  1642: 33 03 00 10              t1 = 0x1000
  1646: 95 16 98 20              s1 = sp + 0x2098
  1650: 82 1c 30                 a5 = u64 [sp + 0x30]
  1653: 82 12 38                 t0 = u64 [sp + 0x38]
  1656: ac 50 42 fe              jump @70 if ra <u s0
      :                          @99
  1660: 28 0b                    jump @101
      :                          @100
  1662: 7b 19 10                 u64 [sp + 0x10] = a2
  1665: 64 47                    a0 = t2
  1667: ac 50 37 fe              jump @70 if ra <u s0
      :                          @101
  1671: 95 17 48 10              a0 = sp + 0x1048
  1675: 82 1a 20                 a3 = u64 [sp + 0x20]
  1678: 84 a9 ff 00              a2 = a3 & 0xff
  1682: c8 c7 08                 a1 = a0 + a5
  1685: 51 09 97 03              jump @160 if a2 == 0
      :                          @102
  1689: 52 2c 08 10 80 03        jump @159 if a5 != 4104
      :                          @103
  1695: 33 09 01                 a2 = 0x1
  1698: 01                       fallthrough
      :                          @104
  1699: 49 11 38 ff ff fe        u64 [sp + 56] = 0xfffffffffffeffff
  1705: 95 16 50 20              s1 = sp + 0x2050
  1709: 7b 69                    u64 [s1] = a2
  1711: 7b 68 08                 u64 [s1 + 0x8] = a1
  1714: 7b 66 38                 u64 [s1 + 0x38] = s1
  1717: 33 07 24                 a0 = 0x24
  1720: 7b 67 40                 u64 [s1 + 0x40] = a0
  1723: 33 07 28 00 01           a0 = 0x10028
  1728: 7b 67 48                 u64 [s1 + 0x48] = a0
  1731: 49 16 50 01              u64 [s1 + 80] = 0x1
  1735: 49 16 68                 u64 [s1 + 104] = 0
  1738: 95 18 88 20              a1 = sp + 0x2088
  1742: 7b 68 58                 u64 [s1 + 0x58] = a1
  1745: 49 16 60 01              u64 [s1 + 96] = 0x1
  1749: 95 17 70 20              a0 = sp + 0x2070
  1753: 95 18 98 20              a1 = sp + 0x2098
  1757: 50 10 32 a6 05           ra = 50, jump @219
      :                          @105 [@dyn 25]
  1762: 82 65 28                 s0 = u64 [s1 + 0x28]
  1765: 82 6b 30                 a4 = u64 [s1 + 0x30]
  1768: 82 66 20                 s1 = u64 [s1 + 0x20]
  1771: 33 07 02                 a0 = 0x2
  1774: 33 08                    a1 = 0
  1776: 33 09                    a2 = 0
  1778: 64 5a                    a3 = s0
  1780: 33 00 34                 ra = 0x34
  1783: 0a 64                    ecalli 100 // 'log'
  1785: 01                       fallthrough
      :                          @106 [@dyn 26]
  1786: 82 17 38                 a0 = u64 [sp + 0x38]
  1789: c8 67 07                 a0 = a0 + s1
  1792: 53 37 00 00 ff 27        jump @112 if a0 <u 4294901760
      :                          @107
  1798: 33 07 40 00 03           a0 = 0x30040
  1803: 95 77 00 00 01           a0 = a0 + 0x10000
  1808: 01                       fallthrough
      :                          @108
  1809: 82 78                    a1 = u64 [a0]
  1811: c9 87 09                 a2 = a0 - a1
  1814: ab 59 11                 jump @112 if a2 != s0
      :                          @109
  1817: c9 68 09                 a2 = a1 - s1
  1820: 01                       fallthrough
      :                          @110
  1821: 82 7a                    a3 = u64 [a0]
  1823: ab 8a f2                 jump @108 if a3 != a1
      :                          @111
  1826: 7b 79                    u64 [a0] = a2
  1828: 33 0b                    a4 = 0
  1830: 01                       fallthrough
      :                          @112
  1831: 95 17 48 10              a0 = sp + 0x1048
  1835: 95 16 50 20              s1 = sp + 0x2050
  1839: 7b 67 38                 u64 [s1 + 0x38] = a0
  1842: 33 07 0e                 a0 = 0xe
  1845: 7b 67 40                 u64 [s1 + 0x40] = a0
  1848: 33 07 50 00 01           a0 = 0x10050
  1853: 7b 67 48                 u64 [s1 + 0x48] = a0
  1856: 49 16 50 01              u64 [s1 + 80] = 0x1
  1860: 49 16 68                 u64 [s1 + 104] = 0
  1863: 95 18 88 20              a1 = sp + 0x2088
  1867: 7b 68 58                 u64 [s1 + 0x58] = a1
  1870: 49 16 60 01              u64 [s1 + 96] = 0x1
  1874: 95 17 70 20              a0 = sp + 0x2070
  1878: 95 18 98 20              a1 = sp + 0x2098
  1882: 50 10 36 29 05           ra = 54, jump @219
      :                          @113 [@dyn 27]
  1887: 82 65 28                 s0 = u64 [s1 + 0x28]
  1890: 82 6b 30                 a4 = u64 [s1 + 0x30]
  1893: 82 66 20                 s1 = u64 [s1 + 0x20]
  1896: 33 07 02                 a0 = 0x2
  1899: 33 08                    a1 = 0
  1901: 33 09                    a2 = 0
  1903: 64 5a                    a3 = s0
  1905: 33 00 38                 ra = 0x38
  1908: 0a 64                    ecalli 100 // 'log'
  1910: 01                       fallthrough
      :                          @114 [@dyn 28]
  1911: 82 17 38                 a0 = u64 [sp + 0x38]
  1914: c8 67 07                 a0 = a0 + s1
  1917: 53 37 00 00 ff 27        jump @120 if a0 <u 4294901760
      :                          @115
  1923: 33 07 40 00 03           a0 = 0x30040
  1928: 95 77 00 00 01           a0 = a0 + 0x10000
  1933: 01                       fallthrough
      :                          @116
  1934: 82 78                    a1 = u64 [a0]
  1936: c9 87 09                 a2 = a0 - a1
  1939: ab 59 11                 jump @120 if a2 != s0
      :                          @117
  1942: c9 68 09                 a2 = a1 - s1
  1945: 01                       fallthrough
      :                          @118
  1946: 82 7a                    a3 = u64 [a0]
  1948: ab 8a f2                 jump @116 if a3 != a1
      :                          @119
  1951: 7b 79                    u64 [a0] = a2
  1953: 33 0b                    a4 = 0
  1955: 01                       fallthrough
      :                          @120
  1956: 95 17 98 20              a0 = sp + 0x2098
  1960: 33 08 20                 a1 = 0x20
  1963: 33 09 00 04              a2 = 0x400
  1967: 50 10 3a fa 07           ra = 58, jump @287
      :                          @121 [@dyn 29]
  1972: 33 0b                    a4 = 0
  1974: 33 06                    s1 = 0
  1976: 33 0a                    a3 = 0
  1978: 33 04                    t2 = 0
  1980: 33 05 ef 03              s0 = 0x3ef
  1984: 33 02 08                 t0 = 0x8
  1987: 33 00 00 10              ra = 0x1000
  1991: 33 03 08 10              t1 = 0x1008
  1995: 7b 13 20                 u64 [sp + 0x20] = t1
  1998: 01                       fallthrough
      :                          @122
  1999: 84 ac ff 00              a5 = a3 & 0xff
  2003: ac c2 6c                 jump @130 if t0 <u a5
      :                          @123
  2006: aa 36 15 01              jump @139 if s1 == t1
      :                          @124
  2010: 95 17 48 10              a0 = sp + 0x1048
  2014: c8 67 07                 a0 = a0 + s1
  2017: 7c 77                    a0 = u8 [a0]
  2019: 95 62 01                 t0 = s1 + 0x1
  2022: 8a 49 08                 i32 a2 = t2 << 0x8
  2025: d4 79 04                 t2 = a2 | a0
  2028: 52 0c 1d                 jump @127 if a5 != 0
      :                          @125
  2031: aa 32 fc 00              jump @139 if t0 == t1
      :                          @126
  2035: 95 18 48 10              a1 = sp + 0x1048
  2039: c8 28 07                 a0 = a1 + t0
  2042: 7c 77                    a0 = u8 [a0]
  2044: 8a 49 08                 i32 a2 = t2 << 0x8
  2047: d4 79 04                 t2 = a2 | a0
  2050: 95 62 02                 t0 = s1 + 0x2
  2053: 33 0a 08                 a3 = 0x8
  2056: 01                       fallthrough
      :                          @127
  2057: 95 ac 08                 a5 = a3 + 0x8
  2060: 64 26                    s1 = t0
  2062: 33 02 08                 t0 = 0x8
  2065: 95 ca f7                 a3 = a5 + 0xfffffffffffffff7
  2068: c6 a4 07                 i32 a0 = t2 >> a3
  2071: 84 79 00 01              a2 = a0 & 0x100
  2075: 51 09 33                 jump @131 if a2 == 0
      :                          @128
  2078: aa 3b d1 00              jump @140 if a4 == t1
      :                          @129
  2082: 95 18 40                 a1 = sp + 0x40
  2085: c8 b8 08                 a1 = a1 + a4
  2088: 78 87                    u8 [a1] = a0
  2090: 95 bb 01                 a4 = a4 + 0x1
  2093: 95 18 98 20              a1 = sp + 0x2098
  2097: c8 58 08                 a1 = a1 + s0
  2100: 78 87                    u8 [a1] = a0
  2102: 83 55 01                 i32 s0 = s0 + 0x1
  2105: 84 55 ff 03              s0 = s0 & 0x3ff
  2109: 28 92                    jump @122
      :                          @130
  2111: 64 ac                    a5 = a3
  2113: 95 aa f7                 a3 = a3 + 0xfffffffffffffff7
  2116: c6 a4 07                 i32 a0 = t2 >> a3
  2119: 84 79 00 01              a2 = a0 & 0x100
  2123: 52 09 d3                 jump @128 if a2 != 0
      :                          @131
  2126: 84 a9 ff 00              a2 = a3 & 0xff
  2130: 56 19 05 22              jump @134 if a2 >u 5
      :                          @132
  2134: aa 36 95 00              jump @139 if s1 == t1
      :                          @133
  2138: 95 19 48 10              a2 = sp + 0x1048
  2142: c8 69 09                 a2 = a2 + s1
  2145: 7c 99                    a2 = u8 [a2]
  2147: 95 66 01                 s1 = s1 + 0x1
  2150: 7b 16 28                 u64 [sp + 0x28] = s1
  2153: 8a 4a 08                 i32 a3 = t2 << 0x8
  2156: d4 9a 04                 t2 = a3 | a2
  2159: 95 ca ff                 a3 = a5 + 0xffffffffffffffff
  2162: 28 06                    jump @135
      :                          @134
  2164: 7b 16 28                 u64 [sp + 0x28] = s1
  2167: 01                       fallthrough
      :                          @135
  2168: 33 02                    t0 = 0
  2170: 95 aa fa                 a3 = a3 + 0xfffffffffffffffa
  2173: 7b 14 30                 u64 [sp + 0x30] = t2
  2176: c6 a4 09                 i32 a2 = t2 >> a3
  2179: 84 9c 30                 a5 = a2 & 0x30
  2182: 97 77 38                 a0 = a0 << 0x38
  2185: 98 77 32                 a0 = a0 >> 0x32
  2188: d4 c7 07                 a0 = a0 | a5
  2191: 98 77 04                 a0 = a0 >> 0x4
  2194: 84 99 0f                 a2 = a2 & 0xf
  2197: 95 96 01                 s1 = a2 + 0x1
  2200: 64 bc                    a5 = a4
  2202: 01                       fallthrough
      :                          @136
  2203: 83 09 08                 i32 a2 = ra + 0x8
  2206: aa 9c 58                 jump @141 if a5 == a2
      :                          @137
  2209: be 72 09                 i32 a2 = t0 + a0
  2212: 84 99 ff 03              a2 = a2 & 0x3ff
  2216: 95 14 98 20              t2 = sp + 0x2098
  2220: c8 49 09                 a2 = a2 + t2
  2223: 7c 99                    a2 = u8 [a2]
  2225: 95 18 40                 a1 = sp + 0x40
  2228: c8 c8 08                 a1 = a1 + a5
  2231: d8 62 03                 t1 = t0 <u s1
  2234: c8 32 02                 t0 = t0 + t1
  2237: 78 89                    u8 [a1] = a2
  2239: 95 cc 01                 a5 = a5 + 0x1
  2242: c8 54 08                 a1 = t2 + s0
  2245: 78 89                    u8 [a1] = a2
  2247: 83 55 01                 i32 s0 = s0 + 0x1
  2250: d8 26 08                 a1 = s1 <u t0
  2253: 85 88 01                 a1 = a1 ^ 0x1
  2256: d2 83 08                 a1 = t1 & a1
  2259: 84 55 ff 03              s0 = s0 & 0x3ff
  2263: 52 08 c4                 jump @136 if a1 != 0
      :                          @138
  2266: 64 cb                    a4 = a5
  2268: 33 02 08                 t0 = 0x8
  2271: 82 13 20                 t1 = u64 [sp + 0x20]
  2274: 82 14 30                 t2 = u64 [sp + 0x30]
  2277: 82 16 28                 s1 = u64 [sp + 0x28]
  2280: 28 e7 fe                 jump @122
      :                          @139
  2283: 33 07                    a0 = 0
  2285: 28 0d                    jump @142
      :                          @140
  2287: 64 3b                    a4 = t1
  2289: 33 07 01                 a0 = 0x1
  2292: 28 06                    jump @142
      :                          @141
  2294: 33 07 01                 a0 = 0x1
  2297: 01                       fallthrough
      :                          @142
  2298: 95 16 50 20              s1 = sp + 0x2050
  2302: 7b 67 10                 u64 [s1 + 0x10] = a0
  2305: 7b 6b 18                 u64 [s1 + 0x18] = a4
  2308: 95 17 60 20              a0 = sp + 0x2060
  2312: 7b 67 38                 u64 [s1 + 0x38] = a0
  2315: 33 07 24                 a0 = 0x24
  2318: 7b 67 40                 u64 [s1 + 0x40] = a0
  2321: 33 07 78 00 01           a0 = 0x10078
  2326: 7b 67 48                 u64 [s1 + 0x48] = a0
  2329: 49 16 50 01              u64 [s1 + 80] = 0x1
  2333: 49 16 68                 u64 [s1 + 104] = 0
  2336: 95 18 88 20              a1 = sp + 0x2088
  2340: 7b 68 58                 u64 [s1 + 0x58] = a1
  2343: 49 16 60 01              u64 [s1 + 96] = 0x1
  2347: 95 17 70 20              a0 = sp + 0x2070
  2351: 95 18 98 20              a1 = sp + 0x2098
  2355: 50 10 3c 50 03           ra = 60, jump @219
      :                          @143 [@dyn 30]
  2360: 82 65 28                 s0 = u64 [s1 + 0x28]
  2363: 82 6b 30                 a4 = u64 [s1 + 0x30]
  2366: 82 66 20                 s1 = u64 [s1 + 0x20]
  2369: 33 07 02                 a0 = 0x2
  2372: 33 08                    a1 = 0
  2374: 33 09                    a2 = 0
  2376: 64 5a                    a3 = s0
  2378: 33 00 3e                 ra = 0x3e
  2381: 0a 64                    ecalli 100 // 'log'
  2383: 01                       fallthrough
      :                          @144 [@dyn 31]
  2384: 82 17 38                 a0 = u64 [sp + 0x38]
  2387: c8 67 07                 a0 = a0 + s1
  2390: 53 37 00 00 ff 27        jump @150 if a0 <u 4294901760
      :                          @145
  2396: 33 07 40 00 03           a0 = 0x30040
  2401: 95 77 00 00 01           a0 = a0 + 0x10000
  2406: 01                       fallthrough
      :                          @146
  2407: 82 78                    a1 = u64 [a0]
  2409: c9 87 09                 a2 = a0 - a1
  2412: ab 59 11                 jump @150 if a2 != s0
      :                          @147
  2415: c9 68 09                 a2 = a1 - s1
  2418: 01                       fallthrough
      :                          @148
  2419: 82 7a                    a3 = u64 [a0]
  2421: ab 8a f2                 jump @146 if a3 != a1
      :                          @149
  2424: 7b 79                    u64 [a0] = a2
  2426: 33 0b                    a4 = 0
  2428: 01                       fallthrough
      :                          @150
  2429: 95 17 40                 a0 = sp + 0x40
  2432: 95 16 50 20              s1 = sp + 0x2050
  2436: 7b 67 38                 u64 [s1 + 0x38] = a0
  2439: 33 07 0e                 a0 = 0xe
  2442: 7b 67 40                 u64 [s1 + 0x40] = a0
  2445: 33 07 a0 00 01           a0 = 0x100a0
  2450: 7b 67 48                 u64 [s1 + 0x48] = a0
  2453: 49 16 50 01              u64 [s1 + 80] = 0x1
  2457: 49 16 68                 u64 [s1 + 104] = 0
  2460: 95 18 88 20              a1 = sp + 0x2088
  2464: 7b 68 58                 u64 [s1 + 0x58] = a1
  2467: 49 16 60 01              u64 [s1 + 96] = 0x1
  2471: 95 17 70 20              a0 = sp + 0x2070
  2475: 95 18 98 20              a1 = sp + 0x2098
  2479: 50 10 40 d4 02           ra = 64, jump @219
      :                          @151 [@dyn 32]
  2484: 82 65 28                 s0 = u64 [s1 + 0x28]
  2487: 82 6b 30                 a4 = u64 [s1 + 0x30]
  2490: 82 66 20                 s1 = u64 [s1 + 0x20]
  2493: 33 07 02                 a0 = 0x2
  2496: 33 08                    a1 = 0
  2498: 33 09                    a2 = 0
  2500: 64 5a                    a3 = s0
  2502: 33 00 42                 ra = 0x42
  2505: 0a 64                    ecalli 100 // 'log'
  2507: 01                       fallthrough
      :                          @152 [@dyn 33]
  2508: 82 17 38                 a0 = u64 [sp + 0x38]
  2511: c8 67 07                 a0 = a0 + s1
  2514: 53 37 00 00 ff 27        jump @158 if a0 <u 4294901760
      :                          @153
  2520: 33 07 40 00 03           a0 = 0x30040
  2525: 95 77 00 00 01           a0 = a0 + 0x10000
  2530: 01                       fallthrough
      :                          @154
  2531: 82 78                    a1 = u64 [a0]
  2533: c9 87 09                 a2 = a0 - a1
  2536: ab 59 11                 jump @158 if a2 != s0
      :                          @155
  2539: c9 68 09                 a2 = a1 - s1
  2542: 01                       fallthrough
      :                          @156
  2543: 82 7a                    a3 = u64 [a0]
  2545: ab 8a f2                 jump @154 if a3 != a1
      :                          @157
  2548: 7b 79                    u64 [a0] = a2
  2550: 33 0b                    a4 = 0
  2552: 01                       fallthrough
      :                          @158
  2553: 33 07 00 00 01           a0 = 0x10000
  2558: 33 08                    a1 = 0
  2560: 33 09 b8 20              a2 = 0x20b8
  2564: c8 91 01                 sp = sp + a2
  2567: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  2571: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  2575: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  2579: 95 11 f8 07              sp = sp + 0x7f8
  2583: 32 00                    ret
      :                          @159
  2585: 8d a9 08                 i32 a2 = 0x8 - a3
  2588: c5 92 09                 i32 a2 = t0 << a2
  2591: 78 89                    u8 [a1] = a2
  2593: 95 88 01                 a1 = a1 + 0x1
  2596: 33 09                    a2 = 0
  2598: c9 78 08                 a1 = a1 - a0
  2601: 28 7a fc                 jump @104
      :                          @160
  2604: 33 09                    a2 = 0
  2606: c9 78 08                 a1 = a1 - a0
  2609: 28 72 fc                 jump @104
      :                          @161 [export #1: 'accumulate']
  2612: 33 07 00 00 01           a0 = 0x10000
  2617: 33 08                    a1 = 0
  2619: 32 00                    ret
      :                          @162 [export #2: 'on_transfer']
  2621: 33 07 00 00 01           a0 = 0x10000
  2626: 33 08                    a1 = 0
  2628: 32 00                    ret
      :                          @163
  2630: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2633: 7b 10 40                 u64 [sp + 0x40] = ra
  2636: 7b 15 38                 u64 [sp + 0x38] = s0
  2639: 7b 16 30                 u64 [sp + 0x30] = s1
  2642: c8 89 09                 a2 = a2 + a1
  2645: ac 89 52                 jump @171 if a2 <u a1
      :                          @164
  2648: 64 75                    s0 = a0
  2650: 82 77                    a0 = u64 [a0]
  2652: 97 78 01                 a1 = a0 << 0x1
  2655: 33 0a 08                 a3 = 0x8
  2658: e4 a9 09                 a2 = maxu(a2, a3)
  2661: e4 98 06                 s1 = maxu(a1, a2)
  2664: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2667: 98 88 3f                 a1 = a1 >> 0x3f
  2670: 51 07 12                 jump @166 if a0 == 0
      :                          @165
  2673: 82 59 08                 a2 = u64 [s0 + 0x8]
  2676: 7b 19 18                 u64 [sp + 0x18] = a2
  2679: 49 11 20 01              u64 [sp + 32] = 0x1
  2683: 7b 17 28                 u64 [sp + 0x28] = a0
  2686: 28 06                    jump @167
      :                          @166
  2688: 49 11 20                 u64 [sp + 32] = 0
  2691: 01                       fallthrough
      :                          @167
  2692: 64 17                    a0 = sp
  2694: 95 1a 18                 a3 = sp + 0x18
  2697: 64 69                    a2 = s1
  2699: 50 10 44 32              ra = 68, jump @175
      :                          @168 [@dyn 34]
  2703: 82 18                    a1 = u64 [sp]
  2705: 82 17 08                 a0 = u64 [sp + 0x8]
  2708: 51 08 14                 jump @172 if a1 == 0
      :                          @169
  2711: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2721: aa 87 0d                 jump @173 if a0 == a1
      :                          @170
  2724: 52 07 18                 jump @174 if a0 != 0
      :                          @171
  2727: 00                       trap
      :                          @172
  2728: 7b 57 08                 u64 [s0 + 0x8] = a0
  2731: 7b 56                    u64 [s0] = s1
  2733: 01                       fallthrough
      :                          @173
  2734: 82 10 40                 ra = u64 [sp + 0x40]
  2737: 82 15 38                 s0 = u64 [sp + 0x38]
  2740: 82 16 30                 s1 = u64 [sp + 0x30]
  2743: 95 11 48                 sp = sp + 0x48
  2746: 32 00                    ret
      :                          @174
  2748: 00                       trap
      :                          @175
  2749: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2752: 7b 10 30                 u64 [sp + 0x30] = ra
  2755: 7b 15 28                 u64 [sp + 0x28] = s0
  2758: 7b 16 20                 u64 [sp + 0x20] = s1
  2761: 64 95                    s0 = a2
  2763: 64 72                    t0 = a0
  2765: 51 08 79                 jump @185 if a1 == 0
      :                          @176
  2768: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2771: 51 07 7c                 jump @186 if a0 == 0
      :                          @177
  2774: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2777: 51 09 aa 00              jump @193 if a2 == 0
      :                          @178
  2781: 82 a8                    a1 = u64 [a3]
  2783: 33 06 40 00 03           s1 = 0x30040
  2788: 33 03 00 00 01           t1 = 0x10000
  2793: c8 36 06                 s1 = s1 + t1
  2796: 01                       fallthrough
      :                          @179
  2797: 82 6a                    a3 = u64 [s1]
  2799: c8 5a 07                 a0 = a3 + s0
  2802: ac a7 cf 00              jump @199 if a0 <u a3
      :                          @180
  2806: 95 7b 01                 a4 = a0 + 0x1
  2809: 88 bc 01                 a5 = a4 <u 0x1
  2812: d8 b3 0b                 a4 = t1 <u a4
  2815: d4 cb 0b                 a4 = a4 | a5
  2818: 52 0b bf 00              jump @199 if a4 != 0
      :                          @181
  2822: 82 6b                    a4 = u64 [s1]
  2824: ab ab e5                 jump @179 if a4 != a3
      :                          @182
  2827: 7b 67                    u64 [s1] = a0
  2829: 33 0c                    a5 = 0
  2831: 7b 12 18                 u64 [sp + 0x18] = t0
  2834: 33 0a 40 00 03           a3 = 0x30040
  2839: 33 0b 00 00 01           a4 = 0x10000
  2844: 7b 1a                    u64 [sp] = a3
  2846: c8 ba 0a                 a3 = a3 + a4
  2849: c9 7a 07                 a0 = a3 - a0
  2852: 7b 17 10                 u64 [sp + 0x10] = a0
  2855: 7b 18 08                 u64 [sp + 0x8] = a1
  2858: 64 96                    s1 = a2
  2860: 50 10 46 cb 03           ra = 70, jump @269
      :                          @183 [@dyn 35]
  2865: 54 36 00 00 01 98 00     jump @200 if s1 <=u 65536
      :                          @184
  2872: 82 12 18                 t0 = u64 [sp + 0x18]
  2875: 82 18 10                 a1 = u64 [sp + 0x10]
  2878: 33 07                    a0 = 0
  2880: 7b 28 08                 u64 [t0 + 0x8] = a1
  2883: 28 b5 00                 jump @206
      :                          @185
  2886: 49 12 08                 u64 [t0 + 8] = 0
  2889: 33 07 01                 a0 = 0x1
  2892: 28 ac 00                 jump @206
      :                          @186
  2895: 33 09 40 00 03           a2 = 0x30040
  2900: 33 07 00 00 01           a0 = 0x10000
  2905: c8 79 09                 a2 = a2 + a0
  2908: 01                       fallthrough
      :                          @187
  2909: 82 9a                    a3 = u64 [a2]
  2911: c8 5a 08                 a1 = a3 + s0
  2914: ac a8 5f                 jump @199 if a1 <u a3
      :                          @188
  2917: 95 8b 01                 a4 = a1 + 0x1
  2920: 88 bc 01                 a5 = a4 <u 0x1
  2923: d8 b7 0b                 a4 = a0 <u a4
  2926: d4 cb 0b                 a4 = a4 | a5
  2929: 52 0b 50                 jump @199 if a4 != 0
      :                          @189
  2932: 82 9b                    a4 = u64 [a2]
  2934: ab ab e7                 jump @187 if a4 != a3
      :                          @190
  2937: 7b 98                    u64 [a2] = a1
  2939: 33 0c                    a5 = 0
  2941: 01                       fallthrough
      :                          @191
  2942: ab ab df                 jump @187 if a4 != a3
      :                          @192
  2945: 28 31                    jump @198
      :                          @193
  2947: 33 09 40 00 03           a2 = 0x30040
  2952: 33 07 00 00 01           a0 = 0x10000
  2957: c8 79 09                 a2 = a2 + a0
  2960: 01                       fallthrough
      :                          @194
  2961: 82 9a                    a3 = u64 [a2]
  2963: c8 5a 08                 a1 = a3 + s0
  2966: ac a8 2b                 jump @199 if a1 <u a3
      :                          @195
  2969: 95 8b 01                 a4 = a1 + 0x1
  2972: 88 bc 01                 a5 = a4 <u 0x1
  2975: d8 b7 0b                 a4 = a0 <u a4
  2978: d4 cb 0b                 a4 = a4 | a5
  2981: 52 0b 1c                 jump @199 if a4 != 0
      :                          @196
  2984: 82 9b                    a4 = u64 [a2]
  2986: ab ab e7                 jump @194 if a4 != a3
      :                          @197
  2989: 7b 98                    u64 [a2] = a1
  2991: 33 0c                    a5 = 0
  2993: 01                       fallthrough
      :                          @198
  2994: 33 07 40 00 04           a0 = 0x40040
  2999: c9 87 08                 a1 = a0 - a1
  3002: 33 07                    a0 = 0
  3004: 7b 28 08                 u64 [t0 + 0x8] = a1
  3007: 28 39                    jump @206
      :                          @199
  3009: 33 07 01                 a0 = 0x1
  3012: 7b 27 08                 u64 [t0 + 0x8] = a0
  3015: 28 31                    jump @206
      :                          @200
  3017: 64 6c                    a5 = s1
  3019: 82 17                    a0 = u64 [sp]
  3021: 95 77 00 00 01           a0 = a0 + 0x10000
  3026: 82 12 18                 t0 = u64 [sp + 0x18]
  3029: 82 16 08                 s1 = u64 [sp + 0x8]
  3032: 01                       fallthrough
      :                          @201
  3033: 82 78                    a1 = u64 [a0]
  3035: c9 87 09                 a2 = a0 - a1
  3038: ab 69 11                 jump @205 if a2 != s1
      :                          @202
  3041: c9 c8 09                 a2 = a1 - a5
  3044: 01                       fallthrough
      :                          @203
  3045: 82 7a                    a3 = u64 [a0]
  3047: ab 8a f2                 jump @201 if a3 != a1
      :                          @204
  3050: 7b 79                    u64 [a0] = a2
  3052: 33 0b                    a4 = 0
  3054: 01                       fallthrough
      :                          @205
  3055: 82 18 10                 a1 = u64 [sp + 0x10]
  3058: 33 07                    a0 = 0
  3060: 7b 28 08                 u64 [t0 + 0x8] = a1
  3063: 01                       fallthrough
      :                          @206
  3064: 7b 25 10                 u64 [t0 + 0x10] = s0
  3067: 7b 27                    u64 [t0] = a0
  3069: 82 10 30                 ra = u64 [sp + 0x30]
  3072: 82 15 28                 s0 = u64 [sp + 0x28]
  3075: 82 16 20                 s1 = u64 [sp + 0x20]
  3078: 95 11 38                 sp = sp + 0x38
  3081: 32 00                    ret
      :                          @207
  3083: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3086: 7b 10 40                 u64 [sp + 0x40] = ra
  3089: 7b 15 38                 u64 [sp + 0x38] = s0
  3092: 7b 16 30                 u64 [sp + 0x30] = s1
  3095: 95 88 01                 a1 = a1 + 0x1
  3098: 51 08 53                 jump @215 if a1 == 0
      :                          @208
  3101: 64 75                    s0 = a0
  3103: 82 77                    a0 = u64 [a0]
  3105: 97 79 01                 a2 = a0 << 0x1
  3108: 33 0a 08                 a3 = 0x8
  3111: e4 a8 08                 a1 = maxu(a1, a3)
  3114: e4 89 06                 s1 = maxu(a2, a1)
  3117: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3120: 98 88 3f                 a1 = a1 >> 0x3f
  3123: 51 07 12                 jump @210 if a0 == 0
      :                          @209
  3126: 82 59 08                 a2 = u64 [s0 + 0x8]
  3129: 7b 19 18                 u64 [sp + 0x18] = a2
  3132: 49 11 20 01              u64 [sp + 32] = 0x1
  3136: 7b 17 28                 u64 [sp + 0x28] = a0
  3139: 28 06                    jump @211
      :                          @210
  3141: 49 11 20                 u64 [sp + 32] = 0
  3144: 01                       fallthrough
      :                          @211
  3145: 64 17                    a0 = sp
  3147: 95 1a 18                 a3 = sp + 0x18
  3150: 64 69                    a2 = s1
  3152: 50 10 48 6d fe           ra = 72, jump @175
      :                          @212 [@dyn 36]
  3157: 82 18                    a1 = u64 [sp]
  3159: 82 17 08                 a0 = u64 [sp + 0x8]
  3162: 51 08 14                 jump @216 if a1 == 0
      :                          @213
  3165: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3175: aa 87 0d                 jump @217 if a0 == a1
      :                          @214
  3178: 52 07 18                 jump @218 if a0 != 0
      :                          @215
  3181: 00                       trap
      :                          @216
  3182: 7b 57 08                 u64 [s0 + 0x8] = a0
  3185: 7b 56                    u64 [s0] = s1
  3187: 01                       fallthrough
      :                          @217
  3188: 82 10 40                 ra = u64 [sp + 0x40]
  3191: 82 15 38                 s0 = u64 [sp + 0x38]
  3194: 82 16 30                 s1 = u64 [sp + 0x30]
  3197: 95 11 48                 sp = sp + 0x48
  3200: 32 00                    ret
      :                          @218
  3202: 00                       trap
      :                          @219
  3203: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3206: 7b 10 30                 u64 [sp + 0x30] = ra
  3209: 7b 15 28                 u64 [sp + 0x28] = s0
  3212: 7b 16 20                 u64 [sp + 0x20] = s1
  3215: 64 89                    a2 = a1
  3217: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3220: 64 75                    s0 = a0
  3222: 51 0a 35                 jump @224 if a3 == 0
      :                          @220
  3225: 82 98                    a1 = u64 [a2]
  3227: 33 07                    a0 = 0
  3229: 95 8b 08                 a4 = a1 + 0x8
  3232: 01                       fallthrough
      :                          @221
  3233: 82 bc                    a5 = u64 [a4]
  3235: c8 c7 07                 a0 = a0 + a5
  3238: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3241: 95 bb 10                 a4 = a4 + 0x10
  3244: 52 0a f5                 jump @221 if a3 != 0
      :                          @222
  3247: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3250: 51 0a 24                 jump @226 if a3 == 0
      :                          @223
  3253: 82 88 08                 a1 = u64 [a1 + 0x8]
  3256: 8e 88                    a1 = a1 >u 0
  3258: 88 7a 10                 a3 = a0 <u 0x10
  3261: 85 aa 01                 a3 = a3 ^ 0x1
  3264: d4 a8 08                 a1 = a1 | a3
  3267: 89 7a                    a3 = a0 <s 0
  3269: e0 a8 08                 a1 = a1 & ~a3
  3272: 52 08 0a                 jump @225 if a1 != 0
      :                          @224
  3275: 33 07                    a0 = 0
  3277: 33 08 01                 a1 = 0x1
  3280: 28 4a                    jump @234
      :                          @225
  3282: 97 77 01                 a0 = a0 << 0x1
  3285: 01                       fallthrough
      :                          @226
  3286: 51 07 40                 jump @233 if a0 == 0
      :                          @227
  3289: 57 07 78                 jump @239 if a0 <s 0
      :                          @228
  3292: 64 52                    t0 = s0
  3294: 33 0b 40 00 03           a4 = 0x30040
  3299: 33 08 00 00 01           a1 = 0x10000
  3304: c8 8b 0b                 a4 = a4 + a1
  3307: 01                       fallthrough
      :                          @229
  3308: 82 bc                    a5 = u64 [a4]
  3310: c8 7c 0a                 a3 = a5 + a0
  3313: ac ca 5e                 jump @237 if a3 <u a5
      :                          @230
  3316: 95 a5 01                 s0 = a3 + 0x1
  3319: 88 56 01                 s1 = s0 <u 0x1
  3322: d8 58 05                 s0 = a1 <u s0
  3325: d4 65 05                 s0 = s0 | s1
  3328: 52 05 4f                 jump @237 if s0 != 0
      :                          @231
  3331: 82 b6                    s1 = u64 [a4]
  3333: ab c6 e7                 jump @229 if s1 != a5
      :                          @232
  3336: 7b ba                    u64 [a4] = a3
  3338: 33 08 40 00 04           a1 = 0x40040
  3343: c9 a8 08                 a1 = a1 - a3
  3346: 64 25                    s0 = t0
  3348: 28 06                    jump @234
      :                          @233
  3350: 33 08 01                 a1 = 0x1
  3353: 01                       fallthrough
      :                          @234
  3354: 7b 17                    u64 [sp] = a0
  3356: 7b 18 08                 u64 [sp + 0x8] = a1
  3359: 49 11 10                 u64 [sp + 16] = 0
  3362: 33 08 b0 00 01           a1 = 0x100b0
  3367: 64 17                    a0 = sp
  3369: 50 10 4a 75 06           ra = 74, jump @364
      :                          @235 [@dyn 37]
  3374: 52 07 22                 jump @238 if a0 != 0
      :                          @236
  3377: 82 17 10                 a0 = u64 [sp + 0x10]
  3380: 82 18 08                 a1 = u64 [sp + 0x8]
  3383: 82 19                    a2 = u64 [sp]
  3385: 7b 57 10                 u64 [s0 + 0x10] = a0
  3388: 7b 58 08                 u64 [s0 + 0x8] = a1
  3391: 7b 59                    u64 [s0] = a2
  3393: 82 10 30                 ra = u64 [sp + 0x30]
  3396: 82 15 28                 s0 = u64 [sp + 0x28]
  3399: 82 16 20                 s1 = u64 [sp + 0x20]
  3402: 95 11 38                 sp = sp + 0x38
  3405: 32 00                    ret
      :                          @237
  3407: 00                       trap
      :                          @238
  3408: 00                       trap
      :                          @239
  3409: 00                       trap
      :                          @240 [@dyn 38]
  3410: 82 72                    t0 = u64 [a0]
  3412: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3417: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3422: ac 9a 28                 jump @246 if a3 <u a2
      :                          @241
  3425: 82 77 08                 a0 = u64 [a0 + 0x8]
  3428: 33 09 40 00 03           a2 = 0x30040
  3433: 95 99 00 00 01           a2 = a2 + 0x10000
  3438: 01                       fallthrough
      :                          @242
  3439: 82 9a                    a3 = u64 [a2]
  3441: c9 a9 0b                 a4 = a2 - a3
  3444: ab 7b 12                 jump @246 if a4 != a0
      :                          @243
  3447: c9 2a 0b                 a4 = a3 - t0
  3450: 01                       fallthrough
      :                          @244
  3451: 82 9c                    a5 = u64 [a2]
  3453: ab ac f2                 jump @242 if a5 != a3
      :                          @245
  3456: 7b 9b                    u64 [a2] = a4
  3458: 33 08                    a1 = 0
  3460: 32 00                    ret
      :                          @246
  3462: 32 00                    ret
      :                          @247 [@dyn 39]
  3464: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3467: 7b 10 18                 u64 [sp + 0x18] = ra
  3470: 7b 15 10                 u64 [sp + 0x10] = s0
  3473: 7b 16 08                 u64 [sp + 0x8] = s1
  3476: 64 75                    s0 = a0
  3478: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3481: 82 77                    a0 = u64 [a0]
  3483: c9 a7 07                 a0 = a0 - a3
  3486: 64 96                    s1 = a2
  3488: ac 97 2a                 jump @250 if a0 <u a2
      :                          @248
  3491: 7b 1a                    u64 [sp] = a3
  3493: 82 57 08                 a0 = u64 [s0 + 0x8]
  3496: c8 a7 07                 a0 = a0 + a3
  3499: 64 69                    a2 = s1
  3501: 50 10 50 4a 01           ra = 80, jump @269
      :                          @249 [@dyn 40]
  3506: 82 17                    a0 = u64 [sp]
  3508: c8 76 06                 s1 = s1 + a0
  3511: 7b 56 10                 u64 [s0 + 0x10] = s1
  3514: 33 07                    a0 = 0
  3516: 82 10 18                 ra = u64 [sp + 0x18]
  3519: 82 15 10                 s0 = u64 [sp + 0x10]
  3522: 82 16 08                 s1 = u64 [sp + 0x8]
  3525: 95 11 20                 sp = sp + 0x20
  3528: 32 00                    ret
      :                          @250
  3530: 64 57                    a0 = s0
  3532: 7b 18                    u64 [sp] = a1
  3534: 64 a8                    a1 = a3
  3536: 64 69                    a2 = s1
  3538: 50 10 52 74 fc           ra = 82, jump @163
      :                          @251 [@dyn 41]
  3543: 82 18                    a1 = u64 [sp]
  3545: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3548: 28 c7                    jump @248
      :                          @252 [@dyn 42]
  3550: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3553: 7b 10 20                 u64 [sp + 0x20] = ra
  3556: 7b 15 18                 u64 [sp + 0x18] = s0
  3559: 7b 16 10                 u64 [sp + 0x10] = s1
  3562: 64 86                    s1 = a1
  3564: 83 88                    i32 a1 = a1 + 0
  3566: 33 09 80 00              a2 = 0x80
  3570: 64 7a                    a3 = a0
  3572: ae 98 2b                 jump @257 if a1 >=u a2
      :                          @253
  3575: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3578: 82 a7                    a0 = u64 [a3]
  3580: ab 78 12                 jump @256 if a1 != a0
      :                          @254
  3583: 64 a7                    a0 = a3
  3585: 64 a5                    s0 = a3
  3587: 50 10 56 08 fe           ra = 86, jump @207
      :                          @255 [@dyn 43]
  3592: 64 5a                    a3 = s0
  3594: 82 58 10                 a1 = u64 [s0 + 0x10]
  3597: 01                       fallthrough
      :                          @256
  3598: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3601: c8 87 07                 a0 = a0 + a1
  3604: 78 76                    u8 [a0] = s1
  3606: 95 88 01                 a1 = a1 + 0x1
  3609: 7b a8 10                 u64 [a3 + 0x10] = a1
  3612: 28 ab 00                 jump @265
      :                          @257
  3615: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3618: 48 11 0c                 u32 [sp + 12] = 0
  3621: 52 07 1c                 jump @259 if a0 != 0
      :                          @258
  3624: 98 67 06                 a0 = s1 >> 0x6
  3627: 86 77 c0 00              a0 = a0 | 0xc0
  3631: 78 17 0c                 u8 [sp + 0xc] = a0
  3634: 84 67 3f                 a0 = s1 & 0x3f
  3637: 86 77 80 00              a0 = a0 | 0x80
  3641: 78 17 0d                 u8 [sp + 0xd] = a0
  3644: 33 06 02                 s1 = 0x2
  3647: 28 63                    jump @262
      :                          @259
  3649: 8b 67 10                 i32 a0 = s1 >> 0x10
  3652: 52 07 29                 jump @261 if a0 != 0
      :                          @260
  3655: 98 67 0c                 a0 = s1 >> 0xc
  3658: 86 77 e0 00              a0 = a0 | 0xe0
  3662: 78 17 0c                 u8 [sp + 0xc] = a0
  3665: 97 67 34                 a0 = s1 << 0x34
  3668: 98 77 3a                 a0 = a0 >> 0x3a
  3671: 95 77 80 00              a0 = a0 + 0x80
  3675: 78 17 0d                 u8 [sp + 0xd] = a0
  3678: 84 67 3f                 a0 = s1 & 0x3f
  3681: 86 77 80 00              a0 = a0 | 0x80
  3685: 78 17 0e                 u8 [sp + 0xe] = a0
  3688: 33 06 03                 s1 = 0x3
  3691: 28 37                    jump @262
      :                          @261
  3693: 97 67 2b                 a0 = s1 << 0x2b
  3696: 98 77 3d                 a0 = a0 >> 0x3d
  3699: 95 77 f0 00              a0 = a0 + 0xf0
  3703: 78 17 0c                 u8 [sp + 0xc] = a0
  3706: 97 67 2e                 a0 = s1 << 0x2e
  3709: 98 77 3a                 a0 = a0 >> 0x3a
  3712: 95 77 80 00              a0 = a0 + 0x80
  3716: 78 17 0d                 u8 [sp + 0xd] = a0
  3719: 97 67 34                 a0 = s1 << 0x34
  3722: 98 77 3a                 a0 = a0 >> 0x3a
  3725: 95 77 80 00              a0 = a0 + 0x80
  3729: 78 17 0e                 u8 [sp + 0xe] = a0
  3732: 84 67 3f                 a0 = s1 & 0x3f
  3735: 86 77 80 00              a0 = a0 | 0x80
  3739: 78 17 0f                 u8 [sp + 0xf] = a0
  3742: 33 06 04                 s1 = 0x4
  3745: 01                       fallthrough
      :                          @262
  3746: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3749: 82 a7                    a0 = u64 [a3]
  3751: c9 57 07                 a0 = a0 - s0
  3754: ac 67 2d                 jump @266 if a0 <u s1
      :                          @263
  3757: 7b 1a                    u64 [sp] = a3
  3759: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3762: c8 57 07                 a0 = a0 + s0
  3765: 95 18 0c                 a1 = sp + 0xc
  3768: 64 69                    a2 = s1
  3770: 50 10 58 3d              ra = 88, jump @269
      :                          @264 [@dyn 44]
  3774: c8 56 06                 s1 = s1 + s0
  3777: 82 17                    a0 = u64 [sp]
  3779: 7b 76 10                 u64 [a0 + 0x10] = s1
  3782: 01                       fallthrough
      :                          @265
  3783: 33 07                    a0 = 0
  3785: 82 10 20                 ra = u64 [sp + 0x20]
  3788: 82 15 18                 s0 = u64 [sp + 0x18]
  3791: 82 16 10                 s1 = u64 [sp + 0x10]
  3794: 95 11 28                 sp = sp + 0x28
  3797: 32 00                    ret
      :                          @266
  3799: 64 a7                    a0 = a3
  3801: 64 58                    a1 = s0
  3803: 64 69                    a2 = s1
  3805: 64 a5                    s0 = a3
  3807: 50 10 5a 67 fb           ra = 90, jump @163
      :                          @267 [@dyn 45]
  3812: 64 5a                    a3 = s0
  3814: 82 55 10                 s0 = u64 [s0 + 0x10]
  3817: 28 c4                    jump @263
      :                          @268 [@dyn 46]
  3819: 64 8a                    a3 = a1
  3821: 33 08 b0 00 01           a1 = 0x100b0
  3826: 64 a9                    a2 = a3
  3828: 28 aa 04                 jump @364
      :                          @269
  3831: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3834: 7b 10 18                 u64 [sp + 0x18] = ra
  3837: 7b 15 10                 u64 [sp + 0x10] = s0
  3840: 7b 16 08                 u64 [sp + 0x8] = s1
  3843: 53 19 10 64              jump @278 if a2 <u 16
      :                          @270
  3847: 8d 7a                    i32 a3 = -a0
  3849: 84 a2 07                 t0 = a3 & 0x7
  3852: c8 27 0b                 a4 = a0 + t0
  3855: 51 02 15                 jump @273 if t0 == 0
      :                          @271
  3858: 64 8c                    a5 = a1
  3860: 64 75                    s0 = a0
  3862: 01                       fallthrough
      :                          @272
  3863: 7c ca                    a3 = u8 [a5]
  3865: 78 5a                    u8 [s0] = a3
  3867: 95 55 01                 s0 = s0 + 0x1
  3870: 95 cc 01                 a5 = a5 + 0x1
  3873: ac b5 f6                 jump @272 if s0 <u a4
      :                          @273
  3876: c8 28 03                 t1 = a1 + t0
  3879: c9 29 02                 t0 = a2 - t0
  3882: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3885: 84 38 07                 a1 = t1 & 0x7
  3888: c8 4b 0a                 a3 = a4 + t2
  3891: 51 08 3b                 jump @280 if a1 == 0
      :                          @274
  3894: 58 04 4b                 jump @283 if t2 <=s 0
      :                          @275
  3897: 97 38 03                 a1 = t1 << 0x3
  3900: 84 80 38                 ra = a1 & 0x38
  3903: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3906: 82 c5                    s0 = u64 [a5]
  3908: 8d 88                    i32 a1 = -a1
  3910: 84 88 38                 a1 = a1 & 0x38
  3913: 95 cc 08                 a5 = a5 + 0x8
  3916: 01                       fallthrough
      :                          @276
  3917: 82 c6                    s1 = u64 [a5]
  3919: d0 05 05                 s0 = s0 >> ra
  3922: cf 86 09                 a2 = s1 << a1
  3925: d4 59 09                 a2 = a2 | s0
  3928: 7b b9                    u64 [a4] = a2
  3930: 95 bb 08                 a4 = a4 + 0x8
  3933: 95 cc 08                 a5 = a5 + 0x8
  3936: 64 65                    s0 = s1
  3938: ac ab eb                 jump @276 if a4 <u a3
      :                          @277
  3941: 28 1c                    jump @283
      :                          @278
  3943: 64 7a                    a3 = a0
  3945: 52 09 21                 jump @284 if a2 != 0
      :                          @279
  3948: 28 2f                    jump @286
      :                          @280
  3950: 58 04 13                 jump @283 if t2 <=s 0
      :                          @281
  3953: 64 38                    a1 = t1
  3955: 01                       fallthrough
      :                          @282
  3956: 82 89                    a2 = u64 [a1]
  3958: 7b b9                    u64 [a4] = a2
  3960: 95 bb 08                 a4 = a4 + 0x8
  3963: 95 88 08                 a1 = a1 + 0x8
  3966: ac ab f6                 jump @282 if a4 <u a3
      :                          @283
  3969: c8 43 08                 a1 = t1 + t2
  3972: 84 29 07                 a2 = t0 & 0x7
  3975: 51 09 14                 jump @286 if a2 == 0
      :                          @284
  3978: c8 a9 09                 a2 = a2 + a3
  3981: 01                       fallthrough
      :                          @285
  3982: 7c 8b                    a4 = u8 [a1]
  3984: 78 ab                    u8 [a3] = a4
  3986: 95 aa 01                 a3 = a3 + 0x1
  3989: 95 88 01                 a1 = a1 + 0x1
  3992: ac 9a f6                 jump @285 if a3 <u a2
      :                          @286
  3995: 82 10 18                 ra = u64 [sp + 0x18]
  3998: 82 15 10                 s0 = u64 [sp + 0x10]
  4001: 82 16 08                 s1 = u64 [sp + 0x8]
  4004: 95 11 20                 sp = sp + 0x20
  4007: 32 00                    ret
      :                          @287
  4009: 53 19 10 48              jump @296 if a2 <u 16
      :                          @288
  4013: 8d 7a                    i32 a3 = -a0
  4015: 84 aa 07                 a3 = a3 & 0x7
  4018: c8 a7 0b                 a4 = a0 + a3
  4021: 51 0a 0e                 jump @291 if a3 == 0
      :                          @289
  4024: 64 7c                    a5 = a0
  4026: 01                       fallthrough
      :                          @290
  4027: 78 c8                    u8 [a5] = a1
  4029: 95 cc 01                 a5 = a5 + 0x1
  4032: ac bc fb                 jump @290 if a5 <u a4
      :                          @291
  4035: c9 a9 03                 t1 = a2 - a3
  4038: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4041: c8 cb 0a                 a3 = a4 + a5
  4044: 58 0c 1d                 jump @294 if a5 <=s 0
      :                          @292
  4047: 84 82 ff 00              t0 = a1 & 0xff
  4051: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4061: ca 92 0c                 a5 = t0 * a2
  4064: 01                       fallthrough
      :                          @293
  4065: 7b bc                    u64 [a4] = a5
  4067: 95 bb 08                 a4 = a4 + 0x8
  4070: ac ab fb                 jump @293 if a4 <u a3
      :                          @294
  4073: 84 39 07                 a2 = t1 & 0x7
  4076: 52 09 0a                 jump @297 if a2 != 0
      :                          @295
  4079: 28 13                    jump @299
      :                          @296
  4081: 64 7a                    a3 = a0
  4083: 51 09 0f                 jump @299 if a2 == 0
      :                          @297
  4086: c8 a9 09                 a2 = a2 + a3
  4089: 01                       fallthrough
      :                          @298
  4090: 78 a8                    u8 [a3] = a1
  4092: 95 aa 01                 a3 = a3 + 0x1
  4095: ac 9a fb                 jump @298 if a3 <u a2
      :                          @299
  4098: 32 00                    ret
      :                          @300 [@dyn 47]
  4100: 82 77                    a0 = u64 [a0]
  4102: 01                       fallthrough
      :                          @301
  4103: 28                       jump @301
      :                          @302
  4104: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4107: 7b 10 50                 u64 [sp + 0x50] = ra
  4110: 7b 15 48                 u64 [sp + 0x48] = s0
  4113: 7b 16 40                 u64 [sp + 0x40] = s1
  4116: 7b 18                    u64 [sp] = a1
  4118: 98 79 04                 a2 = a0 >> 0x4
  4121: 33 08 27                 a1 = 0x27
  4124: 53 29 71 02 81 00        jump @305 if a2 <u 625
      :                          @303
  4130: 33 08 27                 a1 = 0x27
  4133: 95 1a 3e                 a3 = sp + 0x3e
  4136: 3a 09 20 00 03           a2 = u64 [0x30020]
  4141: 7b 19 10                 u64 [sp + 0x10] = a2
  4144: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4150: 33 04 7b 14              t2 = 0x147b
  4154: 33 0b 27 01 01           a4 = 0x10127
  4159: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4165: 01                       fallthrough
      :                          @304
  4166: 64 72                    t0 = a0
  4168: 82 17 10                 a0 = u64 [sp + 0x10]
  4171: d6 72 07                 a0 = t0 mulhu a0
  4174: 98 77 0b                 a0 = a0 >> 0xb
  4177: 82 19 08                 a2 = u64 [sp + 0x8]
  4180: c0 97 0c                 i32 a5 = a0 * a2
  4183: c8 2c 06                 s1 = a5 + t0
  4186: 97 6c 30                 a5 = s1 << 0x30
  4189: 98 cc 32                 a5 = a5 >> 0x32
  4192: ca 4c 0c                 a5 = a5 * t2
  4195: 98 c3 11                 t1 = a5 >> 0x11
  4198: 98 cc 10                 a5 = a5 >> 0x10
  4201: 84 cc fe 07              a5 = a5 & 0x7fe
  4205: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4208: c8 69 09                 a2 = a2 + s1
  4211: 97 99 31                 a2 = a2 << 0x31
  4214: 98 99 30                 a2 = a2 >> 0x30
  4217: c8 bc 0c                 a5 = a5 + a4
  4220: 7c c6                    s1 = u8 [a5]
  4222: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4225: c8 b9 09                 a2 = a2 + a4
  4228: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4231: 7c 99                    a2 = u8 [a2]
  4233: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4236: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4239: 78 a5 01                 u8 [a3 + 0x1] = s0
  4242: 78 a9                    u8 [a3] = a2
  4244: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4247: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4250: ac 20 ac                 jump @304 if ra <u t0
      :                          @305
  4253: 54 17 63 3b              jump @307 if a0 <=u 99
      :                          @306
  4257: 97 79 30                 a2 = a0 << 0x30
  4260: 98 99 32                 a2 = a2 >> 0x32
  4263: 96 99 7b 14              a2 = a2 * 0x147b
  4267: 98 99 11                 a2 = a2 >> 0x11
  4270: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4273: c8 a7 07                 a0 = a0 + a3
  4276: 97 77 31                 a0 = a0 << 0x31
  4279: 98 77 30                 a0 = a0 >> 0x30
  4282: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4285: 33 0a 27 01 01           a3 = 0x10127
  4290: c8 a7 07                 a0 = a0 + a3
  4293: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4296: 7c 77                    a0 = u8 [a0]
  4298: 95 1b 19                 a4 = sp + 0x19
  4301: c8 8b 0b                 a4 = a4 + a1
  4304: 78 ba 01                 u8 [a4 + 0x1] = a3
  4307: 78 b7                    u8 [a4] = a0
  4309: 64 97                    a0 = a2
  4311: 01                       fallthrough
      :                          @307
  4312: 55 17 0a 14              jump @309 if a0 >=u 10
      :                          @308
  4316: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4319: 95 19 19                 a2 = sp + 0x19
  4322: c8 89 09                 a2 = a2 + a1
  4325: 83 77 30                 i32 a0 = a0 + 0x30
  4328: 78 97                    u8 [a2] = a0
  4330: 28 21                    jump @310
      :                          @309
  4332: 97 77 01                 a0 = a0 << 0x1
  4335: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4338: 33 09 27 01 01           a2 = 0x10127
  4343: c8 97 07                 a0 = a0 + a2
  4346: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4349: 7c 77                    a0 = u8 [a0]
  4351: 95 1a 19                 a3 = sp + 0x19
  4354: c8 8a 0a                 a3 = a3 + a1
  4357: 78 a9 01                 u8 [a3 + 0x1] = a2
  4360: 78 a7                    u8 [a3] = a0
  4362: 01                       fallthrough
      :                          @310
  4363: 95 1a 19                 a3 = sp + 0x19
  4366: c8 8a 0a                 a3 = a3 + a1
  4369: 9a 8b 27                 a4 = 0x27 - a1
  4372: 33 08 e0 00 01           a1 = 0x100e0
  4377: 82 17                    a0 = u64 [sp]
  4379: 33 09                    a2 = 0
  4381: 50 10 60 12              ra = 96, jump @312
      :                          @311 [@dyn 48]
  4385: 82 10 50                 ra = u64 [sp + 0x50]
  4388: 82 15 48                 s0 = u64 [sp + 0x48]
  4391: 82 16 40                 s1 = u64 [sp + 0x40]
  4394: 95 11 58                 sp = sp + 0x58
  4397: 32 00                    ret
      :                          @312
  4399: 95 11 98                 sp = sp + 0xffffffffffffff98
  4402: 7b 10 60                 u64 [sp + 0x60] = ra
  4405: 7b 15 58                 u64 [sp + 0x58] = s0
  4408: 7b 16 50                 u64 [sp + 0x50] = s1
  4411: 80 73 34                 t1 = u32 [a0 + 0x34]
  4414: 7b 1a 20                 u64 [sp + 0x20] = a3
  4417: 64 9c                    a5 = a2
  4419: 84 36 01                 s1 = t1 & 0x1
  4422: 33 02 2b                 t0 = 0x2b
  4425: 33 09 00 00 11           a2 = 0x110000
  4430: 84 3a 04                 a3 = t1 & 0x4
  4433: 7b 1b 28                 u64 [sp + 0x28] = a4
  4436: c8 b6 04                 t2 = s1 + a4
  4439: 7b 1c 30                 u64 [sp + 0x30] = a5
  4442: 52 0a 10                 jump @315 if a3 != 0
      :                          @313
  4445: 49 11 38                 u64 [sp + 56] = 0
  4448: 82 78                    a1 = u64 [a0]
  4450: 94 69 2b                 a2 = 0x2b if s1 != 0
  4453: 52 08 35                 jump @319 if a1 != 0
      :                          @314
  4456: 28 56                    jump @324
      :                          @315
  4458: 7b 18 38                 u64 [sp + 0x38] = a1
  4461: 33 09                    a2 = 0
  4463: 51 0c 1b                 jump @318 if a5 == 0
      :                          @316
  4466: 82 1b 38                 a4 = u64 [sp + 0x38]
  4469: 01                       fallthrough
      :                          @317
  4470: 7d b5                    s0 = i8 [a4]
  4472: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4475: 85 5a 01                 a3 = s0 ^ 0x1
  4478: c8 a9 09                 a2 = a2 + a3
  4481: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4484: 95 bb 01                 a4 = a4 + 0x1
  4487: 52 0c ef                 jump @317 if a5 != 0
      :                          @318
  4490: c8 94 04                 t2 = t2 + a2
  4493: 33 09 00 00 11           a2 = 0x110000
  4498: 82 78                    a1 = u64 [a0]
  4500: db 62 09                 a2 = t0 if s1 != 0
  4503: 51 08 27                 jump @324 if a1 == 0
      :                          @319
  4506: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4509: ae a4 21                 jump @324 if t2 >=u a3
      :                          @320
  4512: 84 38 08                 a1 = t1 & 0x8
  4515: 52 08 50                 jump @327 if a1 != 0
      :                          @321
  4518: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4521: c9 4a 0a                 a3 = a3 - t2
  4524: 7b 19 18                 u64 [sp + 0x18] = a2
  4527: 5a 16 01 9d 00           jump @334 if s1 >s 1
      :                          @322
  4532: 52 06 aa 00              jump @336 if s1 != 0
      :                          @323
  4536: 7b 1a 10                 u64 [sp + 0x10] = a3
  4539: 28 a9 00                 jump @337
      :                          @324
  4542: 82 75 20                 s0 = u64 [a0 + 0x20]
  4545: 82 76 28                 s1 = u64 [a0 + 0x28]
  4548: 64 57                    a0 = s0
  4550: 64 68                    a1 = s1
  4552: 82 1a 38                 a3 = u64 [sp + 0x38]
  4555: 82 1b 30                 a4 = u64 [sp + 0x30]
  4558: 50 10 62 6c 01           ra = 98, jump @357
      :                          @325 [@dyn 49]
  4563: 33 08 01                 a1 = 0x1
  4566: 52 07 bb 00              jump @342 if a0 != 0
      :                          @326
  4570: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4573: 64 57                    a0 = s0
  4575: 82 18 20                 a1 = u64 [sp + 0x20]
  4578: 82 19 28                 a2 = u64 [sp + 0x28]
  4581: 82 10 60                 ra = u64 [sp + 0x60]
  4584: 82 15 58                 s0 = u64 [sp + 0x58]
  4587: 82 16 50                 s1 = u64 [sp + 0x50]
  4590: 95 11 68                 sp = sp + 0x68
  4593: 32 0c                    jump [a5]
      :                          @327
  4595: 7b 1a 40                 u64 [sp + 0x40] = a3
  4598: 64 45                    s0 = t2
  4600: 81 78 30                 a1 = i32 [a0 + 0x30]
  4603: 7b 18 10                 u64 [sp + 0x10] = a1
  4606: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4609: 7b 1a 08                 u64 [sp + 0x8] = a3
  4612: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4615: 82 78 28                 a1 = u64 [a0 + 0x28]
  4618: 48 17 30 30              u32 [a0 + 48] = 0x30
  4622: 7b 17                    u64 [sp] = a0
  4624: 46 17 38 01              u8 [a0 + 56] = 0x1
  4628: 7b 1a 48                 u64 [sp + 0x48] = a3
  4631: 64 a7                    a0 = a3
  4633: 64 86                    s1 = a1
  4635: 82 1a 38                 a3 = u64 [sp + 0x38]
  4638: 82 1b 30                 a4 = u64 [sp + 0x30]
  4641: 50 10 64 19 01           ra = 100, jump @357
      :                          @328 [@dyn 50]
  4646: 52 07 67                 jump @341 if a0 != 0
      :                          @329
  4649: 82 17 40                 a0 = u64 [sp + 0x40]
  4652: c9 57 05                 s0 = a0 - s0
  4655: 95 55 01                 s0 = s0 + 0x1
  4658: 01                       fallthrough
      :                          @330
  4659: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4662: 51 05 c6 00              jump @352 if s0 == 0
      :                          @331
  4666: 82 69 20                 a2 = u64 [s1 + 0x20]
  4669: 33 08 30                 a1 = 0x30
  4672: 82 17 48                 a0 = u64 [sp + 0x48]
  4675: b4 90 01 66              ra = 102, jump [a2]
      :                          @332 [@dyn 51]
  4679: 51 07 ec                 jump @330 if a0 == 0
      :                          @333
  4682: 28 43                    jump @341
      :                          @334
  4684: 52 16 02 12              jump @336 if s1 != 2
      :                          @335
  4688: 98 a6 01                 s1 = a3 >> 0x1
  4691: 95 a8 01                 a1 = a3 + 0x1
  4694: 98 88 01                 a1 = a1 >> 0x1
  4697: 7b 18 10                 u64 [sp + 0x10] = a1
  4700: 28 08                    jump @337
      :                          @336
  4702: 64 a6                    s1 = a3
  4704: 49 11 10                 u64 [sp + 16] = 0
  4707: 01                       fallthrough
      :                          @337
  4708: 82 78 20                 a1 = u64 [a0 + 0x20]
  4711: 7b 18 48                 u64 [sp + 0x48] = a1
  4714: 82 75 28                 s0 = u64 [a0 + 0x28]
  4717: 81 77 30                 a0 = i32 [a0 + 0x30]
  4720: 7b 17 40                 u64 [sp + 0x40] = a0
  4723: 95 66 01                 s1 = s1 + 0x1
  4726: 01                       fallthrough
      :                          @338
  4727: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4730: 51 06 27                 jump @343 if s1 == 0
      :                          @339
  4733: 82 59 20                 a2 = u64 [s0 + 0x20]
  4736: 82 17 48                 a0 = u64 [sp + 0x48]
  4739: 82 18 40                 a1 = u64 [sp + 0x40]
  4742: b4 90 01 68              ra = 104, jump [a2]
      :                          @340 [@dyn 52]
  4746: 51 07 ed                 jump @338 if a0 == 0
      :                          @341
  4749: 33 08 01                 a1 = 0x1
  4752: 01                       fallthrough
      :                          @342
  4753: 64 87                    a0 = a1
  4755: 82 10 60                 ra = u64 [sp + 0x60]
  4758: 82 15 58                 s0 = u64 [sp + 0x58]
  4761: 82 16 50                 s1 = u64 [sp + 0x50]
  4764: 95 11 68                 sp = sp + 0x68
  4767: 32 00                    ret
      :                          @343
  4769: 82 16 48                 s1 = u64 [sp + 0x48]
  4772: 64 67                    a0 = s1
  4774: 64 58                    a1 = s0
  4776: 82 19 18                 a2 = u64 [sp + 0x18]
  4779: 82 1a 38                 a3 = u64 [sp + 0x38]
  4782: 82 1b 30                 a4 = u64 [sp + 0x30]
  4785: 50 10 6a 89 00           ra = 106, jump @357
      :                          @344 [@dyn 53]
  4790: 33 08 01                 a1 = 0x1
  4793: 52 07 d8                 jump @342 if a0 != 0
      :                          @345
  4796: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4799: 64 67                    a0 = s1
  4801: 82 18 20                 a1 = u64 [sp + 0x20]
  4804: 82 19 28                 a2 = u64 [sp + 0x28]
  4807: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @346 [@dyn 54]
  4811: 33 08 01                 a1 = 0x1
  4814: 52 07 c3                 jump @342 if a0 != 0
      :                          @347
  4817: 82 17 10                 a0 = u64 [sp + 0x10]
  4820: 9a 77                    a0 = -a0
  4822: 7b 17 38                 u64 [sp + 0x38] = a0
  4825: 33 06 ff                 s1 = 0xffffffffffffffff
  4828: 01                       fallthrough
      :                          @348
  4829: 82 17 38                 a0 = u64 [sp + 0x38]
  4832: c8 67 07                 a0 = a0 + s1
  4835: 51 17 ff 42              jump @355 if a0 == 4294967295
      :                          @349
  4839: 82 59 20                 a2 = u64 [s0 + 0x20]
  4842: 82 17 48                 a0 = u64 [sp + 0x48]
  4845: 82 18 40                 a1 = u64 [sp + 0x40]
  4848: b4 90 01 6e              ra = 110, jump [a2]
      :                          @350 [@dyn 55]
  4852: 95 66 01                 s1 = s1 + 0x1
  4855: 51 07 e6                 jump @348 if a0 == 0
      :                          @351
  4858: 28 37                    jump @356
      :                          @352
  4860: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4863: 82 17 48                 a0 = u64 [sp + 0x48]
  4866: 82 18 20                 a1 = u64 [sp + 0x20]
  4869: 82 19 28                 a2 = u64 [sp + 0x28]
  4872: b4 a0 01 70              ra = 112, jump [a3]
      :                          @353 [@dyn 56]
  4876: 33 08 01                 a1 = 0x1
  4879: 52 07 82                 jump @342 if a0 != 0
      :                          @354
  4882: 33 08                    a1 = 0
  4884: 82 16                    s1 = u64 [sp]
  4886: 82 17 10                 a0 = u64 [sp + 0x10]
  4889: 7a 67 30                 u32 [s1 + 0x30] = a0
  4892: 82 17 08                 a0 = u64 [sp + 0x8]
  4895: 78 67 38                 u8 [s1 + 0x38] = a0
  4898: 28 6f ff                 jump @342
      :                          @355
  4901: 82 16 10                 s1 = u64 [sp + 0x10]
  4904: 82 17 10                 a0 = u64 [sp + 0x10]
  4907: d8 76 08                 a1 = s1 <u a0
  4910: 28 63 ff                 jump @342
      :                          @356
  4913: 82 17 10                 a0 = u64 [sp + 0x10]
  4916: d8 76 08                 a1 = s1 <u a0
  4919: 28 5a ff                 jump @342
      :                          @357
  4922: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4925: 7b 10 20                 u64 [sp + 0x20] = ra
  4928: 7b 15 18                 u64 [sp + 0x18] = s0
  4931: 7b 16 10                 u64 [sp + 0x10] = s1
  4934: 83 9c                    i32 a5 = a2 + 0
  4936: 33 02 00 00 11           t0 = 0x110000
  4941: 64 a6                    s1 = a3
  4943: 64 85                    s0 = a1
  4945: 64 7a                    a3 = a0
  4947: aa 2c 20                 jump @360 if a5 == t0
      :                          @358
  4950: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4953: 64 a7                    a0 = a3
  4955: 64 98                    a1 = a2
  4957: 7b 1b 08                 u64 [sp + 0x8] = a4
  4960: 7b 1a                    u64 [sp] = a3
  4962: b4 c0 01 72              ra = 114, jump [a5]
      :                          @359 [@dyn 57]
  4966: 82 1a                    a3 = u64 [sp]
  4968: 82 1b 08                 a4 = u64 [sp + 0x8]
  4971: 64 78                    a1 = a0
  4973: 33 07 01                 a0 = 0x1
  4976: 52 08 20                 jump @363 if a1 != 0
      :                          @360
  4979: 51 06 1a                 jump @362 if s1 == 0
      :                          @361
  4982: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4985: 64 a7                    a0 = a3
  4987: 64 68                    a1 = s1
  4989: 64 b9                    a2 = a4
  4991: 82 10 20                 ra = u64 [sp + 0x20]
  4994: 82 15 18                 s0 = u64 [sp + 0x18]
  4997: 82 16 10                 s1 = u64 [sp + 0x10]
  5000: 95 11 28                 sp = sp + 0x28
  5003: 32 0c                    jump [a5]
      :                          @362
  5005: 33 07                    a0 = 0
  5007: 01                       fallthrough
      :                          @363
  5008: 82 10 20                 ra = u64 [sp + 0x20]
  5011: 82 15 18                 s0 = u64 [sp + 0x18]
  5014: 82 16 10                 s1 = u64 [sp + 0x10]
  5017: 95 11 28                 sp = sp + 0x28
  5020: 32 00                    ret
      :                          @364
  5022: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5026: 7b 10 80 00              u64 [sp + 0x80] = ra
  5030: 7b 15 78                 u64 [sp + 0x78] = s0
  5033: 7b 16 70                 u64 [sp + 0x70] = s1
  5036: 49 11 60 20              u64 [sp + 96] = 0x20
  5040: 33 0a 03                 a3 = 0x3
  5043: 78 1a 68                 u8 [sp + 0x68] = a3
  5046: 82 96 20                 s1 = u64 [a2 + 0x20]
  5049: 49 11 30                 u64 [sp + 48] = 0
  5052: 49 11 40                 u64 [sp + 64] = 0
  5055: 7b 17 50                 u64 [sp + 0x50] = a0
  5058: 7b 18 58                 u64 [sp + 0x58] = a1
  5061: 51 06 07 01              jump @386 if s1 == 0
      :                          @365
  5065: 82 97 28                 a0 = u64 [a2 + 0x28]
  5068: 51 07 74 01              jump @396 if a0 == 0
      :                          @366
  5072: 49 11 28                 u64 [sp + 40] = 0
  5075: 82 95                    s0 = u64 [a2]
  5077: 7b 19 08                 u64 [sp + 0x8] = a2
  5080: 82 98 10                 a1 = u64 [a2 + 0x10]
  5083: 7b 18 18                 u64 [sp + 0x18] = a1
  5086: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5089: 97 88 03                 a1 = a1 << 0x3
  5092: 98 88 03                 a1 = a1 >> 0x3
  5095: 95 88 01                 a1 = a1 + 0x1
  5098: 7b 18                    u64 [sp] = a1
  5100: 95 55 08                 s0 = s0 + 0x8
  5103: 96 78 38                 a1 = a0 * 0x38
  5106: 95 66 18                 s1 = s1 + 0x18
  5109: 33 07 5e                 a0 = 0x5e
  5112: 7b 17 10                 u64 [sp + 0x10] = a0
  5115: 01                       fallthrough
      :                          @367
  5116: 7b 18 20                 u64 [sp + 0x20] = a1
  5119: 82 59                    a2 = u64 [s0]
  5121: 51 09 17                 jump @370 if a2 == 0
      :                          @368
  5124: 82 1a 58                 a3 = u64 [sp + 0x58]
  5127: 82 17 50                 a0 = u64 [sp + 0x50]
  5130: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5133: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5136: b4 a0 01 74              ra = 116, jump [a3]
      :                          @369 [@dyn 58]
  5140: 52 07 51 01              jump @399 if a0 != 0
      :                          @370
  5144: 81 67 10                 a0 = i32 [s1 + 0x10]
  5147: 7a 17 60                 u32 [sp + 0x60] = a0
  5150: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5153: 78 17 68                 u8 [sp + 0x68] = a0
  5156: 81 67 14                 a0 = i32 [s1 + 0x14]
  5159: 7a 17 64                 u32 [sp + 0x64] = a0
  5162: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5165: 82 67                    a0 = u64 [s1]
  5167: 51 08 26                 jump @375 if a1 == 0
      :                          @371
  5170: 52 18 01 16              jump @373 if a1 != 1
      :                          @372
  5174: 97 77 04                 a0 = a0 << 0x4
  5177: 82 18 18                 a1 = u64 [sp + 0x18]
  5180: c8 87 07                 a0 = a0 + a1
  5183: 82 78 08                 a1 = u64 [a0 + 0x8]
  5186: 82 19 10                 a2 = u64 [sp + 0x10]
  5189: aa 98 07                 jump @374 if a1 == a2
      :                          @373
  5192: 33 08                    a1 = 0
  5194: 28 0f                    jump @376
      :                          @374
  5196: 82 77                    a0 = u64 [a0]
  5198: 82 77                    a0 = u64 [a0]
  5200: 33 08 01                 a1 = 0x1
  5203: 28 06                    jump @376
      :                          @375
  5205: 33 08 01                 a1 = 0x1
  5208: 01                       fallthrough
      :                          @376
  5209: 7b 18 30                 u64 [sp + 0x30] = a1
  5212: 7b 17 38                 u64 [sp + 0x38] = a0
  5215: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5218: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5221: 51 08 26                 jump @381 if a1 == 0
      :                          @377
  5224: 52 18 01 16              jump @379 if a1 != 1
      :                          @378
  5228: 97 77 04                 a0 = a0 << 0x4
  5231: 82 18 18                 a1 = u64 [sp + 0x18]
  5234: c8 87 07                 a0 = a0 + a1
  5237: 82 78 08                 a1 = u64 [a0 + 0x8]
  5240: 82 19 10                 a2 = u64 [sp + 0x10]
  5243: aa 98 07                 jump @380 if a1 == a2
      :                          @379
  5246: 33 08                    a1 = 0
  5248: 28 0f                    jump @382
      :                          @380
  5250: 82 77                    a0 = u64 [a0]
  5252: 82 77                    a0 = u64 [a0]
  5254: 33 08 01                 a1 = 0x1
  5257: 28 06                    jump @382
      :                          @381
  5259: 33 08 01                 a1 = 0x1
  5262: 01                       fallthrough
      :                          @382
  5263: 7b 18 40                 u64 [sp + 0x40] = a1
  5266: 7b 17 48                 u64 [sp + 0x48] = a0
  5269: 82 67 08                 a0 = u64 [s1 + 0x8]
  5272: 97 77 04                 a0 = a0 << 0x4
  5275: 82 18 18                 a1 = u64 [sp + 0x18]
  5278: c8 78 08                 a1 = a1 + a0
  5281: 82 87                    a0 = u64 [a1]
  5283: 82 89 08                 a2 = u64 [a1 + 0x8]
  5286: 95 18 30                 a1 = sp + 0x30
  5289: b4 90 01 76              ra = 118, jump [a2]
      :                          @383 [@dyn 59]
  5293: 52 07 b8 00              jump @399 if a0 != 0
      :                          @384
  5297: 95 55 10                 s0 = s0 + 0x10
  5300: 82 18 20                 a1 = u64 [sp + 0x20]
  5303: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5306: 95 66 38                 s1 = s1 + 0x38
  5309: 82 17 28                 a0 = u64 [sp + 0x28]
  5312: 95 77 01                 a0 = a0 + 0x1
  5315: 7b 17 28                 u64 [sp + 0x28] = a0
  5318: 52 08 36 ff              jump @367 if a1 != 0
      :                          @385
  5322: 28 69                    jump @394
      :                          @386
  5324: 82 97 18                 a0 = u64 [a2 + 0x18]
  5327: 51 07 71                 jump @396 if a0 == 0
      :                          @387
  5330: 82 95 10                 s0 = u64 [a2 + 0x10]
  5333: 33 0a                    a3 = 0
  5335: 97 78 04                 a1 = a0 << 0x4
  5338: c8 58 08                 a1 = a1 + s0
  5341: 7b 18 20                 u64 [sp + 0x20] = a1
  5344: 7b 19 08                 u64 [sp + 0x8] = a2
  5347: 82 96                    s1 = u64 [a2]
  5349: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5352: 97 77 04                 a0 = a0 << 0x4
  5355: 98 77 04                 a0 = a0 >> 0x4
  5358: 95 77 01                 a0 = a0 + 0x1
  5361: 7b 17                    u64 [sp] = a0
  5363: 95 66 08                 s1 = s1 + 0x8
  5366: 01                       fallthrough
      :                          @388
  5367: 7b 1a 28                 u64 [sp + 0x28] = a3
  5370: 82 69                    a2 = u64 [s1]
  5372: 51 09 16                 jump @391 if a2 == 0
      :                          @389
  5375: 82 1a 58                 a3 = u64 [sp + 0x58]
  5378: 82 17 50                 a0 = u64 [sp + 0x50]
  5381: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5384: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5387: b4 a0 01 78              ra = 120, jump [a3]
      :                          @390 [@dyn 60]
  5391: 52 07 56                 jump @399 if a0 != 0
      :                          @391
  5394: 82 57                    a0 = u64 [s0]
  5396: 82 59 08                 a2 = u64 [s0 + 0x8]
  5399: 95 18 30                 a1 = sp + 0x30
  5402: b4 90 01 7a              ra = 122, jump [a2]
      :                          @392 [@dyn 61]
  5406: 52 07 47                 jump @399 if a0 != 0
      :                          @393
  5409: 95 66 10                 s1 = s1 + 0x10
  5412: 95 55 10                 s0 = s0 + 0x10
  5415: 82 1a 28                 a3 = u64 [sp + 0x28]
  5418: 95 aa 01                 a3 = a3 + 0x1
  5421: 82 17 20                 a0 = u64 [sp + 0x20]
  5424: ab 75 c7                 jump @388 if s0 != a0
      :                          @394
  5427: 82 19 08                 a2 = u64 [sp + 0x8]
  5430: 82 1a                    a3 = u64 [sp]
  5432: 82 97 08                 a0 = u64 [a2 + 0x8]
  5435: ac 7a 0d                 jump @397 if a3 <u a0
      :                          @395
  5438: 28 2c                    jump @400
      :                          @396
  5440: 33 0a                    a3 = 0
  5442: 82 97 08                 a0 = u64 [a2 + 0x8]
  5445: 54 07 25                 jump @400 if a0 <=u 0
      :                          @397
  5448: 82 97                    a0 = u64 [a2]
  5450: 97 a8 04                 a1 = a3 << 0x4
  5453: c8 87 09                 a2 = a0 + a1
  5456: 82 1a 58                 a3 = u64 [sp + 0x58]
  5459: 82 17 50                 a0 = u64 [sp + 0x50]
  5462: 82 98                    a1 = u64 [a2]
  5464: 82 99 08                 a2 = u64 [a2 + 0x8]
  5467: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5470: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @398 [@dyn 62]
  5474: 51 07 08                 jump @400 if a0 == 0
      :                          @399
  5477: 33 07 01                 a0 = 0x1
  5480: 28 05                    jump @401
      :                          @400
  5482: 33 07                    a0 = 0
  5484: 01                       fallthrough
      :                          @401
  5485: 82 10 80 00              ra = u64 [sp + 0x80]
  5489: 82 15 78                 s0 = u64 [sp + 0x78]
  5492: 82 16 70                 s1 = u64 [sp + 0x70]
  5495: 95 11 88 00              sp = sp + 0x88
  5499: 32 00                    ret
      :                          @402 [@dyn 63]
  5501: 32 00                    ret
      :                          @403 [@dyn 64]
  5503: 95 11 80                 sp = sp + 0xffffffffffffff80
  5506: 7b 10 78                 u64 [sp + 0x78] = ra
  5509: 7b 15 70                 u64 [sp + 0x70] = s0
  5512: 7b 16 68                 u64 [sp + 0x68] = s1
  5515: 64 92                    t0 = a2
  5517: 33 00                    ra = 0
  5519: 33 0b                    a4 = 0
  5521: 33 05                    s0 = 0
  5523: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5533: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5539: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5549: 82 79 10                 a2 = u64 [a0 + 0x10]
  5552: 7b 19 48                 u64 [sp + 0x48] = a2
  5555: 82 79                    a2 = u64 [a0]
  5557: 7b 19 38                 u64 [sp + 0x38] = a2
  5560: 82 77 08                 a0 = u64 [a0 + 0x8]
  5563: 7b 17 30                 u64 [sp + 0x30] = a0
  5566: 33 07 18 01 01           a0 = 0x10118
  5571: 7b 17 08                 u64 [sp + 0x8] = a0
  5574: 3a 07 28 00 03           a0 = u64 [0x30028]
  5579: 7b 17 60                 u64 [sp + 0x60] = a0
  5582: 7b 18 58                 u64 [sp + 0x58] = a1
  5585: 95 88 08                 a1 = a1 + 0x8
  5588: 7b 18                    u64 [sp] = a1
  5590: 33 0c 0a                 a5 = 0xa
  5593: 7b 12 20                 u64 [sp + 0x20] = t0
  5596: 7b 13 18                 u64 [sp + 0x18] = t1
  5599: 7b 14 10                 u64 [sp + 0x10] = t2
  5602: 28 3b                    jump @407
      :                          @404
  5604: 64 06                    s1 = ra
  5606: c8 89 07                 a0 = a2 + a1
  5609: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5612: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5615: 88 77 01                 a0 = a0 <u 0x1
  5618: 01                       fallthrough
      :                          @405
  5619: 82 1a 48                 a3 = u64 [sp + 0x48]
  5622: 78 a7                    u8 [a3] = a0
  5624: 82 17 30                 a0 = u64 [sp + 0x30]
  5627: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5630: 82 17 38                 a0 = u64 [sp + 0x38]
  5633: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @406 [@dyn 65]
  5638: 64 5b                    a4 = s0
  5640: 82 12 20                 t0 = u64 [sp + 0x20]
  5643: 82 13 18                 t1 = u64 [sp + 0x18]
  5646: 82 14 10                 t2 = u64 [sp + 0x10]
  5649: 64 60                    ra = s1
  5651: 33 0c 0a                 a5 = 0xa
  5654: 82 15 40                 s0 = u64 [sp + 0x40]
  5657: 52 07 64 01              jump @448 if a0 != 0
      :                          @407
  5661: 84 57 ff 00              a0 = s0 & 0xff
  5665: 52 07 58 01              jump @447 if a0 != 0
      :                          @408
  5669: 7b 1b 50                 u64 [sp + 0x50] = a4
  5672: ae 02 0a                 jump @411 if t0 >=u ra
      :                          @409
  5675: 28 ef 00                 jump @438
      :                          @410
  5678: ac 02 ec 00              jump @438 if t0 <u ra
      :                          @411
  5682: c9 02 08                 a1 = t0 - ra
  5685: 82 16 58                 s1 = u64 [sp + 0x58]
  5688: c8 06 06                 s1 = s1 + ra
  5691: 55 18 10 1d              jump @417 if a1 >=u 16
      :                          @412
  5695: aa 02 d8 00              jump @437 if t0 == ra
      :                          @413
  5699: 33 0a                    a3 = 0
  5701: 01                       fallthrough
      :                          @414
  5702: c8 a6 07                 a0 = s1 + a3
  5705: 7c 77                    a0 = u8 [a0]
  5707: aa c7 a5 00              jump @432 if a0 == a5
      :                          @415
  5711: 95 aa 01                 a3 = a3 + 0x1
  5714: ab a8 f4                 jump @414 if a1 != a3
      :                          @416
  5717: 28 c2 00                 jump @437
      :                          @417
  5720: 95 69 07                 a2 = s1 + 0x7
  5723: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5726: c9 6a 07                 a0 = a3 - s1
  5729: d3 6a 0a                 a3 = a3 ^ s1
  5732: 88 aa 01                 a3 = a3 <u 0x1
  5735: 88 7b 01                 a4 = a0 <u 0x1
  5738: d4 ba 0a                 a3 = a3 | a4
  5741: 51 0a 45                 jump @423 if a3 == 0
      :                          @418
  5744: 33 07                    a0 = 0
  5746: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5749: 82 1b                    a4 = u64 [sp]
  5751: c8 0b 0b                 a4 = a4 + ra
  5754: 28 08                    jump @420
      :                          @419
  5756: 82 1b                    a4 = u64 [sp]
  5758: c8 0b 0b                 a4 = a4 + ra
  5761: 01                       fallthrough
      :                          @420
  5762: c8 76 0c                 a5 = s1 + a0
  5765: 82 cc                    a5 = u64 [a5]
  5767: c8 7b 09                 a2 = a4 + a0
  5770: 82 99                    a2 = u64 [a2]
  5772: d3 4c 05                 s0 = a5 ^ t2
  5775: c8 35 05                 s0 = s0 + t1
  5778: e0 c5 0c                 a5 = s0 & ~a5
  5781: d3 49 05                 s0 = a2 ^ t2
  5784: c8 35 05                 s0 = s0 + t1
  5787: e0 95 09                 a2 = s0 & ~a2
  5790: d4 c9 09                 a2 = a2 | a5
  5793: 82 1c 60                 a5 = u64 [sp + 0x60]
  5796: d2 c9 09                 a2 = a2 & a5
  5799: 52 09 1f                 jump @426 if a2 != 0
      :                          @421
  5802: 95 77 10                 a0 = a0 + 0x10
  5805: ae 7a d5                 jump @420 if a3 >=u a0
      :                          @422
  5808: 28 16                    jump @426
      :                          @423
  5810: c8 a6 0b                 a4 = s1 + a3
  5813: 7c bb                    a4 = u8 [a4]
  5815: aa cb 51                 jump @435 if a4 == a5
      :                          @424
  5818: 95 aa 01                 a3 = a3 + 0x1
  5821: ab a7 f5                 jump @423 if a0 != a3
      :                          @425
  5824: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5827: ae 7a b9                 jump @419 if a3 >=u a0
      :                          @426
  5830: aa 87 9b 00              jump @444 if a0 == a1
      :                          @427
  5834: 33 0a                    a3 = 0
  5836: c8 76 06                 s1 = s1 + a0
  5839: c9 72 08                 a1 = t0 - a0
  5842: c9 08 08                 a1 = a1 - ra
  5845: 33 0c 0a                 a5 = 0xa
  5848: 82 1b 50                 a4 = u64 [sp + 0x50]
  5851: 01                       fallthrough
      :                          @428
  5852: c8 a6 09                 a2 = s1 + a3
  5855: 7c 99                    a2 = u8 [a2]
  5857: aa c9 0b                 jump @431 if a2 == a5
      :                          @429
  5860: 95 aa 01                 a3 = a3 + 0x1
  5863: ab a8 f5                 jump @428 if a1 != a3
      :                          @430
  5866: 28 2d                    jump @437
      :                          @431
  5868: c8 7a 0a                 a3 = a3 + a0
  5871: 01                       fallthrough
      :                          @432
  5872: c8 0a 0a                 a3 = a3 + ra
  5875: 95 a0 01                 ra = a3 + 0x1
  5878: ae 2a 38 ff              jump @410 if a3 >=u t0
      :                          @433
  5882: 82 17 58                 a0 = u64 [sp + 0x58]
  5885: c8 7a 0a                 a3 = a3 + a0
  5888: 7c a7                    a0 = u8 [a3]
  5890: ab c7 2c ff              jump @410 if a0 != a5
      :                          @434
  5894: 28 62                    jump @445
      :                          @435
  5896: 82 1b 50                 a4 = u64 [sp + 0x50]
  5899: c8 0a 0a                 a3 = a3 + ra
  5902: 95 a0 01                 ra = a3 + 0x1
  5905: ac 2a e9                 jump @433 if a3 <u t0
      :                          @436
  5908: 28 1a ff                 jump @410
      :                          @437
  5911: 64 20                    ra = t0
  5913: 01                       fallthrough
      :                          @438
  5914: 49 11 40 01              u64 [sp + 64] = 0x1
  5918: 64 b5                    s0 = a4
  5920: 64 26                    s1 = t0
  5922: aa 2b 57                 jump @447 if a4 == t0
      :                          @439
  5925: 82 17 48                 a0 = u64 [sp + 0x48]
  5928: 7c 77                    a0 = u8 [a0]
  5930: 51 07 23                 jump @442 if a0 == 0
      :                          @440
  5933: 82 17 30                 a0 = u64 [sp + 0x30]
  5936: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5939: 33 09 04                 a2 = 0x4
  5942: 82 17 38                 a0 = u64 [sp + 0x38]
  5945: 82 18 08                 a1 = u64 [sp + 0x8]
  5948: 7b 10 28                 u64 [sp + 0x28] = ra
  5951: b4 a0 02 84 00           ra = 132, jump [a3]
      :                          @441 [@dyn 66]
  5956: 82 1b 50                 a4 = u64 [sp + 0x50]
  5959: 82 10 28                 ra = u64 [sp + 0x28]
  5962: 52 07 33                 jump @448 if a0 != 0
      :                          @442
  5965: c9 b6 09                 a2 = s1 - a4
  5968: 82 18 58                 a1 = u64 [sp + 0x58]
  5971: c8 b8 08                 a1 = a1 + a4
  5974: ab b6 8e fe              jump @404 if s1 != a4
      :                          @443
  5978: 64 06                    s1 = ra
  5980: 33 07                    a0 = 0
  5982: 28 95 fe                 jump @405
      :                          @444
  5985: 64 20                    ra = t0
  5987: 82 1b 50                 a4 = u64 [sp + 0x50]
  5990: 28 b4                    jump @438
      :                          @445
  5992: 49 11 40                 u64 [sp + 64] = 0
  5995: 64 05                    s0 = ra
  5997: 64 06                    s1 = ra
  5999: 82 17 48                 a0 = u64 [sp + 0x48]
  6002: 7c 77                    a0 = u8 [a0]
  6004: 52 07 b9                 jump @440 if a0 != 0
      :                          @446
  6007: 28 d6                    jump @442
      :                          @447
  6009: 33 07                    a0 = 0
  6011: 28 06                    jump @449
      :                          @448
  6013: 33 07 01                 a0 = 0x1
  6016: 01                       fallthrough
      :                          @449
  6017: 82 10 78                 ra = u64 [sp + 0x78]
  6020: 82 15 70                 s0 = u64 [sp + 0x70]
  6023: 82 16 68                 s1 = u64 [sp + 0x68]
  6026: 95 11 80 00              sp = sp + 0x80
  6030: 32 00                    ret
      :                          @450 [@dyn 67]
  6032: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6035: 7b 10 20                 u64 [sp + 0x20] = ra
  6038: 7b 15 18                 u64 [sp + 0x18] = s0
  6041: 7b 16 10                 u64 [sp + 0x10] = s1
  6044: 82 75 10                 s0 = u64 [a0 + 0x10]
  6047: 7c 59                    a2 = u8 [s0]
  6049: 82 7b                    a4 = u64 [a0]
  6051: 82 76 08                 s1 = u64 [a0 + 0x8]
  6054: 51 09 33                 jump @454 if a2 == 0
      :                          @451
  6057: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6060: 7b 18 08                 u64 [sp + 0x8] = a1
  6063: 33 08 18 01 01           a1 = 0x10118
  6068: 33 09 04                 a2 = 0x4
  6071: 64 b7                    a0 = a4
  6073: 7b 1b                    u64 [sp] = a4
  6075: b4 a0 02 88 00           ra = 136, jump [a3]
      :                          @452 [@dyn 68]
  6080: 82 18 08                 a1 = u64 [sp + 0x8]
  6083: 82 1b                    a4 = u64 [sp]
  6085: 51 07 14                 jump @454 if a0 == 0
      :                          @453
  6088: 33 07 01                 a0 = 0x1
  6091: 82 10 20                 ra = u64 [sp + 0x20]
  6094: 82 15 18                 s0 = u64 [sp + 0x18]
  6097: 82 16 10                 s1 = u64 [sp + 0x10]
  6100: 95 11 28                 sp = sp + 0x28
  6103: 32 00                    ret
      :                          @454
  6105: 83 87                    i32 a0 = a1 + 0
  6107: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6110: 88 77 01                 a0 = a0 <u 0x1
  6113: 78 57                    u8 [s0] = a0
  6115: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6118: 64 b7                    a0 = a4
  6120: 82 10 20                 ra = u64 [sp + 0x20]
  6123: 82 15 18                 s0 = u64 [sp + 0x18]
  6126: 82 16 10                 s1 = u64 [sp + 0x10]
  6129: 95 11 28                 sp = sp + 0x28
  6132: 32 0c                    jump [a5]
      :                          @455 [@dyn 69]
  6134: 64 8a                    a3 = a1
  6136: 33 08 e8 00 01           a1 = 0x100e8
  6141: 64 a9                    a2 = a3
  6143: 28 9f fb                 jump @364
      :                          @456
  6146: 95 11 58 ff              sp = sp + 0xffffffffffffff58
  6150: 7b 10 a0 00              u64 [sp + 0xa0] = ra
  6154: 7b 15 98 00              u64 [sp + 0x98] = s0
  6158: 7b 16 90 00              u64 [sp + 0x90] = s1
  6162: 64 76                    s1 = a0
  6164: 82 7c 28                 a5 = u64 [a0 + 0x28]
  6167: 82 77 20                 a0 = u64 [a0 + 0x20]
  6170: 7b 1c 10                 u64 [sp + 0x10] = a5
  6173: 82 c5 18                 s0 = u64 [a5 + 0x18]
  6176: 7b 1b 20                 u64 [sp + 0x20] = a4
  6179: 7b 1a 18                 u64 [sp + 0x18] = a3
  6182: 7b 17 28                 u64 [sp + 0x28] = a0
  6185: b4 50 02 8c 00           ra = 140, jump [s0]
      :                          @457 [@dyn 70]
  6190: 33 08 01                 a1 = 0x1
  6193: 52 07 f3 00              jump @473 if a0 != 0
      :                          @458
  6197: 7b 16 08                 u64 [sp + 0x8] = s1
  6200: 80 68 34                 a1 = u32 [s1 + 0x34]
  6203: 84 87 04                 a0 = a1 & 0x4
  6206: 52 07 31                 jump @464 if a0 != 0
      :                          @459
  6209: 33 08 20 01 01           a1 = 0x10120
  6214: 33 09 01                 a2 = 0x1
  6217: 82 17 28                 a0 = u64 [sp + 0x28]
  6220: b4 50 02 8e 00           ra = 142, jump [s0]
      :                          @460 [@dyn 71]
  6225: 52 07 99 00              jump @468 if a0 != 0
      :                          @461
  6229: 82 17 18                 a0 = u64 [sp + 0x18]
  6232: 82 15 08                 s0 = u64 [sp + 0x8]
  6235: 64 58                    a1 = s0
  6237: 82 19 20                 a2 = u64 [sp + 0x20]
  6240: b4 90 02 90 00           ra = 144, jump [a2]
      :                          @462 [@dyn 72]
  6245: 33 08 01                 a1 = 0x1
  6248: 52 07 bc 00              jump @473 if a0 != 0
      :                          @463
  6252: 28 9f 00                 jump @471
      :                          @464
  6255: 7b 18                    u64 [sp] = a1
  6257: 33 08 21 01 01           a1 = 0x10121
  6262: 33 09 02                 a2 = 0x2
  6265: 82 16 28                 s1 = u64 [sp + 0x28]
  6268: 64 67                    a0 = s1
  6270: b4 50 02 92 00           ra = 146, jump [s0]
      :                          @465 [@dyn 73]
  6275: 33 08 01                 a1 = 0x1
  6278: 82 15 08                 s0 = u64 [sp + 0x8]
  6281: 52 07 9b 00              jump @473 if a0 != 0
      :                          @466
  6285: 46 11 4f 01              u8 [sp + 79] = 0x1
  6289: 7b 16 30                 u64 [sp + 0x30] = s1
  6292: 82 17 10                 a0 = u64 [sp + 0x10]
  6295: 7b 17 38                 u64 [sp + 0x38] = a0
  6298: 95 17 4f                 a0 = sp + 0x4f
  6301: 7b 17 40                 u64 [sp + 0x40] = a0
  6304: 81 57 30                 a0 = i32 [s0 + 0x30]
  6307: 7c 58 38                 a1 = u8 [s0 + 0x38]
  6310: 82 59                    a2 = u64 [s0]
  6312: 82 5a 08                 a3 = u64 [s0 + 0x8]
  6315: 82 5b 10                 a4 = u64 [s0 + 0x10]
  6318: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6321: 82 16                    s1 = u64 [sp]
  6323: 7a 16 84 00              u32 [sp + 0x84] = s1
  6327: 7a 17 80 00              u32 [sp + 0x80] = a0
  6331: 78 18 88 00              u8 [sp + 0x88] = a1
  6335: 7b 19 50                 u64 [sp + 0x50] = a2
  6338: 7b 1a 58                 u64 [sp + 0x58] = a3
  6341: 7b 1b 60                 u64 [sp + 0x60] = a4
  6344: 7b 1c 68                 u64 [sp + 0x68] = a5
  6347: 95 17 30                 a0 = sp + 0x30
  6350: 7b 17 70                 u64 [sp + 0x70] = a0
  6353: 33 07 e8 00 01           a0 = 0x100e8
  6358: 7b 17 78                 u64 [sp + 0x78] = a0
  6361: 95 18 50                 a1 = sp + 0x50
  6364: 82 17 18                 a0 = u64 [sp + 0x18]
  6367: 82 19 20                 a2 = u64 [sp + 0x20]
  6370: b4 90 02 94 00           ra = 148, jump [a2]
      :                          @467 [@dyn 74]
  6375: 51 07 08                 jump @469 if a0 == 0
      :                          @468
  6378: 33 08 01                 a1 = 0x1
  6381: 28 37                    jump @473
      :                          @469
  6383: 82 18 78                 a1 = u64 [sp + 0x78]
  6386: 82 17 70                 a0 = u64 [sp + 0x70]
  6389: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6392: 33 08 1e 01 01           a1 = 0x1011e
  6397: 33 09 02                 a2 = 0x2
  6400: b4 a0 02 96 00           ra = 150, jump [a3]
      :                          @470 [@dyn 75]
  6405: 33 08 01                 a1 = 0x1
  6408: 52 07 1c                 jump @473 if a0 != 0
      :                          @471
  6411: 82 58 28                 a1 = u64 [s0 + 0x28]
  6414: 82 57 20                 a0 = u64 [s0 + 0x20]
  6417: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6420: 33 08 e0 00 01           a1 = 0x100e0
  6425: 33 09 01                 a2 = 0x1
  6428: b4 a0 02 98 00           ra = 152, jump [a3]
      :                          @472 [@dyn 76]
  6433: 64 78                    a1 = a0
  6435: 01                       fallthrough
      :                          @473
  6436: 64 87                    a0 = a1
  6438: 82 10 a0 00              ra = u64 [sp + 0xa0]
  6442: 82 15 98 00              s0 = u64 [sp + 0x98]
  6446: 82 16 90 00              s1 = u64 [sp + 0x90]
  6450: 95 11 a8 00              sp = sp + 0xa8
  6454: 32 00                    ret
