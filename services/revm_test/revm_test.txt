// RO data = 4564/4564 bytes
// RW data = 16/134217776 bytes
// Stack size = 16773120 bytes
// RO data = [164, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 174, 1, 0, 0, 168, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 172, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 176, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 170, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 69, 111, 102, 104, 101, 97, 100, 101, 114, 98, 111, 100, 121, 99, 111, 100, 101, 116, 114, 117, 101, 32, 32, 32, 32, 114, 97, 119, 76, 101, 103, 97, 99, 121, 65, 110, 97, 108, 121, 122, 101, 100, 69, 105, 112, 55, 55, 48, 50, 99, 111, 100, 101, 95, 105, 110, 102, 111, 99, 111, 100, 101, 95, 115, 101, 99, 116, 105, 111, 110, 99, 111, 100, 101, 95, 111, 102, 102, 115, 101, 116, 99, 111, 110, 116, 97, 105, 110, 101, 114, 95, 115, 101, 99, 116, 105, 111, 110, 100, 97, 116, 97, 95, 115, 101, 99, 116, 105, 111, 110, 105, 115, 95, 100, 97, 116, 97, 95, 102, 105, 108, 108, 101, 100, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 69, 111, 102, 66, 111, 100, 121, 90, 101, 114, 111, 67, 111, 100, 101, 83, 101, 99, 116, 105, 111, 110, 115, 73, 110, 118, 97, 108, 105, 100, 84, 121, 112, 101, 115, 75, 105, 110, 100, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 98, 121, 116, 101, 99, 111, 100, 101, 78, 111, 110, 83, 105, 122, 101, 115, 67, 111, 100, 101, 73, 110, 102, 111, 90, 101, 114, 111, 83, 105, 122, 101, 116, 121, 112, 101, 115, 95, 115, 105, 122, 101, 99, 111, 100, 101, 95, 115, 105, 122, 101, 115, 99, 111, 110, 116, 97, 105, 110, 101, 114, 95, 115, 105, 122, 101, 115, 100, 97, 116, 97, 95, 115, 105, 122, 101, 115, 117, 109, 95, 99, 111, 100, 101, 95, 115, 105, 122, 101, 115, 115, 117, 109, 95, 99, 111, 110, 116, 97, 105, 110, 101, 114, 95, 115, 105, 122, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 69, 111, 102, 72, 101, 97, 100, 101, 114, 69, 105, 112, 55, 55, 48, 50, 66, 121, 116, 101, 99, 111, 100, 101, 100, 101, 108, 101, 103, 97, 116, 101, 100, 95, 97, 100, 100, 114, 101, 115, 115, 118, 101, 114, 115, 105, 111, 110, 105, 110, 112, 117, 116, 115, 111, 117, 116, 112, 117, 116, 115, 109, 97, 120, 95, 115, 116, 97, 99, 107, 95, 115, 105, 122, 101, 76, 101, 103, 97, 99, 121, 65, 110, 97, 108, 121, 122, 101, 100, 66, 121, 116, 101, 99, 111, 100, 101, 111, 114, 105, 103, 105, 110, 97, 108, 95, 108, 101, 110, 106, 117, 109, 112, 95, 116, 97, 98, 108, 101, 114, 101, 102, 105, 110, 101, 32, 99, 97, 108, 108, 101, 100, 98, 121, 116, 101, 99, 111, 100, 101, 32, 100, 101, 99, 111, 100, 101, 100, 58, 32, 0, 0, 108, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 54, 48, 56, 48, 54, 48, 52, 48, 53, 50, 51, 52, 56, 48, 49, 53, 54, 48, 48, 101, 53, 55, 53, 102, 56, 48, 102, 100, 53, 98, 53, 48, 54, 48, 98, 48, 56, 48, 54, 48, 49, 97, 53, 102, 51, 57, 53, 102, 102, 51, 102, 101, 54, 48, 56, 48, 54, 48, 52, 48, 53, 50, 51, 52, 56, 48, 49, 53, 54, 48, 48, 101, 53, 55, 53, 102, 56, 48, 102, 100, 53, 98, 53, 48, 54, 48, 48, 52, 51, 54, 49, 48, 54, 48, 50, 54, 53, 55, 53, 102, 51, 53, 54, 48, 101, 48, 49, 99, 56, 48, 54, 51, 49, 97, 52, 51, 99, 51, 51, 56, 49, 52, 54, 48, 50, 97, 53, 55, 53, 98, 53, 102, 56, 48, 102, 100, 53, 98, 54, 48, 51, 48, 54, 48, 52, 52, 53, 54, 53, 98, 54, 48, 52, 48, 53, 49, 54, 48, 51, 98, 57, 49, 57, 48, 54, 48, 54, 51, 53, 54, 53, 98, 54, 48, 52, 48, 53, 49, 56, 48, 57, 49, 48, 51, 57, 48, 102, 51, 53, 98, 53, 102, 54, 49, 48, 49, 98, 99, 57, 48, 53, 48, 57, 48, 53, 54, 53, 98, 53, 102, 56, 49, 57, 48, 53, 48, 57, 49, 57, 48, 53, 48, 53, 54, 53, 98, 54, 48, 53, 100, 56, 49, 54, 48, 52, 100, 53, 54, 53, 98, 56, 50, 53, 50, 53, 48, 53, 48, 53, 54, 53, 98, 53, 102, 54, 48, 50, 48, 56, 50, 48, 49, 57, 48, 53, 48, 54, 48, 55, 52, 53, 102, 56, 51, 48, 49, 56, 52, 54, 48, 53, 54, 53, 54, 53, 98, 57, 50, 57, 49, 53, 48, 53, 48, 53, 54, 102, 101, 97, 50, 54, 52, 54, 57, 55, 48, 54, 54, 55, 51, 53, 56, 50, 50, 49, 50, 50, 48, 98, 48, 56, 51, 99, 50, 55, 55, 56, 57, 50, 99, 98, 98, 52, 57, 57, 100, 57, 97, 53, 55, 50, 55, 53, 52, 53, 49, 50, 99, 53, 98, 50, 51, 54, 55, 52, 99, 55, 53, 98, 54, 97, 98, 99, 100, 52, 48, 52, 52, 53, 53, 49, 52, 99, 49, 102, 102, 56, 48, 51, 54, 56, 98, 54, 52, 55, 51, 54, 102, 54, 99, 54, 51, 52, 51, 48, 48, 48, 56, 49, 97, 48, 48, 51, 51, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 0, 0, 64, 1, 0, 0, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 0, 0, 78, 1, 0, 0, 0, 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 102, 1, 0, 0, 0, 0, 0, 0, 106, 1, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 78, 1, 0, 0, 0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 90, 1, 0, 0, 0, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 98, 1, 0, 0, 0, 0, 0, 0, 100, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 255, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 41, 91, 58, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 198, 1, 0, 0, 0, 0, 0, 0, 204, 1, 0, 0, 0, 0, 0, 0, 208, 1, 0, 0, 0, 0, 0, 0, 32, 123, 32, 44, 32, 32, 123, 10, 44, 10, 125, 32, 125, 40, 40, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 47, 114, 111, 111, 116, 47, 46, 114, 117, 115, 116, 117, 112, 47, 116, 111, 111, 108, 99, 104, 97, 105, 110, 115, 47, 114, 118, 101, 45, 110, 105, 103, 104, 116, 108, 121, 45, 49, 56, 54, 47, 108, 105, 98, 47, 114, 117, 115, 116, 108, 105, 98, 47, 115, 114, 99, 47, 114, 117, 115, 116, 47, 108, 105, 98, 114, 97, 114, 121, 47, 99, 111, 114, 101, 47, 115, 114, 99, 47, 102, 109, 116, 47, 109, 111, 100, 46, 114, 115, 102, 97, 108, 115, 101, 0, 0, 0, 0, 0, 0, 228, 7, 1, 0, 0, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 0, 169, 10, 0, 0, 38, 0, 0, 0, 228, 7, 1, 0, 0, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 0, 178, 10, 0, 0, 26, 0, 0, 0, 0, 6, 1, 1, 3, 1, 4, 2, 5, 7, 7, 2, 8, 8, 9, 2, 10, 5, 11, 2, 14, 4, 16, 1, 17, 2, 18, 5, 19, 28, 20, 1, 21, 2, 23, 2, 25, 13, 28, 5, 29, 8, 31, 1, 36, 1, 106, 4, 107, 2, 175, 3, 177, 2, 188, 2, 207, 2, 209, 2, 212, 12, 213, 9, 214, 2, 215, 2, 218, 1, 224, 5, 225, 2, 231, 4, 232, 2, 238, 32, 240, 4, 248, 2, 250, 4, 251, 1, 12, 39, 59, 62, 78, 79, 143, 158, 158, 159, 123, 139, 147, 150, 162, 178, 186, 134, 177, 6, 7, 9, 54, 61, 62, 86, 243, 208, 209, 4, 20, 24, 54, 55, 86, 87, 127, 170, 174, 175, 189, 53, 224, 18, 135, 137, 142, 158, 4, 13, 14, 17, 18, 41, 49, 52, 58, 69, 70, 73, 74, 78, 79, 100, 101, 138, 140, 141, 143, 182, 193, 195, 196, 198, 203, 214, 92, 182, 183, 27, 28, 7, 8, 10, 11, 20, 23, 54, 57, 58, 168, 169, 216, 217, 9, 55, 144, 145, 168, 7, 10, 59, 62, 102, 105, 143, 146, 17, 111, 95, 191, 238, 239, 90, 98, 244, 252, 255, 83, 84, 154, 155, 46, 47, 39, 40, 85, 157, 160, 161, 163, 164, 167, 168, 173, 186, 188, 196, 6, 11, 12, 21, 29, 58, 63, 69, 81, 166, 167, 204, 205, 160, 7, 25, 26, 34, 37, 62, 63, 231, 236, 239, 255, 197, 198, 4, 32, 35, 37, 38, 40, 51, 56, 58, 72, 74, 76, 80, 83, 85, 86, 88, 90, 92, 94, 96, 99, 101, 102, 107, 115, 120, 125, 127, 138, 164, 170, 175, 176, 192, 208, 174, 175, 110, 111, 221, 222, 147, 94, 34, 123, 5, 3, 4, 45, 3, 102, 3, 1, 47, 46, 128, 130, 29, 3, 49, 15, 28, 4, 36, 9, 30, 5, 43, 5, 68, 4, 14, 42, 128, 170, 6, 36, 4, 36, 4, 40, 8, 52, 11, 78, 3, 52, 12, 129, 55, 9, 22, 10, 8, 24, 59, 69, 57, 3, 99, 8, 9, 48, 22, 5, 33, 3, 27, 5, 1, 64, 56, 4, 75, 5, 47, 4, 10, 7, 9, 7, 64, 32, 39, 4, 12, 9, 54, 3, 58, 5, 26, 7, 4, 12, 7, 80, 73, 55, 51, 13, 51, 7, 46, 8, 10, 6, 38, 3, 29, 8, 2, 128, 208, 82, 16, 3, 55, 44, 8, 42, 22, 26, 38, 28, 20, 23, 9, 78, 4, 36, 9, 68, 13, 25, 7, 10, 6, 72, 8, 39, 9, 117, 11, 66, 62, 42, 6, 59, 5, 10, 6, 81, 6, 1, 5, 16, 3, 5, 11, 89, 8, 2, 29, 98, 30, 72, 8, 10, 128, 166, 94, 34, 69, 11, 10, 6, 13, 19, 58, 6, 10, 6, 20, 28, 44, 4, 23, 128, 185, 60, 100, 83, 12, 72, 9, 10, 70, 69, 27, 72, 8, 83, 13, 73, 7, 10, 128, 182, 34, 14, 10, 6, 70, 10, 29, 3, 71, 73, 55, 3, 14, 8, 10, 6, 57, 7, 10, 129, 54, 25, 7, 59, 3, 29, 85, 1, 15, 50, 13, 131, 155, 102, 117, 11, 128, 196, 138, 76, 99, 13, 132, 48, 16, 22, 10, 143, 155, 5, 130, 71, 154, 185, 58, 134, 198, 130, 57, 7, 42, 4, 92, 6, 38, 10, 70, 10, 40, 5, 19, 129, 176, 58, 128, 198, 91, 101, 75, 4, 57, 7, 17, 64, 5, 11, 2, 14, 151, 248, 8, 132, 214, 41, 10, 162, 231, 129, 51, 15, 1, 29, 6, 14, 4, 8, 129, 140, 137, 4, 107, 5, 13, 3, 9, 7, 16, 143, 96, 128, 250, 6, 129, 180, 76, 71, 9, 116, 60, 128, 246, 10, 115, 8, 112, 21, 70, 122, 20, 12, 20, 12, 87, 9, 25, 128, 135, 129, 71, 3, 133, 66, 15, 21, 132, 80, 31, 6, 6, 128, 213, 43, 5, 62, 33, 1, 112, 45, 3, 26, 4, 2, 129, 64, 31, 17, 58, 5, 1, 129, 208, 42, 128, 214, 43, 4, 1, 129, 224, 128, 247, 41, 76, 4, 10, 4, 2, 131, 17, 68, 76, 61, 128, 194, 60, 6, 1, 4, 85, 5, 27, 52, 2, 129, 14, 44, 4, 100, 12, 86, 10, 128, 174, 56, 29, 13, 44, 4, 9, 7, 2, 14, 6, 128, 154, 131, 216, 4, 17, 3, 13, 3, 119, 4, 95, 6, 12, 4, 1, 15, 12, 4, 56, 8, 10, 6, 40, 8, 44, 4, 2, 62, 129, 84, 12, 29, 3, 10, 5, 56, 7, 28, 6, 9, 7, 128, 250, 132, 6, 0, 1, 3, 5, 5, 6, 6, 2, 7, 6, 8, 7, 9, 17, 10, 28, 11, 25, 12, 26, 13, 16, 14, 12, 15, 4, 16, 3, 18, 18, 19, 9, 22, 1, 23, 4, 24, 1, 25, 3, 26, 7, 27, 1, 28, 2, 31, 22, 32, 3, 43, 3, 45, 11, 46, 1, 48, 4, 49, 2, 50, 1, 167, 4, 169, 2, 170, 4, 171, 8, 250, 2, 251, 5, 253, 2, 254, 3, 255, 9, 173, 120, 121, 139, 141, 162, 48, 87, 88, 139, 140, 144, 28, 221, 14, 15, 75, 76, 251, 252, 46, 47, 63, 92, 93, 95, 226, 132, 141, 142, 145, 146, 169, 177, 186, 187, 197, 198, 201, 202, 222, 228, 229, 255, 0, 4, 17, 18, 41, 49, 52, 55, 58, 59, 61, 73, 74, 93, 132, 142, 146, 169, 177, 180, 186, 187, 198, 202, 206, 207, 228, 229, 0, 4, 13, 14, 17, 18, 41, 49, 52, 58, 59, 69, 70, 73, 74, 94, 100, 101, 132, 145, 155, 157, 201, 206, 207, 13, 17, 41, 58, 59, 69, 73, 87, 91, 92, 94, 95, 100, 101, 141, 145, 169, 180, 186, 187, 197, 201, 223, 228, 229, 240, 13, 17, 69, 73, 100, 101, 128, 132, 178, 188, 190, 191, 213, 215, 240, 241, 131, 133, 139, 164, 166, 190, 191, 197, 199, 207, 218, 219, 72, 152, 189, 205, 198, 206, 207, 73, 78, 79, 87, 89, 94, 95, 137, 142, 143, 177, 182, 183, 191, 193, 198, 199, 215, 17, 22, 23, 91, 92, 246, 247, 254, 255, 128, 109, 113, 222, 223, 14, 31, 110, 111, 28, 29, 95, 125, 126, 174, 175, 77, 187, 188, 22, 23, 30, 31, 70, 71, 78, 79, 88, 90, 92, 94, 126, 127, 181, 197, 212, 213, 220, 240, 241, 245, 114, 115, 143, 116, 117, 150, 38, 46, 47, 167, 175, 183, 191, 199, 207, 215, 223, 154, 0, 64, 151, 152, 48, 143, 31, 206, 207, 210, 212, 206, 255, 78, 79, 90, 91, 7, 8, 15, 16, 39, 47, 238, 239, 110, 111, 55, 61, 63, 66, 69, 144, 145, 83, 103, 117, 200, 201, 208, 209, 216, 217, 231, 254, 255, 0, 32, 95, 34, 130, 223, 4, 130, 68, 8, 27, 4, 6, 17, 129, 172, 14, 128, 171, 5, 31, 8, 129, 28, 3, 25, 8, 1, 4, 47, 4, 52, 4, 7, 3, 1, 7, 6, 7, 17, 10, 80, 15, 18, 7, 85, 7, 3, 4, 28, 10, 9, 3, 8, 3, 7, 3, 2, 3, 3, 3, 12, 4, 5, 3, 11, 6, 1, 14, 21, 5, 78, 7, 27, 7, 87, 7, 2, 6, 23, 12, 80, 4, 67, 3, 45, 3, 1, 4, 17, 6, 15, 12, 58, 4, 29, 37, 95, 32, 109, 4, 106, 37, 128, 200, 5, 130, 176, 3, 26, 6, 130, 253, 3, 89, 7, 22, 9, 24, 9, 20, 12, 20, 12, 106, 6, 10, 6, 26, 6, 89, 7, 43, 5, 70, 10, 44, 4, 12, 4, 1, 3, 49, 11, 44, 4, 26, 6, 11, 3, 128, 172, 6, 10, 6, 47, 49, 128, 244, 8, 60, 3, 15, 3, 62, 5, 56, 8, 43, 5, 130, 255, 17, 24, 8, 47, 17, 45, 3, 33, 15, 33, 15, 128, 140, 4, 130, 154, 22, 11, 21, 136, 148, 5, 47, 5, 59, 7, 2, 14, 24, 9, 128, 190, 34, 116, 12, 128, 214, 26, 129, 16, 5, 128, 225, 9, 242, 158, 3, 55, 9, 129, 92, 20, 128, 184, 8, 128, 221, 21, 59, 3, 10, 6, 56, 8, 70, 8, 12, 6, 116, 11, 30, 3, 90, 4, 89, 9, 128, 131, 24, 28, 10, 22, 9, 76, 4, 128, 138, 6, 171, 164, 12, 23, 4, 49, 161, 4, 129, 218, 38, 7, 12, 5, 5, 128, 166, 16, 129, 245, 7, 1, 32, 42, 6, 76, 4, 128, 141, 4, 128, 190, 3, 27, 3, 15, 13, 0, 0, 0, 0, 3, 0, 0, 131, 4, 32, 0, 145, 5, 96, 0, 93, 19, 160, 0, 18, 23, 32, 31, 12, 32, 96, 31, 239, 44, 32, 43, 42, 48, 160, 43, 111, 166, 96, 44, 2, 168, 224, 44, 30, 251, 224, 45, 0, 254, 32, 54, 158, 255, 96, 54, 253, 1, 225, 54, 1, 10, 33, 55, 36, 13, 225, 55, 171, 14, 97, 57, 47, 24, 225, 57, 48, 28, 225, 74, 243, 30, 225, 78, 64, 52, 161, 82, 30, 97, 225, 83, 240, 106, 97, 84, 79, 111, 225, 84, 157, 188, 97, 85, 0, 207, 97, 86, 101, 209, 161, 86, 0, 218, 33, 87, 0, 224, 161, 88, 174, 226, 33, 90, 236, 228, 225, 91, 208, 232, 97, 92, 32, 0, 238, 92, 240, 1, 127, 93, 0, 112, 0, 7, 0, 45, 1, 1, 1, 2, 1, 2, 1, 1, 72, 11, 48, 21, 16, 1, 101, 7, 2, 6, 2, 2, 1, 4, 35, 1, 30, 27, 91, 11, 58, 9, 9, 1, 24, 4, 1, 9, 1, 3, 1, 5, 43, 3, 59, 9, 42, 24, 1, 32, 55, 1, 1, 1, 4, 8, 4, 1, 3, 7, 10, 2, 29, 1, 58, 1, 1, 1, 2, 4, 8, 1, 9, 1, 10, 2, 26, 1, 2, 2, 57, 1, 4, 2, 4, 2, 2, 3, 3, 1, 30, 2, 3, 1, 11, 2, 57, 1, 4, 5, 1, 2, 4, 1, 20, 2, 22, 6, 1, 1, 58, 1, 1, 2, 1, 4, 8, 1, 7, 3, 10, 2, 30, 1, 59, 1, 1, 1, 12, 1, 9, 1, 40, 1, 3, 1, 55, 1, 1, 3, 5, 3, 1, 4, 7, 2, 11, 2, 29, 1, 58, 1, 2, 2, 1, 1, 3, 3, 1, 4, 7, 2, 11, 2, 28, 2, 57, 2, 1, 1, 2, 4, 8, 1, 9, 1, 10, 2, 29, 1, 72, 1, 4, 1, 2, 3, 1, 1, 8, 1, 81, 1, 2, 7, 12, 8, 98, 1, 2, 9, 11, 7, 73, 2, 27, 1, 1, 1, 1, 1, 55, 14, 1, 5, 1, 2, 5, 11, 1, 36, 9, 1, 102, 4, 1, 6, 1, 2, 2, 2, 25, 2, 4, 3, 16, 4, 13, 1, 2, 2, 6, 1, 15, 1, 0, 3, 0, 4, 28, 3, 29, 2, 30, 2, 64, 2, 1, 7, 8, 1, 2, 11, 9, 1, 45, 3, 1, 1, 117, 2, 34, 1, 118, 3, 4, 2, 9, 1, 6, 3, 219, 2, 2, 1, 58, 1, 1, 7, 1, 1, 1, 1, 2, 8, 6, 10, 2, 1, 48, 31, 49, 4, 48, 10, 4, 3, 38, 9, 12, 2, 32, 4, 2, 6, 56, 1, 1, 2, 3, 1, 1, 5, 56, 8, 2, 2, 152, 3, 1, 13, 1, 7, 4, 1, 6, 1, 3, 2, 198, 64, 0, 1, 195, 33, 0, 3, 141, 1, 96, 32, 0, 6, 105, 2, 0, 4, 1, 10, 32, 2, 80, 2, 0, 1, 3, 1, 4, 1, 25, 2, 5, 1, 151, 2, 26, 18, 13, 1, 38, 8, 25, 11, 1, 1, 44, 3, 48, 1, 2, 4, 2, 2, 2, 1, 36, 1, 67, 6, 2, 2, 2, 2, 12, 1, 8, 1, 47, 1, 51, 1, 1, 3, 2, 2, 5, 2, 1, 1, 42, 2, 8, 1, 238, 1, 2, 1, 4, 1, 0, 1, 0, 16, 16, 16, 0, 2, 0, 1, 226, 1, 149, 5, 0, 3, 1, 2, 5, 4, 40, 3, 4, 1, 165, 2, 0, 4, 65, 5, 0, 2, 79, 4, 70, 11, 49, 4, 123, 1, 54, 15, 41, 1, 2, 2, 10, 3, 49, 4, 2, 2, 7, 1, 61, 3, 36, 5, 1, 8, 62, 1, 12, 2, 52, 9, 1, 1, 8, 4, 2, 1, 95, 3, 2, 4, 6, 1, 2, 1, 157, 1, 3, 8, 21, 2, 57, 2, 1, 1, 1, 1, 12, 1, 9, 1, 14, 7, 3, 5, 67, 1, 2, 6, 1, 1, 2, 1, 1, 3, 4, 3, 1, 1, 14, 2, 85, 8, 2, 3, 1, 1, 23, 1, 81, 1, 2, 6, 1, 1, 2, 1, 1, 2, 1, 2, 235, 1, 2, 4, 6, 2, 1, 2, 27, 2, 85, 8, 2, 1, 1, 2, 106, 1, 1, 1, 2, 8, 101, 1, 1, 1, 2, 4, 1, 5, 0, 9, 1, 2, 245, 1, 10, 4, 4, 1, 144, 4, 2, 2, 4, 1, 32, 10, 40, 6, 2, 4, 8, 1, 9, 6, 2, 3, 46, 13, 1, 2, 0, 7, 1, 6, 1, 1, 82, 22, 2, 7, 1, 2, 1, 2, 122, 6, 3, 1, 1, 2, 1, 7, 1, 1, 72, 2, 3, 1, 1, 1, 0, 2, 11, 2, 52, 5, 5, 3, 23, 1, 0, 1, 6, 15, 0, 12, 3, 3, 0, 5, 59, 7, 0, 1, 63, 4, 81, 1, 11, 2, 0, 2, 0, 46, 2, 23, 0, 5, 3, 6, 8, 8, 2, 7, 30, 4, 148, 3, 0, 55, 4, 50, 8, 1, 14, 1, 22, 5, 1, 15, 0, 7, 1, 17, 2, 7, 1, 2, 1, 5, 100, 1, 160, 7, 0, 1, 61, 4, 0, 4, 254, 2, 0, 7, 109, 7, 0, 96, 128, 240, 0, 0, 0, 0, 0, 0, 214, 1, 0, 0, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 122, 1, 0, 0, 0, 0, 0, 0, 216, 1, 0, 0, 0, 0, 0, 0, 218, 1, 0, 0, 0, 0, 0, 0, 74, 117, 109, 112, 84, 97, 98, 108, 101, 109, 97, 112]
// RW data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
// Instructions = 7463
// Code size = 22856 bytes

      :                          @0
     0: 28 82 17 00 00           jump @358
      :                          @1
     5: 28 f7 1d 00 00           jump @467
      :                          @2
    10: 28 fb 1d                 jump @468
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 24                 a2 = u32 [a1 + 0x24]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 3b                 jump @9 if a2 != 0
      :                          @5
    38: 82 77                    a0 = u64 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 37 2e                 jump @825
      :                          @6
    51: 82 7b                    a4 = u64 [a0]
    53: 33 0a 7f                 a3 = 0x7f
    56: 64 12                    t0 = sp
    58: 01                       fallthrough
      :                          @7
    59: 64 a9                    a2 = a3
    61: 98 bc 04                 a5 = a4 >> 0x4
    64: c8 a2 03                 t1 = t0 + a3
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b7 0a                 a0 = a4 <u 0xa
    73: 86 ba 30                 a3 = a4 | 0x30
    76: 95 bb 57                 a4 = a4 + 0x57
    79: db 7a 0b                 a4 = a3 if a0 != 0
    82: 78 3b                    u8 [t1] = a4
    84: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
    87: 64 cb                    a4 = a5
    89: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
    92: 28 2b                    jump @11
      :                          @9
    94: 82 7b                    a4 = u64 [a0]
    96: 33 0a 7f                 a3 = 0x7f
    99: 64 12                    t0 = sp
   101: 01                       fallthrough
      :                          @10
   102: 64 a9                    a2 = a3
   104: 98 bc 04                 a5 = a4 >> 0x4
   107: c8 a2 03                 t1 = t0 + a3
   110: 84 bb 0f                 a4 = a4 & 0xf
   113: 88 b7 0a                 a0 = a4 <u 0xa
   116: 86 ba 30                 a3 = a4 | 0x30
   119: 95 bb 37                 a4 = a4 + 0x37
   122: db 7a 0b                 a4 = a3 if a0 != 0
   125: 78 3b                    u8 [t1] = a4
   127: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
   130: 64 cb                    a4 = a5
   132: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   135: 95 99 01                 a2 = a2 + 0x1
   138: c8 2a 0a                 a3 = a3 + t0
   141: 95 aa 01                 a3 = a3 + 0x1
   144: 9a 9b 81 00              a4 = 0x81 - a2
   148: 33 09 02                 a2 = 0x2
   151: 64 87                    a0 = a1
   153: 33 08 1a 07 01           a1 = 0x1071a
   158: 50 10 04 ec 2e           ra = 4, jump @835
      :                          @12 [@dyn 2]
   163: 82 10 80 00              ra = u64 [sp + 0x80]
   167: 95 11 88 00              sp = sp + 0x88
   171: 32 00                    ret
      :                          @13 [@dyn 3]
   173: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   176: 7b 10 38                 u64 [sp + 0x38] = ra
   179: 7b 15 30                 u64 [sp + 0x30] = s0
   182: 7b 16 28                 u64 [sp + 0x28] = s1
   185: 64 85                    s0 = a1
   187: 82 88 38                 a1 = u64 [a1 + 0x38]
   190: 82 76                    s1 = u64 [a0]
   192: 82 57 30                 a0 = u64 [s0 + 0x30]
   195: 82 8a 18                 a3 = u64 [a1 + 0x18]
   198: 33 08 c8 11 01           a1 = 0x111c8
   203: 33 09 09                 a2 = 0x9
   206: b4 a0 01 08              ra = 8, jump [a3]
      :                          @14 [@dyn 4]
   210: 82 69                    a2 = u64 [s1]
   212: 7b 15                    u64 [sp] = s0
   214: 78 17 08                 u8 [sp + 0x8] = a0
   217: 46 11 09                 u8 [sp + 9] = 0
   220: 82 97 18                 a0 = u64 [a2 + 0x18]
   223: 98 78 03                 a1 = a0 >> 0x3
   226: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
   229: c9 a8 08                 a1 = a1 - a3
   232: c8 87 07                 a0 = a0 + a1
   235: 98 78 03                 a1 = a0 >> 0x3
   238: 84 77 07                 a0 = a0 & 0x7
   241: 8e 77                    a0 = a0 >u 0
   243: c8 78 08                 a1 = a1 + a0
   246: 97 87 01                 a0 = a1 << 0x1
   249: 51 08 6a                 jump @23 if a1 == 0
      :                          @15
   252: 82 99 10                 a2 = u64 [a2 + 0x10]
   255: 33 02 20 00 03           t0 = 0x30020
   260: 95 2a 00 00 00 08        a3 = t0 + 0x8000000
   266: 01                       fallthrough
      :                          @16
   267: 82 a6                    s1 = u64 [a3]
   269: c8 76 05                 s0 = s1 + a0
   272: ac 65 52                 jump @22 if s0 <u s1
      :                          @17
   275: 98 5b 1b                 a4 = s0 >> 0x1b
   278: 52 0b 4c                 jump @22 if a4 != 0
      :                          @18
   281: 82 ab                    a4 = u64 [a3]
   283: ab 6b f0                 jump @16 if a4 != s1
      :                          @19
   286: 7b a5                    u64 [a3] = s0
   288: c9 52 0a                 a3 = t0 - s0
   291: 95 aa 00 00 00 08        a3 = a3 + 0x8000000
   297: c9 72 0c                 a5 = t0 - a0
   300: 95 cb 01 00 00 08        a4 = a5 + 0x8000001
   306: c9 6b 0b                 a4 = a4 - s1
   309: 33 0c 27 02 01           a5 = 0x10227
   314: 01                       fallthrough
      :                          @20
   315: 7c 96                    s1 = u8 [a2]
   317: 84 65 0f                 s0 = s1 & 0xf
   320: 98 66 04                 s1 = s1 >> 0x4
   323: c8 c6 06                 s1 = s1 + a5
   326: 7c 66                    s1 = u8 [s1]
   328: c8 c5 05                 s0 = s0 + a5
   331: 7c 55                    s0 = u8 [s0]
   333: 95 99 01                 a2 = a2 + 0x1
   336: 78 b6 ff                 u8 [a4 + 0xffffffffffffffff] = s1
   339: 78 b5                    u8 [a4] = s0
   341: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   344: 95 bb 02                 a4 = a4 + 0x2
   347: 52 08 e0                 jump @20 if a1 != 0
      :                          @21
   350: 64 78                    a1 = a0
   352: 28 07                    jump @24
      :                          @22
   354: 00                       trap
      :                          @23
   355: 33 0a 01                 a3 = 0x1
   358: 01                       fallthrough
      :                          @24
   359: 7b 18 10                 u64 [sp + 0x10] = a1
   362: 7b 1a 18                 u64 [sp + 0x18] = a3
   365: 7b 17 20                 u64 [sp + 0x20] = a0
   368: 33 08 d1 11 01           a1 = 0x111d1
   373: 33 0b 08 02              a4 = 0x208
   377: 64 17                    a0 = sp
   379: 33 09 03                 a2 = 0x3
   382: 95 1a 10                 a3 = sp + 0x10
   385: 50 10 0a 10 3a           ra = 10, jump @1071
      :                          @25 [@dyn 5]
   390: 7c 18 09                 a1 = u8 [sp + 0x9]
   393: 7c 17 08                 a0 = u8 [sp + 0x8]
   396: 51 08 46                 jump @31 if a1 == 0
      :                          @26
   399: 84 78 01                 a1 = a0 & 0x1
   402: 33 07 01                 a0 = 0x1
   405: 52 08 39                 jump @30 if a1 != 0
      :                          @27
   408: 82 17                    a0 = u64 [sp]
   410: 7c 78 24                 a1 = u8 [a0 + 0x24]
   413: 84 88 04                 a1 = a1 & 0x4
   416: 52 08 19                 jump @29 if a1 != 0
      :                          @28
   419: 82 78 38                 a1 = u64 [a0 + 0x38]
   422: 82 77 30                 a0 = u64 [a0 + 0x30]
   425: 82 8a 18                 a3 = u64 [a1 + 0x18]
   428: 33 08 13 07 01           a1 = 0x10713
   433: 33 09 02                 a2 = 0x2
   436: 33 00 0c                 ra = 0xc
   439: 32 0a                    jump [a3]
      :                          @29
   441: 82 78 38                 a1 = u64 [a0 + 0x38]
   444: 82 77 30                 a0 = u64 [a0 + 0x30]
   447: 82 8a 18                 a3 = u64 [a1 + 0x18]
   450: 33 08 12 07 01           a1 = 0x10712
   455: 33 09 01                 a2 = 0x1
   458: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @30 [@dyn 6]
   462: 78 17 08                 u8 [sp + 0x8] = a0
   465: 01                       fallthrough
      :                          @31
   466: 82 18 10                 a1 = u64 [sp + 0x10]
   469: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
   475: 95 8a ff ff ff f7        a3 = a1 + 0xfffffffff7ffffff
   481: ac 9a 26                 jump @37 if a3 <u a2
      :                          @32
   484: 82 19 18                 a2 = u64 [sp + 0x18]
   487: 33 0a 20 00 03           a3 = 0x30020
   492: 95 aa 00 00 00 08        a3 = a3 + 0x8000000
   498: 01                       fallthrough
      :                          @33
   499: 82 ab                    a4 = u64 [a3]
   501: c9 ba 0c                 a5 = a3 - a4
   504: ab 9c 0f                 jump @37 if a5 != a2
      :                          @34
   507: c9 8b 0c                 a5 = a4 - a1
   510: 01                       fallthrough
      :                          @35
   511: 82 a6                    s1 = u64 [a3]
   513: ab b6 f2                 jump @33 if s1 != a4
      :                          @36
   516: 7b ac                    u64 [a3] = a5
   518: 01                       fallthrough
      :                          @37
   519: 84 77 01                 a0 = a0 & 0x1
   522: 82 10 38                 ra = u64 [sp + 0x38]
   525: 82 15 30                 s0 = u64 [sp + 0x30]
   528: 82 16 28                 s1 = u64 [sp + 0x28]
   531: 95 11 40                 sp = sp + 0x40
   534: 32 00                    ret
      :                          @38 [@dyn 7]
   536: 82 77                    a0 = u64 [a0]
   538: 7c 79                    a2 = u8 [a0]
   540: 64 87                    a0 = a1
   542: 51 09 0e                 jump @40 if a2 == 0
      :                          @39
   545: 33 08 d1 00 01           a1 = 0x100d1
   550: 33 09 04                 a2 = 0x4
   553: 28 e1 2f                 jump @888
      :                          @40
   556: 33 08 3d 08 01           a1 = 0x1083d
   561: 33 09 05                 a2 = 0x5
   564: 28 d6 2f                 jump @888
      :                          @41 [@dyn 8]
   567: 82 77                    a0 = u64 [a0]
   569: 28 49 1f                 jump @547
      :                          @42
   572: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   575: 7b 10 30                 u64 [sp + 0x30] = ra
   578: 7b 15 28                 u64 [sp + 0x28] = s0
   581: 7b 16 20                 u64 [sp + 0x20] = s1
   584: 64 85                    s0 = a1
   586: 82 88 38                 a1 = u64 [a1 + 0x38]
   589: 82 5a 30                 a3 = u64 [s0 + 0x30]
   592: 82 8b 18                 a4 = u64 [a1 + 0x18]
   595: 95 76 02                 s1 = a0 + 0x2
   598: 7b 17 08                 u64 [sp + 0x8] = a0
   601: 95 77 03                 a0 = a0 + 0x3
   604: 7b 17                    u64 [sp] = a0
   606: 33 08 47 02 01           a1 = 0x10247
   611: 33 09 08                 a2 = 0x8
   614: 64 a7                    a0 = a3
   616: b4 b0 01 12              ra = 18, jump [a4]
      :                          @43 [@dyn 9]
   620: 7b 15 10                 u64 [sp + 0x10] = s0
   623: 78 17 18                 u8 [sp + 0x18] = a0
   626: 46 11 19                 u8 [sp + 25] = 0
   629: 33 08 18 03 01           a1 = 0x10318
   634: 33 05 3e                 s0 = 0x3e
   637: 95 17 10                 a0 = sp + 0x10
   640: 33 09 06                 a2 = 0x6
   643: 64 6a                    a3 = s1
   645: 33 0b 3e                 a4 = 0x3e
   648: 50 10 14 09 39           ra = 20, jump @1071
      :                          @44 [@dyn 10]
   653: 33 08 1e 03 01           a1 = 0x1031e
   658: 95 17 10                 a0 = sp + 0x10
   661: 33 09 07                 a2 = 0x7
   664: 82 1a                    a3 = u64 [sp]
   666: 64 5b                    a4 = s0
   668: 50 10 16 f5 38           ra = 22, jump @1071
      :                          @45 [@dyn 11]
   673: 33 08 25 03 01           a1 = 0x10325
   678: 33 0b 1c                 a4 = 0x1c
   681: 95 17 10                 a0 = sp + 0x10
   684: 33 09 0e                 a2 = 0xe
   687: 95 1a 08                 a3 = sp + 0x8
   690: 50 10 18 df 38           ra = 24, jump @1071
      :                          @46 [@dyn 12]
   695: 7c 19 19                 a2 = u8 [sp + 0x19]
   698: 7c 18 18                 a1 = u8 [sp + 0x18]
   701: d4 89 07                 a0 = a2 | a1
   704: 51 09 40                 jump @51 if a2 == 0
      :                          @47
   707: 84 88 01                 a1 = a1 & 0x1
   710: 52 08 3a                 jump @51 if a1 != 0
      :                          @48
   713: 82 17 10                 a0 = u64 [sp + 0x10]
   716: 7c 78 24                 a1 = u8 [a0 + 0x24]
   719: 84 88 04                 a1 = a1 & 0x4
   722: 52 08 19                 jump @50 if a1 != 0
      :                          @49
   725: 82 78 38                 a1 = u64 [a0 + 0x38]
   728: 82 77 30                 a0 = u64 [a0 + 0x30]
   731: 82 8a 18                 a3 = u64 [a1 + 0x18]
   734: 33 08 13 07 01           a1 = 0x10713
   739: 33 09 02                 a2 = 0x2
   742: 33 00 1a                 ra = 0x1a
   745: 32 0a                    jump [a3]
      :                          @50
   747: 82 78 38                 a1 = u64 [a0 + 0x38]
   750: 82 77 30                 a0 = u64 [a0 + 0x30]
   753: 82 8a 18                 a3 = u64 [a1 + 0x18]
   756: 33 08 12 07 01           a1 = 0x10712
   761: 33 09 01                 a2 = 0x1
   764: b4 a0 01 1a              ra = 26, jump [a3]
      :                          @51 [@dyn 13]
   768: 84 77 01                 a0 = a0 & 0x1
   771: 82 10 30                 ra = u64 [sp + 0x30]
   774: 82 15 28                 s0 = u64 [sp + 0x28]
   777: 82 16 20                 s1 = u64 [sp + 0x20]
   780: 95 11 38                 sp = sp + 0x38
   783: 32 00                    ret
      :                          @52 [@dyn 14]
   785: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   789: 7b 10 80 00              u64 [sp + 0x80] = ra
   793: 80 89 24                 a2 = u32 [a1 + 0x24]
   796: 82 77                    a0 = u64 [a0]
   798: 84 9a 10                 a3 = a2 & 0x10
   801: 52 0a 16                 jump @55 if a3 != 0
      :                          @53
   804: 84 99 20                 a2 = a2 & 0x20
   807: 52 09 3e                 jump @58 if a2 != 0
      :                          @54
   810: 7f 77                    a0 = i16 [a0]
   812: 82 10 80 00              ra = u64 [sp + 0x80]
   816: 95 11 88 00              sp = sp + 0x88
   820: 28 84 3c                 jump @1146
      :                          @55
   823: 7e 7a                    a3 = u16 [a0 ]
   825: 33 0b 7f                 a4 = 0x7f
   828: 64 12                    t0 = sp
   830: 01                       fallthrough
      :                          @56
   831: 64 b9                    a2 = a4
   833: 97 ab 30                 a4 = a3 << 0x30
   836: 98 bc 34                 a5 = a4 >> 0x34
   839: c8 92 03                 t1 = t0 + a2
   842: 84 aa 0f                 a3 = a3 & 0xf
   845: 88 a7 0a                 a0 = a3 <u 0xa
   848: 86 ab 30                 a4 = a3 | 0x30
   851: 95 aa 57                 a3 = a3 + 0x57
   854: db 7b 0a                 a3 = a4 if a0 != 0
   857: 78 3a                    u8 [t1] = a3
   859: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
   862: 64 ca                    a3 = a5
   864: 52 0c df                 jump @56 if a5 != 0
      :                          @57
   867: 28 2e                    jump @60
      :                          @58
   869: 7e 7a                    a3 = u16 [a0 ]
   871: 33 0b 7f                 a4 = 0x7f
   874: 64 12                    t0 = sp
   876: 01                       fallthrough
      :                          @59
   877: 64 b9                    a2 = a4
   879: 97 ab 30                 a4 = a3 << 0x30
   882: 98 bc 34                 a5 = a4 >> 0x34
   885: c8 92 03                 t1 = t0 + a2
   888: 84 aa 0f                 a3 = a3 & 0xf
   891: 88 a7 0a                 a0 = a3 <u 0xa
   894: 86 ab 30                 a4 = a3 | 0x30
   897: 95 aa 37                 a3 = a3 + 0x37
   900: db 7b 0a                 a3 = a4 if a0 != 0
   903: 78 3a                    u8 [t1] = a3
   905: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
   908: 64 ca                    a3 = a5
   910: 52 0c df                 jump @59 if a5 != 0
      :                          @60
   913: 95 99 01                 a2 = a2 + 0x1
   916: c8 b2 0a                 a3 = t0 + a4
   919: 95 aa 01                 a3 = a3 + 0x1
   922: 9a 9b 81 00              a4 = 0x81 - a2
   926: 33 09 02                 a2 = 0x2
   929: 64 87                    a0 = a1
   931: 33 08 1a 07 01           a1 = 0x1071a
   936: 50 10 1e e2 2b           ra = 30, jump @835
      :                          @61 [@dyn 15]
   941: 82 10 80 00              ra = u64 [sp + 0x80]
   945: 95 11 88 00              sp = sp + 0x88
   949: 32 00                    ret
      :                          @62
   951: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   954: 7b 10 30                 u64 [sp + 0x30] = ra
   957: 7b 15 28                 u64 [sp + 0x28] = s0
   960: 7b 16 20                 u64 [sp + 0x20] = s1
   963: 64 85                    s0 = a1
   965: 82 88 38                 a1 = u64 [a1 + 0x38]
   968: 64 76                    s1 = a0
   970: 82 57 30                 a0 = u64 [s0 + 0x30]
   973: 82 8a 18                 a3 = u64 [a1 + 0x18]
   976: 95 68 20                 a1 = s1 + 0x20
   979: 7b 18 08                 u64 [sp + 0x8] = a1
   982: 95 68 28                 a1 = s1 + 0x28
   985: 7b 18                    u64 [sp] = a1
   987: 33 08 33 03 01           a1 = 0x10333
   992: 33 09 16                 a2 = 0x16
   995: b4 a0 01 20              ra = 32, jump [a3]
      :                          @63 [@dyn 16]
   999: 7b 15 10                 u64 [sp + 0x10] = s0
  1002: 78 17 18                 u8 [sp + 0x18] = a0
  1005: 46 11 19                 u8 [sp + 25] = 0
  1008: 33 08 37 02 01           a1 = 0x10237
  1013: 33 0b 34 01              a4 = 0x134
  1017: 95 17 10                 a0 = sp + 0x10
  1020: 33 09 08                 a2 = 0x8
  1023: 64 6a                    a3 = s1
  1025: 50 10 22 90 37           ra = 34, jump @1071
      :                          @64 [@dyn 17]
  1030: 33 08 49 03 01           a1 = 0x10349
  1035: 33 0b 48                 a4 = 0x48
  1038: 95 17 10                 a0 = sp + 0x10
  1041: 33 09 0c                 a2 = 0xc
  1044: 82 1a                    a3 = u64 [sp]
  1046: 50 10 24 7b 37           ra = 36, jump @1071
      :                          @65 [@dyn 18]
  1051: 33 08 55 03 01           a1 = 0x10355
  1056: 33 0b 06                 a4 = 0x6
  1059: 95 17 10                 a0 = sp + 0x10
  1062: 33 09 0a                 a2 = 0xa
  1065: 95 1a 08                 a3 = sp + 0x8
  1068: 50 10 26 65 37           ra = 38, jump @1071
      :                          @66 [@dyn 19]
  1073: 7c 19 19                 a2 = u8 [sp + 0x19]
  1076: 7c 18 18                 a1 = u8 [sp + 0x18]
  1079: d4 89 07                 a0 = a2 | a1
  1082: 51 09 40                 jump @71 if a2 == 0
      :                          @67
  1085: 84 88 01                 a1 = a1 & 0x1
  1088: 52 08 3a                 jump @71 if a1 != 0
      :                          @68
  1091: 82 17 10                 a0 = u64 [sp + 0x10]
  1094: 7c 78 24                 a1 = u8 [a0 + 0x24]
  1097: 84 88 04                 a1 = a1 & 0x4
  1100: 52 08 19                 jump @70 if a1 != 0
      :                          @69
  1103: 82 78 38                 a1 = u64 [a0 + 0x38]
  1106: 82 77 30                 a0 = u64 [a0 + 0x30]
  1109: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1112: 33 08 13 07 01           a1 = 0x10713
  1117: 33 09 02                 a2 = 0x2
  1120: 33 00 28                 ra = 0x28
  1123: 32 0a                    jump [a3]
      :                          @70
  1125: 82 78 38                 a1 = u64 [a0 + 0x38]
  1128: 82 77 30                 a0 = u64 [a0 + 0x30]
  1131: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1134: 33 08 12 07 01           a1 = 0x10712
  1139: 33 09 01                 a2 = 0x1
  1142: b4 a0 01 28              ra = 40, jump [a3]
      :                          @71 [@dyn 20]
  1146: 84 77 01                 a0 = a0 & 0x1
  1149: 82 10 30                 ra = u64 [sp + 0x30]
  1152: 82 15 28                 s0 = u64 [sp + 0x28]
  1155: 82 16 20                 s1 = u64 [sp + 0x20]
  1158: 95 11 38                 sp = sp + 0x38
  1161: 32 00                    ret
      :                          @72
  1163: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1166: 7b 10 30                 u64 [sp + 0x30] = ra
  1169: 7b 15 28                 u64 [sp + 0x28] = s0
  1172: 7b 16 20                 u64 [sp + 0x20] = s1
  1175: 64 85                    s0 = a1
  1177: 82 88 38                 a1 = u64 [a1 + 0x38]
  1180: 82 5a 30                 a3 = u64 [s0 + 0x30]
  1183: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1186: 95 76 20                 s1 = a0 + 0x20
  1189: 7b 17 08                 u64 [sp + 0x8] = a0
  1192: 95 77 34                 a0 = a0 + 0x34
  1195: 7b 17                    u64 [sp] = a0
  1197: 33 08 f1 02 01           a1 = 0x102f1
  1202: 33 09 0f                 a2 = 0xf
  1205: 64 a7                    a0 = a3
  1207: b4 b0 01 2a              ra = 42, jump [a4]
      :                          @73 [@dyn 21]
  1211: 7b 15 10                 u64 [sp + 0x10] = s0
  1214: 78 17 18                 u8 [sp + 0x18] = a0
  1217: 46 11 19                 u8 [sp + 25] = 0
  1220: 33 08 00 03 01           a1 = 0x10300
  1225: 33 0b 3a 01              a4 = 0x13a
  1229: 95 17 10                 a0 = sp + 0x10
  1232: 33 09 11                 a2 = 0x11
  1235: 64 6a                    a3 = s1
  1237: 50 10 2c bc 36           ra = 44, jump @1071
      :                          @74 [@dyn 22]
  1242: 33 08 11 03 01           a1 = 0x10311
  1247: 33 0b 3e                 a4 = 0x3e
  1250: 95 17 10                 a0 = sp + 0x10
  1253: 33 09 07                 a2 = 0x7
  1256: 82 1a                    a3 = u64 [sp]
  1258: 50 10 2e a7 36           ra = 46, jump @1071
      :                          @75 [@dyn 23]
  1263: 33 08 d9 00 01           a1 = 0x100d9
  1268: 33 0b 10                 a4 = 0x10
  1271: 95 17 10                 a0 = sp + 0x10
  1274: 33 09 03                 a2 = 0x3
  1277: 95 1a 08                 a3 = sp + 0x8
  1280: 50 10 30 91 36           ra = 48, jump @1071
      :                          @76 [@dyn 24]
  1285: 7c 19 19                 a2 = u8 [sp + 0x19]
  1288: 7c 18 18                 a1 = u8 [sp + 0x18]
  1291: d4 89 07                 a0 = a2 | a1
  1294: 51 09 40                 jump @81 if a2 == 0
      :                          @77
  1297: 84 88 01                 a1 = a1 & 0x1
  1300: 52 08 3a                 jump @81 if a1 != 0
      :                          @78
  1303: 82 17 10                 a0 = u64 [sp + 0x10]
  1306: 7c 78 24                 a1 = u8 [a0 + 0x24]
  1309: 84 88 04                 a1 = a1 & 0x4
  1312: 52 08 19                 jump @80 if a1 != 0
      :                          @79
  1315: 82 78 38                 a1 = u64 [a0 + 0x38]
  1318: 82 77 30                 a0 = u64 [a0 + 0x30]
  1321: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1324: 33 08 13 07 01           a1 = 0x10713
  1329: 33 09 02                 a2 = 0x2
  1332: 33 00 32                 ra = 0x32
  1335: 32 0a                    jump [a3]
      :                          @80
  1337: 82 78 38                 a1 = u64 [a0 + 0x38]
  1340: 82 77 30                 a0 = u64 [a0 + 0x30]
  1343: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1346: 33 08 12 07 01           a1 = 0x10712
  1351: 33 09 01                 a2 = 0x1
  1354: b4 a0 01 32              ra = 50, jump [a3]
      :                          @81 [@dyn 25]
  1358: 84 77 01                 a0 = a0 & 0x1
  1361: 82 10 30                 ra = u64 [sp + 0x30]
  1364: 82 15 28                 s0 = u64 [sp + 0x28]
  1367: 82 16 20                 s1 = u64 [sp + 0x20]
  1370: 95 11 38                 sp = sp + 0x38
  1373: 32 00                    ret
      :                          @82
  1375: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1378: 7b 10 30                 u64 [sp + 0x30] = ra
  1381: 7b 15 28                 u64 [sp + 0x28] = s0
  1384: 7b 16 20                 u64 [sp + 0x20] = s1
  1387: 82 79                    a2 = u64 [a0]
  1389: 64 86                    s1 = a1
  1391: 82 88 38                 a1 = u64 [a1 + 0x38]
  1394: 95 9a f0 00              a3 = a2 + 0xf0
  1398: 82 67 30                 a0 = u64 [s1 + 0x30]
  1401: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1404: 7b 1a 08                 u64 [sp + 0x8] = a3
  1407: 95 95 10                 s0 = a2 + 0x10
  1410: 95 98 58                 a1 = a2 + 0x58
  1413: 7b 18                    u64 [sp] = a1
  1415: 33 08 c0 00 01           a1 = 0x100c0
  1420: 33 09 03                 a2 = 0x3
  1423: b4 b0 01 34              ra = 52, jump [a4]
      :                          @83 [@dyn 26]
  1427: 7b 16 10                 u64 [sp + 0x10] = s1
  1430: 78 17 18                 u8 [sp + 0x18] = a0
  1433: 46 11 19                 u8 [sp + 25] = 0
  1436: 33 08 c3 00 01           a1 = 0x100c3
  1441: 33 0b e8 00              a4 = 0xe8
  1445: 95 17 10                 a0 = sp + 0x10
  1448: 33 09 06                 a2 = 0x6
  1451: 64 5a                    a3 = s0
  1453: 50 10 36 e4 35           ra = 54, jump @1071
      :                          @84 [@dyn 27]
  1458: 33 08 c9 00 01           a1 = 0x100c9
  1463: 33 0b d4 00              a4 = 0xd4
  1467: 95 17 10                 a0 = sp + 0x10
  1470: 33 09 04                 a2 = 0x4
  1473: 82 1a                    a3 = u64 [sp]
  1475: 50 10 38 ce 35           ra = 56, jump @1071
      :                          @85 [@dyn 28]
  1480: 33 08 d9 00 01           a1 = 0x100d9
  1485: 33 0b 10                 a4 = 0x10
  1488: 95 17 10                 a0 = sp + 0x10
  1491: 33 09 03                 a2 = 0x3
  1494: 95 1a 08                 a3 = sp + 0x8
  1497: 50 10 3a b8 35           ra = 58, jump @1071
      :                          @86 [@dyn 29]
  1502: 7c 19 19                 a2 = u8 [sp + 0x19]
  1505: 7c 18 18                 a1 = u8 [sp + 0x18]
  1508: d4 89 07                 a0 = a2 | a1
  1511: 51 09 40                 jump @91 if a2 == 0
      :                          @87
  1514: 84 88 01                 a1 = a1 & 0x1
  1517: 52 08 3a                 jump @91 if a1 != 0
      :                          @88
  1520: 82 17 10                 a0 = u64 [sp + 0x10]
  1523: 7c 78 24                 a1 = u8 [a0 + 0x24]
  1526: 84 88 04                 a1 = a1 & 0x4
  1529: 52 08 19                 jump @90 if a1 != 0
      :                          @89
  1532: 82 78 38                 a1 = u64 [a0 + 0x38]
  1535: 82 77 30                 a0 = u64 [a0 + 0x30]
  1538: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1541: 33 08 13 07 01           a1 = 0x10713
  1546: 33 09 02                 a2 = 0x2
  1549: 33 00 3c                 ra = 0x3c
  1552: 32 0a                    jump [a3]
      :                          @90
  1554: 82 78 38                 a1 = u64 [a0 + 0x38]
  1557: 82 77 30                 a0 = u64 [a0 + 0x30]
  1560: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1563: 33 08 12 07 01           a1 = 0x10712
  1568: 33 09 01                 a2 = 0x1
  1571: b4 a0 01 3c              ra = 60, jump [a3]
      :                          @91 [@dyn 30]
  1575: 84 77 01                 a0 = a0 & 0x1
  1578: 82 10 30                 ra = u64 [sp + 0x30]
  1581: 82 15 28                 s0 = u64 [sp + 0x28]
  1584: 82 16 20                 s1 = u64 [sp + 0x20]
  1587: 95 11 38                 sp = sp + 0x38
  1590: 32 00                    ret
      :                          @92 [@dyn 31]
  1592: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1596: 7b 10 80 00              u64 [sp + 0x80] = ra
  1600: 64 82                    t0 = a1
  1602: 80 88 24                 a1 = u32 [a1 + 0x24]
  1605: 84 89 10                 a2 = a1 & 0x10
  1608: 52 09 7c                 jump @101 if a2 != 0
      :                          @93
  1611: 84 88 20                 a1 = a1 & 0x20
  1614: 52 08 a1 00              jump @104 if a1 != 0
      :                          @94
  1618: 7c 78                    a1 = u8 [a0]
  1620: 33 0a 03                 a3 = 0x3
  1623: 33 07 1c 07 01           a0 = 0x1071c
  1628: 64 89                    a2 = a1
  1630: 53 18 0a 28              jump @96 if a1 <u 10
      :                          @95
  1634: 96 89 29                 a2 = a1 * 0x29
  1637: 98 99 0c                 a2 = a2 >> 0xc
  1640: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  1643: c8 8a 0a                 a3 = a3 + a1
  1646: 97 aa 39                 a3 = a3 << 0x39
  1649: 98 aa 38                 a3 = a3 >> 0x38
  1652: c8 7a 0a                 a3 = a3 + a0
  1655: 7c ab                    a4 = u8 [a3]
  1657: 7c aa 01                 a3 = u8 [a3 + 0x1]
  1660: 78 1b 01                 u8 [sp + 0x1] = a4
  1663: 78 1a 02                 u8 [sp + 0x2] = a3
  1666: 33 0a 01                 a3 = 0x1
  1669: 01                       fallthrough
      :                          @96
  1670: 51 08 06                 jump @98 if a1 == 0
      :                          @97
  1673: 51 09 1d                 jump @99 if a2 == 0
      :                          @98
  1676: 97 99 01                 a2 = a2 << 0x1
  1679: 95 99 01                 a2 = a2 + 0x1
  1682: 84 98 ff 00              a1 = a2 & 0xff
  1686: c8 87 07                 a0 = a0 + a1
  1689: 7c 77                    a0 = u8 [a0]
  1691: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1694: 64 18                    a1 = sp
  1696: c8 a8 08                 a1 = a1 + a3
  1699: 78 87                    u8 [a1] = a0
  1701: 01                       fallthrough
      :                          @99
  1702: 9a ab 03                 a4 = 0x3 - a3
  1705: 64 17                    a0 = sp
  1707: c8 7a 0a                 a3 = a3 + a0
  1710: 33 08 01                 a1 = 0x1
  1713: 64 27                    a0 = t0
  1715: 33 09                    a2 = 0
  1717: 50 10 40 d5 28           ra = 64, jump @835
      :                          @100 [@dyn 32]
  1722: 82 10 80 00              ra = u64 [sp + 0x80]
  1726: 95 11 88 00              sp = sp + 0x88
  1730: 32 00                    ret
      :                          @101
  1732: 7c 7a                    a3 = u8 [a0]
  1734: 33 09 7f                 a2 = 0x7f
  1737: 64 13                    t1 = sp
  1739: 01                       fallthrough
      :                          @102
  1740: 64 98                    a1 = a2
  1742: 98 ab 04                 a4 = a3 >> 0x4
  1745: 84 aa 0f                 a3 = a3 & 0xf
  1748: c8 39 09                 a2 = a2 + t1
  1751: 88 ac 0a                 a5 = a3 <u 0xa
  1754: 86 a7 30                 a0 = a3 | 0x30
  1757: 95 aa 57                 a3 = a3 + 0x57
  1760: db c7 0a                 a3 = a0 if a5 != 0
  1763: 78 9a                    u8 [a2] = a3
  1765: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  1768: 64 ba                    a3 = a4
  1770: 52 0b e2                 jump @102 if a4 != 0
      :                          @103
  1773: 28 2b                    jump @106
      :                          @104
  1775: 7c 7a                    a3 = u8 [a0]
  1777: 33 09 7f                 a2 = 0x7f
  1780: 64 13                    t1 = sp
  1782: 01                       fallthrough
      :                          @105
  1783: 64 98                    a1 = a2
  1785: 98 ab 04                 a4 = a3 >> 0x4
  1788: 84 aa 0f                 a3 = a3 & 0xf
  1791: c8 39 09                 a2 = a2 + t1
  1794: 88 ac 0a                 a5 = a3 <u 0xa
  1797: 86 a7 30                 a0 = a3 | 0x30
  1800: 95 aa 37                 a3 = a3 + 0x37
  1803: db c7 0a                 a3 = a0 if a5 != 0
  1806: 78 9a                    u8 [a2] = a3
  1808: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  1811: 64 ba                    a3 = a4
  1813: 52 0b e2                 jump @105 if a4 != 0
      :                          @106
  1816: 95 88 01                 a1 = a1 + 0x1
  1819: c8 39 09                 a2 = a2 + t1
  1822: 95 9a 01                 a3 = a2 + 0x1
  1825: 9a 8b 81 00              a4 = 0x81 - a1
  1829: 33 08 1a 07 01           a1 = 0x1071a
  1834: 33 09 02                 a2 = 0x2
  1837: 64 27                    a0 = t0
  1839: 50 10 42 5b 28           ra = 66, jump @835
      :                          @107 [@dyn 33]
  1844: 82 10 80 00              ra = u64 [sp + 0x80]
  1848: 95 11 88 00              sp = sp + 0x88
  1852: 32 00                    ret
      :                          @108 [@dyn 34]
  1854: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1858: 7b 10 80 00              u64 [sp + 0x80] = ra
  1862: 80 89 24                 a2 = u32 [a1 + 0x24]
  1865: 84 9a 10                 a3 = a2 & 0x10
  1868: 52 0a 16                 jump @111 if a3 != 0
      :                          @109
  1871: 84 99 20                 a2 = a2 & 0x20
  1874: 52 09 3e                 jump @114 if a2 != 0
      :                          @110
  1877: 7f 77                    a0 = i16 [a0]
  1879: 82 10 80 00              ra = u64 [sp + 0x80]
  1883: 95 11 88 00              sp = sp + 0x88
  1887: 28 59 38                 jump @1146
      :                          @111
  1890: 7e 7a                    a3 = u16 [a0 ]
  1892: 33 0b 7f                 a4 = 0x7f
  1895: 64 12                    t0 = sp
  1897: 01                       fallthrough
      :                          @112
  1898: 64 b9                    a2 = a4
  1900: 97 ab 30                 a4 = a3 << 0x30
  1903: 98 bc 34                 a5 = a4 >> 0x34
  1906: c8 92 03                 t1 = t0 + a2
  1909: 84 aa 0f                 a3 = a3 & 0xf
  1912: 88 a7 0a                 a0 = a3 <u 0xa
  1915: 86 ab 30                 a4 = a3 | 0x30
  1918: 95 aa 57                 a3 = a3 + 0x57
  1921: db 7b 0a                 a3 = a4 if a0 != 0
  1924: 78 3a                    u8 [t1] = a3
  1926: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
  1929: 64 ca                    a3 = a5
  1931: 52 0c df                 jump @112 if a5 != 0
      :                          @113
  1934: 28 2e                    jump @116
      :                          @114
  1936: 7e 7a                    a3 = u16 [a0 ]
  1938: 33 0b 7f                 a4 = 0x7f
  1941: 64 12                    t0 = sp
  1943: 01                       fallthrough
      :                          @115
  1944: 64 b9                    a2 = a4
  1946: 97 ab 30                 a4 = a3 << 0x30
  1949: 98 bc 34                 a5 = a4 >> 0x34
  1952: c8 92 03                 t1 = t0 + a2
  1955: 84 aa 0f                 a3 = a3 & 0xf
  1958: 88 a7 0a                 a0 = a3 <u 0xa
  1961: 86 ab 30                 a4 = a3 | 0x30
  1964: 95 aa 37                 a3 = a3 + 0x37
  1967: db 7b 0a                 a3 = a4 if a0 != 0
  1970: 78 3a                    u8 [t1] = a3
  1972: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
  1975: 64 ca                    a3 = a5
  1977: 52 0c df                 jump @115 if a5 != 0
      :                          @116
  1980: 95 99 01                 a2 = a2 + 0x1
  1983: c8 b2 0a                 a3 = t0 + a4
  1986: 95 aa 01                 a3 = a3 + 0x1
  1989: 9a 9b 81 00              a4 = 0x81 - a2
  1993: 33 09 02                 a2 = 0x2
  1996: 64 87                    a0 = a1
  1998: 33 08 1a 07 01           a1 = 0x1071a
  2003: 50 10 46 b7 27           ra = 70, jump @835
      :                          @117 [@dyn 35]
  2008: 82 10 80 00              ra = u64 [sp + 0x80]
  2012: 95 11 88 00              sp = sp + 0x88
  2016: 32 00                    ret
      :                          @118 [@dyn 36]
  2018: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  2022: 7b 10 80 00              u64 [sp + 0x80] = ra
  2026: 80 89 24                 a2 = u32 [a1 + 0x24]
  2029: 84 9a 10                 a3 = a2 & 0x10
  2032: 52 0a 16                 jump @121 if a3 != 0
      :                          @119
  2035: 84 99 20                 a2 = a2 & 0x20
  2038: 52 09 3b                 jump @124 if a2 != 0
      :                          @120
  2041: 82 77                    a0 = u64 [a0]
  2043: 82 10 80 00              ra = u64 [sp + 0x80]
  2047: 95 11 88 00              sp = sp + 0x88
  2051: 28 64 26                 jump @825
      :                          @121
  2054: 82 7b                    a4 = u64 [a0]
  2056: 33 0a 7f                 a3 = 0x7f
  2059: 64 12                    t0 = sp
  2061: 01                       fallthrough
      :                          @122
  2062: 64 a9                    a2 = a3
  2064: 98 bc 04                 a5 = a4 >> 0x4
  2067: c8 a2 03                 t1 = t0 + a3
  2070: 84 bb 0f                 a4 = a4 & 0xf
  2073: 88 b7 0a                 a0 = a4 <u 0xa
  2076: 86 ba 30                 a3 = a4 | 0x30
  2079: 95 bb 57                 a4 = a4 + 0x57
  2082: db 7a 0b                 a4 = a3 if a0 != 0
  2085: 78 3b                    u8 [t1] = a4
  2087: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  2090: 64 cb                    a4 = a5
  2092: 52 0c e2                 jump @122 if a5 != 0
      :                          @123
  2095: 28 2b                    jump @126
      :                          @124
  2097: 82 7b                    a4 = u64 [a0]
  2099: 33 0a 7f                 a3 = 0x7f
  2102: 64 12                    t0 = sp
  2104: 01                       fallthrough
      :                          @125
  2105: 64 a9                    a2 = a3
  2107: 98 bc 04                 a5 = a4 >> 0x4
  2110: c8 a2 03                 t1 = t0 + a3
  2113: 84 bb 0f                 a4 = a4 & 0xf
  2116: 88 b7 0a                 a0 = a4 <u 0xa
  2119: 86 ba 30                 a3 = a4 | 0x30
  2122: 95 bb 37                 a4 = a4 + 0x37
  2125: db 7a 0b                 a4 = a3 if a0 != 0
  2128: 78 3b                    u8 [t1] = a4
  2130: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  2133: 64 cb                    a4 = a5
  2135: 52 0c e2                 jump @125 if a5 != 0
      :                          @126
  2138: 95 99 01                 a2 = a2 + 0x1
  2141: c8 2a 0a                 a3 = a3 + t0
  2144: 95 aa 01                 a3 = a3 + 0x1
  2147: 9a 9b 81 00              a4 = 0x81 - a2
  2151: 33 09 02                 a2 = 0x2
  2154: 64 87                    a0 = a1
  2156: 33 08 1a 07 01           a1 = 0x1071a
  2161: 50 10 4a 19 27           ra = 74, jump @835
      :                          @127 [@dyn 37]
  2166: 82 10 80 00              ra = u64 [sp + 0x80]
  2170: 95 11 88 00              sp = sp + 0x88
  2174: 32 00                    ret
      :                          @128 [@dyn 38]
  2176: 82 78                    a1 = u64 [a0]
  2178: 51 08 3b                 jump @135 if a1 == 0
      :                          @129
  2181: 97 82 01                 t0 = a1 << 0x1
  2184: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  2190: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
  2196: ac 9a 29                 jump @135 if a3 <u a2
      :                          @130
  2199: 82 77 08                 a0 = u64 [a0 + 0x8]
  2202: 33 09 20 00 03           a2 = 0x30020
  2207: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  2213: 01                       fallthrough
      :                          @131
  2214: 82 9a                    a3 = u64 [a2]
  2216: c9 a9 0b                 a4 = a2 - a3
  2219: ab 7b 12                 jump @135 if a4 != a0
      :                          @132
  2222: c9 2a 0b                 a4 = a3 - t0
  2225: 01                       fallthrough
      :                          @133
  2226: 82 9c                    a5 = u64 [a2]
  2228: ab ac f2                 jump @131 if a5 != a3
      :                          @134
  2231: 7b 9b                    u64 [a2] = a4
  2233: 33 08                    a1 = 0
  2235: 32 00                    ret
      :                          @135
  2237: 32 00                    ret
      :                          @136 [@dyn 39]
  2239: 82 78                    a1 = u64 [a0]
  2241: 51 08 3b                 jump @143 if a1 == 0
      :                          @137
  2244: 97 82 03                 t0 = a1 << 0x3
  2247: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  2253: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
  2259: ac 9a 29                 jump @143 if a3 <u a2
      :                          @138
  2262: 82 77 08                 a0 = u64 [a0 + 0x8]
  2265: 33 09 20 00 03           a2 = 0x30020
  2270: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  2276: 01                       fallthrough
      :                          @139
  2277: 82 9a                    a3 = u64 [a2]
  2279: c9 a9 0b                 a4 = a2 - a3
  2282: ab 7b 12                 jump @143 if a4 != a0
      :                          @140
  2285: c9 2a 0b                 a4 = a3 - t0
  2288: 01                       fallthrough
      :                          @141
  2289: 82 9c                    a5 = u64 [a2]
  2291: ab ac f2                 jump @139 if a5 != a3
      :                          @142
  2294: 7b 9b                    u64 [a2] = a4
  2296: 33 08                    a1 = 0
  2298: 32 00                    ret
      :                          @143
  2300: 32 00                    ret
      :                          @144 [@dyn 40]
  2302: 82 78                    a1 = u64 [a0]
  2304: 82 8c 20                 a5 = u64 [a1 + 0x20]
  2307: 82 78 08                 a1 = u64 [a0 + 0x8]
  2310: 82 79 10                 a2 = u64 [a0 + 0x10]
  2313: 95 77 18                 a0 = a0 + 0x18
  2316: 32 0c                    jump [a5]
      :                          @145 [@dyn 41]
  2318: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  2321: 7b 10 20                 u64 [sp + 0x20] = ra
  2324: 7b 15 18                 u64 [sp + 0x18] = s0
  2327: 7b 16 10                 u64 [sp + 0x10] = s1
  2330: 82 75 10                 s0 = u64 [a0 + 0x10]
  2333: 7b 17                    u64 [sp] = a0
  2335: 82 77 08                 a0 = u64 [a0 + 0x8]
  2338: 7b 17 08                 u64 [sp + 0x8] = a0
  2341: 51 05 25                 jump @149 if s0 == 0
      :                          @146
  2344: 82 16 08                 s1 = u64 [sp + 0x8]
  2347: 95 66 18                 s1 = s1 + 0x18
  2350: 01                       fallthrough
      :                          @147
  2351: 82 67 e8                 a0 = u64 [s1 + 0xffffffffffffffe8]
  2354: 82 7a 20                 a3 = u64 [a0 + 0x20]
  2357: 82 68 f0                 a1 = u64 [s1 + 0xfffffffffffffff0]
  2360: 82 69 f8                 a2 = u64 [s1 + 0xfffffffffffffff8]
  2363: 64 67                    a0 = s1
  2365: b4 a0 01 54              ra = 84, jump [a3]
      :                          @148 [@dyn 42]
  2369: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2372: 95 66 20                 s1 = s1 + 0x20
  2375: 52 05 e8                 jump @147 if s0 != 0
      :                          @149
  2378: 82 17                    a0 = u64 [sp]
  2380: 82 77                    a0 = u64 [a0]
  2382: 82 16 08                 s1 = u64 [sp + 0x8]
  2385: 51 07 37                 jump @156 if a0 == 0
      :                          @150
  2388: 97 77 05                 a0 = a0 << 0x5
  2391: 33 08 00 00 00 f8        a1 = 0xfffffffff8000000
  2397: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
  2403: ac 89 25                 jump @156 if a2 <u a1
      :                          @151
  2406: 33 08 20 00 03           a1 = 0x30020
  2411: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  2417: 01                       fallthrough
      :                          @152
  2418: 82 89                    a2 = u64 [a1]
  2420: c9 98 0a                 a3 = a1 - a2
  2423: ab 6a 11                 jump @156 if a3 != s1
      :                          @153
  2426: c9 79 0a                 a3 = a2 - a0
  2429: 01                       fallthrough
      :                          @154
  2430: 82 8b                    a4 = u64 [a1]
  2432: ab 9b f2                 jump @152 if a4 != a2
      :                          @155
  2435: 7b 8a                    u64 [a1] = a3
  2437: 33 0c                    a5 = 0
  2439: 01                       fallthrough
      :                          @156
  2440: 82 10 20                 ra = u64 [sp + 0x20]
  2443: 82 15 18                 s0 = u64 [sp + 0x18]
  2446: 82 16 10                 s1 = u64 [sp + 0x10]
  2449: 95 11 28                 sp = sp + 0x28
  2452: 32 00                    ret
      :                          @157 [@dyn 43]
  2454: 82 78                    a1 = u64 [a0]
  2456: 51 08 3b                 jump @164 if a1 == 0
      :                          @158
  2459: 97 82 02                 t0 = a1 << 0x2
  2462: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  2468: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
  2474: ac 9a 29                 jump @164 if a3 <u a2
      :                          @159
  2477: 82 77 08                 a0 = u64 [a0 + 0x8]
  2480: 33 09 20 00 03           a2 = 0x30020
  2485: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  2491: 01                       fallthrough
      :                          @160
  2492: 82 9a                    a3 = u64 [a2]
  2494: c9 a9 0b                 a4 = a2 - a3
  2497: ab 7b 12                 jump @164 if a4 != a0
      :                          @161
  2500: c9 2a 0b                 a4 = a3 - t0
  2503: 01                       fallthrough
      :                          @162
  2504: 82 9c                    a5 = u64 [a2]
  2506: ab ac f2                 jump @160 if a5 != a3
      :                          @163
  2509: 7b 9b                    u64 [a2] = a4
  2511: 33 08                    a1 = 0
  2513: 32 00                    ret
      :                          @164
  2515: 32 00                    ret
      :                          @165 [@dyn 44]
  2517: 95 11 60 ff              sp = sp + 0xffffffffffffff60
  2521: 7b 10 98 00              u64 [sp + 0x98] = ra
  2525: 7b 15 90 00              u64 [sp + 0x90] = s0
  2529: 7b 16 88 00              u64 [sp + 0x88] = s1
  2533: 82 89 38                 a2 = u64 [a1 + 0x38]
  2536: 82 75 08                 s0 = u64 [a0 + 0x8]
  2539: 82 76 10                 s1 = u64 [a0 + 0x10]
  2542: 7b 18 18                 u64 [sp + 0x18] = a1
  2545: 82 87 30                 a0 = u64 [a1 + 0x30]
  2548: 82 9a 18                 a3 = u64 [a2 + 0x18]
  2551: 33 08 d1 06 01           a1 = 0x106d1
  2556: 33 09 01                 a2 = 0x1
  2559: 33 0b 01                 a4 = 0x1
  2562: 7b 19 10                 u64 [sp + 0x10] = a2
  2565: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @166 [@dyn 45]
  2569: 7b 16 08                 u64 [sp + 0x8] = s1
  2572: 51 06 25                 jump @171 if s1 == 0
      :                          @167
  2575: 7b 15                    u64 [sp] = s0
  2577: 7b 15 20                 u64 [sp + 0x20] = s0
  2580: 52 07 9a 00              jump @176 if a0 != 0
      :                          @168
  2584: 82 18 18                 a1 = u64 [sp + 0x18]
  2587: 7c 87 24                 a0 = u8 [a1 + 0x24]
  2590: 84 77 04                 a0 = a0 & 0x4
  2593: 52 07 18                 jump @172 if a0 != 0
      :                          @169
  2596: 95 17 20                 a0 = sp + 0x20
  2599: 50 10 5c e6 f5           ra = 92, jump @3
      :                          @170 [@dyn 46]
  2604: 7b 17 10                 u64 [sp + 0x10] = a0
  2607: 28 7f                    jump @176
      :                          @171
  2609: 64 79                    a2 = a0
  2611: 82 18 18                 a1 = u64 [sp + 0x18]
  2614: 28 85 00                 jump @177
      :                          @172
  2617: 82 85 38                 s0 = u64 [a1 + 0x38]
  2620: 82 86 30                 s1 = u64 [a1 + 0x30]
  2623: 82 5a 18                 a3 = u64 [s0 + 0x18]
  2626: 33 08 18 07 01           a1 = 0x10718
  2631: 33 09 01                 a2 = 0x1
  2634: 7b 19 10                 u64 [sp + 0x10] = a2
  2637: 64 67                    a0 = s1
  2639: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @173 [@dyn 47]
  2643: 52 07 5b                 jump @176 if a0 != 0
      :                          @174
  2646: 7b 16 28                 u64 [sp + 0x28] = s1
  2649: 7b 15 30                 u64 [sp + 0x30] = s0
  2652: 95 17 47                 a0 = sp + 0x47
  2655: 7b 17 38                 u64 [sp + 0x38] = a0
  2658: 82 1b 18                 a4 = u64 [sp + 0x18]
  2661: 82 b7                    a0 = u64 [a4]
  2663: 82 b8 08                 a1 = u64 [a4 + 0x8]
  2666: 82 b9 10                 a2 = u64 [a4 + 0x10]
  2669: 82 ba 18                 a3 = u64 [a4 + 0x18]
  2672: 7b 17 48                 u64 [sp + 0x48] = a0
  2675: 7b 18 50                 u64 [sp + 0x50] = a1
  2678: 7b 19 58                 u64 [sp + 0x58] = a2
  2681: 7b 1a 60                 u64 [sp + 0x60] = a3
  2684: 82 b7 20                 a0 = u64 [a4 + 0x20]
  2687: 82 b8 28                 a1 = u64 [a4 + 0x28]
  2690: 49 11 10 01              u64 [sp + 16] = 0x1
  2694: 46 11 47 01              u8 [sp + 71] = 0x1
  2698: 7b 17 68                 u64 [sp + 0x68] = a0
  2701: 7b 18 70                 u64 [sp + 0x70] = a1
  2704: 95 17 28                 a0 = sp + 0x28
  2707: 7b 17 78                 u64 [sp + 0x78] = a0
  2710: 33 07 d8 06 01           a0 = 0x106d8
  2715: 7b 17 80 00              u64 [sp + 0x80] = a0
  2719: 95 17 20                 a0 = sp + 0x20
  2722: 95 18 48                 a1 = sp + 0x48
  2725: 50 10 60 68 f5           ra = 96, jump @3
      :                          @175 [@dyn 48]
  2730: 51 07 0c 01              jump @193 if a0 == 0
      :                          @176
  2734: 82 18 18                 a1 = u64 [sp + 0x18]
  2737: 82 19 10                 a2 = u64 [sp + 0x10]
  2740: 82 16 08                 s1 = u64 [sp + 0x8]
  2743: 52 16 01 31              jump @180 if s1 != 1
      :                          @177
  2747: 33 07 01                 a0 = 0x1
  2750: 52 09 18                 jump @179 if a2 != 0
      :                          @178
  2753: 82 89 38                 a2 = u64 [a1 + 0x38]
  2756: 82 87 30                 a0 = u64 [a1 + 0x30]
  2759: 82 9a 18                 a3 = u64 [a2 + 0x18]
  2762: 33 08 19 07 01           a1 = 0x10719
  2767: 33 09 01                 a2 = 0x1
  2770: b4 a0 01 62              ra = 98, jump [a3]
      :                          @179 [@dyn 49]
  2774: 82 10 98 00              ra = u64 [sp + 0x98]
  2778: 82 15 90 00              s0 = u64 [sp + 0x90]
  2782: 82 16 88 00              s1 = u64 [sp + 0x88]
  2786: 95 11 a0 00              sp = sp + 0xa0
  2790: 32 00                    ret
      :                          @180
  2792: 97 66 03                 s1 = s1 << 0x3
  2795: 82 15                    s0 = u64 [sp]
  2797: 95 55 08                 s0 = s0 + 0x8
  2800: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  2803: 28 12                    jump @183
      :                          @181
  2805: 82 18 18                 a1 = u64 [sp + 0x18]
  2808: 33 09 01                 a2 = 0x1
  2811: 01                       fallthrough
      :                          @182
  2812: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  2815: 95 55 08                 s0 = s0 + 0x8
  2818: 51 06 b9                 jump @177 if s1 == 0
      :                          @183
  2821: 7b 15 20                 u64 [sp + 0x20] = s0
  2824: 84 97 01                 a0 = a2 & 0x1
  2827: 33 09 01                 a2 = 0x1
  2830: 52 07 ee                 jump @182 if a0 != 0
      :                          @184
  2833: 7c 89 24                 a2 = u8 [a1 + 0x24]
  2836: 82 87 30                 a0 = u64 [a1 + 0x30]
  2839: 82 8a 38                 a3 = u64 [a1 + 0x38]
  2842: 84 99 04                 a2 = a2 & 0x4
  2845: 52 09 2a                 jump @189 if a2 != 0
      :                          @185
  2848: 82 aa 18                 a3 = u64 [a3 + 0x18]
  2851: 33 09 02                 a2 = 0x2
  2854: 33 08 0b 07 01           a1 = 0x1070b
  2859: b4 a0 01 64              ra = 100, jump [a3]
      :                          @186 [@dyn 50]
  2863: 82 18 18                 a1 = u64 [sp + 0x18]
  2866: 33 09 01                 a2 = 0x1
  2869: 52 07 c7                 jump @182 if a0 != 0
      :                          @187
  2872: 95 17 20                 a0 = sp + 0x20
  2875: 50 10 66 d2 f4           ra = 102, jump @3
      :                          @188 [@dyn 51]
  2880: 82 18 18                 a1 = u64 [sp + 0x18]
  2883: 64 79                    a2 = a0
  2885: 28 b7                    jump @182
      :                          @189
  2887: 7b 17 28                 u64 [sp + 0x28] = a0
  2890: 7b 1a 30                 u64 [sp + 0x30] = a3
  2893: 82 87                    a0 = u64 [a1]
  2895: 82 8b 08                 a4 = u64 [a1 + 0x8]
  2898: 82 89 10                 a2 = u64 [a1 + 0x10]
  2901: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2904: 7b 17 48                 u64 [sp + 0x48] = a0
  2907: 7b 1b 50                 u64 [sp + 0x50] = a4
  2910: 7b 19 58                 u64 [sp + 0x58] = a2
  2913: 7b 1a 60                 u64 [sp + 0x60] = a3
  2916: 82 87 20                 a0 = u64 [a1 + 0x20]
  2919: 82 88 28                 a1 = u64 [a1 + 0x28]
  2922: 46 11 47 01              u8 [sp + 71] = 0x1
  2926: 95 19 47                 a2 = sp + 0x47
  2929: 7b 19 38                 u64 [sp + 0x38] = a2
  2932: 7b 17 68                 u64 [sp + 0x68] = a0
  2935: 7b 18 70                 u64 [sp + 0x70] = a1
  2938: 95 17 28                 a0 = sp + 0x28
  2941: 7b 17 78                 u64 [sp + 0x78] = a0
  2944: 33 07 d8 06 01           a0 = 0x106d8
  2949: 7b 17 80 00              u64 [sp + 0x80] = a0
  2953: 95 17 20                 a0 = sp + 0x20
  2956: 95 18 48                 a1 = sp + 0x48
  2959: 50 10 68 7e f4           ra = 104, jump @3
      :                          @190 [@dyn 52]
  2964: 52 07 61 ff              jump @181 if a0 != 0
      :                          @191
  2968: 82 18 80 00              a1 = u64 [sp + 0x80]
  2972: 82 17 78                 a0 = u64 [sp + 0x78]
  2975: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2978: 33 09 02                 a2 = 0x2
  2981: 33 08 10 07 01           a1 = 0x10710
  2986: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @192 [@dyn 53]
  2990: 64 79                    a2 = a0
  2992: 82 18 18                 a1 = u64 [sp + 0x18]
  2995: 28 49 ff                 jump @182
      :                          @193
  2998: 82 18 80 00              a1 = u64 [sp + 0x80]
  3002: 82 17 78                 a0 = u64 [sp + 0x78]
  3005: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3008: 33 08 10 07 01           a1 = 0x10710
  3013: 33 09 02                 a2 = 0x2
  3016: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @194 [@dyn 54]
  3020: 28 60 fe                 jump @170
      :                          @195 [@dyn 55]
  3023: 95 11 48 ff              sp = sp + 0xffffffffffffff48
  3027: 7b 10 b0 00              u64 [sp + 0xb0] = ra
  3031: 7b 15 a8 00              u64 [sp + 0xa8] = s0
  3035: 7b 16 a0 00              u64 [sp + 0xa0] = s1
  3039: 64 85                    s0 = a1
  3041: 82 88 38                 a1 = u64 [a1 + 0x38]
  3044: 82 79 08                 a2 = u64 [a0 + 0x8]
  3047: 7b 19                    u64 [sp] = a2
  3049: 82 76 10                 s1 = u64 [a0 + 0x10]
  3052: 82 57 30                 a0 = u64 [s0 + 0x30]
  3055: 7b 18 18                 u64 [sp + 0x18] = a1
  3058: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3061: 33 08 d1 06 01           a1 = 0x106d1
  3066: 33 09 01                 a2 = 0x1
  3069: 33 0b 01                 a4 = 0x1
  3072: 7b 19 10                 u64 [sp + 0x10] = a2
  3075: 7b 17 38                 u64 [sp + 0x38] = a0
  3078: 7b 1a 28                 u64 [sp + 0x28] = a3
  3081: b4 a0 01 70              ra = 112, jump [a3]
      :                          @196 [@dyn 56]
  3085: 7b 16 08                 u64 [sp + 0x8] = s1
  3088: 51 06 24                 jump @201 if s1 == 0
      :                          @197
  3091: 80 58 24                 a1 = u32 [s0 + 0x24]
  3094: 84 88 04                 a1 = a1 & 0x4
  3097: 7b 18 30                 u64 [sp + 0x30] = a1
  3100: 52 07 92 00              jump @206 if a0 != 0
      :                          @198
  3104: 82 17 30                 a0 = u64 [sp + 0x30]
  3107: 52 07 16                 jump @202 if a0 != 0
      :                          @199
  3110: 82 17                    a0 = u64 [sp]
  3112: 64 58                    a1 = s0
  3114: 50 10 72 58 15           ra = 114, jump @547
      :                          @200 [@dyn 57]
  3119: 7b 17 10                 u64 [sp + 0x10] = a0
  3122: 28 7c                    jump @206
      :                          @201
  3124: 64 78                    a1 = a0
  3126: 28 84 00                 jump @207
      :                          @202
  3129: 33 08 18 07 01           a1 = 0x10718
  3134: 33 09 01                 a2 = 0x1
  3137: 7b 19 10                 u64 [sp + 0x10] = a2
  3140: 82 17 38                 a0 = u64 [sp + 0x38]
  3143: 82 1a 28                 a3 = u64 [sp + 0x28]
  3146: b4 a0 01 74              ra = 116, jump [a3]
      :                          @203 [@dyn 58]
  3150: 52 07 60                 jump @206 if a0 != 0
      :                          @204
  3153: 82 57                    a0 = u64 [s0]
  3155: 95 18 5f                 a1 = sp + 0x5f
  3158: 7b 18 50                 u64 [sp + 0x50] = a1
  3161: 82 58 08                 a1 = u64 [s0 + 0x8]
  3164: 7b 17 60                 u64 [sp + 0x60] = a0
  3167: 82 57 10                 a0 = u64 [s0 + 0x10]
  3170: 82 59 18                 a2 = u64 [s0 + 0x18]
  3173: 7b 18 68                 u64 [sp + 0x68] = a1
  3176: 82 58 20                 a1 = u64 [s0 + 0x20]
  3179: 7b 17 70                 u64 [sp + 0x70] = a0
  3182: 7b 19 78                 u64 [sp + 0x78] = a2
  3185: 7b 18 80 00              u64 [sp + 0x80] = a1
  3189: 82 57 28                 a0 = u64 [s0 + 0x28]
  3192: 49 11 10 01              u64 [sp + 16] = 0x1
  3196: 46 11 5f 01              u8 [sp + 95] = 0x1
  3200: 82 18 38                 a1 = u64 [sp + 0x38]
  3203: 7b 18 40                 u64 [sp + 0x40] = a1
  3206: 82 18 18                 a1 = u64 [sp + 0x18]
  3209: 7b 18 48                 u64 [sp + 0x48] = a1
  3212: 7b 17 88 00              u64 [sp + 0x88] = a0
  3216: 95 17 40                 a0 = sp + 0x40
  3219: 7b 17 90 00              u64 [sp + 0x90] = a0
  3223: 33 07 d8 06 01           a0 = 0x106d8
  3228: 7b 17 98 00              u64 [sp + 0x98] = a0
  3232: 95 18 60                 a1 = sp + 0x60
  3235: 82 17                    a0 = u64 [sp]
  3237: 50 10 76 dd 14           ra = 118, jump @547
      :                          @205 [@dyn 59]
  3242: 51 07 fe 00              jump @223 if a0 == 0
      :                          @206
  3246: 33 09 01                 a2 = 0x1
  3249: 82 18 10                 a1 = u64 [sp + 0x10]
  3252: 82 17 08                 a0 = u64 [sp + 0x8]
  3255: ab 97 2d                 jump @210 if a0 != a2
      :                          @207
  3258: 33 07 01                 a0 = 0x1
  3261: 52 08 15                 jump @209 if a1 != 0
      :                          @208
  3264: 33 08 19 07 01           a1 = 0x10719
  3269: 33 09 01                 a2 = 0x1
  3272: 82 17 38                 a0 = u64 [sp + 0x38]
  3275: 82 1a 28                 a3 = u64 [sp + 0x28]
  3278: b4 a0 01 78              ra = 120, jump [a3]
      :                          @209 [@dyn 60]
  3282: 82 10 b0 00              ra = u64 [sp + 0xb0]
  3286: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  3290: 82 16 a0 00              s1 = u64 [sp + 0xa0]
  3294: 95 11 b8 00              sp = sp + 0xb8
  3298: 32 00                    ret
      :                          @210
  3300: 7b 15 20                 u64 [sp + 0x20] = s0
  3303: 97 75 05                 s0 = a0 << 0x5
  3306: 82 17                    a0 = u64 [sp]
  3308: 95 76 20                 s1 = a0 + 0x20
  3311: 95 55 e0                 s0 = s0 + 0xffffffffffffffe0
  3314: 28 0f                    jump @213
      :                          @211
  3316: 33 08 01                 a1 = 0x1
  3319: 01                       fallthrough
      :                          @212
  3320: 95 55 e0                 s0 = s0 + 0xffffffffffffffe0
  3323: 95 66 20                 s1 = s1 + 0x20
  3326: 51 05 bc                 jump @207 if s0 == 0
      :                          @213
  3329: 84 87 01                 a0 = a1 & 0x1
  3332: 33 08 01                 a1 = 0x1
  3335: 52 07 f1                 jump @212 if a0 != 0
      :                          @214
  3338: 82 17 30                 a0 = u64 [sp + 0x30]
  3341: 52 07 29                 jump @219 if a0 != 0
      :                          @215
  3344: 33 09 02                 a2 = 0x2
  3347: 82 17 38                 a0 = u64 [sp + 0x38]
  3350: 33 08 0b 07 01           a1 = 0x1070b
  3355: 82 1a 28                 a3 = u64 [sp + 0x28]
  3358: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @216 [@dyn 61]
  3362: 33 08 01                 a1 = 0x1
  3365: 52 07 d3                 jump @212 if a0 != 0
      :                          @217
  3368: 64 67                    a0 = s1
  3370: 82 18 20                 a1 = u64 [sp + 0x20]
  3373: 50 10 7c 55 14           ra = 124, jump @547
      :                          @218 [@dyn 62]
  3378: 64 78                    a1 = a0
  3380: 28 c4                    jump @212
      :                          @219
  3382: 82 1a 20                 a3 = u64 [sp + 0x20]
  3385: 82 a7                    a0 = u64 [a3]
  3387: 82 a8 08                 a1 = u64 [a3 + 0x8]
  3390: 7b 17 60                 u64 [sp + 0x60] = a0
  3393: 82 a7 10                 a0 = u64 [a3 + 0x10]
  3396: 82 a9 18                 a2 = u64 [a3 + 0x18]
  3399: 7b 18 68                 u64 [sp + 0x68] = a1
  3402: 82 a8 20                 a1 = u64 [a3 + 0x20]
  3405: 7b 17 70                 u64 [sp + 0x70] = a0
  3408: 7b 19 78                 u64 [sp + 0x78] = a2
  3411: 46 11 5f 01              u8 [sp + 95] = 0x1
  3415: 7b 18 80 00              u64 [sp + 0x80] = a1
  3419: 82 a7 28                 a0 = u64 [a3 + 0x28]
  3422: 82 18 38                 a1 = u64 [sp + 0x38]
  3425: 7b 18 40                 u64 [sp + 0x40] = a1
  3428: 82 18 18                 a1 = u64 [sp + 0x18]
  3431: 7b 18 48                 u64 [sp + 0x48] = a1
  3434: 95 18 5f                 a1 = sp + 0x5f
  3437: 7b 18 50                 u64 [sp + 0x50] = a1
  3440: 7b 17 88 00              u64 [sp + 0x88] = a0
  3444: 95 17 40                 a0 = sp + 0x40
  3447: 7b 17 90 00              u64 [sp + 0x90] = a0
  3451: 33 07 d8 06 01           a0 = 0x106d8
  3456: 7b 17 98 00              u64 [sp + 0x98] = a0
  3460: 95 18 60                 a1 = sp + 0x60
  3463: 64 67                    a0 = s1
  3465: 50 10 7e f9 13           ra = 126, jump @547
      :                          @220 [@dyn 63]
  3470: 52 07 66 ff              jump @211 if a0 != 0
      :                          @221
  3474: 95 17 40                 a0 = sp + 0x40
  3477: 33 09 02                 a2 = 0x2
  3480: 33 08 10 07 01           a1 = 0x10710
  3485: 50 20 80 00 9a 2f        ra = 128, jump @1094
      :                          @222 [@dyn 64]
  3491: 64 78                    a1 = a0
  3493: 28 53 ff                 jump @212
      :                          @223
  3496: 33 08 10 07 01           a1 = 0x10710
  3501: 95 17 40                 a0 = sp + 0x40
  3504: 33 09 02                 a2 = 0x2
  3507: 50 20 82 00 84 2f        ra = 130, jump @1094
      :                          @224 [@dyn 65]
  3513: 28 76 fe                 jump @200
      :                          @225 [@dyn 66]
  3516: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  3520: 7b 10 80 00              u64 [sp + 0x80] = ra
  3524: 7b 15 78                 u64 [sp + 0x78] = s0
  3527: 7b 16 70                 u64 [sp + 0x70] = s1
  3530: 82 89 38                 a2 = u64 [a1 + 0x38]
  3533: 82 7a 08                 a3 = u64 [a0 + 0x8]
  3536: 7b 1a                    u64 [sp] = a3
  3538: 82 75 10                 s0 = u64 [a0 + 0x10]
  3541: 7b 18 08                 u64 [sp + 0x8] = a1
  3544: 82 87 30                 a0 = u64 [a1 + 0x30]
  3547: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3550: 33 08 d1 06 01           a1 = 0x106d1
  3555: 33 09 01                 a2 = 0x1
  3558: 33 06 01                 s1 = 0x1
  3561: b4 a0 02 86 00           ra = 134, jump [a3]
      :                          @226 [@dyn 67]
  3566: 51 05 20                 jump @231 if s0 == 0
      :                          @227
  3569: 52 07 9c 00              jump @236 if a0 != 0
      :                          @228
  3573: 82 18 08                 a1 = u64 [sp + 0x8]
  3576: 7c 87 24                 a0 = u8 [a1 + 0x24]
  3579: 84 77 04                 a0 = a0 & 0x4
  3582: 52 07 18                 jump @232 if a0 != 0
      :                          @229
  3585: 82 17                    a0 = u64 [sp]
  3587: 50 20 88 00 39 f4        ra = 136, jump @42
      :                          @230 [@dyn 68]
  3593: 64 76                    s1 = a0
  3595: 28 82 00                 jump @236
      :                          @231
  3598: 64 79                    a2 = a0
  3600: 82 18 08                 a1 = u64 [sp + 0x8]
  3603: 28 83 00                 jump @237
      :                          @232
  3606: 82 89 38                 a2 = u64 [a1 + 0x38]
  3609: 82 87 30                 a0 = u64 [a1 + 0x30]
  3612: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3615: 33 08 18 07 01           a1 = 0x10718
  3620: 33 09 01                 a2 = 0x1
  3623: 33 06 01                 s1 = 0x1
  3626: b4 a0 02 8a 00           ra = 138, jump [a3]
      :                          @233 [@dyn 69]
  3631: 52 07 5e                 jump @236 if a0 != 0
      :                          @234
  3634: 82 1b 08                 a4 = u64 [sp + 0x8]
  3637: 82 b7 30                 a0 = u64 [a4 + 0x30]
  3640: 82 b8 38                 a1 = u64 [a4 + 0x38]
  3643: 7b 17 10                 u64 [sp + 0x10] = a0
  3646: 7b 18 18                 u64 [sp + 0x18] = a1
  3649: 95 17 2f                 a0 = sp + 0x2f
  3652: 7b 17 20                 u64 [sp + 0x20] = a0
  3655: 82 b7                    a0 = u64 [a4]
  3657: 82 b8 08                 a1 = u64 [a4 + 0x8]
  3660: 82 b9 10                 a2 = u64 [a4 + 0x10]
  3663: 82 ba 18                 a3 = u64 [a4 + 0x18]
  3666: 7b 17 30                 u64 [sp + 0x30] = a0
  3669: 7b 18 38                 u64 [sp + 0x38] = a1
  3672: 7b 19 40                 u64 [sp + 0x40] = a2
  3675: 7b 1a 48                 u64 [sp + 0x48] = a3
  3678: 82 b7 20                 a0 = u64 [a4 + 0x20]
  3681: 82 b8 28                 a1 = u64 [a4 + 0x28]
  3684: 33 06 01                 s1 = 0x1
  3687: 78 16 2f                 u8 [sp + 0x2f] = s1
  3690: 7b 17 50                 u64 [sp + 0x50] = a0
  3693: 7b 18 58                 u64 [sp + 0x58] = a1
  3696: 95 17 10                 a0 = sp + 0x10
  3699: 7b 17 60                 u64 [sp + 0x60] = a0
  3702: 33 07 d8 06 01           a0 = 0x106d8
  3707: 7b 17 68                 u64 [sp + 0x68] = a0
  3710: 95 18 30                 a1 = sp + 0x30
  3713: 82 17                    a0 = u64 [sp]
  3715: 50 20 8c 00 b9 f3        ra = 140, jump @42
      :                          @235 [@dyn 70]
  3721: 51 07 0a 01              jump @253 if a0 == 0
      :                          @236
  3725: 82 18 08                 a1 = u64 [sp + 0x8]
  3728: 64 69                    a2 = s1
  3730: 52 15 01 30              jump @240 if s0 != 1
      :                          @237
  3734: 33 07 01                 a0 = 0x1
  3737: 52 09 19                 jump @239 if a2 != 0
      :                          @238
  3740: 82 89 38                 a2 = u64 [a1 + 0x38]
  3743: 82 87 30                 a0 = u64 [a1 + 0x30]
  3746: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3749: 33 08 19 07 01           a1 = 0x10719
  3754: 33 09 01                 a2 = 0x1
  3757: b4 a0 02 8e 00           ra = 142, jump [a3]
      :                          @239 [@dyn 71]
  3762: 82 10 80 00              ra = u64 [sp + 0x80]
  3766: 82 15 78                 s0 = u64 [sp + 0x78]
  3769: 82 16 70                 s1 = u64 [sp + 0x70]
  3772: 95 11 88 00              sp = sp + 0x88
  3776: 32 00                    ret
      :                          @240
  3778: 97 56 02                 s1 = s0 << 0x2
  3781: 82 15                    s0 = u64 [sp]
  3783: 95 55 04                 s0 = s0 + 0x4
  3786: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  3789: 28 12                    jump @243
      :                          @241
  3791: 82 18 08                 a1 = u64 [sp + 0x8]
  3794: 33 09 01                 a2 = 0x1
  3797: 01                       fallthrough
      :                          @242
  3798: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  3801: 95 55 04                 s0 = s0 + 0x4
  3804: 51 06 ba                 jump @237 if s1 == 0
      :                          @243
  3807: 84 97 01                 a0 = a2 & 0x1
  3810: 33 09 01                 a2 = 0x1
  3813: 52 07 f1                 jump @242 if a0 != 0
      :                          @244
  3816: 7c 87 24                 a0 = u8 [a1 + 0x24]
  3819: 84 77 04                 a0 = a0 & 0x4
  3822: 52 07 31                 jump @249 if a0 != 0
      :                          @245
  3825: 82 89 38                 a2 = u64 [a1 + 0x38]
  3828: 82 87 30                 a0 = u64 [a1 + 0x30]
  3831: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3834: 33 09 02                 a2 = 0x2
  3837: 33 08 0b 07 01           a1 = 0x1070b
  3842: b4 a0 02 90 00           ra = 144, jump [a3]
      :                          @246 [@dyn 72]
  3847: 82 18 08                 a1 = u64 [sp + 0x8]
  3850: 33 09 01                 a2 = 0x1
  3853: 52 07 c9                 jump @242 if a0 != 0
      :                          @247
  3856: 64 57                    a0 = s0
  3858: 50 20 92 00 2a f3        ra = 146, jump @42
      :                          @248 [@dyn 73]
  3864: 82 18 08                 a1 = u64 [sp + 0x8]
  3867: 64 79                    a2 = a0
  3869: 28 b9                    jump @242
      :                          @249
  3871: 82 87 30                 a0 = u64 [a1 + 0x30]
  3874: 82 89 38                 a2 = u64 [a1 + 0x38]
  3877: 7b 17 10                 u64 [sp + 0x10] = a0
  3880: 7b 19 18                 u64 [sp + 0x18] = a2
  3883: 82 87                    a0 = u64 [a1]
  3885: 82 8b 08                 a4 = u64 [a1 + 0x8]
  3888: 82 89 10                 a2 = u64 [a1 + 0x10]
  3891: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3894: 7b 17 30                 u64 [sp + 0x30] = a0
  3897: 7b 1b 38                 u64 [sp + 0x38] = a4
  3900: 7b 19 40                 u64 [sp + 0x40] = a2
  3903: 7b 1a 48                 u64 [sp + 0x48] = a3
  3906: 82 87 20                 a0 = u64 [a1 + 0x20]
  3909: 82 88 28                 a1 = u64 [a1 + 0x28]
  3912: 46 11 2f 01              u8 [sp + 47] = 0x1
  3916: 95 19 2f                 a2 = sp + 0x2f
  3919: 7b 19 20                 u64 [sp + 0x20] = a2
  3922: 7b 17 50                 u64 [sp + 0x50] = a0
  3925: 7b 18 58                 u64 [sp + 0x58] = a1
  3928: 95 17 10                 a0 = sp + 0x10
  3931: 7b 17 60                 u64 [sp + 0x60] = a0
  3934: 33 07 d8 06 01           a0 = 0x106d8
  3939: 7b 17 68                 u64 [sp + 0x68] = a0
  3942: 95 18 30                 a1 = sp + 0x30
  3945: 64 57                    a0 = s0
  3947: 50 20 94 00 d1 f2        ra = 148, jump @42
      :                          @250 [@dyn 74]
  3953: 52 07 5e ff              jump @241 if a0 != 0
      :                          @251
  3957: 82 18 68                 a1 = u64 [sp + 0x68]
  3960: 82 17 60                 a0 = u64 [sp + 0x60]
  3963: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3966: 33 09 02                 a2 = 0x2
  3969: 33 08 10 07 01           a1 = 0x10710
  3974: b4 a0 02 96 00           ra = 150, jump [a3]
      :                          @252 [@dyn 75]
  3979: 64 79                    a2 = a0
  3981: 82 18 08                 a1 = u64 [sp + 0x8]
  3984: 28 46 ff                 jump @242
      :                          @253
  3987: 82 18 68                 a1 = u64 [sp + 0x68]
  3990: 82 17 60                 a0 = u64 [sp + 0x60]
  3993: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3996: 33 08 10 07 01           a1 = 0x10710
  4001: 33 09 02                 a2 = 0x2
  4004: b4 a0 02 98 00           ra = 152, jump [a3]
      :                          @254 [@dyn 76]
  4009: 28 60 fe                 jump @230
      :                          @255 [@dyn 77]
  4012: 95 11 60 ff              sp = sp + 0xffffffffffffff60
  4016: 7b 10 98 00              u64 [sp + 0x98] = ra
  4020: 7b 15 90 00              u64 [sp + 0x90] = s0
  4024: 7b 16 88 00              u64 [sp + 0x88] = s1
  4028: 82 89 38                 a2 = u64 [a1 + 0x38]
  4031: 82 75 08                 s0 = u64 [a0 + 0x8]
  4034: 82 76 10                 s1 = u64 [a0 + 0x10]
  4037: 7b 18 18                 u64 [sp + 0x18] = a1
  4040: 82 87 30                 a0 = u64 [a1 + 0x30]
  4043: 82 9a 18                 a3 = u64 [a2 + 0x18]
  4046: 33 08 d1 06 01           a1 = 0x106d1
  4051: 33 09 01                 a2 = 0x1
  4054: 33 0b 01                 a4 = 0x1
  4057: 7b 19 10                 u64 [sp + 0x10] = a2
  4060: b4 a0 02 9c 00           ra = 156, jump [a3]
      :                          @256 [@dyn 78]
  4065: 7b 16 08                 u64 [sp + 0x8] = s1
  4068: 51 06 27                 jump @261 if s1 == 0
      :                          @257
  4071: 7b 15                    u64 [sp] = s0
  4073: 7b 15 20                 u64 [sp + 0x20] = s0
  4076: 52 07 9e 00              jump @266 if a0 != 0
      :                          @258
  4080: 82 18 18                 a1 = u64 [sp + 0x18]
  4083: 7c 87 24                 a0 = u8 [a1 + 0x24]
  4086: 84 77 04                 a0 = a0 & 0x4
  4089: 52 07 1a                 jump @262 if a0 != 0
      :                          @259
  4092: 95 17 20                 a0 = sp + 0x20
  4095: 50 20 9e 00 12 f3        ra = 158, jump @52
      :                          @260 [@dyn 79]
  4101: 7b 17 10                 u64 [sp + 0x10] = a0
  4104: 28 82 00                 jump @266
      :                          @261
  4107: 64 79                    a2 = a0
  4109: 82 18 18                 a1 = u64 [sp + 0x18]
  4112: 28 87 00                 jump @267
      :                          @262
  4115: 82 85 38                 s0 = u64 [a1 + 0x38]
  4118: 82 86 30                 s1 = u64 [a1 + 0x30]
  4121: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4124: 33 08 18 07 01           a1 = 0x10718
  4129: 33 09 01                 a2 = 0x1
  4132: 7b 19 10                 u64 [sp + 0x10] = a2
  4135: 64 67                    a0 = s1
  4137: b4 a0 02 a0 00           ra = 160, jump [a3]
      :                          @263 [@dyn 80]
  4142: 52 07 5c                 jump @266 if a0 != 0
      :                          @264
  4145: 7b 16 28                 u64 [sp + 0x28] = s1
  4148: 7b 15 30                 u64 [sp + 0x30] = s0
  4151: 95 17 47                 a0 = sp + 0x47
  4154: 7b 17 38                 u64 [sp + 0x38] = a0
  4157: 82 1b 18                 a4 = u64 [sp + 0x18]
  4160: 82 b7                    a0 = u64 [a4]
  4162: 82 b8 08                 a1 = u64 [a4 + 0x8]
  4165: 82 b9 10                 a2 = u64 [a4 + 0x10]
  4168: 82 ba 18                 a3 = u64 [a4 + 0x18]
  4171: 7b 17 48                 u64 [sp + 0x48] = a0
  4174: 7b 18 50                 u64 [sp + 0x50] = a1
  4177: 7b 19 58                 u64 [sp + 0x58] = a2
  4180: 7b 1a 60                 u64 [sp + 0x60] = a3
  4183: 82 b7 20                 a0 = u64 [a4 + 0x20]
  4186: 82 b8 28                 a1 = u64 [a4 + 0x28]
  4189: 49 11 10 01              u64 [sp + 16] = 0x1
  4193: 46 11 47 01              u8 [sp + 71] = 0x1
  4197: 7b 17 68                 u64 [sp + 0x68] = a0
  4200: 7b 18 70                 u64 [sp + 0x70] = a1
  4203: 95 17 28                 a0 = sp + 0x28
  4206: 7b 17 78                 u64 [sp + 0x78] = a0
  4209: 33 07 d8 06 01           a0 = 0x106d8
  4214: 7b 17 80 00              u64 [sp + 0x80] = a0
  4218: 95 17 20                 a0 = sp + 0x20
  4221: 95 18 48                 a1 = sp + 0x48
  4224: 50 20 a2 00 91 f2        ra = 162, jump @52
      :                          @265 [@dyn 81]
  4230: 51 07 11 01              jump @283 if a0 == 0
      :                          @266
  4234: 82 18 18                 a1 = u64 [sp + 0x18]
  4237: 82 19 10                 a2 = u64 [sp + 0x10]
  4240: 82 16 08                 s1 = u64 [sp + 0x8]
  4243: 52 16 01 32              jump @270 if s1 != 1
      :                          @267
  4247: 33 07 01                 a0 = 0x1
  4250: 52 09 19                 jump @269 if a2 != 0
      :                          @268
  4253: 82 89 38                 a2 = u64 [a1 + 0x38]
  4256: 82 87 30                 a0 = u64 [a1 + 0x30]
  4259: 82 9a 18                 a3 = u64 [a2 + 0x18]
  4262: 33 08 19 07 01           a1 = 0x10719
  4267: 33 09 01                 a2 = 0x1
  4270: b4 a0 02 a4 00           ra = 164, jump [a3]
      :                          @269 [@dyn 82]
  4275: 82 10 98 00              ra = u64 [sp + 0x98]
  4279: 82 15 90 00              s0 = u64 [sp + 0x90]
  4283: 82 16 88 00              s1 = u64 [sp + 0x88]
  4287: 95 11 a0 00              sp = sp + 0xa0
  4291: 32 00                    ret
      :                          @270
  4293: 97 66 01                 s1 = s1 << 0x1
  4296: 82 15                    s0 = u64 [sp]
  4298: 95 55 02                 s0 = s0 + 0x2
  4301: 95 66 fe                 s1 = s1 + 0xfffffffffffffffe
  4304: 28 12                    jump @273
      :                          @271
  4306: 82 18 18                 a1 = u64 [sp + 0x18]
  4309: 33 09 01                 a2 = 0x1
  4312: 01                       fallthrough
      :                          @272
  4313: 95 66 fe                 s1 = s1 + 0xfffffffffffffffe
  4316: 95 55 02                 s0 = s0 + 0x2
  4319: 51 06 b8                 jump @267 if s1 == 0
      :                          @273
  4322: 7b 15 20                 u64 [sp + 0x20] = s0
  4325: 84 97 01                 a0 = a2 & 0x1
  4328: 33 09 01                 a2 = 0x1
  4331: 52 07 ee                 jump @272 if a0 != 0
      :                          @274
  4334: 7c 89 24                 a2 = u8 [a1 + 0x24]
  4337: 82 87 30                 a0 = u64 [a1 + 0x30]
  4340: 82 8a 38                 a3 = u64 [a1 + 0x38]
  4343: 84 99 04                 a2 = a2 & 0x4
  4346: 52 09 2c                 jump @279 if a2 != 0
      :                          @275
  4349: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4352: 33 09 02                 a2 = 0x2
  4355: 33 08 0b 07 01           a1 = 0x1070b
  4360: b4 a0 02 a6 00           ra = 166, jump [a3]
      :                          @276 [@dyn 83]
  4365: 82 18 18                 a1 = u64 [sp + 0x18]
  4368: 33 09 01                 a2 = 0x1
  4371: 52 07 c6                 jump @272 if a0 != 0
      :                          @277
  4374: 95 17 20                 a0 = sp + 0x20
  4377: 50 20 a8 00 f8 f1        ra = 168, jump @52
      :                          @278 [@dyn 84]
  4383: 82 18 18                 a1 = u64 [sp + 0x18]
  4386: 64 79                    a2 = a0
  4388: 28 b5                    jump @272
      :                          @279
  4390: 7b 17 28                 u64 [sp + 0x28] = a0
  4393: 7b 1a 30                 u64 [sp + 0x30] = a3
  4396: 82 87                    a0 = u64 [a1]
  4398: 82 8b 08                 a4 = u64 [a1 + 0x8]
  4401: 82 89 10                 a2 = u64 [a1 + 0x10]
  4404: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4407: 7b 17 48                 u64 [sp + 0x48] = a0
  4410: 7b 1b 50                 u64 [sp + 0x50] = a4
  4413: 7b 19 58                 u64 [sp + 0x58] = a2
  4416: 7b 1a 60                 u64 [sp + 0x60] = a3
  4419: 82 87 20                 a0 = u64 [a1 + 0x20]
  4422: 82 88 28                 a1 = u64 [a1 + 0x28]
  4425: 46 11 47 01              u8 [sp + 71] = 0x1
  4429: 95 19 47                 a2 = sp + 0x47
  4432: 7b 19 38                 u64 [sp + 0x38] = a2
  4435: 7b 17 68                 u64 [sp + 0x68] = a0
  4438: 7b 18 70                 u64 [sp + 0x70] = a1
  4441: 95 17 28                 a0 = sp + 0x28
  4444: 7b 17 78                 u64 [sp + 0x78] = a0
  4447: 33 07 d8 06 01           a0 = 0x106d8
  4452: 7b 17 80 00              u64 [sp + 0x80] = a0
  4456: 95 17 20                 a0 = sp + 0x20
  4459: 95 18 48                 a1 = sp + 0x48
  4462: 50 20 aa 00 a3 f1        ra = 170, jump @52
      :                          @280 [@dyn 85]
  4468: 52 07 5e ff              jump @271 if a0 != 0
      :                          @281
  4472: 82 18 80 00              a1 = u64 [sp + 0x80]
  4476: 82 17 78                 a0 = u64 [sp + 0x78]
  4479: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4482: 33 09 02                 a2 = 0x2
  4485: 33 08 10 07 01           a1 = 0x10710
  4490: b4 a0 02 ac 00           ra = 172, jump [a3]
      :                          @282 [@dyn 86]
  4495: 64 79                    a2 = a0
  4497: 82 18 18                 a1 = u64 [sp + 0x18]
  4500: 28 45 ff                 jump @272
      :                          @283
  4503: 82 18 80 00              a1 = u64 [sp + 0x80]
  4507: 82 17 78                 a0 = u64 [sp + 0x78]
  4510: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4513: 33 08 10 07 01           a1 = 0x10710
  4518: 33 09 02                 a2 = 0x2
  4521: b4 a0 02 ae 00           ra = 174, jump [a3]
      :                          @284 [@dyn 87]
  4526: 28 57 fe                 jump @260
      :                          @285 [@dyn 88]
  4529: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4533: 7b 10 90 00              u64 [sp + 0x90] = ra
  4537: 7b 15 88 00              u64 [sp + 0x88] = s0
  4541: 7b 16 80 00              u64 [sp + 0x80] = s1
  4545: 82 79                    a2 = u64 [a0]
  4547: 95 77 08                 a0 = a0 + 0x8
  4550: 7b 17 18                 u64 [sp + 0x18] = a0
  4553: 51 09 61                 jump @295 if a2 == 0
      :                          @286
  4556: 52 19 01 b5 00           jump @303 if a2 != 1
      :                          @287
  4561: 82 89 38                 a2 = u64 [a1 + 0x38]
  4564: 82 87 30                 a0 = u64 [a1 + 0x30]
  4567: 64 86                    s1 = a1
  4569: 7b 19                    u64 [sp] = a2
  4571: 82 95 18                 s0 = u64 [a2 + 0x18]
  4574: 33 08 c0 00 01           a1 = 0x100c0
  4579: 33 09 03                 a2 = 0x3
  4582: 7b 17 08                 u64 [sp + 0x8] = a0
  4585: b4 50 02 b2 00           ra = 178, jump [s0]
      :                          @288 [@dyn 89]
  4590: 52 07 b3 00              jump @305 if a0 != 0
      :                          @289
  4594: 7b 16 10                 u64 [sp + 0x10] = s1
  4597: 7c 67 24                 a0 = u8 [s1 + 0x24]
  4600: 84 77 04                 a0 = a0 & 0x4
  4603: 52 07 f5 00              jump @313 if a0 != 0
      :                          @290
  4607: 33 08 15 07 01           a1 = 0x10715
  4612: 33 09 01                 a2 = 0x1
  4615: 33 06 01                 s1 = 0x1
  4618: 82 17 08                 a0 = u64 [sp + 0x8]
  4621: b4 50 02 b4 00           ra = 180, jump [s0]
      :                          @291 [@dyn 90]
  4626: 52 07 93 00              jump @306 if a0 != 0
      :                          @292
  4630: 82 17 18                 a0 = u64 [sp + 0x18]
  4633: 82 15 10                 s0 = u64 [sp + 0x10]
  4636: 64 58                    a1 = s0
  4638: 50 20 b6 00 41 f3        ra = 182, jump @82
      :                          @293 [@dyn 91]
  4644: 51 07 40 02              jump @329 if a0 == 0
      :                          @294
  4648: 28 7d                    jump @306
      :                          @295
  4650: 82 89 38                 a2 = u64 [a1 + 0x38]
  4653: 82 87 30                 a0 = u64 [a1 + 0x30]
  4656: 64 86                    s1 = a1
  4658: 7b 19                    u64 [sp] = a2
  4660: 82 95 18                 s0 = u64 [a2 + 0x18]
  4663: 33 08 dc 00 01           a1 = 0x100dc
  4668: 33 09 0e                 a2 = 0xe
  4671: 7b 17 08                 u64 [sp + 0x8] = a0
  4674: b4 50 02 b8 00           ra = 184, jump [s0]
      :                          @296 [@dyn 92]
  4679: 52 07 5a                 jump @305 if a0 != 0
      :                          @297
  4682: 7b 16 10                 u64 [sp + 0x10] = s1
  4685: 7c 67 24                 a0 = u8 [s1 + 0x24]
  4688: 84 77 04                 a0 = a0 & 0x4
  4691: 52 07 11 01              jump @318 if a0 != 0
      :                          @298
  4695: 33 08 15 07 01           a1 = 0x10715
  4700: 33 09 01                 a2 = 0x1
  4703: 33 06 01                 s1 = 0x1
  4706: 82 17 08                 a0 = u64 [sp + 0x8]
  4709: b4 50 02 ba 00           ra = 186, jump [s0]
      :                          @299 [@dyn 93]
  4714: 52 07 3b                 jump @306 if a0 != 0
      :                          @300
  4717: 82 17 18                 a0 = u64 [sp + 0x18]
  4720: 82 15 10                 s0 = u64 [sp + 0x10]
  4723: 64 58                    a1 = s0
  4725: 50 20 bc 00 42 f1        ra = 188, jump @62
      :                          @301 [@dyn 94]
  4731: 51 07 e9 01              jump @329 if a0 == 0
      :                          @302
  4735: 28 26                    jump @306
      :                          @303
  4737: 82 89 38                 a2 = u64 [a1 + 0x38]
  4740: 82 87 30                 a0 = u64 [a1 + 0x30]
  4743: 64 86                    s1 = a1
  4745: 7b 19                    u64 [sp] = a2
  4747: 82 95 18                 s0 = u64 [a2 + 0x18]
  4750: 33 08 ea 00 01           a1 = 0x100ea
  4755: 33 09 07                 a2 = 0x7
  4758: 7b 17 08                 u64 [sp + 0x8] = a0
  4761: b4 50 02 be 00           ra = 190, jump [s0]
      :                          @304 [@dyn 95]
  4766: 51 07 1b                 jump @307 if a0 == 0
      :                          @305
  4769: 33 06 01                 s1 = 0x1
  4772: 01                       fallthrough
      :                          @306
  4773: 64 67                    a0 = s1
  4775: 82 10 90 00              ra = u64 [sp + 0x90]
  4779: 82 15 88 00              s0 = u64 [sp + 0x88]
  4783: 82 16 80 00              s1 = u64 [sp + 0x80]
  4787: 95 11 98 00              sp = sp + 0x98
  4791: 32 00                    ret
      :                          @307
  4793: 7b 16 10                 u64 [sp + 0x10] = s1
  4796: 7c 67 24                 a0 = u8 [s1 + 0x24]
  4799: 84 77 04                 a0 = a0 & 0x4
  4802: 52 07 16 01              jump @323 if a0 != 0
      :                          @308
  4806: 33 08 15 07 01           a1 = 0x10715
  4811: 33 09 01                 a2 = 0x1
  4814: 33 06 01                 s1 = 0x1
  4817: 82 17 08                 a0 = u64 [sp + 0x8]
  4820: b4 50 02 c0 00           ra = 192, jump [s0]
      :                          @309 [@dyn 96]
  4825: 52 07 cc                 jump @306 if a0 != 0
      :                          @310
  4828: 82 17 18                 a0 = u64 [sp + 0x18]
  4831: 82 15 10                 s0 = u64 [sp + 0x10]
  4834: 64 58                    a1 = s0
  4836: 50 20 c2 00 a7 f1        ra = 194, jump @72
      :                          @311 [@dyn 97]
  4842: 51 07 7a 01              jump @329 if a0 == 0
      :                          @312
  4846: 28 b7                    jump @306
      :                          @313
  4848: 33 08 16 07 01           a1 = 0x10716
  4853: 33 09 02                 a2 = 0x2
  4856: 82 17 08                 a0 = u64 [sp + 0x8]
  4859: b4 50 02 c4 00           ra = 196, jump [s0]
      :                          @314 [@dyn 98]
  4864: 82 15 10                 s0 = u64 [sp + 0x10]
  4867: 33 06 01                 s1 = 0x1
  4870: 52 07 9f                 jump @306 if a0 != 0
      :                          @315
  4873: 82 17 08                 a0 = u64 [sp + 0x8]
  4876: 7b 17 20                 u64 [sp + 0x20] = a0
  4879: 82 17                    a0 = u64 [sp]
  4881: 7b 17 28                 u64 [sp + 0x28] = a0
  4884: 95 17 3f                 a0 = sp + 0x3f
  4887: 7b 17 30                 u64 [sp + 0x30] = a0
  4890: 82 57                    a0 = u64 [s0]
  4892: 82 58 08                 a1 = u64 [s0 + 0x8]
  4895: 82 59 10                 a2 = u64 [s0 + 0x10]
  4898: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4901: 7b 17 40                 u64 [sp + 0x40] = a0
  4904: 7b 18 48                 u64 [sp + 0x48] = a1
  4907: 7b 19 50                 u64 [sp + 0x50] = a2
  4910: 7b 1a 58                 u64 [sp + 0x58] = a3
  4913: 82 57 20                 a0 = u64 [s0 + 0x20]
  4916: 82 58 28                 a1 = u64 [s0 + 0x28]
  4919: 33 06 01                 s1 = 0x1
  4922: 78 16 3f                 u8 [sp + 0x3f] = s1
  4925: 7b 17 60                 u64 [sp + 0x60] = a0
  4928: 7b 18 68                 u64 [sp + 0x68] = a1
  4931: 95 17 20                 a0 = sp + 0x20
  4934: 7b 17 70                 u64 [sp + 0x70] = a0
  4937: 33 07 d8 06 01           a0 = 0x106d8
  4942: 7b 17 78                 u64 [sp + 0x78] = a0
  4945: 95 18 40                 a1 = sp + 0x40
  4948: 82 17 18                 a0 = u64 [sp + 0x18]
  4951: 50 20 c6 00 08 f2        ra = 198, jump @82
      :                          @316 [@dyn 99]
  4957: 51 07 ed 00              jump @327 if a0 == 0
      :                          @317
  4961: 28 44 ff                 jump @306
      :                          @318
  4964: 33 08 16 07 01           a1 = 0x10716
  4969: 33 09 02                 a2 = 0x2
  4972: 82 17 08                 a0 = u64 [sp + 0x8]
  4975: b4 50 02 c8 00           ra = 200, jump [s0]
      :                          @319 [@dyn 100]
  4980: 82 15 10                 s0 = u64 [sp + 0x10]
  4983: 33 06 01                 s1 = 0x1
  4986: 52 07 2b ff              jump @306 if a0 != 0
      :                          @320
  4990: 82 17 08                 a0 = u64 [sp + 0x8]
  4993: 7b 17 20                 u64 [sp + 0x20] = a0
  4996: 82 17                    a0 = u64 [sp]
  4998: 7b 17 28                 u64 [sp + 0x28] = a0
  5001: 95 17 3f                 a0 = sp + 0x3f
  5004: 7b 17 30                 u64 [sp + 0x30] = a0
  5007: 82 57                    a0 = u64 [s0]
  5009: 82 58 08                 a1 = u64 [s0 + 0x8]
  5012: 82 59 10                 a2 = u64 [s0 + 0x10]
  5015: 82 5a 18                 a3 = u64 [s0 + 0x18]
  5018: 7b 17 40                 u64 [sp + 0x40] = a0
  5021: 7b 18 48                 u64 [sp + 0x48] = a1
  5024: 7b 19 50                 u64 [sp + 0x50] = a2
  5027: 7b 1a 58                 u64 [sp + 0x58] = a3
  5030: 82 57 20                 a0 = u64 [s0 + 0x20]
  5033: 82 58 28                 a1 = u64 [s0 + 0x28]
  5036: 33 06 01                 s1 = 0x1
  5039: 78 16 3f                 u8 [sp + 0x3f] = s1
  5042: 7b 17 60                 u64 [sp + 0x60] = a0
  5045: 7b 18 68                 u64 [sp + 0x68] = a1
  5048: 95 17 20                 a0 = sp + 0x20
  5051: 7b 17 70                 u64 [sp + 0x70] = a0
  5054: 33 07 d8 06 01           a0 = 0x106d8
  5059: 7b 17 78                 u64 [sp + 0x78] = a0
  5062: 95 18 40                 a1 = sp + 0x40
  5065: 82 17 18                 a0 = u64 [sp + 0x18]
  5068: 50 20 ca 00 eb ef        ra = 202, jump @62
      :                          @321 [@dyn 101]
  5074: 51 07 78                 jump @327 if a0 == 0
      :                          @322
  5077: 28 d0 fe                 jump @306
      :                          @323
  5080: 33 08 16 07 01           a1 = 0x10716
  5085: 33 09 02                 a2 = 0x2
  5088: 82 17 08                 a0 = u64 [sp + 0x8]
  5091: b4 50 02 cc 00           ra = 204, jump [s0]
      :                          @324 [@dyn 102]
  5096: 82 15 10                 s0 = u64 [sp + 0x10]
  5099: 33 06 01                 s1 = 0x1
  5102: 52 07 b7 fe              jump @306 if a0 != 0
      :                          @325
  5106: 82 17 08                 a0 = u64 [sp + 0x8]
  5109: 7b 17 20                 u64 [sp + 0x20] = a0
  5112: 82 17                    a0 = u64 [sp]
  5114: 7b 17 28                 u64 [sp + 0x28] = a0
  5117: 95 17 3f                 a0 = sp + 0x3f
  5120: 7b 17 30                 u64 [sp + 0x30] = a0
  5123: 82 57                    a0 = u64 [s0]
  5125: 82 58 08                 a1 = u64 [s0 + 0x8]
  5128: 82 59 10                 a2 = u64 [s0 + 0x10]
  5131: 82 5a 18                 a3 = u64 [s0 + 0x18]
  5134: 7b 17 40                 u64 [sp + 0x40] = a0
  5137: 7b 18 48                 u64 [sp + 0x48] = a1
  5140: 7b 19 50                 u64 [sp + 0x50] = a2
  5143: 7b 1a 58                 u64 [sp + 0x58] = a3
  5146: 82 57 20                 a0 = u64 [s0 + 0x20]
  5149: 82 58 28                 a1 = u64 [s0 + 0x28]
  5152: 33 06 01                 s1 = 0x1
  5155: 78 16 3f                 u8 [sp + 0x3f] = s1
  5158: 7b 17 60                 u64 [sp + 0x60] = a0
  5161: 7b 18 68                 u64 [sp + 0x68] = a1
  5164: 95 17 20                 a0 = sp + 0x20
  5167: 7b 17 70                 u64 [sp + 0x70] = a0
  5170: 33 07 d8 06 01           a0 = 0x106d8
  5175: 7b 17 78                 u64 [sp + 0x78] = a0
  5178: 95 18 40                 a1 = sp + 0x40
  5181: 82 17 18                 a0 = u64 [sp + 0x18]
  5184: 50 20 ce 00 4b f0        ra = 206, jump @72
      :                          @326 [@dyn 103]
  5190: 52 07 5f fe              jump @306 if a0 != 0
      :                          @327
  5194: 82 18 78                 a1 = u64 [sp + 0x78]
  5197: 82 17 70                 a0 = u64 [sp + 0x70]
  5200: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5203: 33 08 10 07 01           a1 = 0x10710
  5208: 33 09 02                 a2 = 0x2
  5211: b4 a0 02 d0 00           ra = 208, jump [a3]
      :                          @328 [@dyn 104]
  5216: 52 07 45 fe              jump @306 if a0 != 0
      :                          @329
  5220: 82 58 38                 a1 = u64 [s0 + 0x38]
  5223: 82 57 30                 a0 = u64 [s0 + 0x30]
  5226: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5229: 33 08 d0 06 01           a1 = 0x106d0
  5234: 33 09 01                 a2 = 0x1
  5237: b4 a0 02 d2 00           ra = 210, jump [a3]
      :                          @330 [@dyn 105]
  5242: 64 76                    s1 = a0
  5244: 28 29 fe                 jump @306
      :                          @331 [@dyn 106]
  5247: 95 11 60 ff              sp = sp + 0xffffffffffffff60
  5251: 7b 10 98 00              u64 [sp + 0x98] = ra
  5255: 7b 15 90 00              u64 [sp + 0x90] = s0
  5259: 7b 16 88 00              u64 [sp + 0x88] = s1
  5263: 64 85                    s0 = a1
  5265: 95 78 18                 a1 = a0 + 0x18
  5268: 95 79 48                 a2 = a0 + 0x48
  5271: 95 7a 88 00              a3 = a0 + 0x88
  5275: 95 7b 30                 a4 = a0 + 0x30
  5278: 95 7c 68                 a5 = a0 + 0x68
  5281: 95 76 90 00              s1 = a0 + 0x90
  5285: 7b 16 70                 u64 [sp + 0x70] = s1
  5288: 7b 17                    u64 [sp] = a0
  5290: 33 07 40 01 01           a0 = 0x10140
  5295: 7b 17 08                 u64 [sp + 0x8] = a0
  5298: 95 16 10                 s1 = sp + 0x10
  5301: 7b 18 10                 u64 [sp + 0x10] = a1
  5304: 33 07 60 01 01           a0 = 0x10160
  5309: 7b 17 18                 u64 [sp + 0x18] = a0
  5312: 7b 19 20                 u64 [sp + 0x20] = a2
  5315: 33 07 80 01 01           a0 = 0x10180
  5320: 7b 17 28                 u64 [sp + 0x28] = a0
  5323: 7b 1a 30                 u64 [sp + 0x30] = a3
  5326: 33 08 a0 01 01           a1 = 0x101a0
  5331: 7b 18 38                 u64 [sp + 0x38] = a1
  5334: 7b 1b 40                 u64 [sp + 0x40] = a4
  5337: 33 08 c0 01 01           a1 = 0x101c0
  5342: 7b 18 48                 u64 [sp + 0x48] = a1
  5345: 7b 1c 50                 u64 [sp + 0x50] = a5
  5348: 7b 17 58                 u64 [sp + 0x58] = a0
  5351: 95 17 70                 a0 = sp + 0x70
  5354: 7b 17 60                 u64 [sp + 0x60] = a0
  5357: 82 58 38                 a1 = u64 [s0 + 0x38]
  5360: 33 07 e0 01 01           a0 = 0x101e0
  5365: 7b 17 68                 u64 [sp + 0x68] = a0
  5368: 82 57 30                 a0 = u64 [s0 + 0x30]
  5371: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5374: 33 08 00 02 01           a1 = 0x10200
  5379: 33 09 07                 a2 = 0x7
  5382: b4 a0 02 d6 00           ra = 214, jump [a3]
      :                          @332 [@dyn 107]
  5387: 7b 15 78                 u64 [sp + 0x78] = s0
  5390: 78 17 80 00              u8 [sp + 0x80] = a0
  5394: 46 21 81 00              u8 [sp + 129] = 0
  5398: 33 08 f1 00 01           a1 = 0x100f1
  5403: 33 05 98 01              s0 = 0x198
  5407: 95 17 78                 a0 = sp + 0x78
  5410: 33 09 09                 a2 = 0x9
  5413: 64 1a                    a3 = sp
  5415: 33 0b 98 01              a4 = 0x198
  5419: 50 20 d8 00 66 26        ra = 216, jump @1071
      :                          @333 [@dyn 108]
  5425: 33 08 fa 00 01           a1 = 0x100fa
  5430: 95 17 78                 a0 = sp + 0x78
  5433: 33 09 0c                 a2 = 0xc
  5436: 64 6a                    a3 = s1
  5438: 64 5b                    a4 = s0
  5440: 50 20 da 00 51 26        ra = 218, jump @1071
      :                          @334 [@dyn 109]
  5446: 33 08 cd 00 01           a1 = 0x100cd
  5451: 95 17 78                 a0 = sp + 0x78
  5454: 33 09 04                 a2 = 0x4
  5457: 95 1a 20                 a3 = sp + 0x20
  5460: 64 5b                    a4 = s0
  5462: 50 20 dc 00 3b 26        ra = 220, jump @1071
      :                          @335 [@dyn 110]
  5468: 33 08 06 01 01           a1 = 0x10106
  5473: 95 17 78                 a0 = sp + 0x78
  5476: 33 09 0b                 a2 = 0xb
  5479: 95 1a 30                 a3 = sp + 0x30
  5482: 64 5b                    a4 = s0
  5484: 50 20 de 00 25 26        ra = 222, jump @1071
      :                          @336 [@dyn 111]
  5490: 33 08 11 01 01           a1 = 0x10111
  5495: 95 17 78                 a0 = sp + 0x78
  5498: 33 09 11                 a2 = 0x11
  5501: 95 1a 40                 a3 = sp + 0x40
  5504: 64 5b                    a4 = s0
  5506: 50 20 e0 00 0f 26        ra = 224, jump @1071
      :                          @337 [@dyn 112]
  5512: 33 08 22 01 01           a1 = 0x10122
  5517: 95 17 78                 a0 = sp + 0x78
  5520: 33 09 0c                 a2 = 0xc
  5523: 95 1a 50                 a3 = sp + 0x50
  5526: 64 5b                    a4 = s0
  5528: 50 20 e2 00 f9 25        ra = 226, jump @1071
      :                          @338 [@dyn 113]
  5534: 33 08 2e 01 01           a1 = 0x1012e
  5539: 95 17 78                 a0 = sp + 0x78
  5542: 33 09 0e                 a2 = 0xe
  5545: 95 1a 60                 a3 = sp + 0x60
  5548: 64 5b                    a4 = s0
  5550: 50 20 e4 00 e3 25        ra = 228, jump @1071
      :                          @339 [@dyn 114]
  5556: 7c 17 81 00              a0 = u8 [sp + 0x81]
  5560: 7c 18 80 00              a1 = u8 [sp + 0x80]
  5564: 84 79 01                 a2 = a0 & 0x1
  5567: d4 87 07                 a0 = a0 | a1
  5570: 51 09 42                 jump @344 if a2 == 0
      :                          @340
  5573: 84 88 01                 a1 = a1 & 0x1
  5576: 52 08 3c                 jump @344 if a1 != 0
      :                          @341
  5579: 82 17 78                 a0 = u64 [sp + 0x78]
  5582: 7c 78 24                 a1 = u8 [a0 + 0x24]
  5585: 84 88 04                 a1 = a1 & 0x4
  5588: 52 08 1a                 jump @343 if a1 != 0
      :                          @342
  5591: 82 78 38                 a1 = u64 [a0 + 0x38]
  5594: 82 77 30                 a0 = u64 [a0 + 0x30]
  5597: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5600: 33 08 13 07 01           a1 = 0x10713
  5605: 33 09 02                 a2 = 0x2
  5608: 33 00 e6 00              ra = 0xe6
  5612: 32 0a                    jump [a3]
      :                          @343
  5614: 82 78 38                 a1 = u64 [a0 + 0x38]
  5617: 82 77 30                 a0 = u64 [a0 + 0x30]
  5620: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5623: 33 08 12 07 01           a1 = 0x10712
  5628: 33 09 01                 a2 = 0x1
  5631: b4 a0 02 e6 00           ra = 230, jump [a3]
      :                          @344 [@dyn 115]
  5636: 84 77 01                 a0 = a0 & 0x1
  5639: 82 10 98 00              ra = u64 [sp + 0x98]
  5643: 82 15 90 00              s0 = u64 [sp + 0x90]
  5647: 82 16 88 00              s1 = u64 [sp + 0x88]
  5651: 95 11 a0 00              sp = sp + 0xa0
  5655: 32 00                    ret
      :                          @345 [@dyn 116]
  5657: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5661: 7b 10 88 00              u64 [sp + 0x88] = ra
  5665: 7b 15 80 00              u64 [sp + 0x80] = s0
  5669: 7b 16 78                 u64 [sp + 0x78] = s1
  5672: 64 85                    s0 = a1
  5674: 95 78 40                 a1 = a0 + 0x40
  5677: 95 79 18                 a2 = a0 + 0x18
  5680: 95 7a 42                 a3 = a0 + 0x42
  5683: 95 7b 30                 a4 = a0 + 0x30
  5686: 95 7c 38                 a5 = a0 + 0x38
  5689: 7b 1c 60                 u64 [sp + 0x60] = a5
  5692: 7b 18                    u64 [sp] = a1
  5694: 33 08 a8 02 01           a1 = 0x102a8
  5699: 7b 18 08                 u64 [sp + 0x8] = a1
  5702: 7b 17 10                 u64 [sp + 0x10] = a0
  5705: 33 07 c8 02 01           a0 = 0x102c8
  5710: 7b 17 18                 u64 [sp + 0x18] = a0
  5713: 7b 19 20                 u64 [sp + 0x20] = a2
  5716: 7b 17 28                 u64 [sp + 0x28] = a0
  5719: 7b 1a 30                 u64 [sp + 0x30] = a3
  5722: 7b 18 38                 u64 [sp + 0x38] = a1
  5725: 7b 1b 40                 u64 [sp + 0x40] = a4
  5728: 33 07 a0 01 01           a0 = 0x101a0
  5733: 7b 17 48                 u64 [sp + 0x48] = a0
  5736: 95 17 60                 a0 = sp + 0x60
  5739: 7b 17 50                 u64 [sp + 0x50] = a0
  5742: 82 58 38                 a1 = u64 [s0 + 0x38]
  5745: 33 07 a0 00 01           a0 = 0x100a0
  5750: 7b 17 58                 u64 [sp + 0x58] = a0
  5753: 82 57 30                 a0 = u64 [s0 + 0x30]
  5756: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5759: 95 16 30                 s1 = sp + 0x30
  5762: 33 08 e8 02 01           a1 = 0x102e8
  5767: 33 09 09                 a2 = 0x9
  5770: b4 a0 02 ea 00           ra = 234, jump [a3]
      :                          @346 [@dyn 117]
  5775: 7b 15 68                 u64 [sp + 0x68] = s0
  5778: 78 17 70                 u8 [sp + 0x70] = a0
  5781: 46 11 71                 u8 [sp + 113] = 0
  5784: 33 08 57 02 01           a1 = 0x10257
  5789: 33 05 98 01              s0 = 0x198
  5793: 95 17 68                 a0 = sp + 0x68
  5796: 33 09 0a                 a2 = 0xa
  5799: 64 1a                    a3 = sp
  5801: 33 0b 98 01              a4 = 0x198
  5805: 50 20 ec 00 e4 24        ra = 236, jump @1071
      :                          @347 [@dyn 118]
  5811: 33 08 61 02 01           a1 = 0x10261
  5816: 95 17 68                 a0 = sp + 0x68
  5819: 33 09 0a                 a2 = 0xa
  5822: 95 1a 10                 a3 = sp + 0x10
  5825: 64 5b                    a4 = s0
  5827: 50 20 ee 00 ce 24        ra = 238, jump @1071
      :                          @348 [@dyn 119]
  5833: 33 08 6b 02 01           a1 = 0x1026b
  5838: 95 17 68                 a0 = sp + 0x68
  5841: 33 09 0f                 a2 = 0xf
  5844: 95 1a 20                 a3 = sp + 0x20
  5847: 64 5b                    a4 = s0
  5849: 50 20 f0 00 b8 24        ra = 240, jump @1071
      :                          @349 [@dyn 120]
  5855: 33 08 7a 02 01           a1 = 0x1027a
  5860: 95 17 68                 a0 = sp + 0x68
  5863: 33 09 09                 a2 = 0x9
  5866: 64 6a                    a3 = s1
  5868: 64 5b                    a4 = s0
  5870: 50 20 f2 00 a3 24        ra = 242, jump @1071
      :                          @350 [@dyn 121]
  5876: 33 08 83 02 01           a1 = 0x10283
  5881: 95 17 68                 a0 = sp + 0x68
  5884: 33 09 0e                 a2 = 0xe
  5887: 95 1a 40                 a3 = sp + 0x40
  5890: 64 5b                    a4 = s0
  5892: 50 20 f4 00 8d 24        ra = 244, jump @1071
      :                          @351 [@dyn 122]
  5898: 33 08 91 02 01           a1 = 0x10291
  5903: 95 17 68                 a0 = sp + 0x68
  5906: 33 09 13                 a2 = 0x13
  5909: 95 1a 50                 a3 = sp + 0x50
  5912: 64 5b                    a4 = s0
  5914: 50 20 f6 00 77 24        ra = 246, jump @1071
      :                          @352 [@dyn 123]
  5920: 7c 17 71                 a0 = u8 [sp + 0x71]
  5923: 7c 18 70                 a1 = u8 [sp + 0x70]
  5926: 84 79 01                 a2 = a0 & 0x1
  5929: d4 87 07                 a0 = a0 | a1
  5932: 51 09 42                 jump @357 if a2 == 0
      :                          @353
  5935: 84 88 01                 a1 = a1 & 0x1
  5938: 52 08 3c                 jump @357 if a1 != 0
      :                          @354
  5941: 82 17 68                 a0 = u64 [sp + 0x68]
  5944: 7c 78 24                 a1 = u8 [a0 + 0x24]
  5947: 84 88 04                 a1 = a1 & 0x4
  5950: 52 08 1a                 jump @356 if a1 != 0
      :                          @355
  5953: 82 78 38                 a1 = u64 [a0 + 0x38]
  5956: 82 77 30                 a0 = u64 [a0 + 0x30]
  5959: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5962: 33 08 13 07 01           a1 = 0x10713
  5967: 33 09 02                 a2 = 0x2
  5970: 33 00 f8 00              ra = 0xf8
  5974: 32 0a                    jump [a3]
      :                          @356
  5976: 82 78 38                 a1 = u64 [a0 + 0x38]
  5979: 82 77 30                 a0 = u64 [a0 + 0x30]
  5982: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5985: 33 08 12 07 01           a1 = 0x10712
  5990: 33 09 01                 a2 = 0x1
  5993: b4 a0 02 f8 00           ra = 248, jump [a3]
      :                          @357 [@dyn 124]
  5998: 84 77 01                 a0 = a0 & 0x1
  6001: 82 10 88 00              ra = u64 [sp + 0x88]
  6005: 82 15 80 00              s0 = u64 [sp + 0x80]
  6009: 82 16 78                 s1 = u64 [sp + 0x78]
  6012: 95 11 90 00              sp = sp + 0x90
  6016: 32 00                    ret
      :                          @358 [export #0: 'refine']
  6018: 95 11 80 fd              sp = sp + 0xfffffffffffffd80
  6022: 7b 10 78 02              u64 [sp + 0x278] = ra
  6026: 7b 15 70 02              u64 [sp + 0x270] = s0
  6030: 7b 16 68 02              u64 [sp + 0x268] = s1
  6034: 33 06 20 00 03           s1 = 0x30020
  6039: 95 68 00 00 00 08        a1 = s1 + 0x8000000
  6045: 33 09 f2 ff ff 07        a2 = 0x7fffff2
  6051: 01                       fallthrough
      :                          @359
  6052: 82 87                    a0 = u64 [a1]
  6054: ac 79 21 01              jump @384 if a2 <u a0
      :                          @360
  6058: 95 7a 0d                 a3 = a0 + 0xd
  6061: 01                       fallthrough
      :                          @361
  6062: 82 8b                    a4 = u64 [a1]
  6064: ab 7b f4                 jump @359 if a4 != a0
      :                          @362
  6067: 7b 8a                    u64 [a1] = a3
  6069: 33 0c                    a5 = 0
  6071: 49 11 38 f0 fe ff 07     u64 [sp + 56] = 0x7fffef0
  6078: 95 68 f0 fe ff 07        a1 = s1 + 0x7fffef0
  6084: c9 78 08                 a1 = a1 - a0
  6087: 95 85 03 01              s0 = a1 + 0x103
  6091: 33 08 5f 03 01           a1 = 0x1035f
  6096: 33 09 0d                 a2 = 0xd
  6099: 64 57                    a0 = s0
  6101: 50 20 fa 00 c2 3e        ra = 250, jump @1603
      :                          @363 [@dyn 125]
  6107: 33 07 02                 a0 = 0x2
  6110: 33 0b 0d                 a4 = 0xd
  6113: 33 08                    a1 = 0
  6115: 33 09                    a2 = 0
  6117: 64 5a                    a3 = s0
  6119: 33 00 fc 00              ra = 0xfc
  6123: 0a 64                    ecalli 100 // 'log'
  6125: 95 67 00 00 00 08        a0 = s1 + 0x8000000
  6131: 28 09                    jump @365
      :                          @364 [@dyn 126]
  6133: 95 67 00 00 00 08        a0 = s1 + 0x8000000
  6139: 01                       fallthrough
      :                          @365
  6140: 82 78                    a1 = u64 [a0]
  6142: c9 87 09                 a2 = a0 - a1
  6145: ab 59 1c                 jump @369 if a2 != s0
      :                          @366
  6148: 95 89 f3                 a2 = a1 + 0xfffffffffffffff3
  6151: 01                       fallthrough
      :                          @367
  6152: 82 7a                    a3 = u64 [a0]
  6154: ab 8a f2                 jump @365 if a3 != a1
      :                          @368
  6157: 7b 79                    u64 [a0] = a2
  6159: 95 68 00 00 00 08        a1 = s1 + 0x8000000
  6165: 33 09 35 ff ff 07        a2 = 0x7ffff35
  6171: 28 0f                    jump @370
      :                          @369
  6173: 95 68 00 00 00 08        a1 = s1 + 0x8000000
  6179: 33 09 35 ff ff 07        a2 = 0x7ffff35
  6185: 01                       fallthrough
      :                          @370
  6186: 82 87                    a0 = u64 [a1]
  6188: ac 79 9c 00              jump @385 if a2 <u a0
      :                          @371
  6192: 95 7a ca 00              a3 = a0 + 0xca
  6196: 01                       fallthrough
      :                          @372
  6197: 82 8b                    a4 = u64 [a1]
  6199: ab 7b f3                 jump @370 if a4 != a0
      :                          @373
  6202: 7b 8a                    u64 [a1] = a3
  6204: 33 0c                    a5 = 0
  6206: 82 18 38                 a1 = u64 [sp + 0x38]
  6209: c9 78 07                 a0 = a1 - a0
  6212: c8 67 07                 a0 = a0 + s1
  6215: 95 75 46                 s0 = a0 + 0x46
  6218: 33 07 90 03 01           a0 = 0x10390
  6223: 95 77 03                 a0 = a0 + 0x3
  6226: 33 09 06                 a2 = 0x6
  6229: 33 08 c9 00              a1 = 0xc9
  6233: 33 02 d0 05 01           t0 = 0x105d0
  6238: 33 0a ff 00              a3 = 0xff
  6242: 64 5b                    a4 = s0
  6244: 01                       fallthrough
      :                          @374
  6245: 97 99 04                 a2 = a2 << 0x4
  6248: d4 c9 09                 a2 = a2 | a5
  6251: 78 b9                    u8 [a4] = a2
  6253: 51 08 5c                 jump @386 if a1 == 0
      :                          @375
  6256: 7c 79 ff                 a2 = u8 [a0 + 0xffffffffffffffff]
  6259: c8 29 09                 a2 = a2 + t0
  6262: 7c 99                    a2 = u8 [a2]
  6264: aa a9 16                 jump @377 if a2 == a3
      :                          @376
  6267: 7c 7c                    a5 = u8 [a0]
  6269: c8 2c 0c                 a5 = a5 + t0
  6272: 7c cc                    a5 = u8 [a5]
  6274: 95 77 02                 a0 = a0 + 0x2
  6277: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6280: 95 bb 01                 a4 = a4 + 0x1
  6283: ab ac da                 jump @374 if a5 != a3
      :                          @377
  6286: 95 17 50                 a0 = sp + 0x50
  6289: 33 00 fe 00              ra = 0xfe
  6293: 33 0b 90 03 01           a4 = 0x10390
  6298: 33 08 95 01              a1 = 0x195
  6302: 33 09 d0 05 01           a2 = 0x105d0
  6307: 33 0a ff 00              a3 = 0xff
  6311: 28 91 15                 jump @821
      :                          @378 [@dyn 127]
  6314: 95 66 00 00 00 08        s1 = s1 + 0x8000000
  6320: 01                       fallthrough
      :                          @379
  6321: 82 67                    a0 = u64 [s1]
  6323: c9 76 08                 a1 = s1 - a0
  6326: ab 58 10                 jump @383 if a1 != s0
      :                          @380
  6329: 95 78 36 ff              a1 = a0 + 0xffffffffffffff36
  6333: 01                       fallthrough
      :                          @381
  6334: 82 69                    a2 = u64 [s1]
  6336: ab 79 f1                 jump @379 if a2 != a0
      :                          @382
  6339: 7b 68                    u64 [s1] = a1
  6341: 00                       trap
      :                          @383
  6342: 00                       trap
      :                          @384
  6343: 00                       trap
      :                          @385
  6344: 00                       trap
      :                          @386
  6345: 84 53 01                 t1 = s0 & 0x1
  6348: 86 5a 01                 a3 = s0 | 0x1
  6351: 7c 58 01                 a1 = u8 [s0 + 0x1]
  6354: 7c 59                    a2 = u8 [s0]
  6356: 33 02 58 05 01           t0 = 0x10558
  6361: 33 0b 80 05 01           a4 = 0x10580
  6366: 33 07 58 05 01           a0 = 0x10558
  6371: 97 88 08                 a1 = a1 << 0x8
  6374: d4 98 08                 a1 = a1 | a2
  6377: db 3b 07                 a0 = a4 if t1 != 0
  6380: 51 28 ef 00 ec 00        jump @401 if a1 == 239
      :                          @387
  6386: 7c 58 01                 a1 = u8 [s0 + 0x1]
  6389: 7c 59                    a2 = u8 [s0]
  6391: 97 88 08                 a1 = a1 << 0x8
  6394: d4 98 08                 a1 = a1 | a2
  6397: 51 28 ef 01 d6 04        jump @464 if a1 == 495
      :                          @388
  6403: 7b 17 50                 u64 [sp + 0x50] = a0
  6406: 7b 15 58                 u64 [sp + 0x58] = s0
  6409: 49 11 60 ca 00           u64 [sp + 96] = 0xca
  6414: 7b 1a 68                 u64 [sp + 0x68] = a3
  6417: 95 67 00 00 00 08        a0 = s1 + 0x8000000
  6423: 33 08 14 ff ff 07        a1 = 0x7ffff14
  6429: 01                       fallthrough
      :                          @389
  6430: 82 79                    a2 = u64 [a0]
  6432: ac 98 b7 00              jump @400 if a1 <u a2
      :                          @390
  6436: 95 9a eb 00              a3 = a2 + 0xeb
  6440: 01                       fallthrough
      :                          @391
  6441: 82 7b                    a4 = u64 [a0]
  6443: ab 9b f3                 jump @389 if a4 != a2
      :                          @392
  6446: 7b 7a                    u64 [a0] = a3
  6448: 33 0c                    a5 = 0
  6450: 7b 13 18                 u64 [sp + 0x18] = t1
  6453: 7b 12 28                 u64 [sp + 0x28] = t0
  6456: 82 17 38                 a0 = u64 [sp + 0x38]
  6459: c9 97 07                 a0 = a0 - a2
  6462: c8 67 07                 a0 = a0 + s1
  6465: 7b 17 30                 u64 [sp + 0x30] = a0
  6468: 95 77 25                 a0 = a0 + 0x25
  6471: 49 21 50 01 eb 00        u64 [sp + 336] = 0xeb
  6477: 7b 17 58 01              u64 [sp + 0x158] = a0
  6481: 49 21 60 01              u64 [sp + 352] = 0
  6485: 33 09 ca 00              a2 = 0xca
  6489: 64 58                    a1 = s0
  6491: 50 20 00 01 3c 3d        ra = 256, jump @1603
      :                          @393 [@dyn 128]
  6497: 49 21 60 01 ca 00        u64 [sp + 352] = 0xca
  6503: 82 17 30                 a0 = u64 [sp + 0x30]
  6506: 95 77 ef 00              a0 = a0 + 0xef
  6510: 33 09 20                 a2 = 0x20
  6513: 33 08                    a1 = 0
  6515: 50 20 02 01 6b 3f        ra = 258, jump @1655
      :                          @394 [@dyn 129]
  6521: 82 17 30                 a0 = u64 [sp + 0x30]
  6524: 46 27 0f 01              u8 [a0 + 271] = 0
  6528: 82 17 58 01              a0 = u64 [sp + 0x158]
  6532: 7b 17 30                 u64 [sp + 0x30] = a0
  6535: 49 21 60 01 eb 00        u64 [sp + 352] = 0xeb
  6541: 95 67 00 00 00 08        a0 = s1 + 0x8000000
  6547: 33 08 e1 ff ff 07        a1 = 0x7ffffe1
  6553: 01                       fallthrough
      :                          @395
  6554: 82 79                    a2 = u64 [a0]
  6556: ac 98 49 02              jump @429 if a1 <u a2
      :                          @396
  6560: 95 9a 1e                 a3 = a2 + 0x1e
  6563: 01                       fallthrough
      :                          @397
  6564: 82 7b                    a4 = u64 [a0]
  6566: ab 9b f4                 jump @395 if a4 != a2
      :                          @398
  6569: 7b 7a                    u64 [a0] = a3
  6571: 33 0c                    a5 = 0
  6573: 82 17 38                 a0 = u64 [sp + 0x38]
  6576: c9 97 07                 a0 = a0 - a2
  6579: c8 67 07                 a0 = a0 + s1
  6582: 95 77 f2 00              a0 = a0 + 0xf2
  6586: 33 09 1e                 a2 = 0x1e
  6589: 7b 17 20                 u64 [sp + 0x20] = a0
  6592: 33 08                    a1 = 0
  6594: 50 20 04 01 1c 3f        ra = 260, jump @1655
      :                          @399 [@dyn 130]
  6600: 33 07                    a0 = 0
  6602: 33 03 5b                 t1 = 0x5b
  6605: 33 09 eb 00              a2 = 0xeb
  6609: 33 02 5f                 t0 = 0x5f
  6612: 28 33 02                 jump @433
      :                          @400
  6615: 00                       trap
      :                          @401
  6616: 7b 17 50 01              u64 [sp + 0x150] = a0
  6620: 7b 15 58 01              u64 [sp + 0x158] = s0
  6624: 49 21 60 01 ca 00        u64 [sp + 352] = 0xca
  6630: 7b 1a 30                 u64 [sp + 0x30] = a3
  6633: 7b 1a 68 01              u64 [sp + 0x168] = a3
  6637: 95 17 50                 a0 = sp + 0x50
  6640: 95 18 50 01              a1 = sp + 0x150
  6644: 50 20 06 01 ba 2b        ra = 262, jump @1278
      :                          @402 [@dyn 131]
  6650: 82 18 50                 a1 = u64 [sp + 0x50]
  6653: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
  6663: 7b 18 28                 u64 [sp + 0x28] = a1
  6666: aa 78 f0 03              jump @465 if a1 == a0
      :                          @403
  6670: 7c 17 58                 a0 = u8 [sp + 0x58]
  6673: 7b 17 20                 u64 [sp + 0x20] = a0
  6676: 95 18 59                 a1 = sp + 0x59
  6679: 95 17 70 01              a0 = sp + 0x170
  6683: 33 09 f7 00              a2 = 0xf7
  6687: 50 20 08 01 78 3c        ra = 264, jump @1603
      :                          @404 [@dyn 132]
  6693: 33 08 00 00 00 08        a1 = 0x8000000
  6699: c8 86 07                 a0 = s1 + a1
  6702: 33 02 e8 fe ff 07        t0 = 0x7fffee8
  6708: 01                       fallthrough
      :                          @405
  6709: 82 79                    a2 = u64 [a0]
  6711: ac 92 ad 01              jump @428 if t0 <u a2
      :                          @406
  6715: 82 1a 38                 a3 = u64 [sp + 0x38]
  6718: c9 9a 0a                 a3 = a3 - a2
  6721: c8 6a 0a                 a3 = a3 + s1
  6724: 84 ab 07                 a4 = a3 & 0x7
  6727: c8 b9 0c                 a5 = a2 + a4
  6730: 95 cc 10 01              a5 = a5 + 0x110
  6734: 01                       fallthrough
      :                          @407
  6735: 82 75                    s0 = u64 [a0]
  6737: ab 95 e4                 jump @405 if s0 != a2
      :                          @408
  6740: 7b 7c                    u64 [a0] = a5
  6742: c9 ba 07                 a0 = a3 - a4
  6745: 33 05 01                 s0 = 0x1
  6748: 7b 75                    u64 [a0] = s0
  6750: 7b 75 08                 u64 [a0 + 0x8] = s0
  6753: 82 18 28                 a1 = u64 [sp + 0x28]
  6756: 7b 78 10                 u64 [a0 + 0x10] = a1
  6759: 82 18 20                 a1 = u64 [sp + 0x20]
  6762: 78 78 18                 u8 [a0 + 0x18] = a1
  6765: 7b 17 28                 u64 [sp + 0x28] = a0
  6768: 95 77 19                 a0 = a0 + 0x19
  6771: 95 18 70 01              a1 = sp + 0x170
  6775: 33 09 f7 00              a2 = 0xf7
  6779: 50 20 0a 01 1c 3c        ra = 266, jump @1603
      :                          @409 [@dyn 133]
  6785: 49 11 20 17              u64 [sp + 32] = 0x17
  6789: 01                       fallthrough
      :                          @410
  6790: 7b 15 50                 u64 [sp + 0x50] = s0
  6793: 82 17 28                 a0 = u64 [sp + 0x28]
  6796: 7b 17 58                 u64 [sp + 0x58] = a0
  6799: 82 17 10                 a0 = u64 [sp + 0x10]
  6802: 78 17 60                 u8 [sp + 0x60] = a0
  6805: 82 18                    a1 = u64 [sp]
  6807: 78 18 61                 u8 [sp + 0x61] = a1
  6810: 98 87 28                 a0 = a1 >> 0x28
  6813: 78 17 66                 u8 [sp + 0x66] = a0
  6816: 98 87 20                 a0 = a1 >> 0x20
  6819: 78 17 65                 u8 [sp + 0x65] = a0
  6822: 98 87 30                 a0 = a1 >> 0x30
  6825: 78 17 67                 u8 [sp + 0x67] = a0
  6828: 98 87 18                 a0 = a1 >> 0x18
  6831: 78 17 64                 u8 [sp + 0x64] = a0
  6834: 98 87 10                 a0 = a1 >> 0x10
  6837: 78 17 63                 u8 [sp + 0x63] = a0
  6840: 98 87 08                 a0 = a1 >> 0x8
  6843: 78 17 62                 u8 [sp + 0x62] = a0
  6846: 82 17 20                 a0 = u64 [sp + 0x20]
  6849: 7b 17 68                 u64 [sp + 0x68] = a0
  6852: 82 17 30                 a0 = u64 [sp + 0x30]
  6855: 7b 17 70                 u64 [sp + 0x70] = a0
  6858: 82 17 08                 a0 = u64 [sp + 0x8]
  6861: 7b 17 78                 u64 [sp + 0x78] = a0
  6864: 49 21 80 00 ca 00        u64 [sp + 128] = 0xca
  6870: 46 21 8c 00              u8 [sp + 140] = 0
  6874: 95 17 50                 a0 = sp + 0x50
  6877: 7b 17 40                 u64 [sp + 0x40] = a0
  6880: 33 07 b0 00              a0 = 0xb0
  6884: 7b 17 48                 u64 [sp + 0x48] = a0
  6887: 33 07 80 03 01           a0 = 0x10380
  6892: 7b 17 70 01              u64 [sp + 0x170] = a0
  6896: 49 21 78 01 01           u64 [sp + 376] = 0x1
  6901: 49 21 90 01              u64 [sp + 400] = 0
  6905: 95 18 40                 a1 = sp + 0x40
  6908: 7b 18 80 01              u64 [sp + 0x180] = a1
  6912: 49 21 88 01 01           u64 [sp + 392] = 0x1
  6917: 95 67 00 00 00 08        a0 = s1 + 0x8000000
  6923: 33 08 db ff ff 07        a1 = 0x7ffffdb
  6929: 01                       fallthrough
      :                          @411
  6930: 82 79                    a2 = u64 [a0]
  6932: ac 98 d2 00              jump @430 if a1 <u a2
      :                          @412
  6936: 95 9a 24                 a3 = a2 + 0x24
  6939: 01                       fallthrough
      :                          @413
  6940: 82 7b                    a4 = u64 [a0]
  6942: ab 9b f4                 jump @411 if a4 != a2
      :                          @414
  6945: 7b 7a                    u64 [a0] = a3
  6947: 33 0c                    a5 = 0
  6949: 82 17 38                 a0 = u64 [sp + 0x38]
  6952: c9 97 07                 a0 = a0 - a2
  6955: c8 67 07                 a0 = a0 + s1
  6958: 95 77 ec 00              a0 = a0 + 0xec
  6962: 49 21 50 01 24           u64 [sp + 336] = 0x24
  6967: 7b 17 58 01              u64 [sp + 0x158] = a0
  6971: 49 21 60 01              u64 [sp + 352] = 0
  6975: 33 08 28 05 01           a1 = 0x10528
  6980: 95 17 50 01              a0 = sp + 0x150
  6984: 95 19 70 01              a2 = sp + 0x170
  6988: 50 20 0c 01 37 1a        ra = 268, jump @957
      :                          @415 [@dyn 134]
  6994: 52 07 a9 02              jump @466 if a0 != 0
      :                          @416
  6998: 82 1a 58 01              a3 = u64 [sp + 0x158]
  7002: 82 1b 60 01              a4 = u64 [sp + 0x160]
  7006: 82 17 50 01              a0 = u64 [sp + 0x150]
  7010: 7b 17 38                 u64 [sp + 0x38] = a0
  7013: 33 07 02                 a0 = 0x2
  7016: 33 08                    a1 = 0
  7018: 33 09                    a2 = 0
  7020: 64 a5                    s0 = a3
  7022: 33 00 0e 01              ra = 0x10e
  7026: 0a 64                    ecalli 100 // 'log'
  7028: 01                       fallthrough
      :                          @417 [@dyn 135]
  7029: 82 19 38                 a2 = u64 [sp + 0x38]
  7032: 95 98 ff ff ff f7        a1 = a2 + 0xfffffffff7ffffff
  7038: 53 48 00 00 00 f8 26     jump @423 if a1 <u 4160749568
      :                          @418
  7045: 64 9b                    a4 = a2
  7047: 95 66 00 00 00 08        s1 = s1 + 0x8000000
  7053: 01                       fallthrough
      :                          @419
  7054: 82 67                    a0 = u64 [s1]
  7056: c9 76 08                 a1 = s1 - a0
  7059: ab 58 11                 jump @423 if a1 != s0
      :                          @420
  7062: c9 b7 08                 a1 = a0 - a4
  7065: 01                       fallthrough
      :                          @421
  7066: 82 69                    a2 = u64 [s1]
  7068: ab 79 f2                 jump @419 if a2 != a0
      :                          @422
  7071: 7b 68                    u64 [s1] = a1
  7073: 33 0a                    a3 = 0
  7075: 01                       fallthrough
      :                          @423
  7076: 82 18 50                 a1 = u64 [sp + 0x50]
  7079: 51 08 59 01              jump @450 if a1 == 0
      :                          @424
  7083: 52 18 01 9a 01           jump @454 if a1 != 1
      :                          @425
  7088: 82 18 58                 a1 = u64 [sp + 0x58]
  7091: 33 09 ff                 a2 = 0xffffffffffffffff
  7094: 3e 02 00 00 03           u64 [0x30000] = t0
  7099: 3e 04 08 00 03           u64 [0x30008] = t2
  7104: 82 82                    t0 = u64 [a1]
  7106: c8 92 04                 t2 = t0 + a2
  7109: 7b 84                    u64 [a1] = t2
  7111: 64 28                    a1 = t0
  7113: 3a 02 00 00 03           t0 = u64 [0x30000]
  7118: 3a 04 08 00 03           t2 = u64 [0x30008]
  7123: 52 18 01 86 01           jump @455 if a1 != 1
      :                          @426
  7128: 82 17 58                 a0 = u64 [sp + 0x58]
  7131: 50 20 10 01 c9 38        ra = 272, jump @1553
      :                          @427 [@dyn 136]
  7137: 28 78 01                 jump @455
      :                          @428
  7140: 00                       trap
      :                          @429
  7141: 00                       trap
      :                          @430
  7142: 00                       trap
      :                          @431
  7143: 98 7b 03                 a4 = a0 >> 0x3
  7146: 82 1c 20                 a5 = u64 [sp + 0x20]
  7149: c8 bc 0c                 a5 = a5 + a4
  7152: 7c ca                    a3 = u8 [a5]
  7154: 84 78 07                 a1 = a0 & 0x7
  7157: 33 0b 01                 a4 = 0x1
  7160: cf 8b 08                 a1 = a4 << a1
  7163: d4 a8 08                 a1 = a1 | a3
  7166: 78 c8                    u8 [a5] = a1
  7168: 01                       fallthrough
      :                          @432
  7169: c8 b7 07                 a0 = a0 + a4
  7172: ae 97 1d                 jump @436 if a0 >=u a2
      :                          @433
  7175: 82 1b 30                 a4 = u64 [sp + 0x30]
  7178: c8 7b 0b                 a4 = a4 + a0
  7181: 7d bc                    a5 = i8 [a4]
  7183: aa 3c d8                 jump @431 if a5 == t1
      :                          @434
  7186: 33 0b 01                 a4 = 0x1
  7189: af c2 ec                 jump @432 if t0 >=s a5
      :                          @435
  7192: 95 c8 a2                 a1 = a5 + 0xffffffffffffffa2
  7195: 84 8b ff 00              a4 = a1 & 0xff
  7199: 28 e2                    jump @432
      :                          @436
  7201: 33 07 10 00 03           a0 = 0x30010
  7206: 95 63 00 00 00 08        t1 = s1 + 0x8000000
  7212: 33 02 d0 ff ff 07        t0 = 0x7ffffd0
  7218: 01                       fallthrough
      :                          @437
  7219: 82 39                    a2 = u64 [t1]
  7221: ac 92 ca 00              jump @449 if t0 <u a2
      :                          @438
  7225: 82 1a 38                 a3 = u64 [sp + 0x38]
  7228: c9 9a 0a                 a3 = a3 - a2
  7231: c8 6a 0a                 a3 = a3 + s1
  7234: 95 aa e8 00              a3 = a3 + 0xe8
  7238: 84 ab 07                 a4 = a3 & 0x7
  7241: c8 b9 0c                 a5 = a2 + a4
  7244: 95 cc 28                 a5 = a5 + 0x28
  7247: 01                       fallthrough
      :                          @439
  7248: 82 38                    a1 = u64 [t1]
  7250: ab 98 e1                 jump @437 if a1 != a2
      :                          @440
  7253: 7b 3c                    u64 [t1] = a5
  7255: 01                       fallthrough
      :                          @441
  7256: c9 ba 0a                 a3 = a3 - a4
  7259: 49 0a 01                 u64 [a3 + 0] = 0x1
  7262: 49 1a 08 01              u64 [a3 + 8] = 0x1
  7266: 82 17 20                 a0 = u64 [sp + 0x20]
  7269: 7b a7 10                 u64 [a3 + 0x10] = a0
  7272: 82 17 50 01              a0 = u64 [sp + 0x150]
  7276: 82 12 60 01              t0 = u64 [sp + 0x160]
  7280: 82 19 58 01              a2 = u64 [sp + 0x158]
  7284: 7b 19 10                 u64 [sp + 0x10] = a2
  7287: 49 1a 18 58 07           u64 [a3 + 24] = 0x758
  7292: 7b 1a 08                 u64 [sp + 0x8] = a3
  7295: 49 1a 20 1e              u64 [a3 + 32] = 0x1e
  7299: 7b 17 20                 u64 [sp + 0x20] = a0
  7302: ab 72 ec 00              jump @456 if t0 != a0
      :                          @442
  7306: 82 17 20                 a0 = u64 [sp + 0x20]
  7309: 51 07 44 01              jump @462 if a0 == 0
      :                          @443
  7313: 82 18 10                 a1 = u64 [sp + 0x10]
  7316: 84 87 01                 a0 = a1 & 0x1
  7319: 86 88 01                 a1 = a1 | 0x1
  7322: 7b 18 30                 u64 [sp + 0x30] = a1
  7325: 82 18 28                 a1 = u64 [sp + 0x28]
  7328: 33 09 80 05 01           a2 = 0x10580
  7333: db 79 08                 a1 = a2 if a0 != 0
  7336: 7b 18 28                 u64 [sp + 0x28] = a1
  7339: 82 18 20                 a1 = u64 [sp + 0x20]
  7342: 53 28 ca 00 23 01        jump @462 if a1 <u 202
      :                          @444
  7348: 82 17 08                 a0 = u64 [sp + 0x8]
  7351: 82 77 18                 a0 = u64 [a0 + 0x18]
  7354: 53 27 50 06 17 01        jump @462 if a0 <u 1616
      :                          @445
  7360: 82 17 20                 a0 = u64 [sp + 0x20]
  7363: 82 18 10                 a1 = u64 [sp + 0x10]
  7366: c8 87 07                 a0 = a0 + a1
  7369: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7372: 51 07 05 01              jump @462 if a0 == 0
      :                          @446
  7376: 7c 77                    a0 = u8 [a0]
  7378: 52 07 ff 00              jump @462 if a0 != 0
      :                          @447
  7382: 82 17 10                 a0 = u64 [sp + 0x10]
  7385: 98 77 08                 a0 = a0 >> 0x8
  7388: 7b 17                    u64 [sp] = a0
  7390: 33 07 74 01              a0 = 0x174
  7394: 33 0a 50 01              a3 = 0x150
  7398: 82 18 18                 a1 = u64 [sp + 0x18]
  7401: db 87 0a                 a3 = a0 if a1 != 0
  7404: 33 09 ca 00              a2 = 0xca
  7408: 95 17 68                 a0 = sp + 0x68
  7411: 64 58                    a1 = s0
  7413: b4 a0 02 12 01           ra = 274, jump [a3]
      :                          @448 [@dyn 137]
  7418: 33 05                    s0 = 0
  7420: 28 8a fd                 jump @410
      :                          @449
  7423: 00                       trap
      :                          @450
  7424: 82 17 58                 a0 = u64 [sp + 0x58]
  7427: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7430: 82 18 60                 a1 = u64 [sp + 0x60]
  7433: 82 19 68                 a2 = u64 [sp + 0x68]
  7436: 95 17 70                 a0 = sp + 0x70
  7439: b4 a0 02 14 01           ra = 276, jump [a3]
      :                          @451 [@dyn 138]
  7444: 82 17 78                 a0 = u64 [sp + 0x78]
  7447: 3e 02 00 00 03           u64 [0x30000] = t0
  7452: 3e 04 08 00 03           u64 [0x30008] = t2
  7457: 82 72                    t0 = u64 [a0]
  7459: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  7462: 7b 74                    u64 [a0] = t2
  7464: 64 27                    a0 = t0
  7466: 3a 02 00 00 03           t0 = u64 [0x30000]
  7471: 3a 04 08 00 03           t2 = u64 [0x30008]
  7476: 33 08 01                 a1 = 0x1
  7479: ab 87 22                 jump @455 if a0 != a1
      :                          @452
  7482: 82 17 78                 a0 = u64 [sp + 0x78]
  7485: 50 20 16 01 d5 36        ra = 278, jump @1537
      :                          @453 [@dyn 139]
  7491: 28 16                    jump @455
      :                          @454
  7493: 82 17 58                 a0 = u64 [sp + 0x58]
  7496: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7499: 82 18 60                 a1 = u64 [sp + 0x60]
  7502: 82 19 68                 a2 = u64 [sp + 0x68]
  7505: 95 17 70                 a0 = sp + 0x70
  7508: b4 a0 02 18 01           ra = 280, jump [a3]
      :                          @455 [@dyn 140]
  7513: 33 07 00 00 01           a0 = 0x10000
  7518: 33 08                    a1 = 0
  7520: 82 10 78 02              ra = u64 [sp + 0x278]
  7524: 82 15 70 02              s0 = u64 [sp + 0x270]
  7528: 82 16 68 02              s1 = u64 [sp + 0x268]
  7532: 95 11 80 02              sp = sp + 0x280
  7536: 32 00                    ret
      :                          @456
  7538: 33 08 10 00 03           a1 = 0x30010
  7543: 95 64 00 00 00 08        t2 = s1 + 0x8000000
  7549: 33 03 e0 ff ff 07        t1 = 0x7ffffe0
  7555: 01                       fallthrough
      :                          @457
  7556: 82 47                    a0 = u64 [t2]
  7558: ac 73 4c                 jump @463 if t1 <u a0
      :                          @458
  7561: 82 1b 38                 a4 = u64 [sp + 0x38]
  7564: c9 7b 0b                 a4 = a4 - a0
  7567: c8 6b 0b                 a4 = a4 + s1
  7570: 95 bb f8 00              a4 = a4 + 0xf8
  7574: 84 bc 07                 a5 = a4 & 0x7
  7577: c8 c7 0a                 a3 = a0 + a5
  7580: 95 aa 18                 a3 = a3 + 0x18
  7583: 01                       fallthrough
      :                          @459
  7584: 82 49                    a2 = u64 [t2]
  7586: ab 79 e2                 jump @457 if a2 != a0
      :                          @460
  7589: 7b 4a                    u64 [t2] = a3
  7591: 01                       fallthrough
      :                          @461
  7592: c9 cb 0b                 a4 = a4 - a5
  7595: 82 17 10                 a0 = u64 [sp + 0x10]
  7598: 7b b7                    u64 [a4] = a0
  7600: 82 17 20                 a0 = u64 [sp + 0x20]
  7603: 7b b7 08                 u64 [a4 + 0x8] = a0
  7606: 7b 1b 30                 u64 [sp + 0x30] = a4
  7609: 49 1b 10 01              u64 [a4 + 16] = 0x1
  7613: 33 07 a8 05 01           a0 = 0x105a8
  7618: 7b 17 28                 u64 [sp + 0x28] = a0
  7621: 7b 12 20                 u64 [sp + 0x20] = t0
  7624: 82 18 20                 a1 = u64 [sp + 0x20]
  7627: 55 28 ca 00 e9 fe        jump @444 if a1 >=u 202
      :                          @462
  7633: 00                       trap
      :                          @463
  7634: 00                       trap
      :                          @464
  7635: 7b 17 50                 u64 [sp + 0x50] = a0
  7638: 7b 15 58                 u64 [sp + 0x58] = s0
  7641: 49 11 60 ca 00           u64 [sp + 96] = 0xca
  7646: 95 17 68                 a0 = sp + 0x68
  7649: 7b 1a 68                 u64 [sp + 0x68] = a3
  7652: 33 08 74 01              a1 = 0x174
  7656: 33 0a 50 01              a3 = 0x150
  7660: db 38 0a                 a3 = a1 if t1 != 0
  7663: 33 09 ca 00              a2 = 0xca
  7667: 64 58                    a1 = s0
  7669: b4 a0 02 1a 01           ra = 282, jump [a3]
      :                          @465 [@dyn 141]
  7674: 00                       trap
      :                          @466
  7675: 00                       trap
      :                          @467 [export #1: 'accumulate']
  7676: 33 07 00 00 01           a0 = 0x10000
  7681: 33 08                    a1 = 0
  7683: 32 00                    ret
      :                          @468 [export #2: 'on_transfer']
  7685: 33 07 00 00 01           a0 = 0x10000
  7690: 33 08                    a1 = 0
  7692: 32 00                    ret
      :                          @469
  7694: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  7697: 7b 10 40                 u64 [sp + 0x40] = ra
  7700: 7b 15 38                 u64 [sp + 0x38] = s0
  7703: 7b 16 30                 u64 [sp + 0x30] = s1
  7706: 64 75                    s0 = a0
  7708: 82 77                    a0 = u64 [a0]
  7710: 95 78 01                 a1 = a0 + 0x1
  7713: 97 79 01                 a2 = a0 << 0x1
  7716: e4 98 08                 a1 = maxu(a1, a2)
  7719: 33 09 08                 a2 = 0x8
  7722: e4 98 06                 s1 = maxu(a1, a2)
  7725: 57 06 3d                 jump @475 if s1 <s 0
      :                          @470
  7728: 51 07 10                 jump @472 if a0 == 0
      :                          @471
  7731: 82 58 08                 a1 = u64 [s0 + 0x8]
  7734: 7b 18 18                 u64 [sp + 0x18] = a1
  7737: 7b 17 28                 u64 [sp + 0x28] = a0
  7740: 33 07 01                 a0 = 0x1
  7743: 01                       fallthrough
      :                          @472
  7744: 7b 17 20                 u64 [sp + 0x20] = a0
  7747: 64 17                    a0 = sp
  7749: 95 19 18                 a2 = sp + 0x18
  7752: 64 68                    a1 = s1
  7754: 50 20 1c 01 2b           ra = 284, jump @477
      :                          @473 [@dyn 142]
  7759: 82 17                    a0 = u64 [sp]
  7761: 52 07 1e                 jump @476 if a0 != 0
      :                          @474
  7764: 82 17 08                 a0 = u64 [sp + 0x8]
  7767: 7b 57 08                 u64 [s0 + 0x8] = a0
  7770: 7b 56                    u64 [s0] = s1
  7772: 82 10 40                 ra = u64 [sp + 0x40]
  7775: 82 15 38                 s0 = u64 [sp + 0x38]
  7778: 82 16 30                 s1 = u64 [sp + 0x30]
  7781: 95 11 48                 sp = sp + 0x48
  7784: 32 00                    ret
      :                          @475
  7786: 33 07                    a0 = 0
  7788: 28 16 01                 jump @505
      :                          @476
  7791: 82 17 08                 a0 = u64 [sp + 0x8]
  7794: 28 10 01                 jump @505
      :                          @477
  7797: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  7800: 7b 10 28                 u64 [sp + 0x28] = ra
  7803: 7b 15 20                 u64 [sp + 0x20] = s0
  7806: 7b 16 18                 u64 [sp + 0x18] = s1
  7809: 82 9a 08                 a3 = u64 [a2 + 0x8]
  7812: 51 0a 7c                 jump @490 if a3 == 0
      :                          @478
  7815: 82 96 10                 s1 = u64 [a2 + 0x10]
  7818: 51 06 9f 00              jump @497 if s1 == 0
      :                          @479
  7822: 82 92                    t0 = u64 [a2]
  7824: 33 03 20 00 03           t1 = 0x30020
  7829: 95 39 00 00 00 08        a2 = t1 + 0x8000000
  7835: 01                       fallthrough
      :                          @480
  7836: 82 9b                    a4 = u64 [a2]
  7838: c8 8b 0a                 a3 = a4 + a1
  7841: ac ba bf 00              jump @503 if a3 <u a4
      :                          @481
  7845: 98 ac 1b                 a5 = a3 >> 0x1b
  7848: 52 0c b8 00              jump @503 if a5 != 0
      :                          @482
  7852: 82 9c                    a5 = u64 [a2]
  7854: ab bc ee                 jump @480 if a5 != a4
      :                          @483
  7857: 7b 9a                    u64 [a2] = a3
  7859: 7b 18 10                 u64 [sp + 0x10] = a1
  7862: c9 a3 05                 s0 = t1 - a3
  7865: 95 55 00 00 00 08        s0 = s0 + 0x8000000
  7871: 7b 17 08                 u64 [sp + 0x8] = a0
  7874: 64 57                    a0 = s0
  7876: 64 28                    a1 = t0
  7878: 64 69                    a2 = s1
  7880: 7b 12                    u64 [sp] = t0
  7882: 50 20 1e 01 cd 37        ra = 286, jump @1603
      :                          @484 [@dyn 143]
  7888: 82 12                    t0 = u64 [sp]
  7890: 82 17 08                 a0 = u64 [sp + 0x8]
  7893: 33 09 20 00 03           a2 = 0x30020
  7898: 95 98 00 00 00 08        a1 = a2 + 0x8000000
  7904: 01                       fallthrough
      :                          @485
  7905: 82 89                    a2 = u64 [a1]
  7907: c9 98 0a                 a3 = a1 - a2
  7910: ab 2a 15                 jump @489 if a3 != t0
      :                          @486
  7913: c9 69 0a                 a3 = a2 - s1
  7916: 01                       fallthrough
      :                          @487
  7917: 82 8b                    a4 = u64 [a1]
  7919: ab 9b f2                 jump @485 if a4 != a2
      :                          @488
  7922: 7b 8a                    u64 [a1] = a3
  7924: 33 0c                    a5 = 0
  7926: 82 18 10                 a1 = u64 [sp + 0x10]
  7929: 28 6a                    jump @504
      :                          @489
  7931: 82 18 10                 a1 = u64 [sp + 0x10]
  7934: 28 65                    jump @504
      :                          @490
  7936: 33 09 20 00 03           a2 = 0x30020
  7941: 95 9a 00 00 00 08        a3 = a2 + 0x8000000
  7947: 01                       fallthrough
      :                          @491
  7948: 82 ac                    a5 = u64 [a3]
  7950: c8 8c 06                 s1 = a5 + a1
  7953: ac c6 4f                 jump @503 if s1 <u a5
      :                          @492
  7956: 98 6b 1b                 a4 = s1 >> 0x1b
  7959: 52 0b 49                 jump @503 if a4 != 0
      :                          @493
  7962: 82 ab                    a4 = u64 [a3]
  7964: ab cb f0                 jump @491 if a4 != a5
      :                          @494
  7967: 7b a6                    u64 [a3] = s1
  7969: 33 05                    s0 = 0
  7971: 01                       fallthrough
      :                          @495
  7972: ab cb e8                 jump @491 if a4 != a5
      :                          @496
  7975: 28 2e                    jump @502
      :                          @497
  7977: 33 09 20 00 03           a2 = 0x30020
  7982: 95 9a 00 00 00 08        a3 = a2 + 0x8000000
  7988: 01                       fallthrough
      :                          @498
  7989: 82 ac                    a5 = u64 [a3]
  7991: c8 8c 06                 s1 = a5 + a1
  7994: ac c6 26                 jump @503 if s1 <u a5
      :                          @499
  7997: 98 6b 1b                 a4 = s1 >> 0x1b
  8000: 52 0b 20                 jump @503 if a4 != 0
      :                          @500
  8003: 82 ab                    a4 = u64 [a3]
  8005: ab cb f0                 jump @498 if a4 != a5
      :                          @501
  8008: 7b a6                    u64 [a3] = s1
  8010: c9 69 09                 a2 = a2 - s1
  8013: 95 95 00 00 00 08        s0 = a2 + 0x8000000
  8019: 28 10                    jump @504
      :                          @502
  8021: c9 69 09                 a2 = a2 - s1
  8024: 95 95 00 00 00 08        s0 = a2 + 0x8000000
  8030: 28 05                    jump @504
      :                          @503
  8032: 33 05                    s0 = 0
  8034: 01                       fallthrough
      :                          @504
  8035: 88 59 01                 a2 = s0 <u 0x1
  8038: 33 0a 01                 a3 = 0x1
  8041: db 55 0a                 a3 = s0 if s0 != 0
  8044: 7b 7a 08                 u64 [a0 + 0x8] = a3
  8047: 7b 78 10                 u64 [a0 + 0x10] = a1
  8050: 7b 79                    u64 [a0] = a2
  8052: 82 10 28                 ra = u64 [sp + 0x28]
  8055: 82 15 20                 s0 = u64 [sp + 0x20]
  8058: 82 16 18                 s1 = u64 [sp + 0x18]
  8061: 95 11 30                 sp = sp + 0x30
  8064: 32 00                    ret
      :                          @505
  8066: 52 07 04                 jump @507 if a0 != 0
      :                          @506
  8069: 00                       trap
      :                          @507
  8070: 00                       trap
      :                          @508
  8071: 00                       trap
      :                          @509
  8072: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8075: 7b 10 40                 u64 [sp + 0x40] = ra
  8078: 7b 15 38                 u64 [sp + 0x38] = s0
  8081: 7b 16 30                 u64 [sp + 0x30] = s1
  8084: c8 89 09                 a2 = a2 + a1
  8087: ac 89 51                 jump @516 if a2 <u a1
      :                          @510
  8090: 64 75                    s0 = a0
  8092: 82 77                    a0 = u64 [a0]
  8094: 97 78 01                 a1 = a0 << 0x1
  8097: 33 0a 08                 a3 = 0x8
  8100: e4 a9 09                 a2 = maxu(a2, a3)
  8103: e4 89 06                 s1 = maxu(a2, a1)
  8106: 57 06 3e                 jump @516 if s1 <s 0
      :                          @511
  8109: 51 07 10                 jump @513 if a0 == 0
      :                          @512
  8112: 82 58 08                 a1 = u64 [s0 + 0x8]
  8115: 7b 18 18                 u64 [sp + 0x18] = a1
  8118: 7b 17 28                 u64 [sp + 0x28] = a0
  8121: 33 07 01                 a0 = 0x1
  8124: 01                       fallthrough
      :                          @513
  8125: 7b 17 20                 u64 [sp + 0x20] = a0
  8128: 64 17                    a0 = sp
  8130: 95 19 18                 a2 = sp + 0x18
  8133: 64 68                    a1 = s1
  8135: 50 20 20 01 ae fe        ra = 288, jump @477
      :                          @514 [@dyn 144]
  8141: 82 17                    a0 = u64 [sp]
  8143: 52 07 1d                 jump @517 if a0 != 0
      :                          @515
  8146: 82 17 08                 a0 = u64 [sp + 0x8]
  8149: 7b 57 08                 u64 [s0 + 0x8] = a0
  8152: 7b 56                    u64 [s0] = s1
  8154: 82 10 40                 ra = u64 [sp + 0x40]
  8157: 82 15 38                 s0 = u64 [sp + 0x38]
  8160: 82 16 30                 s1 = u64 [sp + 0x30]
  8163: 95 11 48                 sp = sp + 0x48
  8166: 32 00                    ret
      :                          @516
  8168: 33 07                    a0 = 0
  8170: 28 98                    jump @505
      :                          @517
  8172: 82 17 08                 a0 = u64 [sp + 0x8]
  8175: 28 93                    jump @505
      :                          @518 [@dyn 145]
  8177: 82 72                    t0 = u64 [a0]
  8179: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  8185: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
  8191: ac 9a 29                 jump @524 if a3 <u a2
      :                          @519
  8194: 82 77 08                 a0 = u64 [a0 + 0x8]
  8197: 33 09 20 00 03           a2 = 0x30020
  8202: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  8208: 01                       fallthrough
      :                          @520
  8209: 82 9a                    a3 = u64 [a2]
  8211: c9 a9 0b                 a4 = a2 - a3
  8214: ab 7b 12                 jump @524 if a4 != a0
      :                          @521
  8217: c9 2a 0b                 a4 = a3 - t0
  8220: 01                       fallthrough
      :                          @522
  8221: 82 9c                    a5 = u64 [a2]
  8223: ab ac f2                 jump @520 if a5 != a3
      :                          @523
  8226: 7b 9b                    u64 [a2] = a4
  8228: 33 08                    a1 = 0
  8230: 32 00                    ret
      :                          @524
  8232: 32 00                    ret
      :                          @525 [@dyn 146]
  8234: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8237: 7b 10 18                 u64 [sp + 0x18] = ra
  8240: 7b 15 10                 u64 [sp + 0x10] = s0
  8243: 7b 16 08                 u64 [sp + 0x8] = s1
  8246: 64 75                    s0 = a0
  8248: 82 7a 10                 a3 = u64 [a0 + 0x10]
  8251: 82 77                    a0 = u64 [a0]
  8253: c9 a7 07                 a0 = a0 - a3
  8256: 64 96                    s1 = a2
  8258: ac 97 2b                 jump @528 if a0 <u a2
      :                          @526
  8261: 7b 1a                    u64 [sp] = a3
  8263: 82 57 08                 a0 = u64 [s0 + 0x8]
  8266: c8 a7 07                 a0 = a0 + a3
  8269: 64 69                    a2 = s1
  8271: 50 20 26 01 48 36        ra = 294, jump @1603
      :                          @527 [@dyn 147]
  8277: 82 17                    a0 = u64 [sp]
  8279: c8 76 06                 s1 = s1 + a0
  8282: 7b 56 10                 u64 [s0 + 0x10] = s1
  8285: 33 07                    a0 = 0
  8287: 82 10 18                 ra = u64 [sp + 0x18]
  8290: 82 15 10                 s0 = u64 [sp + 0x10]
  8293: 82 16 08                 s1 = u64 [sp + 0x8]
  8296: 95 11 20                 sp = sp + 0x20
  8299: 32 00                    ret
      :                          @528
  8301: 64 57                    a0 = s0
  8303: 7b 18                    u64 [sp] = a1
  8305: 64 a8                    a1 = a3
  8307: 64 69                    a2 = s1
  8309: 50 20 28 01 13 ff        ra = 296, jump @509
      :                          @529 [@dyn 148]
  8315: 82 18                    a1 = u64 [sp]
  8317: 82 5a 10                 a3 = u64 [s0 + 0x10]
  8320: 28 c5                    jump @526
      :                          @530 [@dyn 149]
  8322: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8325: 7b 10 20                 u64 [sp + 0x20] = ra
  8328: 7b 15 18                 u64 [sp + 0x18] = s0
  8331: 7b 16 10                 u64 [sp + 0x10] = s1
  8334: 33 09 80 00              a2 = 0x80
  8338: 64 75                    s0 = a0
  8340: ae 98 26                 jump @535 if a1 >=u a2
      :                          @531
  8343: 82 56 10                 s1 = u64 [s0 + 0x10]
  8346: 82 57                    a0 = u64 [s0]
  8348: ab 76 10                 jump @534 if s1 != a0
      :                          @532
  8351: 64 57                    a0 = s0
  8353: 7b 18                    u64 [sp] = a1
  8355: 50 20 2c 01 6b fd        ra = 300, jump @469
      :                          @533 [@dyn 150]
  8361: 82 18                    a1 = u64 [sp]
  8363: 01                       fallthrough
      :                          @534
  8364: 82 57 08                 a0 = u64 [s0 + 0x8]
  8367: c8 67 07                 a0 = a0 + s1
  8370: 78 78                    u8 [a0] = a1
  8372: 95 66 01                 s1 = s1 + 0x1
  8375: 28 99 00                 jump @543
      :                          @535
  8378: 8b 87 0b                 i32 a0 = a1 >> 0xb
  8381: 48 11 0c                 u32 [sp + 12] = 0
  8384: 52 07 15                 jump @537 if a0 != 0
      :                          @536
  8387: 95 17 0d                 a0 = sp + 0xd
  8390: 98 89 06                 a2 = a1 >> 0x6
  8393: 86 99 c0 00              a2 = a2 | 0xc0
  8397: 78 19 0c                 u8 [sp + 0xc] = a2
  8400: 33 09 02                 a2 = 0x2
  8403: 28 52                    jump @540
      :                          @537
  8405: 8b 87 10                 i32 a0 = a1 >> 0x10
  8408: 52 07 22                 jump @539 if a0 != 0
      :                          @538
  8411: 95 17 0e                 a0 = sp + 0xe
  8414: 98 89 0c                 a2 = a1 >> 0xc
  8417: 86 99 e0 00              a2 = a2 | 0xe0
  8421: 78 19 0c                 u8 [sp + 0xc] = a2
  8424: 97 89 34                 a2 = a1 << 0x34
  8427: 98 99 3a                 a2 = a2 >> 0x3a
  8430: 95 99 80 00              a2 = a2 + 0x80
  8434: 78 19 0d                 u8 [sp + 0xd] = a2
  8437: 33 09 03                 a2 = 0x3
  8440: 28 2d                    jump @540
      :                          @539
  8442: 95 17 0f                 a0 = sp + 0xf
  8445: 98 89 12                 a2 = a1 >> 0x12
  8448: 86 99 f0 00              a2 = a2 | 0xf0
  8452: 78 19 0c                 u8 [sp + 0xc] = a2
  8455: 97 89 2e                 a2 = a1 << 0x2e
  8458: 98 99 3a                 a2 = a2 >> 0x3a
  8461: 95 99 80 00              a2 = a2 + 0x80
  8465: 78 19 0d                 u8 [sp + 0xd] = a2
  8468: 97 89 34                 a2 = a1 << 0x34
  8471: 98 99 3a                 a2 = a2 >> 0x3a
  8474: 95 99 80 00              a2 = a2 + 0x80
  8478: 78 19 0e                 u8 [sp + 0xe] = a2
  8481: 33 09 04                 a2 = 0x4
  8484: 01                       fallthrough
      :                          @540
  8485: 82 56 10                 s1 = u64 [s0 + 0x10]
  8488: 82 5a                    a3 = u64 [s0]
  8490: 84 88 3f                 a1 = a1 & 0x3f
  8493: 86 88 80 00              a1 = a1 | 0x80
  8497: c9 6a 0a                 a3 = a3 - s1
  8500: 78 78                    u8 [a0] = a1
  8502: ac 9a 2d                 jump @544 if a3 <u a2
      :                          @541
  8505: 7b 19                    u64 [sp] = a2
  8507: 82 57 08                 a0 = u64 [s0 + 0x8]
  8510: c8 67 07                 a0 = a0 + s1
  8513: 95 18 0c                 a1 = sp + 0xc
  8516: 50 20 2e 01 53 35        ra = 302, jump @1603
      :                          @542 [@dyn 151]
  8522: 82 17                    a0 = u64 [sp]
  8524: c8 76 06                 s1 = s1 + a0
  8527: 01                       fallthrough
      :                          @543
  8528: 7b 56 10                 u64 [s0 + 0x10] = s1
  8531: 33 07                    a0 = 0
  8533: 82 10 20                 ra = u64 [sp + 0x20]
  8536: 82 15 18                 s0 = u64 [sp + 0x18]
  8539: 82 16 10                 s1 = u64 [sp + 0x10]
  8542: 95 11 28                 sp = sp + 0x28
  8545: 32 00                    ret
      :                          @544
  8547: 64 57                    a0 = s0
  8549: 64 68                    a1 = s1
  8551: 64 96                    s1 = a2
  8553: 50 20 30 01 1f fe        ra = 304, jump @509
      :                          @545 [@dyn 152]
  8559: 64 69                    a2 = s1
  8561: 82 56 10                 s1 = u64 [s0 + 0x10]
  8564: 28 c5                    jump @541
      :                          @546 [@dyn 153]
  8566: 64 8a                    a3 = a1
  8568: 33 08 28 05 01           a1 = 0x10528
  8573: 64 a9                    a2 = a3
  8575: 28 04 14                 jump @957
      :                          @547 [@dyn 154]
  8578: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8581: 7b 10 18                 u64 [sp + 0x18] = ra
  8584: 7b 15 10                 u64 [sp + 0x10] = s0
  8587: 7b 16 08                 u64 [sp + 0x8] = s1
  8590: 82 79 10                 a2 = u64 [a0 + 0x10]
  8593: 97 94 01                 t2 = a2 << 0x1
  8596: 95 43 02                 t1 = t2 + 0x2
  8599: 57 03 cf 00              jump @568 if t1 <s 0
      :                          @548
  8603: 82 77 08                 a0 = u64 [a0 + 0x8]
  8606: 51 03 36                 jump @554 if t1 == 0
      :                          @549
  8609: 33 0a 10 00 03           a3 = 0x30010
  8614: 33 02 20 00 03           t0 = 0x30020
  8619: 95 2b 00 00 00 08        a4 = t0 + 0x8000000
  8625: 01                       fallthrough
      :                          @550
  8626: 82 bc                    a5 = u64 [a4]
  8628: c8 3c 06                 s1 = a5 + t1
  8631: ac c6 d0 fd              jump @508 if s1 <u a5
      :                          @551
  8635: 98 65 1b                 s0 = s1 >> 0x1b
  8638: 52 05 c9 fd              jump @508 if s0 != 0
      :                          @552
  8642: 82 b5                    s0 = u64 [a4]
  8644: ab c5 ee                 jump @550 if s0 != a5
      :                          @553
  8647: 7b b6                    u64 [a4] = s1
  8649: c9 62 05                 s0 = t0 - s1
  8652: 95 55 00 00 00 08        s0 = s0 + 0x8000000
  8658: 28 06                    jump @555
      :                          @554
  8660: 33 05 01                 s0 = 0x1
  8663: 01                       fallthrough
      :                          @555
  8664: 46 05 30                 u8 [s0 + 0] = 0x30
  8667: 46 15 01 78              u8 [s0 + 1] = 0x78
  8671: 51 09 49                 jump @561 if a2 == 0
      :                          @556
  8674: 7b 14                    u64 [sp] = t2
  8676: 95 5a 03                 a3 = s0 + 0x3
  8679: 33 0b 27 02 01           a4 = 0x10227
  8684: 01                       fallthrough
      :                          @557
  8685: 7c 7c                    a5 = u8 [a0]
  8687: 84 c6 0f                 s1 = a5 & 0xf
  8690: 98 cc 04                 a5 = a5 >> 0x4
  8693: c8 bc 0c                 a5 = a5 + a4
  8696: 7c cc                    a5 = u8 [a5]
  8698: c8 b6 06                 s1 = s1 + a4
  8701: 7c 66                    s1 = u8 [s1]
  8703: 95 77 01                 a0 = a0 + 0x1
  8706: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  8709: 78 a6                    u8 [a3] = s1
  8711: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  8714: 95 aa 02                 a3 = a3 + 0x2
  8717: 52 09 e0                 jump @557 if a2 != 0
      :                          @558
  8720: 64 87                    a0 = a1
  8722: 64 58                    a1 = s0
  8724: 64 36                    s1 = t1
  8726: 64 39                    a2 = t1
  8728: 50 20 36 01 f2 0f        ra = 310, jump @888
      :                          @559 [@dyn 155]
  8734: 82 18                    a1 = u64 [sp]
  8736: 98 88 1b                 a1 = a1 >> 0x1b
  8739: 51 08 13                 jump @562 if a1 == 0
      :                          @560
  8742: 28 32                    jump @567
      :                          @561
  8744: 64 87                    a0 = a1
  8746: 64 58                    a1 = s0
  8748: 64 36                    s1 = t1
  8750: 64 39                    a2 = t1
  8752: 50 20 38 01 da 0f        ra = 312, jump @888
      :                          @562 [@dyn 156]
  8758: 33 08 20 00 03           a1 = 0x30020
  8763: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  8769: 01                       fallthrough
      :                          @563
  8770: 82 89                    a2 = u64 [a1]
  8772: c9 98 0a                 a3 = a1 - a2
  8775: ab 5a 11                 jump @567 if a3 != s0
      :                          @564
  8778: c9 69 0a                 a3 = a2 - s1
  8781: 01                       fallthrough
      :                          @565
  8782: 82 8b                    a4 = u64 [a1]
  8784: ab 9b f2                 jump @563 if a4 != a2
      :                          @566
  8787: 7b 8a                    u64 [a1] = a3
  8789: 33 0c                    a5 = 0
  8791: 01                       fallthrough
      :                          @567
  8792: 82 10 18                 ra = u64 [sp + 0x18]
  8795: 82 15 10                 s0 = u64 [sp + 0x10]
  8798: 82 16 08                 s1 = u64 [sp + 0x8]
  8801: 95 11 20                 sp = sp + 0x20
  8804: 32 00                    ret
      :                          @568
  8806: 00                       trap
      :                          @569 [@dyn 157]
  8807: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8810: 7b 10 40                 u64 [sp + 0x40] = ra
  8813: 7b 15 38                 u64 [sp + 0x38] = s0
  8816: 7b 16 30                 u64 [sp + 0x30] = s1
  8819: 64 85                    s0 = a1
  8821: 64 76                    s1 = a0
  8823: 95 17 08                 a0 = sp + 0x8
  8826: 33 09 28                 a2 = 0x28
  8829: 33 08                    a1 = 0
  8831: 50 20 3c 01 5f 36        ra = 316, jump @1655
      :                          @570 [@dyn 158]
  8837: 46 11 06 30              u8 [sp + 6] = 0x30
  8841: 46 11 07 78              u8 [sp + 7] = 0x78
  8845: 95 17 09                 a0 = sp + 0x9
  8848: 95 18 31                 a1 = sp + 0x31
  8851: 33 09 27 02 01           a2 = 0x10227
  8856: 01                       fallthrough
      :                          @571
  8857: 7c 6a                    a3 = u8 [s1]
  8859: 84 ab 0f                 a4 = a3 & 0xf
  8862: 98 aa 04                 a3 = a3 >> 0x4
  8865: c8 9a 0a                 a3 = a3 + a2
  8868: 7c aa                    a3 = u8 [a3]
  8870: c8 9b 0b                 a4 = a4 + a2
  8873: 7c bb                    a4 = u8 [a4]
  8875: 78 7a ff                 u8 [a0 + 0xffffffffffffffff] = a3
  8878: 78 7b                    u8 [a0] = a4
  8880: 95 77 02                 a0 = a0 + 0x2
  8883: 95 66 01                 s1 = s1 + 0x1
  8886: ab 87 e3                 jump @571 if a0 != a1
      :                          @572
  8889: 82 58 38                 a1 = u64 [s0 + 0x38]
  8892: 82 57 30                 a0 = u64 [s0 + 0x30]
  8895: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8898: 95 18 06                 a1 = sp + 0x6
  8901: 33 09 2a                 a2 = 0x2a
  8904: b4 a0 02 3e 01           ra = 318, jump [a3]
      :                          @573 [@dyn 159]
  8909: 82 10 40                 ra = u64 [sp + 0x40]
  8912: 82 15 38                 s0 = u64 [sp + 0x38]
  8915: 82 16 30                 s1 = u64 [sp + 0x30]
  8918: 95 11 48                 sp = sp + 0x48
  8921: 32 00                    ret
      :                          @574
  8923: 00                       trap
      :                          @575 [@dyn 160]
  8924: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  8927: 7b 10                    u64 [sp] = ra
  8929: 82 82                    t0 = u64 [a1]
  8931: 84 2b 01                 a4 = t0 & 0x1
  8934: 52 0b 40                 jump @578 if a4 != 0
      :                          @576
  8937: 95 28 10                 a1 = t0 + 0x10
  8940: 33 0b 01                 a4 = 0x1
  8943: 3e 02 00 00 03           u64 [0x30000] = t0
  8948: 3e 04 08 00 03           u64 [0x30008] = t2
  8953: 82 82                    t0 = u64 [a1]
  8955: c8 b2 04                 t2 = t0 + a4
  8958: 7b 84                    u64 [a1] = t2
  8960: 64 28                    a1 = t0
  8962: 3a 02 00 00 03           t0 = u64 [0x30000]
  8967: 3a 04 08 00 03           t2 = u64 [0x30008]
  8972: 57 08 cf                 jump @574 if a1 <s 0
      :                          @577
  8975: 7b 79 08                 u64 [a0 + 0x8] = a2
  8978: 7b 7a 10                 u64 [a0 + 0x10] = a3
  8981: 7b 72 18                 u64 [a0 + 0x18] = t0
  8984: 33 08 a8 05 01           a1 = 0x105a8
  8989: 7b 78                    u64 [a0] = a1
  8991: 82 10                    ra = u64 [sp]
  8993: 95 11 08                 sp = sp + 0x8
  8996: 32 00                    ret
      :                          @578
  8998: 64 ac                    a5 = a3
  9000: 84 2a fe                 a3 = t0 & 0xfffffffffffffffe
  9003: 64 9b                    a4 = a2
  9005: 64 29                    a2 = t0
  9007: 50 20 42 01 ae 05        ra = 322, jump @710
      :                          @579 [@dyn 161]
  9013: 82 10                    ra = u64 [sp]
  9015: 95 11 08                 sp = sp + 0x8
  9018: 32 00                    ret
      :                          @580 [@dyn 162]
  9020: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9023: 7b 10 20                 u64 [sp + 0x20] = ra
  9026: 7b 15 18                 u64 [sp + 0x18] = s0
  9029: 7b 16 10                 u64 [sp + 0x10] = s1
  9032: 82 88                    a1 = u64 [a1]
  9034: 84 8b 01                 a4 = a1 & 0x1
  9037: 52 0b 0b                 jump @583 if a4 != 0
      :                          @581
  9040: 50 20 46 01 2b 04        ra = 326, jump @673
      :                          @582 [@dyn 163]
  9046: 28 2c                    jump @585
      :                          @583
  9048: 84 85 fe                 s0 = a1 & 0xfffffffffffffffe
  9051: c8 a9 08                 a1 = a2 + a3
  9054: c9 58 08                 a1 = a1 - s0
  9057: 7b 18 08                 u64 [sp + 0x8] = a1
  9060: 64 76                    s1 = a0
  9062: 64 57                    a0 = s0
  9064: 64 98                    a1 = a2
  9066: 64 a9                    a2 = a3
  9068: 7b 1a                    u64 [sp] = a3
  9070: 50 20 48 01 e3 33        ra = 328, jump @1620
      :                          @584 [@dyn 164]
  9076: 82 17 08                 a0 = u64 [sp + 0x8]
  9079: 7b 67                    u64 [s1] = a0
  9081: 7b 65 08                 u64 [s1 + 0x8] = s0
  9084: 82 17                    a0 = u64 [sp]
  9086: 7b 67 10                 u64 [s1 + 0x10] = a0
  9089: 01                       fallthrough
      :                          @585
  9090: 82 10 20                 ra = u64 [sp + 0x20]
  9093: 82 15 18                 s0 = u64 [sp + 0x18]
  9096: 82 16 10                 s1 = u64 [sp + 0x10]
  9099: 95 11 28                 sp = sp + 0x28
  9102: 32 00                    ret
      :                          @586 [@dyn 165]
  9104: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  9107: 7b 10 38                 u64 [sp + 0x38] = ra
  9110: 7b 15 30                 u64 [sp + 0x30] = s0
  9113: 7b 16 28                 u64 [sp + 0x28] = s1
  9116: 82 88                    a1 = u64 [a1]
  9118: 64 a4                    t2 = a3
  9120: 84 8b 01                 a4 = a1 & 0x1
  9123: 52 0b 0d                 jump @589 if a4 != 0
      :                          @587
  9126: 64 4a                    a3 = t2
  9128: 50 20 4c 01 d2 01        ra = 332, jump @631
      :                          @588 [@dyn 166]
  9134: 28 53                    jump @595
      :                          @589
  9136: 84 88 fe                 a1 = a1 & 0xfffffffffffffffe
  9139: c9 89 02                 t0 = a2 - a1
  9142: c8 42 0a                 a3 = t0 + t2
  9145: 98 ab 11                 a4 = a3 >> 0x11
  9148: 98 ac 0a                 a5 = a3 >> 0xa
  9151: 68 cc                    a5 = clz a5
  9153: 97 cc 02                 a5 = a5 << 0x2
  9156: 9a c6 01 01              s1 = 0x101 - a5
  9160: 33 0c 1d                 a5 = 0x1d
  9163: da b6 0c                 a5 = s1 if a4 == 0
  9166: aa 89 24                 jump @593 if a2 == a1
      :                          @590
  9169: 98 c6 05                 s1 = a5 >> 0x5
  9172: c8 26 0b                 a4 = s1 + t0
  9175: 98 b9 3b                 a2 = a4 >> 0x3b
  9178: 52 09 35                 jump @596 if a2 != 0
      :                          @591
  9181: 97 bb 05                 a4 = a4 << 0x5
  9184: 84 cc 1d                 a5 = a5 & 0x1d
  9187: d4 bc 0c                 a5 = a5 | a4
  9190: 01                       fallthrough
      :                          @592
  9191: c8 28 08                 a1 = a1 + t0
  9194: e4 2a 09                 a2 = maxu(a3, t0)
  9197: c9 29 0a                 a3 = a2 - t0
  9200: 28 05                    jump @594
      :                          @593
  9202: 64 a4                    t2 = a3
  9204: 01                       fallthrough
      :                          @594
  9205: 7b 78                    u64 [a0] = a1
  9207: 7b 7a 08                 u64 [a0 + 0x8] = a3
  9210: 7b 74 10                 u64 [a0 + 0x10] = t2
  9213: 7b 7c 18                 u64 [a0 + 0x18] = a5
  9216: 01                       fallthrough
      :                          @595
  9217: 82 10 38                 ra = u64 [sp + 0x38]
  9220: 82 15 30                 s0 = u64 [sp + 0x30]
  9223: 82 16 28                 s1 = u64 [sp + 0x28]
  9226: 95 11 40                 sp = sp + 0x40
  9229: 32 00                    ret
      :                          @596
  9231: 7b 16 10                 u64 [sp + 0x10] = s1
  9234: 33 0b 20 00 03           a4 = 0x30020
  9239: 95 b9 00 00 00 08        a2 = a4 + 0x8000000
  9245: 7b 19 20                 u64 [sp + 0x20] = a2
  9248: 33 06 d0 ff ff 07        s1 = 0x7ffffd0
  9254: 49 11 18 d8 ff ff 07     u64 [sp + 24] = 0x7ffffd8
  9261: 01                       fallthrough
      :                          @597
  9262: 82 19 20                 a2 = u64 [sp + 0x20]
  9265: 82 93                    t1 = u64 [a2]
  9267: ac 36 54 fb              jump @508 if s1 <u t1
      :                          @598
  9271: c9 3b 00                 ra = a4 - t1
  9274: 82 19 18                 a2 = u64 [sp + 0x18]
  9277: c8 09 09                 a2 = a2 + ra
  9280: 7b 19 08                 u64 [sp + 0x8] = a2
  9283: 84 99 07                 a2 = a2 & 0x7
  9286: 7b 19                    u64 [sp] = a2
  9288: c8 93 0b                 a4 = t1 + a2
  9291: 95 bb 28                 a4 = a4 + 0x28
  9294: 82 10 20                 ra = u64 [sp + 0x20]
  9297: 01                       fallthrough
      :                          @599
  9298: 82 05                    s0 = u64 [ra]
  9300: ab 35 06                 jump @601 if s0 != t1
      :                          @600
  9303: 7b 0b                    u64 [ra] = a4
  9305: 01                       fallthrough
      :                          @601
  9306: 33 0b 20 00 03           a4 = 0x30020
  9311: ab 35 cf                 jump @597 if s0 != t1
      :                          @602
  9314: 97 cc 3b                 a5 = a5 << 0x3b
  9317: 82 19 08                 a2 = u64 [sp + 0x8]
  9320: 82 1b                    a4 = u64 [sp]
  9322: c9 b9 09                 a2 = a2 - a4
  9325: 82 1b 10                 a4 = u64 [sp + 0x10]
  9328: c8 ab 05                 s0 = a4 + a3
  9331: c9 b8 06                 s1 = a1 - a4
  9334: 98 cc 3d                 a5 = a5 >> 0x3d
  9337: 7b 95                    u64 [a2] = s0
  9339: 7b 96 08                 u64 [a2 + 0x8] = s1
  9342: 7b 95 10                 u64 [a2 + 0x10] = s0
  9345: 7b 9c 18                 u64 [a2 + 0x18] = a5
  9348: 33 0b 01                 a4 = 0x1
  9351: 7b 9b 20                 u64 [a2 + 0x20] = a4
  9354: 64 9c                    a5 = a2
  9356: 28 5b ff                 jump @592
      :                          @603 [@dyn 167]
  9359: 82 78                    a1 = u64 [a0]
  9361: 84 89 01                 a2 = a1 & 0x1
  9364: 33 07 01                 a0 = 0x1
  9367: 52 09 0e                 jump @605 if a2 != 0
      :                          @604
  9370: 82 87 10                 a0 = u64 [a1 + 0x10]
  9373: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9376: 88 77 01                 a0 = a0 <u 0x1
  9379: 32 00                    ret
      :                          @605
  9381: 32 00                    ret
      :                          @606 [@dyn 168]
  9383: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  9386: 82 77                    a0 = u64 [a0]
  9388: 84 7a 01                 a3 = a0 & 0x1
  9391: 52 0a 8a 00              jump @622 if a3 != 0
      :                          @607
  9395: 95 78 10                 a1 = a0 + 0x10
  9398: 3e 02 00 00 03           u64 [0x30000] = t0
  9403: 3e 04 08 00 03           u64 [0x30008] = t2
  9408: 82 82                    t0 = u64 [a1]
  9410: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  9413: 7b 84                    u64 [a1] = t2
  9415: 64 28                    a1 = t0
  9417: 3a 02 00 00 03           t0 = u64 [0x30000]
  9422: 3a 04 08 00 03           t2 = u64 [0x30008]
  9427: 33 09 01                 a2 = 0x1
  9430: ab 98 9e 00              jump @629 if a1 != a2
      :                          @608
  9434: 82 74 08                 t2 = u64 [a0 + 0x8]
  9437: 57 04 9c 00              jump @630 if t2 <s 0
      :                          @609
  9441: 33 02 00 00 00 08        t0 = 0x8000000
  9447: ac 42 2e                 jump @615 if t0 <u t2
      :                          @610
  9450: 82 73                    t1 = u64 [a0]
  9452: 33 0b 20 00 03           a4 = 0x30020
  9457: 95 b9 00 00 00 08        a2 = a4 + 0x8000000
  9463: 01                       fallthrough
      :                          @611
  9464: 82 9c                    a5 = u64 [a2]
  9466: c9 c9 0b                 a4 = a2 - a5
  9469: ab 3b 18                 jump @615 if a4 != t1
      :                          @612
  9472: c9 4c 0b                 a4 = a5 - t2
  9475: 01                       fallthrough
      :                          @613
  9476: 82 9a                    a3 = u64 [a2]
  9478: ab ca f2                 jump @611 if a3 != a5
      :                          @614
  9481: 7b 9b                    u64 [a2] = a4
  9483: 33 09 20 00 03           a2 = 0x30020
  9488: c8 29 09                 a2 = a2 + t0
  9491: 28 0b                    jump @616
      :                          @615
  9493: 33 09 20 00 03           a2 = 0x30020
  9498: c8 29 09                 a2 = a2 + t0
  9501: 01                       fallthrough
      :                          @616
  9502: 82 98                    a1 = u64 [a2]
  9504: c9 89 0a                 a3 = a2 - a1
  9507: ab 7a 51                 jump @629 if a3 != a0
      :                          @617
  9510: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
  9513: 01                       fallthrough
      :                          @618
  9514: 82 9b                    a4 = u64 [a2]
  9516: ab 8b f2                 jump @616 if a4 != a1
      :                          @619
  9519: 7b 9a                    u64 [a2] = a3
  9521: 33 0c                    a5 = 0
  9523: 01                       fallthrough
      :                          @620
  9524: ab 8b ea                 jump @616 if a4 != a1
      :                          @621
  9527: 28 3d                    jump @629
      :                          @622
  9529: 84 72 fe                 t0 = a0 & 0xfffffffffffffffe
  9532: c8 98 08                 a1 = a1 + a2
  9535: c9 28 08                 a1 = a1 - t0
  9538: 57 08 37                 jump @630 if a1 <s 0
      :                          @623
  9541: 33 09 00 00 00 08        a2 = 0x8000000
  9547: ac 89 29                 jump @629 if a2 <u a1
      :                          @624
  9550: 33 0a 20 00 03           a3 = 0x30020
  9555: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
  9561: 01                       fallthrough
      :                          @625
  9562: 82 9a                    a3 = u64 [a2]
  9564: c9 a9 0b                 a4 = a2 - a3
  9567: ab 2b 15                 jump @629 if a4 != t0
      :                          @626
  9570: c9 8a 0b                 a4 = a3 - a1
  9573: 01                       fallthrough
      :                          @627
  9574: 82 9c                    a5 = u64 [a2]
  9576: ab ac f2                 jump @625 if a5 != a3
      :                          @628
  9579: 7b 9b                    u64 [a2] = a4
  9581: 33 07                    a0 = 0
  9583: 95 11 08                 sp = sp + 0x8
  9586: 32 00                    ret
      :                          @629
  9588: 95 11 08                 sp = sp + 0x8
  9591: 32 00                    ret
      :                          @630
  9593: 00                       trap
      :                          @631
  9594: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  9597: 7b 10 38                 u64 [sp + 0x38] = ra
  9600: 7b 15 30                 u64 [sp + 0x30] = s0
  9603: 7b 16 28                 u64 [sp + 0x28] = s1
  9606: 82 8b 10                 a4 = u64 [a1 + 0x10]
  9609: 7b 17 18                 u64 [sp + 0x18] = a0
  9612: 33 0c 01                 a5 = 0x1
  9615: ab cb 6d                 jump @641 if a4 != a5
      :                          @632
  9618: 82 84                    t2 = u64 [a1]
  9620: 82 87 08                 a0 = u64 [a1 + 0x8]
  9623: 33 00 20 00 03           ra = 0x30020
  9628: 95 02 00 00 00 08        t0 = ra + 0x8000000
  9634: 01                       fallthrough
      :                          @633
  9635: 82 26                    s1 = u64 [t0]
  9637: c9 62 0c                 a5 = t0 - s1
  9640: ab 8c 0f                 jump @637 if a5 != a1
      :                          @634
  9643: 95 6c e8                 a5 = s1 + 0xffffffffffffffe8
  9646: 01                       fallthrough
      :                          @635
  9647: 82 2b                    a4 = u64 [t0]
  9649: ab 6b f2                 jump @633 if a4 != s1
      :                          @636
  9652: 7b 2c                    u64 [t0] = a5
  9654: 01                       fallthrough
      :                          @637
  9655: c9 49 03                 t1 = a2 - t2
  9658: c8 3a 0a                 a3 = a3 + t1
  9661: 98 7b 11                 a4 = a0 >> 0x11
  9664: 98 78 0a                 a1 = a0 >> 0xa
  9667: 68 88                    a1 = clz a1
  9669: 97 88 02                 a1 = a1 << 0x2
  9672: 9a 86 01 01              s1 = 0x101 - a1
  9676: 33 08 1d                 a1 = 0x1d
  9679: da b6 08                 a1 = s1 if a4 == 0
  9682: aa 49 1c 01              jump @663 if a2 == t2
      :                          @638
  9686: 98 8b 05                 a4 = a1 >> 0x5
  9689: c8 3b 0c                 a5 = a4 + t1
  9692: 98 c9 3b                 a2 = a5 >> 0x3b
  9695: 52 09 2b 01              jump @664 if a2 != 0
      :                          @639
  9699: 97 cb 05                 a4 = a5 << 0x5
  9702: 84 88 1d                 a1 = a1 & 0x1d
  9705: d4 b8 08                 a1 = a1 | a4
  9708: 01                       fallthrough
      :                          @640
  9709: c8 34 04                 t2 = t2 + t1
  9712: e4 3a 0a                 a3 = maxu(a3, t1)
  9715: c9 3a 0a                 a3 = a3 - t1
  9718: c9 37 07                 a0 = a0 - t1
  9721: 28 f5 00                 jump @663
      :                          @641
  9724: 57 0a 7e 01              jump @672 if a3 <s 0
      :                          @642
  9728: 33 05 01                 s0 = 0x1
  9731: 33 0b 01                 a4 = 0x1
  9734: 51 0a 39                 jump @648 if a3 == 0
      :                          @643
  9737: 33 0c 00 00 00 08        a5 = 0x8000000
  9743: 33 02 20 00 03           t0 = 0x30020
  9748: c8 c2 03                 t1 = t0 + a5
  9751: 01                       fallthrough
      :                          @644
  9752: 82 36                    s1 = u64 [t1]
  9754: c8 a6 0b                 a4 = s1 + a3
  9757: ac 6b 6a f9              jump @508 if a4 <u s1
      :                          @645
  9761: 98 b5 1b                 s0 = a4 >> 0x1b
  9764: 52 05 63 f9              jump @508 if s0 != 0
      :                          @646
  9768: 82 35                    s0 = u64 [t1]
  9770: ab 65 ee                 jump @644 if s0 != s1
      :                          @647
  9773: 7b 3b                    u64 [t1] = a4
  9775: c9 b2 0b                 a4 = t0 - a4
  9778: 33 0c 00 00 00 08        a5 = 0x8000000
  9784: c8 cb 0b                 a4 = a4 + a5
  9787: 33 05 01                 s0 = 0x1
  9790: 01                       fallthrough
      :                          @648
  9791: 7b 1b 10                 u64 [sp + 0x10] = a4
  9794: 64 b7                    a0 = a4
  9796: 64 86                    s1 = a1
  9798: 64 98                    a1 = a2
  9800: 7b 1a 08                 u64 [sp + 0x8] = a3
  9803: 64 a9                    a2 = a3
  9805: 50 20 52 01 4a 30        ra = 338, jump @1603
      :                          @649 [@dyn 169]
  9811: 95 69 10                 a2 = s1 + 0x10
  9814: 3e 02 00 00 03           u64 [0x30000] = t0
  9819: 3e 04 08 00 03           u64 [0x30008] = t2
  9824: 82 92                    t0 = u64 [a2]
  9826: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  9829: 7b 94                    u64 [a2] = t2
  9831: 64 29                    a2 = t0
  9833: 3a 02 00 00 03           t0 = u64 [0x30000]
  9838: 3a 04 08 00 03           t2 = u64 [0x30008]
  9843: ab 59 5d                 jump @662 if a2 != s0
      :                          @650
  9846: 64 68                    a1 = s1
  9848: 82 69 08                 a2 = u64 [s1 + 0x8]
  9851: 57 09 fe 00              jump @671 if a2 <s 0
      :                          @651
  9855: 33 02 00 00 00 08        t0 = 0x8000000
  9861: ac 92 2e                 jump @657 if t0 <u a2
      :                          @652
  9864: 82 83                    t1 = u64 [a1]
  9866: 33 0c 20 00 03           a5 = 0x30020
  9871: 95 c6 00 00 00 08        s1 = a5 + 0x8000000
  9877: 01                       fallthrough
      :                          @653
  9878: 82 6a                    a3 = u64 [s1]
  9880: c9 a6 0c                 a5 = s1 - a3
  9883: ab 3c 18                 jump @657 if a5 != t1
      :                          @654
  9886: c9 9a 0c                 a5 = a3 - a2
  9889: 01                       fallthrough
      :                          @655
  9890: 82 65                    s0 = u64 [s1]
  9892: ab a5 f2                 jump @653 if s0 != a3
      :                          @656
  9895: 7b 6c                    u64 [s1] = a5
  9897: 33 0a 20 00 03           a3 = 0x30020
  9902: c8 2a 0a                 a3 = a3 + t0
  9905: 28 0b                    jump @658
      :                          @657
  9907: 33 0a 20 00 03           a3 = 0x30020
  9912: c8 2a 0a                 a3 = a3 + t0
  9915: 01                       fallthrough
      :                          @658
  9916: 82 a9                    a2 = u64 [a3]
  9918: c9 9a 0b                 a4 = a3 - a2
  9921: ab 8b 0f                 jump @662 if a4 != a1
      :                          @659
  9924: 95 9b e8                 a4 = a2 + 0xffffffffffffffe8
  9927: 01                       fallthrough
      :                          @660
  9928: 82 ac                    a5 = u64 [a3]
  9930: ab 9c f2                 jump @658 if a5 != a2
      :                          @661
  9933: 7b ab                    u64 [a3] = a4
  9935: 01                       fallthrough
      :                          @662
  9936: 82 1a 08                 a3 = u64 [sp + 0x8]
  9939: 98 a9 11                 a2 = a3 >> 0x11
  9942: 98 a8 0a                 a1 = a3 >> 0xa
  9945: 68 88                    a1 = clz a1
  9947: 97 88 02                 a1 = a1 << 0x2
  9950: 9a 8b 01 01              a4 = 0x101 - a1
  9954: 33 08 1d                 a1 = 0x1d
  9957: da 9b 08                 a1 = a4 if a2 == 0
  9960: 64 a7                    a0 = a3
  9962: 82 14 10                 t2 = u64 [sp + 0x10]
  9965: 01                       fallthrough
      :                          @663
  9966: 82 19 18                 a2 = u64 [sp + 0x18]
  9969: 7b 94                    u64 [a2] = t2
  9971: 7b 9a 08                 u64 [a2 + 0x8] = a3
  9974: 7b 97 10                 u64 [a2 + 0x10] = a0
  9977: 7b 98 18                 u64 [a2 + 0x18] = a1
  9980: 82 10 38                 ra = u64 [sp + 0x38]
  9983: 82 15 30                 s0 = u64 [sp + 0x30]
  9986: 82 16 28                 s1 = u64 [sp + 0x28]
  9989: 95 11 40                 sp = sp + 0x40
  9992: 32 00                    ret
      :                          @664
  9994: 7b 1b                    u64 [sp] = a4
  9996: 7b 14 10                 u64 [sp + 0x10] = t2
  9999: 95 06 00 00 00 08        s1 = ra + 0x8000000
 10005: 33 0c d0 ff ff 07        a5 = 0x7ffffd0
 10011: 33 0b d8 ff ff 07        a4 = 0x7ffffd8
 10017: 01                       fallthrough
      :                          @665
 10018: 82 62                    t0 = u64 [s1]
 10020: ac 2c 63 f8              jump @508 if a5 <u t0
      :                          @666
 10024: c9 20 04                 t2 = ra - t0
 10027: c8 b4 04                 t2 = t2 + a4
 10030: 84 49 07                 a2 = t2 & 0x7
 10033: 7b 1b 08                 u64 [sp + 0x8] = a4
 10036: c8 92 0b                 a4 = t0 + a2
 10039: 95 bb 28                 a4 = a4 + 0x28
 10042: 01                       fallthrough
      :                          @667
 10043: 82 65                    s0 = u64 [s1]
 10045: ab 25 06                 jump @669 if s0 != t0
      :                          @668
 10048: 7b 6b                    u64 [s1] = a4
 10050: 01                       fallthrough
      :                          @669
 10051: 82 1b 08                 a4 = u64 [sp + 0x8]
 10054: 33 00 20 00 03           ra = 0x30020
 10059: ab 25 d7                 jump @665 if s0 != t0
      :                          @670
 10062: 97 88 3b                 a1 = a1 << 0x3b
 10065: c9 94 09                 a2 = t2 - a2
 10068: 82 1c                    a5 = u64 [sp]
 10070: c8 7c 0b                 a4 = a5 + a0
 10073: c8 ac 06                 s1 = a5 + a3
 10076: 82 14 10                 t2 = u64 [sp + 0x10]
 10079: c9 c4 05                 s0 = t2 - a5
 10082: 98 88 3d                 a1 = a1 >> 0x3d
 10085: 7b 9b                    u64 [a2] = a4
 10087: 7b 95 08                 u64 [a2 + 0x8] = s0
 10090: 7b 96 10                 u64 [a2 + 0x10] = s1
 10093: 7b 98 18                 u64 [a2 + 0x18] = a1
 10096: 49 19 20 01              u64 [a2 + 32] = 0x1
 10100: 64 98                    a1 = a2
 10102: 28 77 fe                 jump @640
      :                          @671
 10105: 00                       trap
      :                          @672
 10106: 00                       trap
      :                          @673
 10107: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 10110: 7b 10 30                 u64 [sp + 0x30] = ra
 10113: 7b 15 28                 u64 [sp + 0x28] = s0
 10116: 7b 16 20                 u64 [sp + 0x20] = s1
 10119: 64 86                    s1 = a1
 10121: 95 83 10                 t1 = a1 + 0x10
 10124: 01                       fallthrough
      :                          @674
 10125: 82 3b                    a4 = u64 [t1]
 10127: 52 1b 01 09              jump @676 if a4 != 1
      :                          @675
 10131: 49 03                    u64 [t1 + 0] = 0
 10133: 33 0c                    a5 = 0
 10135: 01                       fallthrough
      :                          @676
 10136: 7b 1a 10                 u64 [sp + 0x10] = a3
 10139: 52 1b 01 5e              jump @685 if a4 != 1
      :                          @677
 10143: 7b 17 08                 u64 [sp + 0x8] = a0
 10146: 82 67                    a0 = u64 [s1]
 10148: 82 68 08                 a1 = u64 [s1 + 0x8]
 10151: 7b 18                    u64 [sp] = a1
 10153: 33 05 20 00 03           s0 = 0x30020
 10158: 95 55 00 00 00 08        s0 = s0 + 0x8000000
 10164: 01                       fallthrough
      :                          @678
 10165: 82 58                    a1 = u64 [s0]
 10167: c9 85 0a                 a3 = s0 - a1
 10170: ab 6a 11                 jump @682 if a3 != s1
      :                          @679
 10173: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
 10176: 01                       fallthrough
      :                          @680
 10177: 82 5b                    a4 = u64 [s0]
 10179: ab 8b f2                 jump @678 if a4 != a1
      :                          @681
 10182: 7b 5a                    u64 [s0] = a3
 10184: 33 0c                    a5 = 0
 10186: 01                       fallthrough
      :                          @682
 10187: 64 98                    a1 = a2
 10189: 82 19 10                 a2 = u64 [sp + 0x10]
 10192: 64 75                    s0 = a0
 10194: 50 20 54 01 7f 2f        ra = 340, jump @1620
      :                          @683 [@dyn 170]
 10200: 64 52                    t0 = s0
 10202: 82 1c 08                 a5 = u64 [sp + 0x8]
 10205: 82 17                    a0 = u64 [sp]
 10207: 01                       fallthrough
      :                          @684
 10208: 7b c7                    u64 [a5] = a0
 10210: 7b c2 08                 u64 [a5 + 0x8] = t0
 10213: 82 17 10                 a0 = u64 [sp + 0x10]
 10216: 7b c7 10                 u64 [a5 + 0x10] = a0
 10219: 82 10 30                 ra = u64 [sp + 0x30]
 10222: 82 15 28                 s0 = u64 [sp + 0x28]
 10225: 82 16 20                 s1 = u64 [sp + 0x20]
 10228: 95 11 38                 sp = sp + 0x38
 10231: 32 00                    ret
      :                          @685
 10233: 82 18 10                 a1 = u64 [sp + 0x10]
 10236: 57 08 e0 00              jump @709 if a1 <s 0
      :                          @686
 10240: 33 08 01                 a1 = 0x1
 10243: 82 1a 10                 a3 = u64 [sp + 0x10]
 10246: 51 0a 33                 jump @692 if a3 == 0
      :                          @687
 10249: 33 02 20 00 03           t0 = 0x30020
 10254: 95 28 00 00 00 08        a1 = t0 + 0x8000000
 10260: 01                       fallthrough
      :                          @688
 10261: 82 8b                    a4 = u64 [a1]
 10263: 82 1a 10                 a3 = u64 [sp + 0x10]
 10266: c8 ba 0a                 a3 = a3 + a4
 10269: ac ba 6a f7              jump @508 if a3 <u a4
      :                          @689
 10273: 98 ac 1b                 a5 = a3 >> 0x1b
 10276: 52 0c 63 f7              jump @508 if a5 != 0
      :                          @690
 10280: 82 8c                    a5 = u64 [a1]
 10282: ab bc eb                 jump @688 if a5 != a4
      :                          @691
 10285: 7b 8a                    u64 [a1] = a3
 10287: c9 a2 0a                 a3 = t0 - a3
 10290: 95 a8 00 00 00 08        a1 = a3 + 0x8000000
 10296: 01                       fallthrough
      :                          @692
 10297: 7b 17 08                 u64 [sp + 0x8] = a0
 10300: 7b 18                    u64 [sp] = a1
 10302: 64 87                    a0 = a1
 10304: 64 98                    a1 = a2
 10306: 82 19 10                 a2 = u64 [sp + 0x10]
 10309: 64 35                    s0 = t1
 10311: 50 20 56 01 50 2e        ra = 342, jump @1603
      :                          @693 [@dyn 171]
 10317: 3e 02 00 00 03           u64 [0x30000] = t0
 10322: 3e 04 08 00 03           u64 [0x30008] = t2
 10327: 82 52                    t0 = u64 [s0]
 10329: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10332: 7b 54                    u64 [s0] = t2
 10334: 64 27                    a0 = t0
 10336: 3a 02 00 00 03           t0 = u64 [0x30000]
 10341: 3a 04 08 00 03           t2 = u64 [0x30008]
 10346: 33 08 01                 a1 = 0x1
 10349: ab 87 63                 jump @707 if a0 != a1
      :                          @694
 10352: 82 67 08                 a0 = u64 [s1 + 0x8]
 10355: 57 07 68                 jump @708 if a0 <s 0
      :                          @695
 10358: 33 02 00 00 00 08        t0 = 0x8000000
 10364: ac 72 25                 jump @701 if t0 <u a0
      :                          @696
 10367: 82 63                    t1 = u64 [s1]
 10369: 33 0a 20 00 03           a3 = 0x30020
 10374: 95 aa 00 00 00 08        a3 = a3 + 0x8000000
 10380: 01                       fallthrough
      :                          @697
 10381: 82 ab                    a4 = u64 [a3]
 10383: c9 ba 0c                 a5 = a3 - a4
 10386: ab 3c 0f                 jump @701 if a5 != t1
      :                          @698
 10389: c9 7b 0c                 a5 = a4 - a0
 10392: 01                       fallthrough
      :                          @699
 10393: 82 a8                    a1 = u64 [a3]
 10395: ab b8 f2                 jump @697 if a1 != a4
      :                          @700
 10398: 7b ac                    u64 [a3] = a5
 10400: 01                       fallthrough
      :                          @701
 10401: 33 08 20 00 03           a1 = 0x30020
 10406: c8 28 08                 a1 = a1 + t0
 10409: 82 1c 08                 a5 = u64 [sp + 0x8]
 10412: 82 12                    t0 = u64 [sp]
 10414: 01                       fallthrough
      :                          @702
 10415: 82 87                    a0 = u64 [a1]
 10417: c9 78 09                 a2 = a1 - a0
 10420: ab 69 16                 jump @706 if a2 != s1
      :                          @703
 10423: 95 79 e8                 a2 = a0 + 0xffffffffffffffe8
 10426: 01                       fallthrough
      :                          @704
 10427: 82 8a                    a3 = u64 [a1]
 10429: ab 7a f2                 jump @702 if a3 != a0
      :                          @705
 10432: 7b 89                    u64 [a1] = a2
 10434: 33 0b                    a4 = 0
 10436: 82 17 10                 a0 = u64 [sp + 0x10]
 10439: 28 19 ff                 jump @684
      :                          @706
 10442: 82 17 10                 a0 = u64 [sp + 0x10]
 10445: 28 13 ff                 jump @684
      :                          @707
 10448: 82 17 10                 a0 = u64 [sp + 0x10]
 10451: 82 1c 08                 a5 = u64 [sp + 0x8]
 10454: 82 12                    t0 = u64 [sp]
 10456: 28 08 ff                 jump @684
      :                          @708
 10459: 00                       trap
      :                          @709
 10460: 00                       trap
      :                          @710
 10461: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 10464: 7b 10 30                 u64 [sp + 0x30] = ra
 10467: 7b 15 28                 u64 [sp + 0x28] = s0
 10470: 7b 16 20                 u64 [sp + 0x20] = s1
 10473: 7b 1c 18                 u64 [sp + 0x18] = a5
 10476: 7b 1b 10                 u64 [sp + 0x10] = a4
 10479: 7b 19 08                 u64 [sp + 0x8] = a2
 10482: 7b 17                    u64 [sp] = a0
 10484: 33 09 20 00 03           a2 = 0x30020
 10489: 95 93 00 00 00 08        t1 = a2 + 0x8000000
 10495: 33 04 e0 ff ff 07        t2 = 0x7ffffe0
 10501: 33 02 e8 ff ff 07        t0 = 0x7ffffe8
 10507: 01                       fallthrough
      :                          @711
 10508: 82 36                    s1 = u64 [t1]
 10510: ac 64 79 f6              jump @508 if t2 <u s1
      :                          @712
 10514: c9 69 00                 ra = a2 - s1
 10517: c8 20 00                 ra = ra + t0
 10520: 84 0c 07                 a5 = ra & 0x7
 10523: c8 c6 05                 s0 = s1 + a5
 10526: 95 55 18                 s0 = s0 + 0x18
 10529: 01                       fallthrough
      :                          @713
 10530: 82 37                    a0 = u64 [t1]
 10532: ab 67 e8                 jump @711 if a0 != s1
      :                          @714
 10535: 7b 35                    u64 [t1] = s0
 10537: c9 c0 03                 t1 = ra - a5
 10540: 82 1c 10                 a5 = u64 [sp + 0x10]
 10543: c9 ac 07                 a0 = a5 - a3
 10546: 82 1b 18                 a4 = u64 [sp + 0x18]
 10549: c8 b7 07                 a0 = a0 + a4
 10552: 7b 3a                    u64 [t1] = a3
 10554: 7b 37 08                 u64 [t1 + 0x8] = a0
 10557: 49 13 10 02              u64 [t1 + 16] = 0x2
 10561: 82 16 08                 s1 = u64 [sp + 0x8]
 10564: 01                       fallthrough
      :                          @715
 10565: 82 8a                    a3 = u64 [a1]
 10567: ab 6a 19                 jump @717 if a3 != s1
      :                          @716
 10570: 7b 83                    u64 [a1] = t1
 10572: 82 18                    a1 = u64 [sp]
 10574: 7b 8c 08                 u64 [a1 + 0x8] = a5
 10577: 7b 8b 10                 u64 [a1 + 0x10] = a4
 10580: 7b 83 18                 u64 [a1 + 0x18] = t1
 10583: 33 07 a8 05 01           a0 = 0x105a8
 10588: 7b 87                    u64 [a1] = a0
 10590: 28 55                    jump @723
      :                          @717
 10592: 95 a7 10                 a0 = a3 + 0x10
 10595: 3e 02 00 00 03           u64 [0x30000] = t0
 10600: 3e 04 08 00 03           u64 [0x30008] = t2
 10605: 82 72                    t0 = u64 [a0]
 10607: 95 24 01                 t2 = t0 + 0x1
 10610: 7b 74                    u64 [a0] = t2
 10612: 64 27                    a0 = t0
 10614: 3a 02 00 00 03           t0 = u64 [0x30000]
 10619: 3a 04 08 00 03           t2 = u64 [0x30008]
 10624: 57 07 5b f9              jump @574 if a0 <s 0
      :                          @718
 10628: 82 18                    a1 = u64 [sp]
 10630: 7b 8c 08                 u64 [a1 + 0x8] = a5
 10633: 7b 8b 10                 u64 [a1 + 0x10] = a4
 10636: 7b 8a 18                 u64 [a1 + 0x18] = a3
 10639: 33 07 a8 05 01           a0 = 0x105a8
 10644: 7b 87                    u64 [a1] = a0
 10646: 95 92 00 00 00 08        t0 = a2 + 0x8000000
 10652: 01                       fallthrough
      :                          @719
 10653: 82 27                    a0 = u64 [t0]
 10655: c9 72 08                 a1 = t0 - a0
 10658: ab 38 11                 jump @723 if a1 != t1
      :                          @720
 10661: 95 78 e8                 a1 = a0 + 0xffffffffffffffe8
 10664: 01                       fallthrough
      :                          @721
 10665: 82 29                    a2 = u64 [t0]
 10667: ab 79 f2                 jump @719 if a2 != a0
      :                          @722
 10670: 7b 28                    u64 [t0] = a1
 10672: 33 0a                    a3 = 0
 10674: 01                       fallthrough
      :                          @723
 10675: 82 10 30                 ra = u64 [sp + 0x30]
 10678: 82 15 28                 s0 = u64 [sp + 0x28]
 10681: 82 16 20                 s1 = u64 [sp + 0x20]
 10684: 95 11 38                 sp = sp + 0x38
 10687: 32 00                    ret
      :                          @724 [@dyn 172]
 10689: 82 88                    a1 = u64 [a1]
 10691: 95 8b 10                 a4 = a1 + 0x10
 10694: 33 0c 01                 a5 = 0x1
 10697: 3e 02 00 00 03           u64 [0x30000] = t0
 10702: 3e 04 08 00 03           u64 [0x30008] = t2
 10707: 82 b2                    t0 = u64 [a4]
 10709: c8 c2 04                 t2 = t0 + a5
 10712: 7b b4                    u64 [a4] = t2
 10714: 64 2b                    a4 = t0
 10716: 3a 02 00 00 03           t0 = u64 [0x30000]
 10721: 3a 04 08 00 03           t2 = u64 [0x30008]
 10726: 57 0b f5 f8              jump @574 if a4 <s 0
      :                          @725
 10730: 7b 79 08                 u64 [a0 + 0x8] = a2
 10733: 7b 7a 10                 u64 [a0 + 0x10] = a3
 10736: 7b 78 18                 u64 [a0 + 0x18] = a1
 10739: 33 08 a8 05 01           a1 = 0x105a8
 10744: 7b 78                    u64 [a0] = a1
 10746: 32 00                    ret
      :                          @726 [@dyn 173]
 10748: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 10751: 7b 10                    u64 [sp] = ra
 10753: 82 88                    a1 = u64 [a1]
 10755: 50 20 5c 01 78 fd        ra = 348, jump @673
      :                          @727 [@dyn 174]
 10761: 82 10                    ra = u64 [sp]
 10763: 95 11 08                 sp = sp + 0x8
 10766: 32 00                    ret
      :                          @728 [@dyn 175]
 10768: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 10771: 7b 10                    u64 [sp] = ra
 10773: 82 88                    a1 = u64 [a1]
 10775: 50 20 60 01 63 fb        ra = 352, jump @631
      :                          @729 [@dyn 176]
 10781: 82 10                    ra = u64 [sp]
 10783: 95 11 08                 sp = sp + 0x8
 10786: 32 00                    ret
      :                          @730 [@dyn 177]
 10788: 82 77                    a0 = u64 [a0]
 10790: 82 77 10                 a0 = u64 [a0 + 0x10]
 10793: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 10796: 88 77 01                 a0 = a0 <u 0x1
 10799: 32 00                    ret
      :                          @731 [@dyn 178]
 10801: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 10804: 7b 15 08                 u64 [sp + 0x8] = s0
 10807: 82 77                    a0 = u64 [a0]
 10809: 95 78 10                 a1 = a0 + 0x10
 10812: 3e 02 00 00 03           u64 [0x30000] = t0
 10817: 3e 04 08 00 03           u64 [0x30008] = t2
 10822: 82 82                    t0 = u64 [a1]
 10824: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10827: 7b 84                    u64 [a1] = t2
 10829: 64 28                    a1 = t0
 10831: 3a 02 00 00 03           t0 = u64 [0x30000]
 10836: 3a 04 08 00 03           t2 = u64 [0x30008]
 10841: 33 09 01                 a2 = 0x1
 10844: ab 98 5b                 jump @744 if a1 != a2
      :                          @732
 10847: 82 78 08                 a1 = u64 [a0 + 0x8]
 10850: 57 08 5d                 jump @745 if a1 <s 0
      :                          @733
 10853: 33 03 00 00 00 08        t1 = 0x8000000
 10859: 33 02 20 00 03           t0 = 0x30020
 10864: ac 83 26                 jump @739 if t1 <u a1
      :                          @734
 10867: 82 74                    t2 = u64 [a0]
 10869: 95 29 00 00 00 08        a2 = t0 + 0x8000000
 10875: 01                       fallthrough
      :                          @735
 10876: 82 9a                    a3 = u64 [a2]
 10878: c9 a9 0c                 a5 = a2 - a3
 10881: ab 4c 15                 jump @739 if a5 != t2
      :                          @736
 10884: c9 8a 0c                 a5 = a3 - a1
 10887: 01                       fallthrough
      :                          @737
 10888: 82 9b                    a4 = u64 [a2]
 10890: ab ab f2                 jump @735 if a4 != a3
      :                          @738
 10893: 7b 9c                    u64 [a2] = a5
 10895: 33 05                    s0 = 0
 10897: c8 32 09                 a2 = t0 + t1
 10900: 28 06                    jump @740
      :                          @739
 10902: c8 32 09                 a2 = t0 + t1
 10905: 01                       fallthrough
      :                          @740
 10906: 82 98                    a1 = u64 [a2]
 10908: c9 89 0a                 a3 = a2 - a1
 10911: ab 7a 18                 jump @744 if a3 != a0
      :                          @741
 10914: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
 10917: 01                       fallthrough
      :                          @742
 10918: 82 9b                    a4 = u64 [a2]
 10920: ab 8b f2                 jump @740 if a4 != a1
      :                          @743
 10923: 7b 9a                    u64 [a2] = a3
 10925: 33 0c                    a5 = 0
 10927: 82 15 08                 s0 = u64 [sp + 0x8]
 10930: 95 11 10                 sp = sp + 0x10
 10933: 32 00                    ret
      :                          @744
 10935: 82 15 08                 s0 = u64 [sp + 0x8]
 10938: 95 11 10                 sp = sp + 0x10
 10941: 32 00                    ret
      :                          @745
 10943: 00                       trap
      :                          @746 [@dyn 179]
 10944: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 10947: 7b 10                    u64 [sp] = ra
 10949: 82 82                    t0 = u64 [a1]
 10951: 84 2b 01                 a4 = t0 & 0x1
 10954: 52 0b 41                 jump @749 if a4 != 0
      :                          @747
 10957: 95 28 10                 a1 = t0 + 0x10
 10960: 33 0b 01                 a4 = 0x1
 10963: 3e 02 00 00 03           u64 [0x30000] = t0
 10968: 3e 04 08 00 03           u64 [0x30008] = t2
 10973: 82 82                    t0 = u64 [a1]
 10975: c8 b2 04                 t2 = t0 + a4
 10978: 7b 84                    u64 [a1] = t2
 10980: 64 28                    a1 = t0
 10982: 3a 02 00 00 03           t0 = u64 [0x30000]
 10987: 3a 04 08 00 03           t2 = u64 [0x30008]
 10992: 57 08 eb f7              jump @574 if a1 <s 0
      :                          @748
 10996: 7b 79 08                 u64 [a0 + 0x8] = a2
 10999: 7b 7a 10                 u64 [a0 + 0x10] = a3
 11002: 7b 72 18                 u64 [a0 + 0x18] = t0
 11005: 33 08 a8 05 01           a1 = 0x105a8
 11010: 7b 78                    u64 [a0] = a1
 11012: 82 10                    ra = u64 [sp]
 11014: 95 11 08                 sp = sp + 0x8
 11017: 32 00                    ret
      :                          @749
 11019: 64 9b                    a4 = a2
 11021: 64 29                    a2 = t0
 11023: 64 ac                    a5 = a3
 11025: 64 2a                    a3 = t0
 11027: 50 20 68 01 ca fd        ra = 360, jump @710
      :                          @750 [@dyn 180]
 11033: 82 10                    ra = u64 [sp]
 11035: 95 11 08                 sp = sp + 0x8
 11038: 32 00                    ret
      :                          @751 [@dyn 181]
 11040: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 11043: 7b 10 20                 u64 [sp + 0x20] = ra
 11046: 7b 15 18                 u64 [sp + 0x18] = s0
 11049: 7b 16 10                 u64 [sp + 0x10] = s1
 11052: 82 85                    s0 = u64 [a1]
 11054: 84 58 01                 a1 = s0 & 0x1
 11057: 52 08 0d                 jump @754 if a1 != 0
      :                          @752
 11060: 64 58                    a1 = s0
 11062: 50 20 6c 01 45 fc        ra = 364, jump @673
      :                          @753 [@dyn 182]
 11068: 28 29                    jump @756
      :                          @754
 11070: c8 a9 08                 a1 = a2 + a3
 11073: c9 58 08                 a1 = a1 - s0
 11076: 7b 18 08                 u64 [sp + 0x8] = a1
 11079: 64 76                    s1 = a0
 11081: 64 57                    a0 = s0
 11083: 64 98                    a1 = a2
 11085: 64 a9                    a2 = a3
 11087: 7b 1a                    u64 [sp] = a3
 11089: 50 20 6e 01 00 2c        ra = 366, jump @1620
      :                          @755 [@dyn 183]
 11095: 82 17 08                 a0 = u64 [sp + 0x8]
 11098: 7b 67                    u64 [s1] = a0
 11100: 7b 65 08                 u64 [s1 + 0x8] = s0
 11103: 82 17                    a0 = u64 [sp]
 11105: 7b 67 10                 u64 [s1 + 0x10] = a0
 11108: 01                       fallthrough
      :                          @756
 11109: 82 10 20                 ra = u64 [sp + 0x20]
 11112: 82 15 18                 s0 = u64 [sp + 0x18]
 11115: 82 16 10                 s1 = u64 [sp + 0x10]
 11118: 95 11 28                 sp = sp + 0x28
 11121: 32 00                    ret
      :                          @757 [@dyn 184]
 11123: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 11126: 7b 10 38                 u64 [sp + 0x38] = ra
 11129: 7b 15 30                 u64 [sp + 0x30] = s0
 11132: 7b 16 28                 u64 [sp + 0x28] = s1
 11135: 82 88                    a1 = u64 [a1]
 11137: 64 a4                    t2 = a3
 11139: 84 8b 01                 a4 = a1 & 0x1
 11142: 52 0b 0d                 jump @760 if a4 != 0
      :                          @758
 11145: 64 4a                    a3 = t2
 11147: 50 20 72 01 ef f9        ra = 370, jump @631
      :                          @759 [@dyn 185]
 11153: 28 50                    jump @766
      :                          @760
 11155: c9 89 02                 t0 = a2 - a1
 11158: c8 42 0a                 a3 = t0 + t2
 11161: 98 ab 11                 a4 = a3 >> 0x11
 11164: 98 ac 0a                 a5 = a3 >> 0xa
 11167: 68 cc                    a5 = clz a5
 11169: 97 cc 02                 a5 = a5 << 0x2
 11172: 9a c6 01 01              s1 = 0x101 - a5
 11176: 33 0c 1d                 a5 = 0x1d
 11179: da b6 0c                 a5 = s1 if a4 == 0
 11182: aa 89 24                 jump @764 if a2 == a1
      :                          @761
 11185: 98 c6 05                 s1 = a5 >> 0x5
 11188: c8 26 0b                 a4 = s1 + t0
 11191: 98 b9 3b                 a2 = a4 >> 0x3b
 11194: 52 09 35                 jump @767 if a2 != 0
      :                          @762
 11197: 97 bb 05                 a4 = a4 << 0x5
 11200: 84 cc 1d                 a5 = a5 & 0x1d
 11203: d4 bc 0c                 a5 = a5 | a4
 11206: 01                       fallthrough
      :                          @763
 11207: c8 28 08                 a1 = a1 + t0
 11210: e4 2a 09                 a2 = maxu(a3, t0)
 11213: c9 29 0a                 a3 = a2 - t0
 11216: 28 05                    jump @765
      :                          @764
 11218: 64 a4                    t2 = a3
 11220: 01                       fallthrough
      :                          @765
 11221: 7b 78                    u64 [a0] = a1
 11223: 7b 7a 08                 u64 [a0 + 0x8] = a3
 11226: 7b 74 10                 u64 [a0 + 0x10] = t2
 11229: 7b 7c 18                 u64 [a0 + 0x18] = a5
 11232: 01                       fallthrough
      :                          @766
 11233: 82 10 38                 ra = u64 [sp + 0x38]
 11236: 82 15 30                 s0 = u64 [sp + 0x30]
 11239: 82 16 28                 s1 = u64 [sp + 0x28]
 11242: 95 11 40                 sp = sp + 0x40
 11245: 32 00                    ret
      :                          @767
 11247: 7b 16 10                 u64 [sp + 0x10] = s1
 11250: 33 0b 20 00 03           a4 = 0x30020
 11255: 95 b9 00 00 00 08        a2 = a4 + 0x8000000
 11261: 7b 19 20                 u64 [sp + 0x20] = a2
 11264: 33 06 d0 ff ff 07        s1 = 0x7ffffd0
 11270: 49 11 18 d8 ff ff 07     u64 [sp + 24] = 0x7ffffd8
 11277: 01                       fallthrough
      :                          @768
 11278: 82 19 20                 a2 = u64 [sp + 0x20]
 11281: 82 93                    t1 = u64 [a2]
 11283: ac 36 74 f3              jump @508 if s1 <u t1
      :                          @769
 11287: c9 3b 00                 ra = a4 - t1
 11290: 82 19 18                 a2 = u64 [sp + 0x18]
 11293: c8 09 09                 a2 = a2 + ra
 11296: 7b 19 08                 u64 [sp + 0x8] = a2
 11299: 84 99 07                 a2 = a2 & 0x7
 11302: 7b 19                    u64 [sp] = a2
 11304: c8 93 0b                 a4 = t1 + a2
 11307: 95 bb 28                 a4 = a4 + 0x28
 11310: 82 10 20                 ra = u64 [sp + 0x20]
 11313: 01                       fallthrough
      :                          @770
 11314: 82 05                    s0 = u64 [ra]
 11316: ab 35 06                 jump @772 if s0 != t1
      :                          @771
 11319: 7b 0b                    u64 [ra] = a4
 11321: 01                       fallthrough
      :                          @772
 11322: 33 0b 20 00 03           a4 = 0x30020
 11327: ab 35 cf                 jump @768 if s0 != t1
      :                          @773
 11330: 97 cc 3b                 a5 = a5 << 0x3b
 11333: 82 19 08                 a2 = u64 [sp + 0x8]
 11336: 82 1b                    a4 = u64 [sp]
 11338: c9 b9 09                 a2 = a2 - a4
 11341: 82 1b 10                 a4 = u64 [sp + 0x10]
 11344: c8 ab 05                 s0 = a4 + a3
 11347: c9 b8 06                 s1 = a1 - a4
 11350: 98 cc 3d                 a5 = a5 >> 0x3d
 11353: 7b 95                    u64 [a2] = s0
 11355: 7b 96 08                 u64 [a2 + 0x8] = s1
 11358: 7b 95 10                 u64 [a2 + 0x10] = s0
 11361: 7b 9c 18                 u64 [a2 + 0x18] = a5
 11364: 33 0b 01                 a4 = 0x1
 11367: 7b 9b 20                 u64 [a2 + 0x20] = a4
 11370: 64 9c                    a5 = a2
 11372: 28 5b ff                 jump @763
      :                          @774 [@dyn 186]
 11375: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 11378: 82 77                    a0 = u64 [a0]
 11380: 84 7a 01                 a3 = a0 & 0x1
 11383: 52 0a 8a 00              jump @790 if a3 != 0
      :                          @775
 11387: 95 78 10                 a1 = a0 + 0x10
 11390: 3e 02 00 00 03           u64 [0x30000] = t0
 11395: 3e 04 08 00 03           u64 [0x30008] = t2
 11400: 82 82                    t0 = u64 [a1]
 11402: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 11405: 7b 84                    u64 [a1] = t2
 11407: 64 28                    a1 = t0
 11409: 3a 02 00 00 03           t0 = u64 [0x30000]
 11414: 3a 04 08 00 03           t2 = u64 [0x30008]
 11419: 33 09 01                 a2 = 0x1
 11422: ab 98 9b 00              jump @797 if a1 != a2
      :                          @776
 11426: 82 74 08                 t2 = u64 [a0 + 0x8]
 11429: 57 04 99 00              jump @798 if t2 <s 0
      :                          @777
 11433: 33 02 00 00 00 08        t0 = 0x8000000
 11439: ac 42 2e                 jump @783 if t0 <u t2
      :                          @778
 11442: 82 73                    t1 = u64 [a0]
 11444: 33 0b 20 00 03           a4 = 0x30020
 11449: 95 b9 00 00 00 08        a2 = a4 + 0x8000000
 11455: 01                       fallthrough
      :                          @779
 11456: 82 9c                    a5 = u64 [a2]
 11458: c9 c9 0b                 a4 = a2 - a5
 11461: ab 3b 18                 jump @783 if a4 != t1
      :                          @780
 11464: c9 4c 0b                 a4 = a5 - t2
 11467: 01                       fallthrough
      :                          @781
 11468: 82 9a                    a3 = u64 [a2]
 11470: ab ca f2                 jump @779 if a3 != a5
      :                          @782
 11473: 7b 9b                    u64 [a2] = a4
 11475: 33 09 20 00 03           a2 = 0x30020
 11480: c8 29 09                 a2 = a2 + t0
 11483: 28 0b                    jump @784
      :                          @783
 11485: 33 09 20 00 03           a2 = 0x30020
 11490: c8 29 09                 a2 = a2 + t0
 11493: 01                       fallthrough
      :                          @784
 11494: 82 98                    a1 = u64 [a2]
 11496: c9 89 0a                 a3 = a2 - a1
 11499: ab 7a 4e                 jump @797 if a3 != a0
      :                          @785
 11502: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
 11505: 01                       fallthrough
      :                          @786
 11506: 82 9b                    a4 = u64 [a2]
 11508: ab 8b f2                 jump @784 if a4 != a1
      :                          @787
 11511: 7b 9a                    u64 [a2] = a3
 11513: 33 0c                    a5 = 0
 11515: 01                       fallthrough
      :                          @788
 11516: ab 8b ea                 jump @784 if a4 != a1
      :                          @789
 11519: 28 3a                    jump @797
      :                          @790
 11521: c9 78 08                 a1 = a1 - a0
 11524: c8 98 02                 t0 = a1 + a2
 11527: 57 02 37                 jump @798 if t0 <s 0
      :                          @791
 11530: 33 08 00 00 00 08        a1 = 0x8000000
 11536: ac 28 29                 jump @797 if a1 <u t0
      :                          @792
 11539: 33 0a 20 00 03           a3 = 0x30020
 11544: 95 a8 00 00 00 08        a1 = a3 + 0x8000000
 11550: 01                       fallthrough
      :                          @793
 11551: 82 8a                    a3 = u64 [a1]
 11553: c9 a8 0b                 a4 = a1 - a3
 11556: ab 7b 15                 jump @797 if a4 != a0
      :                          @794
 11559: c9 2a 0b                 a4 = a3 - t0
 11562: 01                       fallthrough
      :                          @795
 11563: 82 8c                    a5 = u64 [a1]
 11565: ab ac f2                 jump @793 if a5 != a3
      :                          @796
 11568: 7b 8b                    u64 [a1] = a4
 11570: 33 09                    a2 = 0
 11572: 95 11 08                 sp = sp + 0x8
 11575: 32 00                    ret
      :                          @797
 11577: 95 11 08                 sp = sp + 0x8
 11580: 32 00                    ret
      :                          @798
 11582: 00                       trap
      :                          @799 [@dyn 187]
 11583: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 11586: 7b 10 18                 u64 [sp + 0x18] = ra
 11589: 7b 15 10                 u64 [sp + 0x10] = s0
 11592: 7b 16 08                 u64 [sp + 0x8] = s1
 11595: 57 0a 62                 jump @809 if a3 <s 0
      :                          @800
 11598: 51 0a 33                 jump @806 if a3 == 0
      :                          @801
 11601: 33 02 20 00 03           t0 = 0x30020
 11606: 95 28 00 00 00 08        a1 = t0 + 0x8000000
 11612: 01                       fallthrough
      :                          @802
 11613: 82 8c                    a5 = u64 [a1]
 11615: c8 ac 06                 s1 = a5 + a3
 11618: ac c6 25 f2              jump @508 if s1 <u a5
      :                          @803
 11622: 98 6b 1b                 a4 = s1 >> 0x1b
 11625: 52 0b 1e f2              jump @508 if a4 != 0
      :                          @804
 11629: 82 8b                    a4 = u64 [a1]
 11631: ab cb ee                 jump @802 if a4 != a5
      :                          @805
 11634: 7b 86                    u64 [a1] = s1
 11636: 7b 17                    u64 [sp] = a0
 11638: c9 62 06                 s1 = t0 - s1
 11641: 95 65 00 00 00 08        s0 = s1 + 0x8000000
 11647: 28 08                    jump @807
      :                          @806
 11649: 7b 17                    u64 [sp] = a0
 11651: 33 05 01                 s0 = 0x1
 11654: 01                       fallthrough
      :                          @807
 11655: 64 57                    a0 = s0
 11657: 64 98                    a1 = a2
 11659: 64 a9                    a2 = a3
 11661: 64 a6                    s1 = a3
 11663: 50 20 78 01 08 29        ra = 376, jump @1603
      :                          @808 [@dyn 188]
 11669: 82 17                    a0 = u64 [sp]
 11671: 7b 76                    u64 [a0] = s1
 11673: 7b 75 08                 u64 [a0 + 0x8] = s0
 11676: 7b 76 10                 u64 [a0 + 0x10] = s1
 11679: 82 10 18                 ra = u64 [sp + 0x18]
 11682: 82 15 10                 s0 = u64 [sp + 0x10]
 11685: 82 16 08                 s1 = u64 [sp + 0x8]
 11688: 95 11 20                 sp = sp + 0x20
 11691: 32 00                    ret
      :                          @809
 11693: 00                       trap
      :                          @810 [@dyn 189]
 11694: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 11697: 7b 10 18                 u64 [sp + 0x18] = ra
 11700: 7b 15 10                 u64 [sp + 0x10] = s0
 11703: 7b 16 08                 u64 [sp + 0x8] = s1
 11706: 57 0a 7d                 jump @820 if a3 <s 0
      :                          @811
 11709: 64 75                    s0 = a0
 11711: 51 0a 36                 jump @817 if a3 == 0
      :                          @812
 11714: 33 07 10 00 03           a0 = 0x30010
 11719: 33 02 20 00 03           t0 = 0x30020
 11724: 95 28 00 00 00 08        a1 = t0 + 0x8000000
 11730: 01                       fallthrough
      :                          @813
 11731: 82 8c                    a5 = u64 [a1]
 11733: c8 ac 06                 s1 = a5 + a3
 11736: ac c6 af f1              jump @508 if s1 <u a5
      :                          @814
 11740: 98 6b 1b                 a4 = s1 >> 0x1b
 11743: 52 0b a8 f1              jump @508 if a4 != 0
      :                          @815
 11747: 82 8b                    a4 = u64 [a1]
 11749: ab cb ee                 jump @813 if a4 != a5
      :                          @816
 11752: 7b 86                    u64 [a1] = s1
 11754: c9 62 06                 s1 = t0 - s1
 11757: 95 67 00 00 00 08        a0 = s1 + 0x8000000
 11763: 28 06                    jump @818
      :                          @817
 11765: 33 07 01                 a0 = 0x1
 11768: 01                       fallthrough
      :                          @818
 11769: 7b 17                    u64 [sp] = a0
 11771: 64 98                    a1 = a2
 11773: 64 a9                    a2 = a3
 11775: 64 a6                    s1 = a3
 11777: 50 20 7c 01 96 28        ra = 380, jump @1603
      :                          @819 [@dyn 190]
 11783: 98 67 11                 a0 = s1 >> 0x11
 11786: 98 68 0a                 a1 = s1 >> 0xa
 11789: 68 88                    a1 = clz a1
 11791: 97 88 02                 a1 = a1 << 0x2
 11794: 9a 89 01 01              a2 = 0x101 - a1
 11798: 33 08 1d                 a1 = 0x1d
 11801: da 79 08                 a1 = a2 if a0 == 0
 11804: 82 17                    a0 = u64 [sp]
 11806: 7b 57                    u64 [s0] = a0
 11808: 7b 56 08                 u64 [s0 + 0x8] = s1
 11811: 7b 56 10                 u64 [s0 + 0x10] = s1
 11814: 7b 58 18                 u64 [s0 + 0x18] = a1
 11817: 82 10 18                 ra = u64 [sp + 0x18]
 11820: 82 15 10                 s0 = u64 [sp + 0x10]
 11823: 82 16 08                 s1 = u64 [sp + 0x8]
 11826: 95 11 20                 sp = sp + 0x20
 11829: 32 00                    ret
      :                          @820
 11831: 00                       trap
      :                          @821
 11832: 7c bc                    a5 = u8 [a4]
 11834: c8 9c 0c                 a5 = a5 + a2
 11837: 7c cc                    a5 = u8 [a5]
 11839: 95 bb 01                 a4 = a4 + 0x1
 11842: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 11845: ab ac f3                 jump @821 if a5 != a3
      :                          @822
 11848: 33 0a 94 01              a3 = 0x194
 11852: c9 8a 09                 a2 = a3 - a1
 11855: ac 8a 17                 jump @824 if a3 <u a1
      :                          @823
 11858: 33 08 90 03 01           a1 = 0x10390
 11863: c8 98 08                 a1 = a1 + a2
 11866: 7c 88                    a1 = u8 [a1]
 11868: 7a 78 04                 u32 [a0 + 0x4] = a1
 11871: 7b 79 08                 u64 [a0 + 0x8] = a2
 11874: 48 07                    u32 [a0 + 0] = 0
 11876: 32 00                    ret
      :                          @824
 11878: 00                       trap
      :                          @825
 11879: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 11882: 7b 10 50                 u64 [sp + 0x50] = ra
 11885: 7b 15 48                 u64 [sp + 0x48] = s0
 11888: 7b 16 40                 u64 [sp + 0x40] = s1
 11891: 7b 18                    u64 [sp] = a1
 11893: 33 08 14                 a1 = 0x14
 11896: 33 05 1c 07 01           s0 = 0x1071c
 11901: 64 74                    t2 = a0
 11903: 7b 17 08                 u64 [sp + 0x8] = a0
 11906: 53 27 e8 03 8b 00        jump @828 if a0 <u 1000
      :                          @826
 11912: 33 00 14                 ra = 0x14
 11915: 14 07 4b 59 86 38 d6 c5 6d 34 a0 = 0x346dc5d63886594b
 11925: 7b 17 20                 u64 [sp + 0x20] = a0
 11928: 49 11 18 f0 d8 00        u64 [sp + 24] = 0xd8f0
 11934: 49 11 10 7b 14           u64 [sp + 16] = 0x147b
 11939: 33 06 7f 96 98 00        s1 = 0x98967f
 11945: 82 14 08                 t2 = u64 [sp + 0x8]
 11948: 01                       fallthrough
      :                          @827
 11949: 64 42                    t0 = t2
 11951: 82 17 20                 a0 = u64 [sp + 0x20]
 11954: d6 74 07                 a0 = t2 mulhu a0
 11957: 98 74 0b                 t2 = a0 >> 0xb
 11960: 82 17 18                 a0 = u64 [sp + 0x18]
 11963: ca 74 08                 a1 = t2 * a0
 11966: c8 28 0b                 a4 = a1 + t0
 11969: 97 b8 30                 a1 = a4 << 0x30
 11972: 98 88 32                 a1 = a1 >> 0x32
 11975: 82 17 10                 a0 = u64 [sp + 0x10]
 11978: ca 78 08                 a1 = a1 * a0
 11981: 98 83 10                 t1 = a1 >> 0x10
 11984: 98 88 11                 a1 = a1 >> 0x11
 11987: 96 88 9c                 a1 = a1 * 0xffffffffffffff9c
 11990: c8 b8 08                 a1 = a1 + a4
 11993: 84 3b fe 07              a4 = t1 & 0x7fe
 11997: 95 1a 3f                 a3 = sp + 0x3f
 12000: c8 0a 0a                 a3 = a3 + ra
 12003: c8 5b 0b                 a4 = a4 + s0
 12006: 7c b9                    a2 = u8 [a4]
 12008: 7c bb 01                 a4 = u8 [a4 + 0x1]
 12011: 97 88 31                 a1 = a1 << 0x31
 12014: 98 88 30                 a1 = a1 >> 0x30
 12017: c8 58 08                 a1 = a1 + s0
 12020: 7c 8c                    a5 = u8 [a1]
 12022: 78 a9 e9                 u8 [a3 + 0xffffffffffffffe9] = a2
 12025: 7c 89 01                 a2 = u8 [a1 + 0x1]
 12028: 78 ab ea                 u8 [a3 + 0xffffffffffffffea] = a4
 12031: 78 ac eb                 u8 [a3 + 0xffffffffffffffeb] = a5
 12034: 95 08 fc                 a1 = ra + 0xfffffffffffffffc
 12037: 78 a9 ec                 u8 [a3 + 0xffffffffffffffec] = a2
 12040: 64 80                    ra = a1
 12042: ac 26 a3                 jump @827 if s1 <u t0
      :                          @828
 12045: 54 14 09 39              jump @830 if t2 <=u 9
      :                          @829
 12049: 97 49 30                 a2 = t2 << 0x30
 12052: 98 99 32                 a2 = a2 >> 0x32
 12055: 96 99 7b 14              a2 = a2 * 0x147b
 12059: 98 99 11                 a2 = a2 >> 0x11
 12062: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
 12065: c8 4a 07                 a0 = a3 + t2
 12068: 97 77 31                 a0 = a0 << 0x31
 12071: 98 77 30                 a0 = a0 >> 0x30
 12074: 95 1a 2c                 a3 = sp + 0x2c
 12077: c8 57 07                 a0 = a0 + s0
 12080: 7c 7b                    a4 = u8 [a0]
 12082: c8 8a 0c                 a5 = a3 + a1
 12085: 7c 77 01                 a0 = u8 [a0 + 0x1]
 12088: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 12091: c8 8a 0a                 a3 = a3 + a1
 12094: 78 ab                    u8 [a3] = a4
 12096: 78 c7 ff                 u8 [a5 + 0xffffffffffffffff] = a0
 12099: 64 94                    t2 = a2
 12101: 01                       fallthrough
      :                          @830
 12102: 82 17 08                 a0 = u64 [sp + 0x8]
 12105: 51 07 06                 jump @832 if a0 == 0
      :                          @831
 12108: 51 04 1b                 jump @833 if t2 == 0
      :                          @832
 12111: 97 47 01                 a0 = t2 << 0x1
 12114: 84 77 1e                 a0 = a0 & 0x1e
 12117: c8 57 07                 a0 = a0 + s0
 12120: 7c 77 01                 a0 = u8 [a0 + 0x1]
 12123: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 12126: 95 19 2c                 a2 = sp + 0x2c
 12129: c8 89 09                 a2 = a2 + a1
 12132: 78 97                    u8 [a2] = a0
 12134: 01                       fallthrough
      :                          @833
 12135: 9a 8b 14                 a4 = 0x14 - a1
 12138: 95 1a 2c                 a3 = sp + 0x2c
 12141: c8 8a 0a                 a3 = a3 + a1
 12144: 33 08 01                 a1 = 0x1
 12147: 82 17                    a0 = u64 [sp]
 12149: 33 09                    a2 = 0
 12151: 50 20 7e 01 13           ra = 382, jump @835
      :                          @834 [@dyn 191]
 12156: 82 10 50                 ra = u64 [sp + 0x50]
 12159: 82 15 48                 s0 = u64 [sp + 0x48]
 12162: 82 16 40                 s1 = u64 [sp + 0x40]
 12165: 95 11 58                 sp = sp + 0x58
 12168: 32 00                    ret
      :                          @835
 12170: 95 11 98                 sp = sp + 0xffffffffffffff98
 12173: 7b 10 60                 u64 [sp + 0x60] = ra
 12176: 7b 15 58                 u64 [sp + 0x58] = s0
 12179: 7b 16 50                 u64 [sp + 0x50] = s1
 12182: 80 73 24                 t1 = u32 [a0 + 0x24]
 12185: 64 9c                    a5 = a2
 12187: 7b 18 48                 u64 [sp + 0x48] = a1
 12190: 84 38 01                 a1 = t1 & 0x1
 12193: 33 02 2b                 t0 = 0x2b
 12196: 33 09 00 00 11           a2 = 0x110000
 12201: 84 36 04                 s1 = t1 & 0x4
 12204: c8 b8 00                 ra = a1 + a4
 12207: 52 06 08                 jump @837 if s1 != 0
      :                          @836
 12210: 49 11 48                 u64 [sp + 72] = 0
 12213: 28 35                    jump @843
      :                          @837
 12215: 51 0c 23                 jump @841 if a5 == 0
      :                          @838
 12218: 33 06                    s1 = 0
 12220: 64 c4                    t2 = a5
 12222: 82 19 48                 a2 = u64 [sp + 0x48]
 12225: c8 c9 05                 s0 = a2 + a5
 12228: 64 9c                    a5 = a2
 12230: 01                       fallthrough
      :                          @839
 12231: 7d c9                    a2 = i8 [a5]
 12233: 89 99 c0                 a2 = a2 <s 0xffffffffffffffc0
 12236: 85 99 01                 a2 = a2 ^ 0x1
 12239: 95 cc 01                 a5 = a5 + 0x1
 12242: c8 96 06                 s1 = s1 + a2
 12245: ab 5c f2                 jump @839 if a5 != s0
      :                          @840
 12248: 28 07                    jump @842
      :                          @841
 12250: 64 c4                    t2 = a5
 12252: 33 06                    s1 = 0
 12254: 01                       fallthrough
      :                          @842
 12255: c8 60 00                 ra = ra + s1
 12258: 64 4c                    a5 = t2
 12260: 33 09 00 00 11           a2 = 0x110000
 12265: 01                       fallthrough
      :                          @843
 12266: 82 76                    s1 = u64 [a0]
 12268: db 82 09                 a2 = t0 if a1 != 0
 12271: 7b 1b 30                 u64 [sp + 0x30] = a4
 12274: 7b 1a 28                 u64 [sp + 0x28] = a3
 12277: 51 06 35                 jump @849 if s1 == 0
      :                          @844
 12280: 82 75 08                 s0 = u64 [a0 + 0x8]
 12283: ae 50 2f                 jump @849 if ra >=u s0
      :                          @845
 12286: 84 38 08                 a1 = t1 & 0x8
 12289: 52 08 5e                 jump @852 if a1 != 0
      :                          @846
 12292: 7c 76 28                 s1 = u8 [a0 + 0x28]
 12295: 95 68 fd                 a1 = s1 + 0xfffffffffffffffd
 12298: 33 02 01                 t0 = 0x1
 12301: da 82 06                 s1 = t0 if a1 == 0
 12304: c9 05 08                 a1 = s0 - ra
 12307: 7b 1c 20                 u64 [sp + 0x20] = a5
 12310: 7b 19 18                 u64 [sp + 0x18] = a2
 12313: 51 06 ae 00              jump @860 if s1 == 0
      :                          @847
 12317: 52 16 01 9c 00           jump @859 if s1 != 1
      :                          @848
 12322: 64 86                    s1 = a1
 12324: 49 11 10                 u64 [sp + 16] = 0
 12327: 28 a4 00                 jump @861
      :                          @849
 12330: 82 75 30                 s0 = u64 [a0 + 0x30]
 12333: 82 76 38                 s1 = u64 [a0 + 0x38]
 12336: 64 57                    a0 = s0
 12338: 64 68                    a1 = s1
 12340: 82 1a 48                 a3 = u64 [sp + 0x48]
 12343: 64 cb                    a4 = a5
 12345: 50 20 80 01 6e 01        ra = 384, jump @881
      :                          @850 [@dyn 192]
 12351: 33 08 01                 a1 = 0x1
 12354: 52 07 b7 00              jump @866 if a0 != 0
      :                          @851
 12358: 82 6c 18                 a5 = u64 [s1 + 0x18]
 12361: 64 57                    a0 = s0
 12363: 82 18 28                 a1 = u64 [sp + 0x28]
 12366: 82 19 30                 a2 = u64 [sp + 0x30]
 12369: 82 10 60                 ra = u64 [sp + 0x60]
 12372: 82 15 58                 s0 = u64 [sp + 0x58]
 12375: 82 16 50                 s1 = u64 [sp + 0x50]
 12378: 95 11 68                 sp = sp + 0x68
 12381: 32 0c                    jump [a5]
      :                          @852
 12383: 7b 15 38                 u64 [sp + 0x38] = s0
 12386: 64 05                    s0 = ra
 12388: 81 78 20                 a1 = i32 [a0 + 0x20]
 12391: 7b 18 10                 u64 [sp + 0x10] = a1
 12394: 7c 7a 28                 a3 = u8 [a0 + 0x28]
 12397: 7b 1a 08                 u64 [sp + 0x8] = a3
 12400: 82 7a 30                 a3 = u64 [a0 + 0x30]
 12403: 82 78 38                 a1 = u64 [a0 + 0x38]
 12406: 48 17 20 30              u32 [a0 + 32] = 0x30
 12410: 7b 17                    u64 [sp] = a0
 12412: 46 17 28 01              u8 [a0 + 40] = 0x1
 12416: 7b 1a 40                 u64 [sp + 0x40] = a3
 12419: 64 a7                    a0 = a3
 12421: 64 86                    s1 = a1
 12423: 82 1a 48                 a3 = u64 [sp + 0x48]
 12426: 64 cb                    a4 = a5
 12428: 50 20 82 01 1b 01        ra = 386, jump @881
      :                          @853 [@dyn 193]
 12434: 52 07 63                 jump @865 if a0 != 0
      :                          @854
 12437: 82 17 38                 a0 = u64 [sp + 0x38]
 12440: c9 57 05                 s0 = a0 - s0
 12443: 95 55 01                 s0 = s0 + 0x1
 12446: 01                       fallthrough
      :                          @855
 12447: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 12450: 51 05 c5 00              jump @876 if s0 == 0
      :                          @856
 12454: 82 69 20                 a2 = u64 [s1 + 0x20]
 12457: 33 08 30                 a1 = 0x30
 12460: 82 17 40                 a0 = u64 [sp + 0x40]
 12463: b4 90 02 84 01           ra = 388, jump [a2]
      :                          @857 [@dyn 194]
 12468: 51 07 eb                 jump @855 if a0 == 0
      :                          @858
 12471: 28 3e                    jump @865
      :                          @859
 12473: 98 86 01                 s1 = a1 >> 0x1
 12476: 95 88 01                 a1 = a1 + 0x1
 12479: 98 88 01                 a1 = a1 >> 0x1
 12482: 7b 18 10                 u64 [sp + 0x10] = a1
 12485: 28 06                    jump @861
      :                          @860
 12487: 7b 18 10                 u64 [sp + 0x10] = a1
 12490: 01                       fallthrough
      :                          @861
 12491: 82 78 30                 a1 = u64 [a0 + 0x30]
 12494: 7b 18 40                 u64 [sp + 0x40] = a1
 12497: 82 75 38                 s0 = u64 [a0 + 0x38]
 12500: 81 77 20                 a0 = i32 [a0 + 0x20]
 12503: 7b 17 38                 u64 [sp + 0x38] = a0
 12506: 95 66 01                 s1 = s1 + 0x1
 12509: 01                       fallthrough
      :                          @862
 12510: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 12513: 51 06 28                 jump @867 if s1 == 0
      :                          @863
 12516: 82 59 20                 a2 = u64 [s0 + 0x20]
 12519: 82 17 40                 a0 = u64 [sp + 0x40]
 12522: 82 18 38                 a1 = u64 [sp + 0x38]
 12525: b4 90 02 86 01           ra = 390, jump [a2]
      :                          @864 [@dyn 195]
 12530: 51 07 ec                 jump @862 if a0 == 0
      :                          @865
 12533: 33 08 01                 a1 = 0x1
 12536: 01                       fallthrough
      :                          @866
 12537: 64 87                    a0 = a1
 12539: 82 10 60                 ra = u64 [sp + 0x60]
 12542: 82 15 58                 s0 = u64 [sp + 0x58]
 12545: 82 16 50                 s1 = u64 [sp + 0x50]
 12548: 95 11 68                 sp = sp + 0x68
 12551: 32 00                    ret
      :                          @867
 12553: 82 16 40                 s1 = u64 [sp + 0x40]
 12556: 64 67                    a0 = s1
 12558: 64 58                    a1 = s0
 12560: 82 19 18                 a2 = u64 [sp + 0x18]
 12563: 82 1a 48                 a3 = u64 [sp + 0x48]
 12566: 82 1b 20                 a4 = u64 [sp + 0x20]
 12569: 50 20 88 01 8e 00        ra = 392, jump @881
      :                          @868 [@dyn 196]
 12575: 33 08 01                 a1 = 0x1
 12578: 52 07 d7                 jump @866 if a0 != 0
      :                          @869
 12581: 82 5a 18                 a3 = u64 [s0 + 0x18]
 12584: 64 67                    a0 = s1
 12586: 82 18 28                 a1 = u64 [sp + 0x28]
 12589: 82 19 30                 a2 = u64 [sp + 0x30]
 12592: b4 a0 02 8a 01           ra = 394, jump [a3]
      :                          @870 [@dyn 197]
 12597: 33 08 01                 a1 = 0x1
 12600: 52 07 c1                 jump @866 if a0 != 0
      :                          @871
 12603: 82 17 10                 a0 = u64 [sp + 0x10]
 12606: 9a 77                    a0 = -a0
 12608: 7b 17 48                 u64 [sp + 0x48] = a0
 12611: 33 06 ff                 s1 = 0xffffffffffffffff
 12614: 01                       fallthrough
      :                          @872
 12615: 82 17 48                 a0 = u64 [sp + 0x48]
 12618: c8 67 07                 a0 = a0 + s1
 12621: 51 17 ff 45              jump @879 if a0 == 4294967295
      :                          @873
 12625: 82 59 20                 a2 = u64 [s0 + 0x20]
 12628: 82 17 40                 a0 = u64 [sp + 0x40]
 12631: 82 18 38                 a1 = u64 [sp + 0x38]
 12634: b4 90 02 8c 01           ra = 396, jump [a2]
      :                          @874 [@dyn 198]
 12639: 95 66 01                 s1 = s1 + 0x1
 12642: 51 07 e5                 jump @872 if a0 == 0
      :                          @875
 12645: 28 39                    jump @880
      :                          @876
 12647: 82 6a 18                 a3 = u64 [s1 + 0x18]
 12650: 82 17 40                 a0 = u64 [sp + 0x40]
 12653: 82 18 28                 a1 = u64 [sp + 0x28]
 12656: 82 19 30                 a2 = u64 [sp + 0x30]
 12659: b4 a0 02 8e 01           ra = 398, jump [a3]
      :                          @877 [@dyn 199]
 12664: 33 08 01                 a1 = 0x1
 12667: 52 07 7e ff              jump @866 if a0 != 0
      :                          @878
 12671: 33 08                    a1 = 0
 12673: 82 16                    s1 = u64 [sp]
 12675: 82 17 10                 a0 = u64 [sp + 0x10]
 12678: 7a 67 20                 u32 [s1 + 0x20] = a0
 12681: 82 17 08                 a0 = u64 [sp + 0x8]
 12684: 78 67 28                 u8 [s1 + 0x28] = a0
 12687: 28 6a ff                 jump @866
      :                          @879
 12690: 82 16 10                 s1 = u64 [sp + 0x10]
 12693: 82 17 10                 a0 = u64 [sp + 0x10]
 12696: d8 76 08                 a1 = s1 <u a0
 12699: 28 5e ff                 jump @866
      :                          @880
 12702: 82 17 10                 a0 = u64 [sp + 0x10]
 12705: d8 76 08                 a1 = s1 <u a0
 12708: 28 55 ff                 jump @866
      :                          @881
 12711: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 12714: 7b 10 20                 u64 [sp + 0x20] = ra
 12717: 7b 15 18                 u64 [sp + 0x18] = s0
 12720: 7b 16 10                 u64 [sp + 0x10] = s1
 12723: 64 a6                    s1 = a3
 12725: 64 7c                    a5 = a0
 12727: 51 39 00 00 11 28        jump @884 if a2 == 1114112
      :                          @882
 12733: 64 85                    s0 = a1
 12735: 82 8a 20                 a3 = u64 [a1 + 0x20]
 12738: 64 c7                    a0 = a5
 12740: 64 98                    a1 = a2
 12742: 7b 1b 08                 u64 [sp + 0x8] = a4
 12745: 7b 1c                    u64 [sp] = a5
 12747: b4 a0 02 90 01           ra = 400, jump [a3]
      :                          @883 [@dyn 200]
 12752: 82 1c                    a5 = u64 [sp]
 12754: 64 58                    a1 = s0
 12756: 82 1b 08                 a4 = u64 [sp + 0x8]
 12759: 64 79                    a2 = a0
 12761: 33 07 01                 a0 = 0x1
 12764: 52 09 20                 jump @887 if a2 != 0
      :                          @884
 12767: 51 06 1a                 jump @886 if s1 == 0
      :                          @885
 12770: 82 8a 18                 a3 = u64 [a1 + 0x18]
 12773: 64 c7                    a0 = a5
 12775: 64 68                    a1 = s1
 12777: 64 b9                    a2 = a4
 12779: 82 10 20                 ra = u64 [sp + 0x20]
 12782: 82 15 18                 s0 = u64 [sp + 0x18]
 12785: 82 16 10                 s1 = u64 [sp + 0x10]
 12788: 95 11 28                 sp = sp + 0x28
 12791: 32 0a                    jump [a3]
      :                          @886
 12793: 33 07                    a0 = 0
 12795: 01                       fallthrough
      :                          @887
 12796: 82 10 20                 ra = u64 [sp + 0x20]
 12799: 82 15 18                 s0 = u64 [sp + 0x18]
 12802: 82 16 10                 s1 = u64 [sp + 0x10]
 12805: 95 11 28                 sp = sp + 0x28
 12808: 32 00                    ret
      :                          @888
 12810: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 12813: 7b 10 50                 u64 [sp + 0x50] = ra
 12816: 7b 15 48                 u64 [sp + 0x48] = s0
 12819: 7b 16 40                 u64 [sp + 0x40] = s1
 12822: 64 73                    t1 = a0
 12824: 82 7a                    a3 = u64 [a0]
 12826: 82 7b 10                 a4 = u64 [a0 + 0x10]
 12829: d4 ba 0c                 a5 = a3 | a4
 12832: 64 86                    s1 = a1
 12834: 51 0c 1e 03              jump @952 if a5 == 0
      :                          @889
 12838: 84 bb 01                 a4 = a4 & 0x1
 12841: 51 0b 8f 00              jump @909 if a4 == 0
      :                          @890
 12845: 64 30                    ra = t1
 12847: 82 3b 18                 a4 = u64 [t1 + 0x18]
 12850: 64 94                    t2 = a2
 12852: c8 69 09                 a2 = a2 + s1
 12855: 33 08                    a1 = 0
 12857: 51 0b 46                 jump @901 if a4 == 0
      :                          @891
 12860: 33 0c                    a5 = 0
 12862: 33 03 e0 00              t1 = 0xe0
 12866: 33 02 f0 00              t0 = 0xf0
 12870: 64 67                    a0 = s1
 12872: 64 65                    s0 = s1
 12874: 28 14                    jump @894
      :                          @892
 12876: 95 56 01                 s1 = s0 + 0x1
 12879: 01                       fallthrough
      :                          @893
 12880: 95 cc 01                 a5 = a5 + 0x1
 12883: c9 85 05                 s0 = s0 - a1
 12886: c9 56 08                 a1 = s1 - s0
 12889: 64 65                    s0 = s1
 12891: aa cb 27                 jump @902 if a4 == a5
      :                          @894
 12894: aa 95 53                 jump @908 if s0 == a2
      :                          @895
 12897: 7d 56                    s1 = i8 [s0]
 12899: 59 06 e9                 jump @892 if s1 >=s 0
      :                          @896
 12902: 84 66 ff 00              s1 = s1 & 0xff
 12906: ac 36 0b                 jump @899 if s1 <u t1
      :                          @897
 12909: ac 26 0d                 jump @900 if s1 <u t0
      :                          @898
 12912: 95 56 04                 s1 = s0 + 0x4
 12915: 28 dd                    jump @893
      :                          @899
 12917: 95 56 02                 s1 = s0 + 0x2
 12920: 28 d8                    jump @893
      :                          @900
 12922: 95 56 03                 s1 = s0 + 0x3
 12925: 28 d3                    jump @893
      :                          @901
 12927: 64 67                    a0 = s1
 12929: 01                       fallthrough
      :                          @902
 12930: aa 96 2f                 jump @908 if s1 == a2
      :                          @903
 12933: 7d 6b                    a4 = i8 [s1]
 12935: 64 49                    a2 = t2
 12937: 64 76                    s1 = a0
 12939: 64 03                    t1 = ra
 12941: 59 0b 08                 jump @905 if a4 >=s 0
      :                          @904
 12944: 33 0b e0 00              a4 = 0xe0
 12948: 01                       fallthrough
      :                          @905
 12949: 64 67                    a0 = s1
 12951: 51 08 9f 02              jump @951 if a1 == 0
      :                          @906
 12955: ae 98 90 02              jump @950 if a1 >=u a2
      :                          @907
 12959: c8 86 07                 a0 = s1 + a1
 12962: 7d 77                    a0 = i8 [a0]
 12964: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 12967: 85 7b 01                 a4 = a0 ^ 0x1
 12970: 64 67                    a0 = s1
 12972: 93 b7                    a0 = 0 if a4 == 0
 12974: 28 88 02                 jump @951
      :                          @908
 12977: 64 49                    a2 = t2
 12979: 64 76                    s1 = a0
 12981: 64 03                    t1 = ra
 12983: 01                       fallthrough
      :                          @909
 12984: 51 0a 88 02              jump @952 if a3 == 0
      :                          @910
 12988: 82 3b 08                 a4 = u64 [t1 + 0x8]
 12991: 7b 19 18                 u64 [sp + 0x18] = a2
 12994: 7b 16 10                 u64 [sp + 0x10] = s1
 12997: 55 19 20 27              jump @916 if a2 >=u 32
      :                          @911
 13001: 33 02                    t0 = 0
 13003: 51 09 1a                 jump @914 if a2 == 0
      :                          @912
 13006: c8 96 08                 a1 = s1 + a2
 13009: 64 6a                    a3 = s1
 13011: 01                       fallthrough
      :                          @913
 13012: 7d a7                    a0 = i8 [a3]
 13014: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 13017: 85 77 01                 a0 = a0 ^ 0x1
 13020: 95 aa 01                 a3 = a3 + 0x1
 13023: c8 72 02                 t0 = t0 + a0
 13026: ab 8a f2                 jump @913 if a3 != a1
      :                          @914
 13029: ac b2 a4 01              jump @933 if t0 <u a4
      :                          @915
 13033: 28 57 02                 jump @952
      :                          @916
 13036: 7b 1b                    u64 [sp] = a4
 13038: 64 6a                    a3 = s1
 13040: 95 65 07                 s0 = s1 + 0x7
 13043: 84 55 f8                 s0 = s0 & 0xfffffffffffffff8
 13046: c8 96 06                 s1 = s1 + a2
 13049: c9 56 06                 s1 = s1 - s0
 13052: 84 68 07                 a1 = s1 & 0x7
 13055: 33 09                    a2 = 0
 13057: aa a5 14                 jump @918 if s0 == a3
      :                          @917
 13060: 7d ab                    a4 = i8 [a3]
 13062: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 13065: 85 bb 01                 a4 = a4 ^ 0x1
 13068: 95 aa 01                 a3 = a3 + 0x1
 13071: c8 b9 09                 a2 = a2 + a4
 13074: ab 5a f2                 jump @917 if a3 != s0
      :                          @918
 13077: 7b 13 08                 u64 [sp + 0x8] = t1
 13080: 33 0c                    a5 = 0
 13082: 51 08 21                 jump @921 if a1 == 0
      :                          @919
 13085: 84 6b f8                 a4 = s1 & 0xfffffffffffffff8
 13088: c8 b5 0a                 a3 = s0 + a4
 13091: c8 5b 0b                 a4 = a4 + s0
 13094: c8 b8 08                 a1 = a1 + a4
 13097: 01                       fallthrough
      :                          @920
 13098: 7d ab                    a4 = i8 [a3]
 13100: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 13103: 85 bb 01                 a4 = a4 ^ 0x1
 13106: 95 aa 01                 a3 = a3 + 0x1
 13109: c8 bc 0c                 a5 = a5 + a4
 13112: ab 8a f2                 jump @920 if a3 != a1
      :                          @921
 13115: 98 63 03                 t1 = s1 >> 0x3
 13118: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 13128: 14 08 ff 00 ff 00 ff 00 ff 00 a1 = 0xff00ff00ff00ff
 13138: 7b 18 28                 u64 [sp + 0x28] = a1
 13141: 14 00 00 00 00 00 01 00 01 00 ra = 0x1000100000000
 13151: 14 08 01 00 01 00 01 00 01 00 a1 = 0x1000100010001
 13161: 7b 18 20                 u64 [sp + 0x20] = a1
 13164: c8 9c 02                 t0 = a5 + a2
 13167: 28 30                    jump @923
      :                          @922
 13169: 82 15 30                 s0 = u64 [sp + 0x30]
 13172: c8 95 05                 s0 = s0 + a2
 13175: 82 16 38                 s1 = u64 [sp + 0x38]
 13178: c9 63 03                 t1 = t1 - s1
 13181: 84 6c 03                 a5 = s1 & 0x3
 13184: 82 1b 28                 a4 = u64 [sp + 0x28]
 13187: d2 b4 07                 a0 = t2 & a4
 13190: 98 48 08                 a1 = t2 >> 0x8
 13193: d2 b8 08                 a1 = a1 & a4
 13196: c8 87 07                 a0 = a0 + a1
 13199: 82 18 20                 a1 = u64 [sp + 0x20]
 13202: ca 87 07                 a0 = a0 * a1
 13205: 98 77 30                 a0 = a0 >> 0x30
 13208: c8 72 02                 t0 = t0 + a0
 13211: 52 0c 97 00              jump @930 if a5 != 0
      :                          @923
 13215: 51 03 82 00              jump @928 if t1 == 0
      :                          @924
 13219: 64 59                    a2 = s0
 13221: 33 07 c0 00              a0 = 0xc0
 13225: e6 73 07                 a0 = minu(t1, a0)
 13228: 7b 17 38                 u64 [sp + 0x38] = a0
 13231: 97 78 03                 a1 = a0 << 0x3
 13234: 7b 18 30                 u64 [sp + 0x30] = a1
 13237: 33 04                    t2 = 0
 13239: 53 13 04 ba              jump @922 if t1 <u 4
      :                          @925
 13243: 84 85 e0 07              s0 = a1 & 0x7e0
 13247: c8 95 05                 s0 = s0 + a2
 13250: 64 98                    a1 = a2
 13252: 01                       fallthrough
      :                          @926
 13253: 82 80                    ra = u64 [a1]
 13255: 85 07 ff                 a0 = ra ^ 0xffffffffffffffff
 13258: 98 77 07                 a0 = a0 >> 0x7
 13261: 98 0b 06                 a4 = ra >> 0x6
 13264: 82 8c 08                 a5 = u64 [a1 + 0x8]
 13267: d4 b7 07                 a0 = a0 | a4
 13270: d2 a7 07                 a0 = a0 & a3
 13273: c8 47 07                 a0 = a0 + t2
 13276: 85 cb ff                 a4 = a5 ^ 0xffffffffffffffff
 13279: 98 bb 07                 a4 = a4 >> 0x7
 13282: 82 86 10                 s1 = u64 [a1 + 0x10]
 13285: 98 cc 06                 a5 = a5 >> 0x6
 13288: d4 cb 0b                 a4 = a4 | a5
 13291: d2 ab 0b                 a4 = a4 & a3
 13294: 85 6c ff                 a5 = s1 ^ 0xffffffffffffffff
 13297: 98 cc 07                 a5 = a5 >> 0x7
 13300: 98 66 06                 s1 = s1 >> 0x6
 13303: d4 6c 0c                 a5 = a5 | s1
 13306: 82 86 18                 s1 = u64 [a1 + 0x18]
 13309: d2 ac 0c                 a5 = a5 & a3
 13312: c8 cb 0b                 a4 = a4 + a5
 13315: c8 b7 07                 a0 = a0 + a4
 13318: 85 6b ff                 a4 = s1 ^ 0xffffffffffffffff
 13321: 98 bb 07                 a4 = a4 >> 0x7
 13324: 98 66 06                 s1 = s1 >> 0x6
 13327: d4 6b 0b                 a4 = a4 | s1
 13330: d2 ab 0b                 a4 = a4 & a3
 13333: 95 88 20                 a1 = a1 + 0x20
 13336: c8 7b 04                 t2 = a4 + a0
 13339: ab 58 aa                 jump @926 if a1 != s0
      :                          @927
 13342: 28 53 ff                 jump @922
      :                          @928
 13345: 82 19 18                 a2 = u64 [sp + 0x18]
 13348: 82 16 10                 s1 = u64 [sp + 0x10]
 13351: 82 13 08                 t1 = u64 [sp + 0x8]
 13354: 82 1b                    a4 = u64 [sp]
 13356: ac b2 5d                 jump @933 if t0 <u a4
      :                          @929
 13359: 28 11 01                 jump @952
      :                          @930
 13362: 33 08                    a1 = 0
 13364: 84 67 fc 00              a0 = s1 & 0xfc
 13368: 97 77 03                 a0 = a0 << 0x3
 13371: c8 79 03                 t1 = a2 + a0
 13374: 97 cc 03                 a5 = a5 << 0x3
 13377: 82 19 18                 a2 = u64 [sp + 0x18]
 13380: 82 16 10                 s1 = u64 [sp + 0x10]
 13383: 01                       fallthrough
      :                          @931
 13384: 82 37                    a0 = u64 [t1]
 13386: 95 33 08                 t1 = t1 + 0x8
 13389: 85 7b ff                 a4 = a0 ^ 0xffffffffffffffff
 13392: 98 bb 07                 a4 = a4 >> 0x7
 13395: 98 77 06                 a0 = a0 >> 0x6
 13398: d4 b7 07                 a0 = a0 | a4
 13401: d2 a7 07                 a0 = a0 & a3
 13404: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 13407: c8 78 08                 a1 = a1 + a0
 13410: 52 0c e6                 jump @931 if a5 != 0
      :                          @932
 13413: 82 1a 28                 a3 = u64 [sp + 0x28]
 13416: d2 a8 07                 a0 = a1 & a3
 13419: 98 88 08                 a1 = a1 >> 0x8
 13422: d2 a8 08                 a1 = a1 & a3
 13425: c8 87 07                 a0 = a0 + a1
 13428: 82 18 20                 a1 = u64 [sp + 0x20]
 13431: ca 87 07                 a0 = a0 * a1
 13434: 98 77 30                 a0 = a0 >> 0x30
 13437: c8 72 02                 t0 = t0 + a0
 13440: 82 13 08                 t1 = u64 [sp + 0x8]
 13443: 82 1b                    a4 = u64 [sp]
 13445: ae b2 bb 00              jump @952 if t0 >=u a4
      :                          @933
 13449: 7c 38 28                 a1 = u8 [t1 + 0x28]
 13452: 95 87 fd                 a0 = a1 + 0xfffffffffffffffd
 13455: 93 78                    a1 = 0 if a0 == 0
 13457: c9 2b 0a                 a3 = a4 - t0
 13460: 51 08 0e                 jump @936 if a1 == 0
      :                          @934
 13463: 52 18 01 10              jump @937 if a1 != 1
      :                          @935
 13467: 64 a8                    a1 = a3
 13469: 49 11 20                 u64 [sp + 32] = 0
 13472: 28 14                    jump @938
      :                          @936
 13474: 7b 1a 20                 u64 [sp + 0x20] = a3
 13477: 28 0f                    jump @938
      :                          @937
 13479: 98 a8 01                 a1 = a3 >> 0x1
 13482: 95 a7 01                 a0 = a3 + 0x1
 13485: 98 77 01                 a0 = a0 >> 0x1
 13488: 7b 17 20                 u64 [sp + 0x20] = a0
 13491: 01                       fallthrough
      :                          @938
 13492: 82 37 30                 a0 = u64 [t1 + 0x30]
 13495: 7b 17 38                 u64 [sp + 0x38] = a0
 13498: 82 35 38                 s0 = u64 [t1 + 0x38]
 13501: 81 37 20                 a0 = i32 [t1 + 0x20]
 13504: 7b 17 30                 u64 [sp + 0x30] = a0
 13507: 95 86 01                 s1 = a1 + 0x1
 13510: 01                       fallthrough
      :                          @939
 13511: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 13514: 51 06 1a                 jump @943 if s1 == 0
      :                          @940
 13517: 82 59 20                 a2 = u64 [s0 + 0x20]
 13520: 82 17 38                 a0 = u64 [sp + 0x38]
 13523: 82 18 30                 a1 = u64 [sp + 0x30]
 13526: b4 90 02 92 01           ra = 402, jump [a2]
      :                          @941 [@dyn 201]
 13531: 51 07 ec                 jump @939 if a0 == 0
      :                          @942
 13534: 33 07 01                 a0 = 0x1
 13537: 28 8a 00                 jump @955
      :                          @943
 13540: 82 5a 18                 a3 = u64 [s0 + 0x18]
 13543: 82 17 38                 a0 = u64 [sp + 0x38]
 13546: 82 18 10                 a1 = u64 [sp + 0x10]
 13549: 82 19 18                 a2 = u64 [sp + 0x18]
 13552: b4 a0 02 94 01           ra = 404, jump [a3]
      :                          @944 [@dyn 202]
 13557: 64 78                    a1 = a0
 13559: 33 07 01                 a0 = 0x1
 13562: 52 08 71                 jump @955 if a1 != 0
      :                          @945
 13565: 82 17 20                 a0 = u64 [sp + 0x20]
 13568: 9a 77                    a0 = -a0
 13570: 7b 17 28                 u64 [sp + 0x28] = a0
 13573: 33 06 ff                 s1 = 0xffffffffffffffff
 13576: 01                       fallthrough
      :                          @946
 13577: 82 17 28                 a0 = u64 [sp + 0x28]
 13580: c8 67 07                 a0 = a0 + s1
 13583: 33 08 ff                 a1 = 0xffffffffffffffff
 13586: aa 87 47                 jump @953 if a0 == a1
      :                          @947
 13589: 82 59 20                 a2 = u64 [s0 + 0x20]
 13592: 82 17 38                 a0 = u64 [sp + 0x38]
 13595: 82 18 30                 a1 = u64 [sp + 0x30]
 13598: b4 90 02 96 01           ra = 406, jump [a2]
      :                          @948 [@dyn 203]
 13603: 95 66 01                 s1 = s1 + 0x1
 13606: 51 07 e3                 jump @946 if a0 == 0
      :                          @949
 13609: 28 3b                    jump @954
      :                          @950
 13611: d3 98 07                 a0 = a1 ^ a2
 13614: 88 7b 01                 a4 = a0 <u 0x1
 13617: 64 67                    a0 = s1
 13619: 93 b7                    a0 = 0 if a4 == 0
 13621: 01                       fallthrough
      :                          @951
 13622: db 78 09                 a2 = a1 if a0 != 0
 13625: db 77 06                 s1 = a0 if a0 != 0
 13628: 52 0a 80 fd              jump @910 if a3 != 0
      :                          @952
 13632: 82 38 38                 a1 = u64 [t1 + 0x38]
 13635: 82 37 30                 a0 = u64 [t1 + 0x30]
 13638: 82 8c 18                 a5 = u64 [a1 + 0x18]
 13641: 64 68                    a1 = s1
 13643: 82 10 50                 ra = u64 [sp + 0x50]
 13646: 82 15 48                 s0 = u64 [sp + 0x48]
 13649: 82 16 40                 s1 = u64 [sp + 0x40]
 13652: 95 11 58                 sp = sp + 0x58
 13655: 32 0c                    jump [a5]
      :                          @953
 13657: 82 16 20                 s1 = u64 [sp + 0x20]
 13660: 82 17 20                 a0 = u64 [sp + 0x20]
 13663: d8 76 07                 a0 = s1 <u a0
 13666: 28 09                    jump @955
      :                          @954
 13668: 82 17 20                 a0 = u64 [sp + 0x20]
 13671: d8 76 07                 a0 = s1 <u a0
 13674: 01                       fallthrough
      :                          @955
 13675: 82 10 50                 ra = u64 [sp + 0x50]
 13678: 82 15 48                 s0 = u64 [sp + 0x48]
 13681: 82 16 40                 s1 = u64 [sp + 0x40]
 13684: 95 11 58                 sp = sp + 0x58
 13687: 32 00                    ret
      :                          @956 [@dyn 204]
 13689: 82 79 08                 a2 = u64 [a0 + 0x8]
 13692: 82 77                    a0 = u64 [a0]
 13694: 82 9c 18                 a5 = u64 [a2 + 0x18]
 13697: 32 0c                    jump [a5]
      :                          @957
 13699: 95 11 80                 sp = sp + 0xffffffffffffff80
 13702: 7b 10 78                 u64 [sp + 0x78] = ra
 13705: 7b 15 70                 u64 [sp + 0x70] = s0
 13708: 7b 16 68                 u64 [sp + 0x68] = s1
 13711: 49 11 48 20              u64 [sp + 72] = 0x20
 13715: 33 0a 03                 a3 = 0x3
 13718: 78 1a 50                 u8 [sp + 0x50] = a3
 13721: 82 96 20                 s1 = u64 [a2 + 0x20]
 13724: 49 11 28                 u64 [sp + 40] = 0
 13727: 49 11 38                 u64 [sp + 56] = 0
 13730: 7b 17 58                 u64 [sp + 0x58] = a0
 13733: 7b 18 60                 u64 [sp + 0x60] = a1
 13736: 51 06 f7 00              jump @979 if s1 == 0
      :                          @958
 13740: 82 97 28                 a0 = u64 [a2 + 0x28]
 13743: 51 07 5b 01              jump @989 if a0 == 0
      :                          @959
 13747: 82 95                    s0 = u64 [a2]
 13749: 7b 19 08                 u64 [sp + 0x8] = a2
 13752: 82 98 10                 a1 = u64 [a2 + 0x10]
 13755: 7b 18 10                 u64 [sp + 0x10] = a1
 13758: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 13761: 97 88 03                 a1 = a1 << 0x3
 13764: 98 88 03                 a1 = a1 >> 0x3
 13767: 95 88 01                 a1 = a1 + 0x1
 13770: 7b 18                    u64 [sp] = a1
 13772: 95 59 08                 a2 = s0 + 0x8
 13775: 97 78 03                 a1 = a0 << 0x3
 13778: 97 77 06                 a0 = a0 << 0x6
 13781: c9 87 05                 s0 = a0 - a1
 13784: 95 66 18                 s1 = s1 + 0x18
 13787: 01                       fallthrough
      :                          @960
 13788: 7b 19 20                 u64 [sp + 0x20] = a2
 13791: 82 99                    a2 = u64 [a2]
 13793: 51 09 1b                 jump @963 if a2 == 0
      :                          @961
 13796: 82 1a 60                 a3 = u64 [sp + 0x60]
 13799: 82 17 20                 a0 = u64 [sp + 0x20]
 13802: 82 78 f8                 a1 = u64 [a0 + 0xfffffffffffffff8]
 13805: 82 17 58                 a0 = u64 [sp + 0x58]
 13808: 82 aa 18                 a3 = u64 [a3 + 0x18]
 13811: b4 a0 02 9a 01           ra = 410, jump [a3]
      :                          @962 [@dyn 205]
 13816: 52 07 38 01              jump @992 if a0 != 0
      :                          @963
 13820: 7b 15 18                 u64 [sp + 0x18] = s0
 13823: 82 67 10                 a0 = u64 [s1 + 0x10]
 13826: 7b 17 48                 u64 [sp + 0x48] = a0
 13829: 7c 69 18                 a2 = u8 [s1 + 0x18]
 13832: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 13835: 82 67                    a0 = u64 [s1]
 13837: 78 19 50                 u8 [sp + 0x50] = a2
 13840: 51 08 21                 jump @968 if a1 == 0
      :                          @964
 13843: 52 18 01 12              jump @966 if a1 != 1
      :                          @965
 13847: 97 77 04                 a0 = a0 << 0x4
 13850: 82 18 10                 a1 = u64 [sp + 0x10]
 13853: c8 87 07                 a0 = a0 + a1
 13856: 82 78                    a1 = u64 [a0]
 13858: 51 08 07                 jump @967 if a1 == 0
      :                          @966
 13861: 33 08                    a1 = 0
 13863: 28 0e                    jump @969
      :                          @967
 13865: 82 77 08                 a0 = u64 [a0 + 0x8]
 13868: 33 08 01                 a1 = 0x1
 13871: 28 06                    jump @969
      :                          @968
 13873: 33 08 01                 a1 = 0x1
 13876: 01                       fallthrough
      :                          @969
 13877: 82 69 e8                 a2 = u64 [s1 + 0xffffffffffffffe8]
 13880: 7b 18 28                 u64 [sp + 0x28] = a1
 13883: 7b 17 30                 u64 [sp + 0x30] = a0
 13886: 51 19 02 19              jump @972 if a2 == 2
      :                          @970
 13890: 82 68 f0                 a1 = u64 [s1 + 0xfffffffffffffff0]
 13893: 52 19 01 1e              jump @974 if a2 != 1
      :                          @971
 13897: 97 87 04                 a0 = a1 << 0x4
 13900: 82 18 10                 a1 = u64 [sp + 0x10]
 13903: c8 87 07                 a0 = a0 + a1
 13906: 82 78                    a1 = u64 [a0]
 13908: 51 08 07                 jump @973 if a1 == 0
      :                          @972
 13911: 33 09                    a2 = 0
 13913: 28 0e                    jump @975
      :                          @973
 13915: 82 78 08                 a1 = u64 [a0 + 0x8]
 13918: 33 09 01                 a2 = 0x1
 13921: 28 06                    jump @975
      :                          @974
 13923: 33 09 01                 a2 = 0x1
 13926: 01                       fallthrough
      :                          @975
 13927: 82 67 08                 a0 = u64 [s1 + 0x8]
 13930: 97 77 04                 a0 = a0 << 0x4
 13933: 82 1a 10                 a3 = u64 [sp + 0x10]
 13936: c8 7a 0a                 a3 = a3 + a0
 13939: 82 a7                    a0 = u64 [a3]
 13941: 82 aa 08                 a3 = u64 [a3 + 0x8]
 13944: 7b 19 38                 u64 [sp + 0x38] = a2
 13947: 7b 18 40                 u64 [sp + 0x40] = a1
 13950: 95 18 28                 a1 = sp + 0x28
 13953: b4 a0 02 9c 01           ra = 412, jump [a3]
      :                          @976 [@dyn 206]
 13958: 82 15 18                 s0 = u64 [sp + 0x18]
 13961: 52 07 a7 00              jump @992 if a0 != 0
      :                          @977
 13965: 82 19 20                 a2 = u64 [sp + 0x20]
 13968: 95 99 10                 a2 = a2 + 0x10
 13971: 95 55 c8                 s0 = s0 + 0xffffffffffffffc8
 13974: 95 66 38                 s1 = s1 + 0x38
 13977: 52 05 43 ff              jump @960 if s0 != 0
      :                          @978
 13981: 28 60                    jump @987
      :                          @979
 13983: 82 97 18                 a0 = u64 [a2 + 0x18]
 13986: 51 07 68                 jump @989 if a0 == 0
      :                          @980
 13989: 82 95 10                 s0 = u64 [a2 + 0x10]
 13992: 97 78 04                 a1 = a0 << 0x4
 13995: c8 58 08                 a1 = a1 + s0
 13998: 7b 18 20                 u64 [sp + 0x20] = a1
 14001: 7b 19 08                 u64 [sp + 0x8] = a2
 14004: 82 96                    s1 = u64 [a2]
 14006: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 14009: 97 77 04                 a0 = a0 << 0x4
 14012: 98 77 04                 a0 = a0 >> 0x4
 14015: 95 77 01                 a0 = a0 + 0x1
 14018: 7b 17                    u64 [sp] = a0
 14020: 95 66 08                 s1 = s1 + 0x8
 14023: 01                       fallthrough
      :                          @981
 14024: 82 69                    a2 = u64 [s1]
 14026: 51 09 17                 jump @984 if a2 == 0
      :                          @982
 14029: 82 1a 60                 a3 = u64 [sp + 0x60]
 14032: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 14035: 82 17 58                 a0 = u64 [sp + 0x58]
 14038: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14041: b4 a0 02 9e 01           ra = 414, jump [a3]
      :                          @983 [@dyn 207]
 14046: 52 07 52                 jump @992 if a0 != 0
      :                          @984
 14049: 82 57                    a0 = u64 [s0]
 14051: 82 59 08                 a2 = u64 [s0 + 0x8]
 14054: 95 18 28                 a1 = sp + 0x28
 14057: b4 90 02 a0 01           ra = 416, jump [a2]
      :                          @985 [@dyn 208]
 14062: 52 07 42                 jump @992 if a0 != 0
      :                          @986
 14065: 95 55 10                 s0 = s0 + 0x10
 14068: 95 66 10                 s1 = s1 + 0x10
 14071: 82 17 20                 a0 = u64 [sp + 0x20]
 14074: ab 75 ce                 jump @981 if s0 != a0
      :                          @987
 14077: 82 19 08                 a2 = u64 [sp + 0x8]
 14080: 82 1a                    a3 = u64 [sp]
 14082: 82 97 08                 a0 = u64 [a2 + 0x8]
 14085: ac 7a 0d                 jump @990 if a3 <u a0
      :                          @988
 14088: 28 2d                    jump @993
      :                          @989
 14090: 33 0a                    a3 = 0
 14092: 82 97 08                 a0 = u64 [a2 + 0x8]
 14095: 54 07 26                 jump @993 if a0 <=u 0
      :                          @990
 14098: 82 97                    a0 = u64 [a2]
 14100: 97 a8 04                 a1 = a3 << 0x4
 14103: c8 87 09                 a2 = a0 + a1
 14106: 82 1a 60                 a3 = u64 [sp + 0x60]
 14109: 82 17 58                 a0 = u64 [sp + 0x58]
 14112: 82 98                    a1 = u64 [a2]
 14114: 82 99 08                 a2 = u64 [a2 + 0x8]
 14117: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14120: b4 a0 02 a2 01           ra = 418, jump [a3]
      :                          @991 [@dyn 209]
 14125: 51 07 08                 jump @993 if a0 == 0
      :                          @992
 14128: 33 07 01                 a0 = 0x1
 14131: 28 05                    jump @994
      :                          @993
 14133: 33 07                    a0 = 0
 14135: 01                       fallthrough
      :                          @994
 14136: 82 10 78                 ra = u64 [sp + 0x78]
 14139: 82 15 70                 s0 = u64 [sp + 0x70]
 14142: 82 16 68                 s1 = u64 [sp + 0x68]
 14145: 95 11 80 00              sp = sp + 0x80
 14149: 32 00                    ret
      :                          @995
 14151: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 14154: 7b 10 30                 u64 [sp + 0x30] = ra
 14157: 7b 15 28                 u64 [sp + 0x28] = s0
 14160: 7b 16 20                 u64 [sp + 0x20] = s1
 14163: 56 18 27 1a              jump @998 if a1 >u 39
      :                          @996
 14167: 97 8a 02                 a3 = a1 << 0x2
 14170: 33 0b 00 00 01           a4 = 0x10000
 14175: c8 ba 0a                 a3 = a3 + a4
 14178: 81 aa                    a3 = i32 [a3]
 14180: 32 0a                    jump [a3]
      :                          @997 [@dyn 210]
 14182: 33 08 5c 30              a1 = 0x305c
 14186: 28 d2 01                 jump @1022
      :                          @998
 14189: 33 0a 5c                 a3 = 0x5c
 14192: ab a8 0a                 jump @1000 if a1 != a3
      :                          @999
 14195: 33 08 5c 5c              a1 = 0x5c5c
 14199: 28 c5 01                 jump @1022
      :                          @1000 [@dyn 211]
 14202: 33 0a 00 03              a3 = 0x300
 14206: ac a8 04 01              jump @1013 if a1 <u a3
      :                          @1001
 14210: 84 99 01                 a2 = a2 & 0x1
 14213: 51 09 fd 00              jump @1013 if a2 == 0
      :                          @1002
 14217: 88 8a 2f 18 01           a3 = a1 <u 0x1182f
 14222: 33 09 11                 a2 = 0x11
 14225: 94 a9                    a2 = 0 if a3 != 0
 14227: 95 9c 08                 a5 = a2 + 0x8
 14230: 97 cb 02                 a4 = a5 << 0x2
 14233: 33 0a 24 0e 01           a3 = 0x10e24
 14238: c8 ab 0b                 a4 = a4 + a3
 14241: 81 b6                    s1 = i32 [a4]
 14243: 8a 8b 0b                 i32 a4 = a1 << 0xb
 14246: 8a 66 0b                 i32 s1 = s1 << 0xb
 14249: d8 6b 06                 s1 = a4 <u s1
 14252: da 6c 09                 a2 = a5 if s1 == 0
 14255: 95 96 04                 s1 = a2 + 0x4
 14258: 97 6c 02                 a5 = s1 << 0x2
 14261: c8 ac 0c                 a5 = a5 + a3
 14264: 81 cc                    a5 = i32 [a5]
 14266: 8a cc 0b                 i32 a5 = a5 << 0xb
 14269: d8 cb 0c                 a5 = a4 <u a5
 14272: da c6 09                 a2 = s1 if a5 == 0
 14275: 95 96 02                 s1 = a2 + 0x2
 14278: 97 6c 02                 a5 = s1 << 0x2
 14281: c8 ac 0c                 a5 = a5 + a3
 14284: 81 cc                    a5 = i32 [a5]
 14286: 8a cc 0b                 i32 a5 = a5 << 0xb
 14289: d8 cb 0c                 a5 = a4 <u a5
 14292: da c6 09                 a2 = s1 if a5 == 0
 14295: 95 96 01                 s1 = a2 + 0x1
 14298: 97 6c 02                 a5 = s1 << 0x2
 14301: c8 ac 0c                 a5 = a5 + a3
 14304: 81 cc                    a5 = i32 [a5]
 14306: 8a cc 0b                 i32 a5 = a5 << 0xb
 14309: d8 cb 0c                 a5 = a4 <u a5
 14312: da c6 09                 a2 = s1 if a5 == 0
 14315: 95 96 01                 s1 = a2 + 0x1
 14318: 97 6c 02                 a5 = s1 << 0x2
 14321: c8 ac 0c                 a5 = a5 + a3
 14324: 81 cc                    a5 = i32 [a5]
 14326: 8a cc 0b                 i32 a5 = a5 << 0xb
 14329: d8 cb 0c                 a5 = a4 <u a5
 14332: da c6 09                 a2 = s1 if a5 == 0
 14335: 97 9c 02                 a5 = a2 << 0x2
 14338: c8 ac 0c                 a5 = a5 + a3
 14341: 81 cc                    a5 = i32 [a5]
 14343: 8a cc 0b                 i32 a5 = a5 << 0xb
 14346: d8 bc 06                 s1 = a5 <u a4
 14349: d3 cb 0b                 a4 = a4 ^ a5
 14352: 88 bb 01                 a4 = a4 <u 0x1
 14355: c8 69 09                 a2 = a2 + s1
 14358: c8 b9 09                 a2 = a2 + a4
 14361: 33 0c 21                 a5 = 0x21
 14364: ac 9c e4 02              jump @1046 if a5 <u a2
      :                          @1003
 14368: 97 9b 02                 a4 = a2 << 0x2
 14371: c8 ab 0b                 a4 = a4 + a3
 14374: 80 ba                    a3 = u32 [a4]
 14376: 98 a6 15                 s1 = a3 >> 0x15
 14379: 33 02 ef 02              t0 = 0x2ef
 14383: 51 19 21 0d              jump @1005 if a2 == 33
      :                          @1004
 14387: 80 bc 04                 a5 = u32 [a4 + 0x4]
 14390: 98 c2 15                 t0 = a5 >> 0x15
 14393: 51 09 0c                 jump @1006 if a2 == 0
      :                          @1005
 14396: 80 b9 fc                 a2 = u32 [a4 + 0xfffffffffffffffc]
 14399: 84 99 ff ff 1f           a2 = a2 & 0x1fffff
 14404: 01                       fallthrough
      :                          @1006
 14405: 85 6b ff                 a4 = s1 ^ 0xffffffffffffffff
 14408: c8 2b 0b                 a4 = a4 + t0
 14411: 51 0b 30                 jump @1012 if a4 == 0
      :                          @1007
 14414: 33 0c                    a5 = 0
 14416: bf 98 0b                 i32 a4 = a1 - a2
 14419: 33 09 ef 02              a2 = 0x2ef
 14423: e4 96 09                 a2 = maxu(s1, a2)
 14426: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 14429: 33 03 ac 0e 01           t1 = 0x10eac
 14434: 01                       fallthrough
      :                          @1008
 14435: aa 69 9c 02              jump @1045 if a2 == s1
      :                          @1009
 14439: c8 63 0a                 a3 = t1 + s1
 14442: 7c aa                    a3 = u8 [a3]
 14444: be ac 0c                 i32 a5 = a5 + a3
 14447: ac cb 0c                 jump @1012 if a4 <u a5
      :                          @1010
 14450: 95 66 01                 s1 = s1 + 0x1
 14453: ab 62 ee                 jump @1008 if t0 != s1
      :                          @1011
 14456: 64 26                    s1 = t0
 14458: 01                       fallthrough
      :                          @1012
 14459: 84 66 01                 s1 = s1 & 0x1
 14462: 52 06 0a 01              jump @1027 if s1 != 0
      :                          @1013
 14466: 55 18 20 db 00           jump @1024 if a1 >=u 32
      :                          @1014
 14471: 8b 89 14                 i32 a2 = a1 >> 0x14
 14474: 33 0a 27 02 01           a3 = 0x10227
 14479: c8 a9 09                 a2 = a2 + a3
 14482: 7c 99                    a2 = u8 [a2]
 14484: 86 8b 01                 a4 = a1 | 0x1
 14487: 78 19 17                 u8 [sp + 0x17] = a2
 14490: 97 89 2c                 a2 = a1 << 0x2c
 14493: 98 99 3c                 a2 = a2 >> 0x3c
 14496: c8 a9 09                 a2 = a2 + a3
 14499: 7c 9c                    a5 = u8 [a2]
 14501: 97 89 30                 a2 = a1 << 0x30
 14504: 98 99 3c                 a2 = a2 >> 0x3c
 14507: c8 a9 09                 a2 = a2 + a3
 14510: 7c 96                    s1 = u8 [a2]
 14512: 69 b9                    i32 a2 = clz a4
 14514: 98 99 02                 a2 = a2 >> 0x2
 14517: 78 1c 18                 u8 [sp + 0x18] = a5
 14520: 78 16 19                 u8 [sp + 0x19] = s1
 14523: 97 8b 34                 a4 = a1 << 0x34
 14526: 98 bb 3c                 a4 = a4 >> 0x3c
 14529: c8 ab 0b                 a4 = a4 + a3
 14532: 97 8c 38                 a5 = a1 << 0x38
 14535: 98 cc 3c                 a5 = a5 >> 0x3c
 14538: c8 ac 0c                 a5 = a5 + a3
 14541: 84 88 0f                 a1 = a1 & 0xf
 14544: c8 8a 0a                 a3 = a3 + a1
 14547: 95 98 fe                 a1 = a2 + 0xfffffffffffffffe
 14550: 46 11 16                 u8 [sp + 22] = 0
 14553: 7c bb                    a4 = u8 [a4]
 14555: 7c cc                    a5 = u8 [a5]
 14557: 7c aa                    a3 = u8 [a3]
 14559: 47 11 14                 u16 [sp + 20] = 0
 14562: 78 1b 1a                 u8 [sp + 0x1a] = a4
 14565: 78 1c 1b                 u8 [sp + 0x1b] = a5
 14568: 78 1a 1c                 u8 [sp + 0x1c] = a3
 14571: 46 11 1d 7d              u8 [sp + 29] = 0x7d
 14575: 95 1a 14                 a3 = sp + 0x14
 14578: c8 8a 0b                 a4 = a3 + a1
 14581: 33 0c 5c                 a5 = 0x5c
 14584: 78 bc                    u8 [a4] = a5
 14586: c8 a9 09                 a2 = a2 + a3
 14589: 46 19 ff 75              u8 [a2 + 4294967295] = 0x75
 14593: 46 09 7b                 u8 [a2 + 0] = 0x7b
 14596: 81 19 14                 a2 = i32 [sp + 0x14]
 14599: 81 1a 18                 a3 = i32 [sp + 0x18]
 14602: 7f 1b 1c                 a4 = i16 [sp + 0x1c]
 14605: 28 02 01                 jump @1028
      :                          @1015 [@dyn 212]
 14608: 33 08 5c 6e              a1 = 0x6e5c
 14612: 28 28                    jump @1022
      :                          @1016 [@dyn 213]
 14614: 84 99 00 01              a2 = a2 & 0x100
 14618: 51 09 d9 01              jump @1044 if a2 == 0
      :                          @1017
 14622: 33 08 5c 27              a1 = 0x275c
 14626: 28 1a                    jump @1022
      :                          @1018 [@dyn 214]
 14628: 33 08 5c 72              a1 = 0x725c
 14632: 28 14                    jump @1022
      :                          @1019 [@dyn 215]
 14634: 33 08 5c 74              a1 = 0x745c
 14638: 28 0e                    jump @1022
      :                          @1020 [@dyn 216]
 14640: 97 99 2f                 a2 = a2 << 0x2f
 14643: 59 09 c0 01              jump @1044 if a2 >=s 0
      :                          @1021
 14647: 33 08 5c 22              a1 = 0x225c
 14651: 01                       fallthrough
      :                          @1022
 14652: 7a 78                    u32 [a0] = a1
 14654: 47 17 08                 u16 [a0 + 8] = 0
 14657: 47 17 06                 u16 [a0 + 6] = 0
 14660: 47 17 04                 u16 [a0 + 4] = 0
 14663: 33 08 00 02              a1 = 0x200
 14667: 79 78 0a                 u16 [a0 + 0xa] = a1
 14670: 01                       fallthrough
      :                          @1023
 14671: 82 10 30                 ra = u64 [sp + 0x30]
 14674: 82 15 28                 s0 = u64 [sp + 0x28]
 14677: 82 16 20                 s1 = u64 [sp + 0x20]
 14680: 95 11 38                 sp = sp + 0x38
 14683: 32 00                    ret
      :                          @1024
 14685: 53 18 7f 96 01           jump @1044 if a1 <u 127
      :                          @1025
 14690: 8b 89 10                 i32 a2 = a1 >> 0x10
 14693: 52 09 be 00              jump @1029 if a2 != 0
      :                          @1026
 14697: 33 06 29 01              s1 = 0x129
 14701: 6e 83                    t1 = zext.h a1
 14703: 33 02 86 0b 01           t0 = 0x10b86
 14708: 33 0a d6 0b 01           a3 = 0x10bd6
 14713: 33 0c f8 0c 01           a5 = 0x10cf8
 14718: 33 09 28                 a2 = 0x28
 14721: 33 0b 22 01              a4 = 0x122
 14725: 28 c1 00                 jump @1031
      :                          @1027
 14728: 8b 89 14                 i32 a2 = a1 >> 0x14
 14731: 33 0a 27 02 01           a3 = 0x10227
 14736: c8 a9 09                 a2 = a2 + a3
 14739: 7c 99                    a2 = u8 [a2]
 14741: 86 8b 01                 a4 = a1 | 0x1
 14744: 78 19 0b                 u8 [sp + 0xb] = a2
 14747: 97 89 2c                 a2 = a1 << 0x2c
 14750: 98 99 3c                 a2 = a2 >> 0x3c
 14753: c8 a9 09                 a2 = a2 + a3
 14756: 7c 9c                    a5 = u8 [a2]
 14758: 97 89 30                 a2 = a1 << 0x30
 14761: 98 99 3c                 a2 = a2 >> 0x3c
 14764: c8 a9 09                 a2 = a2 + a3
 14767: 7c 96                    s1 = u8 [a2]
 14769: 69 b9                    i32 a2 = clz a4
 14771: 98 99 02                 a2 = a2 >> 0x2
 14774: 78 1c 0c                 u8 [sp + 0xc] = a5
 14777: 78 16 0d                 u8 [sp + 0xd] = s1
 14780: 97 8b 34                 a4 = a1 << 0x34
 14783: 98 bb 3c                 a4 = a4 >> 0x3c
 14786: c8 ab 0b                 a4 = a4 + a3
 14789: 97 8c 38                 a5 = a1 << 0x38
 14792: 98 cc 3c                 a5 = a5 >> 0x3c
 14795: c8 ac 0c                 a5 = a5 + a3
 14798: 84 88 0f                 a1 = a1 & 0xf
 14801: c8 8a 0a                 a3 = a3 + a1
 14804: 95 98 fe                 a1 = a2 + 0xfffffffffffffffe
 14807: 46 11 0a                 u8 [sp + 10] = 0
 14810: 7c bb                    a4 = u8 [a4]
 14812: 7c cc                    a5 = u8 [a5]
 14814: 7c aa                    a3 = u8 [a3]
 14816: 47 11 08                 u16 [sp + 8] = 0
 14819: 78 1b 0e                 u8 [sp + 0xe] = a4
 14822: 78 1c 0f                 u8 [sp + 0xf] = a5
 14825: 78 1a 10                 u8 [sp + 0x10] = a3
 14828: 46 11 11 7d              u8 [sp + 17] = 0x7d
 14832: 95 1a 08                 a3 = sp + 0x8
 14835: c8 8a 0b                 a4 = a3 + a1
 14838: 33 0c 5c                 a5 = 0x5c
 14841: 78 bc                    u8 [a4] = a5
 14843: c8 a9 09                 a2 = a2 + a3
 14846: 46 19 ff 75              u8 [a2 + 4294967295] = 0x75
 14850: 46 09 7b                 u8 [a2 + 0] = 0x7b
 14853: 81 19 08                 a2 = i32 [sp + 0x8]
 14856: 81 1a 0c                 a3 = i32 [sp + 0xc]
 14859: 7f 1b 10                 a4 = i16 [sp + 0x10]
 14862: 01                       fallthrough
      :                          @1028
 14863: 7a 79                    u32 [a0] = a2
 14865: 7a 7a 04                 u32 [a0 + 0x4] = a3
 14868: 79 7b 08                 u16 [a0 + 0x8] = a4
 14871: 78 78 0a                 u8 [a0 + 0xa] = a1
 14874: 33 08 0a                 a1 = 0xa
 14877: 78 78 0b                 u8 [a0 + 0xb] = a1
 14880: 28 2f ff                 jump @1023
      :                          @1029
 14883: 8b 89 11                 i32 a2 = a1 >> 0x11
 14886: 52 09 60                 jump @1034 if a2 != 0
      :                          @1030
 14889: 33 06 e6 01              s1 = 0x1e6
 14893: 6e 83                    t1 = zext.h a1
 14895: 33 02 78 08 01           t0 = 0x10878
 14900: 33 0a d0 08 01           a3 = 0x108d0
 14905: 33 0c a0 09 01           a5 = 0x109a0
 14910: 33 09 2c                 a2 = 0x2c
 14913: 33 0b d0 00              a4 = 0xd0
 14917: 01                       fallthrough
      :                          @1031
 14918: 7b 16                    u64 [sp] = s1
 14920: 64 75                    s0 = a0
 14922: 64 37                    a0 = t1
 14924: 64 86                    s1 = a1
 14926: 64 28                    a1 = t0
 14928: 33 00 b2 01              ra = 0x1b2
 14932: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 14935: 7b 10 20                 u64 [sp + 0x20] = ra
 14938: 7b 15 18                 u64 [sp + 0x18] = s0
 14941: 7b 16 10                 u64 [sp + 0x10] = s1
 14944: 7b 1c                    u64 [sp] = a5
 14946: 33 03                    t1 = 0
 14948: 82 16 28                 s1 = u64 [sp + 0x28]
 14951: 7b 16 08                 u64 [sp + 0x8] = s1
 14954: 98 70 08                 ra = a0 >> 0x8
 14957: 97 99 01                 a2 = a2 << 0x1
 14960: c8 98 0c                 a5 = a1 + a2
 14963: 84 76 ff 00              s1 = a0 & 0xff
 14967: 28 8a 00                 jump @1047
      :                          @1032 [@dyn 217]
 14970: 64 68                    a1 = s1
 14972: 64 79                    a2 = a0
 14974: 64 57                    a0 = s0
 14976: 51 09 07 fe              jump @1014 if a2 == 0
      :                          @1033
 14980: 28 6f                    jump @1044
      :                          @1034
 14982: 84 8a fe ff 1f           a3 = a1 & 0x1ffffe
 14987: 51 3a 1e b8 02 fc fd     jump @1014 if a3 == 178206
      :                          @1035
 14994: 84 89 e0 ff 1f           a2 = a1 & 0x1fffe0
 14999: 51 39 e0 a6 02 f0 fd     jump @1014 if a2 == 173792
      :                          @1036
 15006: 83 89 c0 48 fd           i32 a2 = a1 + 0xfffffffffffd48c0
 15011: 56 19 f9 e4 fd           jump @1014 if a2 >u 4294967289
      :                          @1037
 15016: 83 89 50 31 fd           i32 a2 = a1 + 0xfffffffffffd3150
 15021: 56 19 f1 da fd           jump @1014 if a2 >u 4294967281
      :                          @1038
 15026: 83 8a 10 14 fd           i32 a3 = a1 + 0xfffffffffffd1410
 15031: 33 0b f0                 a4 = 0xfffffffffffffff0
 15034: ac ab cd fd              jump @1014 if a4 <u a3
      :                          @1039
 15038: 83 89 00 08 fd           i32 a2 = a1 + 0xfffffffffffd0800
 15043: 56 29 5d f6 c4 fd        jump @1014 if a2 >u 4294964829
      :                          @1040
 15049: 83 89 00 00 fd           i32 a2 = a1 + 0xfffffffffffd0000
 15054: 56 29 1d fa b9 fd        jump @1014 if a2 >u 4294965789
      :                          @1041
 15060: 83 89 b0 ec fc           i32 a2 = a1 + 0xfffffffffffcecb0
 15065: 56 19 fa ae fd           jump @1014 if a2 >u 4294967290
      :                          @1042
 15070: 83 89 00 ff f1           i32 a2 = a1 + 0xfffffffffff1ff00
 15075: 33 0a af 22 f5           a3 = 0xfffffffffff522af
 15080: ac 9a 9f fd              jump @1014 if a3 <u a2
      :                          @1043
 15084: 55 38 f0 01 0e 9b fd     jump @1014 if a1 >=u 918000
      :                          @1044
 15091: 33 09 80 00              a2 = 0x80
 15095: 78 79                    u8 [a0] = a2
 15097: 7a 78 04                 u32 [a0 + 0x4] = a1
 15100: 28 53 fe                 jump @1023
      :                          @1045
 15103: 00                       trap
      :                          @1046
 15104: 00                       trap
      :                          @1047
 15105: 7c 84                    t2 = u8 [a1]
 15107: 7c 89 01                 a2 = u8 [a1 + 0x1]
 15110: 95 88 02                 a1 = a1 + 0x2
 15113: c8 93 02                 t0 = t1 + a2
 15116: ab 04 1f                 jump @1054 if t2 != ra
      :                          @1048
 15119: ac 32 7f                 jump @1068 if t0 <u t1
      :                          @1049
 15122: ac 2b 7d                 jump @1069 if a4 <u t0
      :                          @1050
 15125: 64 a4                    t2 = a3
 15127: c8 a3 03                 t1 = t1 + a3
 15130: 01                       fallthrough
      :                          @1051
 15131: 51 09 1a                 jump @1057 if a2 == 0
      :                          @1052
 15134: 7c 35                    s0 = u8 [t1]
 15136: 95 33 01                 t1 = t1 + 0x1
 15139: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 15142: ab 65 f5                 jump @1051 if s0 != s1
      :                          @1053
 15145: 28 51                    jump @1066
      :                          @1054
 15147: ac 40 11                 jump @1058 if ra <u t2
      :                          @1055
 15150: 64 23                    t1 = t0
 15152: ab c8 d1                 jump @1047 if a1 != a5
      :                          @1056
 15155: 28 09                    jump @1058
      :                          @1057
 15157: 64 23                    t1 = t0
 15159: 64 4a                    a3 = t2
 15161: ab c8 c8                 jump @1047 if a1 != a5
      :                          @1058
 15164: 82 14 08                 t2 = u64 [sp + 0x8]
 15167: 82 1c                    a5 = u64 [sp]
 15169: c8 c4 04                 t2 = t2 + a5
 15172: 33 08 01                 a1 = 0x1
 15175: 01                       fallthrough
      :                          @1059
 15176: 7d c9                    a2 = i8 [a5]
 15178: 95 ca 01                 a3 = a5 + 0x1
 15181: 57 09 0d                 jump @1062 if a2 <s 0
      :                          @1060
 15184: 64 ac                    a5 = a3
 15186: bf 97 07                 i32 a0 = a0 - a2
 15189: 59 07 1d                 jump @1064 if a0 >=s 0
      :                          @1061
 15192: 28 25                    jump @1067
      :                          @1062
 15194: aa 4a 36                 jump @1070 if a3 == t2
      :                          @1063
 15197: 7c ca 01                 a3 = u8 [a5 + 0x1]
 15200: 95 cc 02                 a5 = a5 + 0x2
 15203: 84 99 7f                 a2 = a2 & 0x7f
 15206: 97 99 08                 a2 = a2 << 0x8
 15209: d4 a9 09                 a2 = a2 | a3
 15212: bf 97 07                 i32 a0 = a0 - a2
 15215: 57 07 0e                 jump @1067 if a0 <s 0
      :                          @1064
 15218: 85 88 01                 a1 = a1 ^ 0x1
 15221: ab 4c d3                 jump @1059 if a5 != t2
      :                          @1065
 15224: 28 05                    jump @1067
      :                          @1066
 15226: 33 08                    a1 = 0
 15228: 01                       fallthrough
      :                          @1067
 15229: 84 87 01                 a0 = a1 & 0x1
 15232: 82 10 20                 ra = u64 [sp + 0x20]
 15235: 82 15 18                 s0 = u64 [sp + 0x18]
 15238: 82 16 10                 s1 = u64 [sp + 0x10]
 15241: 95 11 28                 sp = sp + 0x28
 15244: 32 00                    ret
      :                          @1068
 15246: 00                       trap
      :                          @1069
 15247: 00                       trap
      :                          @1070
 15248: 00                       trap
      :                          @1071
 15249: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 15253: 7b 10 90 00              u64 [sp + 0x90] = ra
 15257: 7b 15 88 00              u64 [sp + 0x88] = s0
 15261: 7b 16 80 00              u64 [sp + 0x80] = s1
 15265: 64 75                    s0 = a0
 15267: 7c 77 08                 a0 = u8 [a0 + 0x8]
 15270: 7b 1b 18                 u64 [sp + 0x18] = a4
 15273: 7b 1a 10                 u64 [sp + 0x10] = a3
 15276: 33 0a 01                 a3 = 0x1
 15279: 33 06 01                 s1 = 0x1
 15282: 52 07 6a 01              jump @1093 if a0 != 0
      :                          @1072
 15286: 64 92                    t0 = a2
 15288: 64 8c                    a5 = a1
 15290: 82 5b                    a4 = u64 [s0]
 15292: 7c b7 24                 a0 = u8 [a4 + 0x24]
 15295: 7c 59 09                 a2 = u8 [s0 + 0x9]
 15298: 84 77 04                 a0 = a0 & 0x4
 15301: 52 07 89 00              jump @1081 if a0 != 0
      :                          @1073
 15305: 82 b8 38                 a1 = u64 [a4 + 0x38]
 15308: 33 0a 08 07 01           a3 = 0x10708
 15313: 82 b7 30                 a0 = u64 [a4 + 0x30]
 15316: 7b 1b                    u64 [sp] = a4
 15318: 82 8b 18                 a4 = u64 [a1 + 0x18]
 15321: 33 08 0b 07 01           a1 = 0x1070b
 15326: da 9a 08                 a1 = a3 if a2 == 0
 15329: 85 99 03                 a2 = a2 ^ 0x3
 15332: 7b 12 08                 u64 [sp + 0x8] = t0
 15335: 64 c6                    s1 = a5
 15337: b4 b0 02 b4 01           ra = 436, jump [a4]
      :                          @1074 [@dyn 218]
 15342: 64 68                    a1 = s1
 15344: 82 19 08                 a2 = u64 [sp + 0x8]
 15347: 82 1b                    a4 = u64 [sp]
 15349: 33 0a 01                 a3 = 0x1
 15352: 33 06 01                 s1 = 0x1
 15355: 52 07 21 01              jump @1093 if a0 != 0
      :                          @1075
 15359: 82 ba 38                 a3 = u64 [a4 + 0x38]
 15362: 82 b7 30                 a0 = u64 [a4 + 0x30]
 15365: 82 aa 18                 a3 = u64 [a3 + 0x18]
 15368: b4 a0 02 b6 01           ra = 438, jump [a3]
      :                          @1076 [@dyn 219]
 15373: 82 19                    a2 = u64 [sp]
 15375: 33 0a 01                 a3 = 0x1
 15378: 33 06 01                 s1 = 0x1
 15381: 52 07 07 01              jump @1093 if a0 != 0
      :                          @1077
 15385: 82 98 38                 a1 = u64 [a2 + 0x38]
 15388: 82 97 30                 a0 = u64 [a2 + 0x30]
 15391: 82 8a 18                 a3 = u64 [a1 + 0x18]
 15394: 33 08 d2 06 01           a1 = 0x106d2
 15399: 33 09 02                 a2 = 0x2
 15402: b4 a0 02 b8 01           ra = 440, jump [a3]
      :                          @1078 [@dyn 220]
 15407: 82 18                    a1 = u64 [sp]
 15409: 33 0a 01                 a3 = 0x1
 15412: 33 06 01                 s1 = 0x1
 15415: 52 07 e5 00              jump @1093 if a0 != 0
      :                          @1079
 15419: 82 17 10                 a0 = u64 [sp + 0x10]
 15422: 82 19 18                 a2 = u64 [sp + 0x18]
 15425: b4 90 02 ba 01           ra = 442, jump [a2]
      :                          @1080 [@dyn 221]
 15430: 33 0a 01                 a3 = 0x1
 15433: 64 76                    s1 = a0
 15435: 28 d1 00                 jump @1093
      :                          @1081
 15438: 52 09 31                 jump @1084 if a2 != 0
      :                          @1082
 15441: 82 b8 38                 a1 = u64 [a4 + 0x38]
 15444: 82 b7 30                 a0 = u64 [a4 + 0x30]
 15447: 82 8a 18                 a3 = u64 [a1 + 0x18]
 15450: 33 08 0d 07 01           a1 = 0x1070d
 15455: 33 09 03                 a2 = 0x3
 15458: 64 b6                    s1 = a4
 15460: 7b 12 08                 u64 [sp + 0x8] = t0
 15463: 7b 1c                    u64 [sp] = a5
 15465: b4 a0 02 bc 01           ra = 444, jump [a3]
      :                          @1083 [@dyn 222]
 15470: 82 1c                    a5 = u64 [sp]
 15472: 82 12 08                 t0 = u64 [sp + 0x8]
 15475: 64 6b                    a4 = s1
 15477: 33 0a 01                 a3 = 0x1
 15480: 33 06 01                 s1 = 0x1
 15483: 52 07 a1 00              jump @1093 if a0 != 0
      :                          @1084
 15487: 82 b7                    a0 = u64 [a4]
 15489: 7b 17 40                 u64 [sp + 0x40] = a0
 15492: 82 b7 08                 a0 = u64 [a4 + 0x8]
 15495: 7b 17 48                 u64 [sp + 0x48] = a0
 15498: 82 b7 10                 a0 = u64 [a4 + 0x10]
 15501: 7b 17 50                 u64 [sp + 0x50] = a0
 15504: 82 b7 18                 a0 = u64 [a4 + 0x18]
 15507: 82 b8 30                 a1 = u64 [a4 + 0x30]
 15510: 33 06 01                 s1 = 0x1
 15513: 7b 17 58                 u64 [sp + 0x58] = a0
 15516: 82 b7 20                 a0 = u64 [a4 + 0x20]
 15519: 7b 18 20                 u64 [sp + 0x20] = a1
 15522: 82 b8 38                 a1 = u64 [a4 + 0x38]
 15525: 78 16 3f                 u8 [sp + 0x3f] = s1
 15528: 7b 17 60                 u64 [sp + 0x60] = a0
 15531: 82 b7 28                 a0 = u64 [a4 + 0x28]
 15534: 7b 18 28                 u64 [sp + 0x28] = a1
 15537: 95 18 3f                 a1 = sp + 0x3f
 15540: 7b 18 30                 u64 [sp + 0x30] = a1
 15543: 7b 17 68                 u64 [sp + 0x68] = a0
 15546: 95 17 20                 a0 = sp + 0x20
 15549: 7b 17 70                 u64 [sp + 0x70] = a0
 15552: 33 07 d8 06 01           a0 = 0x106d8
 15557: 7b 17 78                 u64 [sp + 0x78] = a0
 15560: 95 17 20                 a0 = sp + 0x20
 15563: 64 c8                    a1 = a5
 15565: 64 29                    a2 = t0
 15567: 50 20 be 01 68           ra = 446, jump @1094
      :                          @1085 [@dyn 223]
 15572: 52 07 44                 jump @1092 if a0 != 0
      :                          @1086
 15575: 33 08 d2 06 01           a1 = 0x106d2
 15580: 95 17 20                 a0 = sp + 0x20
 15583: 33 09 02                 a2 = 0x2
 15586: 50 20 c0 01 55           ra = 448, jump @1094
      :                          @1087 [@dyn 224]
 15591: 52 07 31                 jump @1092 if a0 != 0
      :                          @1088
 15594: 95 18 40                 a1 = sp + 0x40
 15597: 82 17 10                 a0 = u64 [sp + 0x10]
 15600: 82 19 18                 a2 = u64 [sp + 0x18]
 15603: b4 90 02 c2 01           ra = 450, jump [a2]
      :                          @1089 [@dyn 225]
 15608: 52 07 20                 jump @1092 if a0 != 0
      :                          @1090
 15611: 82 18 78                 a1 = u64 [sp + 0x78]
 15614: 82 17 70                 a0 = u64 [sp + 0x70]
 15617: 82 8a 18                 a3 = u64 [a1 + 0x18]
 15620: 33 08 10 07 01           a1 = 0x10710
 15625: 33 09 02                 a2 = 0x2
 15628: b4 a0 02 c4 01           ra = 452, jump [a3]
      :                          @1091 [@dyn 226]
 15633: 64 76                    s1 = a0
 15635: 33 0a 01                 a3 = 0x1
 15638: 28 06                    jump @1093
      :                          @1092
 15640: 33 0a 01                 a3 = 0x1
 15643: 01                       fallthrough
      :                          @1093
 15644: 78 56 08                 u8 [s0 + 0x8] = s1
 15647: 46 15 09 01              u8 [s0 + 9] = 0x1
 15651: 64 57                    a0 = s0
 15653: 82 10 90 00              ra = u64 [sp + 0x90]
 15657: 82 15 88 00              s0 = u64 [sp + 0x88]
 15661: 82 16 80 00              s1 = u64 [sp + 0x80]
 15665: 95 11 98 00              sp = sp + 0x98
 15669: 32 00                    ret
      :                          @1094 [@dyn 227]
 15671: 95 11 80                 sp = sp + 0xffffffffffffff80
 15674: 7b 10 78                 u64 [sp + 0x78] = ra
 15677: 7b 15 70                 u64 [sp + 0x70] = s0
 15680: 7b 16 68                 u64 [sp + 0x68] = s1
 15683: 33 05                    s0 = 0
 15685: 33 04                    t2 = 0
 15687: 49 11 50                 u64 [sp + 80] = 0
 15690: 33 0b 0a 0a 0a 0a        a4 = 0xa0a0a0a
 15696: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
 15706: 14 0a 00 01 01 01 01 01 01 01 a3 = 0x101010101010100
 15716: 7b 1a 28                 u64 [sp + 0x28] = a3
 15719: 82 7a 10                 a3 = u64 [a0 + 0x10]
 15722: 7b 1a 48                 u64 [sp + 0x48] = a3
 15725: 82 7a                    a3 = u64 [a0]
 15727: 7b 1a 38                 u64 [sp + 0x38] = a3
 15730: 82 77 08                 a0 = u64 [a0 + 0x8]
 15733: 7b 17 30                 u64 [sp + 0x30] = a0
 15736: 7b 18 58                 u64 [sp + 0x58] = a1
 15739: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 15742: 7b 18                    u64 [sp] = a1
 15744: 14 07 80 80 80 80 80 80 80 80 a0 = 0x8080808080808080
 15754: 7b 17 60                 u64 [sp + 0x60] = a0
 15757: 9a 97                    a0 = -a2
 15759: 7b 17 08                 u64 [sp + 0x8] = a0
 15762: 33 06 0a                 s1 = 0xa
 15765: 7b 19 20                 u64 [sp + 0x20] = a2
 15768: 7b 10 18                 u64 [sp + 0x18] = ra
 15771: 28 3e                    jump @1098
      :                          @1095
 15773: 82 17                    a0 = u64 [sp]
 15775: c8 57 07                 a0 = a0 + s0
 15778: 7c 77                    a0 = u8 [a0]
 15780: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 15783: 88 77 01                 a0 = a0 <u 0x1
 15786: 01                       fallthrough
      :                          @1096
 15787: 82 18 48                 a1 = u64 [sp + 0x48]
 15790: 78 87                    u8 [a1] = a0
 15792: 82 17 30                 a0 = u64 [sp + 0x30]
 15795: 82 7a 18                 a3 = u64 [a0 + 0x18]
 15798: c9 45 09                 a2 = s0 - t2
 15801: 82 18 58                 a1 = u64 [sp + 0x58]
 15804: c8 48 08                 a1 = a1 + t2
 15807: 82 17 38                 a0 = u64 [sp + 0x38]
 15810: b4 a0 02 c8 01           ra = 456, jump [a3]
      :                          @1097 [@dyn 228]
 15815: 64 64                    t2 = s1
 15817: 82 19 20                 a2 = u64 [sp + 0x20]
 15820: 82 15 40                 s0 = u64 [sp + 0x40]
 15823: 82 10 18                 ra = u64 [sp + 0x18]
 15826: 33 06 0a                 s1 = 0xa
 15829: 52 07 5b 01              jump @1138 if a0 != 0
      :                          @1098
 15833: 82 17 50                 a0 = u64 [sp + 0x50]
 15836: 84 77 01                 a0 = a0 & 0x1
 15839: 52 07 4d 01              jump @1137 if a0 != 0
      :                          @1099
 15843: ac 59 fe 00              jump @1130 if a2 <u s0
      :                          @1100
 15847: 82 17 28                 a0 = u64 [sp + 0x28]
 15850: 28 09                    jump @1102
      :                          @1101
 15852: 82 17 28                 a0 = u64 [sp + 0x28]
 15855: ac 59 f2 00              jump @1130 if a2 <u s0
      :                          @1102
 15859: c9 59 02                 t0 = a2 - s0
 15862: 82 13 58                 t1 = u64 [sp + 0x58]
 15865: c8 53 03                 t1 = t1 + s0
 15868: 33 08 0f                 a1 = 0xf
 15871: ac 28 23                 jump @1108 if a1 <u t0
      :                          @1103
 15874: aa 59 dc 00              jump @1129 if a2 == s0
      :                          @1104
 15878: 33 08                    a1 = 0
 15880: 82 1c 08                 a5 = u64 [sp + 0x8]
 15883: c8 5c 0c                 a5 = a5 + s0
 15886: 64 3a                    a3 = t1
 15888: 01                       fallthrough
      :                          @1105
 15889: 7c ab                    a4 = u8 [a3]
 15891: aa 6b 39                 jump @1114 if a4 == s1
      :                          @1106
 15894: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 15897: 95 aa 01                 a3 = a3 + 0x1
 15900: ab 8c f5                 jump @1105 if a5 != a1
      :                          @1107
 15903: 28 bf 00                 jump @1129
      :                          @1108
 15906: 95 3b 07                 a4 = t1 + 0x7
 15909: 84 bb f8                 a4 = a4 & 0xfffffffffffffff8
 15912: c9 3b 08                 a1 = a4 - t1
 15915: 51 08 2f                 jump @1117 if a1 == 0
      :                          @1109
 15918: 33 0a                    a3 = 0
 15920: 01                       fallthrough
      :                          @1110
 15921: c8 a3 0c                 a5 = t1 + a3
 15924: 7c cc                    a5 = u8 [a5]
 15926: aa 6c 19                 jump @1115 if a5 == s1
      :                          @1111
 15929: 95 aa 01                 a3 = a3 + 0x1
 15932: ab a8 f5                 jump @1110 if a1 != a3
      :                          @1112
 15935: 7b 14 50                 u64 [sp + 0x50] = t2
 15938: 64 54                    t2 = s0
 15940: 95 2a f0                 a3 = t0 + 0xfffffffffffffff0
 15943: ae 8a 20                 jump @1118 if a3 >=u a1
      :                          @1113
 15946: 28 4d                    jump @1121
      :                          @1114
 15948: 9a 8a                    a3 = -a1
 15950: 01                       fallthrough
      :                          @1115
 15951: c8 a5 08                 a1 = s0 + a3
 15954: 95 85 01                 s0 = a1 + 0x1
 15957: ae 98 97                 jump @1101 if a1 >=u a2
      :                          @1116
 15960: 28 74                    jump @1127
      :                          @1117
 15962: 7b 14 50                 u64 [sp + 0x50] = t2
 15965: 64 54                    t2 = s0
 15967: 95 2a f0                 a3 = t0 + 0xfffffffffffffff0
 15970: 95 bb 08                 a4 = a4 + 0x8
 15973: 28 06                    jump @1119
      :                          @1118
 15975: 95 bb 08                 a4 = a4 + 0x8
 15978: 01                       fallthrough
      :                          @1119
 15979: 82 bc f8                 a5 = u64 [a4 + 0xfffffffffffffff8]
 15982: 82 b6                    s1 = u64 [a4]
 15984: d3 0c 05                 s0 = a5 ^ ra
 15987: c9 57 05                 s0 = a0 - s0
 15990: d4 5c 0c                 a5 = a5 | s0
 15993: d3 06 06                 s1 = s1 ^ ra
 15996: c9 67 05                 s0 = a0 - s1
 15999: d4 65 05                 s0 = s0 | s1
 16002: d2 5c 0c                 a5 = a5 & s0
 16005: 82 15 60                 s0 = u64 [sp + 0x60]
 16008: d2 5c 0c                 a5 = a5 & s0
 16011: ab 5c 0c                 jump @1121 if a5 != s0
      :                          @1120
 16014: 95 88 10                 a1 = a1 + 0x10
 16017: 95 bb 10                 a4 = a4 + 0x10
 16020: ae 8a d7                 jump @1119 if a3 >=u a1
      :                          @1121
 16023: aa 28 8e 00              jump @1136 if a1 == t0
      :                          @1122
 16027: 33 0a                    a3 = 0
 16029: c8 83 07                 a0 = t1 + a1
 16032: c9 89 0b                 a4 = a2 - a1
 16035: 64 45                    s0 = t2
 16037: c9 4b 0b                 a4 = a4 - t2
 16040: 82 14 50                 t2 = u64 [sp + 0x50]
 16043: 33 06 0a                 s1 = 0xa
 16046: 01                       fallthrough
      :                          @1123
 16047: c8 a7 0c                 a5 = a0 + a3
 16050: 7c cc                    a5 = u8 [a5]
 16052: aa 6c 0b                 jump @1126 if a5 == s1
      :                          @1124
 16055: 95 aa 01                 a3 = a3 + 0x1
 16058: ab ab f5                 jump @1123 if a4 != a3
      :                          @1125
 16061: 28 21                    jump @1129
      :                          @1126
 16063: c8 8a 0a                 a3 = a3 + a1
 16066: c8 a5 08                 a1 = s0 + a3
 16069: 95 85 01                 s0 = a1 + 0x1
 16072: ae 98 24 ff              jump @1101 if a1 >=u a2
      :                          @1127
 16076: c8 a3 07                 a0 = t1 + a3
 16079: 7c 77                    a0 = u8 [a0]
 16081: ab 67 1b ff              jump @1101 if a0 != s1
      :                          @1128
 16085: 33 07                    a0 = 0
 16087: 64 56                    s1 = s0
 16089: 7b 15 40                 u64 [sp + 0x40] = s0
 16092: 28 12                    jump @1131
      :                          @1129
 16094: 64 95                    s0 = a2
 16096: 01                       fallthrough
      :                          @1130
 16097: 7b 15 40                 u64 [sp + 0x40] = s0
 16100: 33 07 01                 a0 = 0x1
 16103: 64 46                    s1 = t2
 16105: 64 95                    s0 = a2
 16107: aa 94 41                 jump @1137 if t2 == a2
      :                          @1131
 16110: 7b 17 50                 u64 [sp + 0x50] = a0
 16113: 82 17 48                 a0 = u64 [sp + 0x48]
 16116: 7c 77                    a0 = u8 [a0]
 16118: 51 07 26                 jump @1134 if a0 == 0
      :                          @1132
 16121: 82 17 30                 a0 = u64 [sp + 0x30]
 16124: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16127: 33 09 04                 a2 = 0x4
 16130: 82 17 38                 a0 = u64 [sp + 0x38]
 16133: 33 08 d5 00 01           a1 = 0x100d5
 16138: 7b 16 10                 u64 [sp + 0x10] = s1
 16141: 64 46                    s1 = t2
 16143: b4 a0 02 ca 01           ra = 458, jump [a3]
      :                          @1133 [@dyn 229]
 16148: 64 64                    t2 = s1
 16150: 82 16 10                 s1 = u64 [sp + 0x10]
 16153: 52 07 17                 jump @1138 if a0 != 0
      :                          @1134
 16156: ab 45 81 fe              jump @1095 if s0 != t2
      :                          @1135
 16160: 33 07                    a0 = 0
 16162: 28 89 fe                 jump @1096
      :                          @1136
 16165: 64 95                    s0 = a2
 16167: 82 14 50                 t2 = u64 [sp + 0x50]
 16170: 28 b7                    jump @1130
      :                          @1137
 16172: 33 07                    a0 = 0
 16174: 28 06                    jump @1139
      :                          @1138
 16176: 33 07 01                 a0 = 0x1
 16179: 01                       fallthrough
      :                          @1139
 16180: 82 10 78                 ra = u64 [sp + 0x78]
 16183: 82 15 70                 s0 = u64 [sp + 0x70]
 16186: 82 16 68                 s1 = u64 [sp + 0x68]
 16189: 95 11 80 00              sp = sp + 0x80
 16193: 32 00                    ret
      :                          @1140 [@dyn 230]
 16195: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 16198: 7b 10 20                 u64 [sp + 0x20] = ra
 16201: 7b 15 18                 u64 [sp + 0x18] = s0
 16204: 7b 16 10                 u64 [sp + 0x10] = s1
 16207: 82 76 10                 s1 = u64 [a0 + 0x10]
 16210: 7c 69                    a2 = u8 [s1]
 16212: 82 7a                    a3 = u64 [a0]
 16214: 82 75 08                 s0 = u64 [a0 + 0x8]
 16217: 51 09 38                 jump @1144 if a2 == 0
      :                          @1141
 16220: 82 5b 18                 a4 = u64 [s0 + 0x18]
 16223: 33 0c d5 00 01           a5 = 0x100d5
 16228: 33 09 04                 a2 = 0x4
 16231: 64 a7                    a0 = a3
 16233: 7b 18 08                 u64 [sp + 0x8] = a1
 16236: 33 08 d5 00 01           a1 = 0x100d5
 16241: 7b 1a                    u64 [sp] = a3
 16243: b4 b0 02 ce 01           ra = 462, jump [a4]
      :                          @1142 [@dyn 231]
 16248: 82 1a                    a3 = u64 [sp]
 16250: 82 18 08                 a1 = u64 [sp + 0x8]
 16253: 51 07 14                 jump @1144 if a0 == 0
      :                          @1143
 16256: 33 07 01                 a0 = 0x1
 16259: 82 10 20                 ra = u64 [sp + 0x20]
 16262: 82 15 18                 s0 = u64 [sp + 0x18]
 16265: 82 16 10                 s1 = u64 [sp + 0x10]
 16268: 95 11 28                 sp = sp + 0x28
 16271: 32 00                    ret
      :                          @1144
 16273: 95 87 f6                 a0 = a1 + 0xfffffffffffffff6
 16276: 88 77 01                 a0 = a0 <u 0x1
 16279: 78 67                    u8 [s1] = a0
 16281: 82 5c 20                 a5 = u64 [s0 + 0x20]
 16284: 64 a7                    a0 = a3
 16286: 82 10 20                 ra = u64 [sp + 0x20]
 16289: 82 15 18                 s0 = u64 [sp + 0x18]
 16292: 82 16 10                 s1 = u64 [sp + 0x10]
 16295: 95 11 28                 sp = sp + 0x28
 16298: 32 0c                    jump [a5]
      :                          @1145 [@dyn 232]
 16300: 64 8a                    a3 = a1
 16302: 33 08 d8 06 01           a1 = 0x106d8
 16307: 64 a9                    a2 = a3
 16309: 28 ce f5                 jump @957
      :                          @1146
 16312: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 16315: 7b 10 08                 u64 [sp + 0x8] = ra
 16318: 64 83                    t1 = a1
 16320: 6e 7b                    a4 = zext.h a0
 16322: 97 7a 30                 a3 = a0 << 0x30
 16325: 33 02 1c 07 01           t0 = 0x1071c
 16330: 55 2b e8 03 1e           jump @1149 if a4 >=u 1000
      :                          @1147
 16335: 53 1b 0a 72              jump @1152 if a4 <u 10
      :                          @1148
 16339: 98 a8 32                 a1 = a3 >> 0x32
 16342: 96 8b 7b 14              a4 = a1 * 0x147b
 16346: 98 bb 11                 a4 = a4 >> 0x11
 16349: 96 b8 9c                 a1 = a4 * 0xffffffffffffff9c
 16352: c8 87 07                 a0 = a0 + a1
 16355: 33 0c 03                 a5 = 0x3
 16358: 28 42                    jump @1150
      :                          @1149
 16360: 98 ab 34                 a4 = a3 >> 0x34
 16363: 96 bb 47 03              a4 = a4 * 0x347
 16367: 98 bb 13                 a4 = a4 >> 0x13
 16370: 96 bc f0 d8              a5 = a4 * 0xffffffffffffd8f0
 16374: c8 c7 07                 a0 = a0 + a5
 16377: 97 7c 30                 a5 = a0 << 0x30
 16380: 98 cc 32                 a5 = a5 >> 0x32
 16383: 96 c8 7b 14              a1 = a5 * 0x147b
 16387: 98 8c 10                 a5 = a1 >> 0x10
 16390: 98 88 11                 a1 = a1 >> 0x11
 16393: 33 04 9c                 t2 = 0xffffffffffffff9c
 16396: 84 cc fe 07              a5 = a5 & 0x7fe
 16400: c8 2c 0c                 a5 = a5 + t0
 16403: 7c c9                    a2 = u8 [a5]
 16405: 7c cc 01                 a5 = u8 [a5 + 0x1]
 16408: ca 48 08                 a1 = a1 * t2
 16411: c8 87 07                 a0 = a0 + a1
 16414: 78 19 04                 u8 [sp + 0x4] = a2
 16417: 78 1c 05                 u8 [sp + 0x5] = a5
 16420: 33 0c 01                 a5 = 0x1
 16423: 01                       fallthrough
      :                          @1150
 16424: 97 77 31                 a0 = a0 << 0x31
 16427: 98 77 30                 a0 = a0 >> 0x30
 16430: c8 27 07                 a0 = a0 + t0
 16433: 7c 78                    a1 = u8 [a0]
 16435: 7c 77 01                 a0 = u8 [a0 + 0x1]
 16438: 78 18 06                 u8 [sp + 0x6] = a1
 16441: 78 17 07                 u8 [sp + 0x7] = a0
 16444: 52 0a 0d                 jump @1153 if a3 != 0
      :                          @1151
 16447: 28 10                    jump @1154
      :                          @1152
 16449: 33 0c 05                 a5 = 0x5
 16452: 64 7b                    a4 = a0
 16454: 51 0a 09                 jump @1154 if a3 == 0
      :                          @1153
 16457: 97 b7 30                 a0 = a4 << 0x30
 16460: 51 07 1b                 jump @1155 if a0 == 0
      :                          @1154
 16463: 97 bb 01                 a4 = a4 << 0x1
 16466: 84 bb 1e                 a4 = a4 & 0x1e
 16469: c8 2b 0b                 a4 = a4 + t0
 16472: 7c b7 01                 a0 = u8 [a4 + 0x1]
 16475: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 16478: 95 18 03                 a1 = sp + 0x3
 16481: c8 c8 08                 a1 = a1 + a5
 16484: 78 87                    u8 [a1] = a0
 16486: 01                       fallthrough
      :                          @1155
 16487: 9a cb 05                 a4 = 0x5 - a5
 16490: 95 1a 03                 a3 = sp + 0x3
 16493: c8 ca 0a                 a3 = a3 + a5
 16496: 33 08 01                 a1 = 0x1
 16499: 64 37                    a0 = t1
 16501: 33 09                    a2 = 0
 16503: 50 20 d2 01 13 ef        ra = 466, jump @835
      :                          @1156 [@dyn 233]
 16509: 82 10 08                 ra = u64 [sp + 0x8]
 16512: 95 11 10                 sp = sp + 0x10
 16515: 32 00                    ret
      :                          @1157
 16517: 00                       trap
      :                          @1158 [@dyn 234]
 16518: 00                       trap
      :                          @1159
 16519: 33 0c 01 01              a5 = 0x101
 16523: ac c8 36                 jump @1164 if a1 <u a5
      :                          @1160
 16526: 7d 73 00 01              t1 = i8 [a0 + 0x100]
 16530: 33 02 bf                 t0 = 0xffffffffffffffbf
 16533: 33 04 00 01              t2 = 0x100
 16537: ad 32 1e                 jump @1163 if t0 <s t1
      :                          @1161
 16540: 7d 73 ff 00              t1 = i8 [a0 + 0xff]
 16544: 33 04 ff 00              t2 = 0xff
 16548: 5a 13 bf 13              jump @1163 if t1 >s 4294967231
      :                          @1162
 16552: 7d 7c fe 00              a5 = i8 [a0 + 0xfe]
 16556: 89 cc c0                 a5 = a5 <s 0xffffffffffffffc0
 16559: 85 cc 01                 a5 = a5 ^ 0x1
 16562: 95 c4 fd 00              t2 = a5 + 0xfd
 16566: 01                       fallthrough
      :                          @1163
 16567: c8 47 0c                 a5 = a0 + t2
 16570: 7d cc                    a5 = i8 [a5]
 16572: 58 1c bf a9 00           jump @1187 if a5 <=s 4294967231
      :                          @1164
 16577: ac 98 a3 00              jump @1186 if a1 <u a2
      :                          @1165
 16581: ac a8 9f 00              jump @1186 if a1 <u a3
      :                          @1166
 16585: ac 9a 9b 00              jump @1186 if a3 <u a2
      :                          @1167
 16589: 51 09 12                 jump @1170 if a2 == 0
      :                          @1168
 16592: ae 89 0f                 jump @1170 if a2 >=u a1
      :                          @1169
 16595: c8 97 0c                 a5 = a0 + a2
 16598: 7d cc                    a5 = i8 [a5]
 16600: 89 cc c0                 a5 = a5 <s 0xffffffffffffffc0
 16603: db c9 0a                 a3 = a2 if a5 != 0
 16606: 01                       fallthrough
      :                          @1170
 16607: 64 89                    a2 = a1
 16609: ae 8a 2e                 jump @1176 if a3 >=u a1
      :                          @1171
 16612: 33 09 03                 a2 = 0x3
 16615: e4 9a 02                 t0 = maxu(a3, a2)
 16618: 95 22 fd                 t0 = t0 + 0xfffffffffffffffd
 16621: 95 ac 01                 a5 = a3 + 0x1
 16624: ac 2c 95                 jump @1157 if a5 <u t0
      :                          @1172
 16627: c9 2c 0c                 a5 = a5 - t0
 16630: c8 7a 0a                 a3 = a3 + a0
 16633: 33 03 c0                 t1 = 0xffffffffffffffc0
 16636: 01                       fallthrough
      :                          @1173
 16637: 51 0c 0e                 jump @1175 if a5 == 0
      :                          @1174
 16640: 7d a9                    a2 = i8 [a3]
 16642: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 16645: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 16648: ad 39 f5                 jump @1173 if a2 <s t1
      :                          @1175
 16651: c8 2c 09                 a2 = a5 + t0
 16654: 01                       fallthrough
      :                          @1176
 16655: c8 97 0a                 a3 = a0 + a2
 16658: 52 09 07                 jump @1179 if a2 != 0
      :                          @1177
 16661: ab 89 0f                 jump @1182 if a2 != a1
      :                          @1178
 16664: 00                       trap
      :                          @1179
 16665: ae 89 57                 jump @1188 if a2 >=u a1
      :                          @1180
 16668: 7d a2                    t0 = i8 [a3]
 16670: 5a 12 bf f7              jump @1177 if t0 >s 4294967231
      :                          @1181
 16674: 28 51                    jump @1189
      :                          @1182
 16676: 7d a7                    a0 = i8 [a3]
 16678: 59 07 3e                 jump @1186 if a0 >=s 0
      :                          @1183
 16681: 84 77 ff 00              a0 = a0 & 0xff
 16685: 53 27 e0 00 37           jump @1186 if a0 <u 224
      :                          @1184
 16690: 53 27 f0 00 32           jump @1186 if a0 <u 240
      :                          @1185
 16695: 7c a8 01                 a1 = u8 [a3 + 0x1]
 16698: 7c a9 02                 a2 = u8 [a3 + 0x2]
 16701: 84 88 3f                 a1 = a1 & 0x3f
 16704: 84 99 3f                 a2 = a2 & 0x3f
 16707: 7c aa 03                 a3 = u8 [a3 + 0x3]
 16710: 97 77 3d                 a0 = a0 << 0x3d
 16713: 98 77 2b                 a0 = a0 >> 0x2b
 16716: 97 88 0c                 a1 = a1 << 0xc
 16719: 97 99 06                 a2 = a2 << 0x6
 16722: d4 98 08                 a1 = a1 | a2
 16725: 84 a9 3f                 a2 = a3 & 0x3f
 16728: d4 98 08                 a1 = a1 | a2
 16731: d4 87 07                 a0 = a0 | a1
 16734: 51 37 00 00 11 ba        jump @1178 if a0 == 1114112
      :                          @1186
 16740: 00                       trap
      :                          @1187
 16741: 33 09                    a2 = 0
 16743: 64 4a                    a3 = t2
 16745: 33 00 d4 01              ra = 0x1d4
 16749: 28 1a ff                 jump @1159
      :                          @1188
 16752: aa 89 a5                 jump @1177 if a2 == a1
      :                          @1189
 16755: 64 8a                    a3 = a1
 16757: 33 00 d4 01              ra = 0x1d4
 16761: 28 0e ff                 jump @1159
      :                          @1190 [@dyn 235]
 16764: 7b 79 08                 u64 [a0 + 0x8] = a2
 16767: 7b 7a 10                 u64 [a0 + 0x10] = a3
 16770: 49 17 18                 u64 [a0 + 24] = 0
 16773: 33 08 a0 11 01           a1 = 0x111a0
 16778: 7b 78                    u64 [a0] = a1
 16780: 32 00                    ret
      :                          @1191 [@dyn 236]
 16782: 33 07                    a0 = 0
 16784: 32 00                    ret
      :                          @1192 [@dyn 237]
 16786: 32 00                    ret
      :                          @1193
 16788: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 16791: 7b 10 40                 u64 [sp + 0x40] = ra
 16794: 7b 15 38                 u64 [sp + 0x38] = s0
 16797: 7b 16 30                 u64 [sp + 0x30] = s1
 16800: 64 75                    s0 = a0
 16802: 82 7a                    a3 = u64 [a0]
 16804: 95 a7 01                 a0 = a3 + 0x1
 16807: 97 a8 01                 a1 = a3 << 0x1
 16810: e4 87 08                 a1 = maxu(a0, a1)
 16813: 98 89 3b                 a2 = a1 >> 0x3b
 16816: 33 07                    a0 = 0
 16818: 52 09 d0 dd              jump @505 if a2 != 0
      :                          @1194
 16822: 33 09 04                 a2 = 0x4
 16825: e4 98 06                 s1 = maxu(a1, a2)
 16828: 97 69 05                 a2 = s1 << 0x5
 16831: 14 0b f8 ff ff ff ff ff ff 7f a4 = 0x7ffffffffffffff8
 16841: ac 9b b9 dd              jump @505 if a4 <u a2
      :                          @1195
 16845: 52 0a 07                 jump @1197 if a3 != 0
      :                          @1196
 16848: 33 07                    a0 = 0
 16850: 28 12                    jump @1198
      :                          @1197
 16852: 82 57 08                 a0 = u64 [s0 + 0x8]
 16855: 97 aa 05                 a3 = a3 << 0x5
 16858: 7b 17 18                 u64 [sp + 0x18] = a0
 16861: 7b 1a 28                 u64 [sp + 0x28] = a3
 16864: 33 07 08                 a0 = 0x8
 16867: 01                       fallthrough
      :                          @1198
 16868: 7b 17 20                 u64 [sp + 0x20] = a0
 16871: 64 17                    a0 = sp
 16873: 33 08 08                 a1 = 0x8
 16876: 95 1a 18                 a3 = sp + 0x18
 16879: 50 20 dc 01 26           ra = 476, jump @1202
      :                          @1199 [@dyn 238]
 16884: 82 17                    a0 = u64 [sp]
 16886: 52 07 19                 jump @1201 if a0 != 0
      :                          @1200
 16889: 82 17 08                 a0 = u64 [sp + 0x8]
 16892: 7b 57 08                 u64 [s0 + 0x8] = a0
 16895: 7b 56                    u64 [s0] = s1
 16897: 82 10 40                 ra = u64 [sp + 0x40]
 16900: 82 15 38                 s0 = u64 [sp + 0x38]
 16903: 82 16 30                 s1 = u64 [sp + 0x30]
 16906: 95 11 48                 sp = sp + 0x48
 16909: 32 00                    ret
      :                          @1201
 16911: 82 17 08                 a0 = u64 [sp + 0x8]
 16914: 28 70 dd                 jump @505
      :                          @1202
 16917: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 16920: 7b 10 38                 u64 [sp + 0x38] = ra
 16923: 7b 15 30                 u64 [sp + 0x30] = s0
 16926: 7b 16 28                 u64 [sp + 0x28] = s1
 16929: 82 ab 08                 a4 = u64 [a3 + 0x8]
 16932: 51 0b b2 00              jump @1218 if a4 == 0
      :                          @1203
 16936: 82 a6 10                 s1 = u64 [a3 + 0x10]
 16939: 51 06 0f 01              jump @1229 if s1 == 0
      :                          @1204
 16943: 66 8b                    a4 = cpop a1
 16945: 33 0c 01                 a5 = 0x1
 16948: ab cb 68 01              jump @1240 if a4 != a5
      :                          @1205
 16952: 7b 16 18                 u64 [sp + 0x18] = s1
 16955: 82 aa                    a3 = u64 [a3]
 16957: 7b 1a 20                 u64 [sp + 0x20] = a3
 16960: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 16963: 33 03 00 00 00 08        t1 = 0x8000000
 16969: 33 04 20 00 03           t2 = 0x30020
 16974: c8 34 04                 t2 = t2 + t1
 16977: 01                       fallthrough
      :                          @1206
 16978: 82 4b                    a4 = u64 [t2]
 16980: c8 9b 0a                 a3 = a4 + a2
 16983: ac ba 45 01              jump @1240 if a3 <u a4
      :                          @1207
 16987: c8 8a 0c                 a5 = a3 + a1
 16990: 33 05                    s0 = 0
 16992: ac ac 43 01              jump @1242 if a5 <u a3
      :                          @1208
 16996: ac c3 3f 01              jump @1242 if t1 <u a5
      :                          @1209
 17000: 33 05 20 00 03           s0 = 0x30020
 17005: c9 a5 05                 s0 = s0 - a3
 17008: c8 35 00                 ra = s0 + t1
 17011: d2 02 0c                 a5 = t0 & ra
 17014: c8 ca 0a                 a3 = a3 + a5
 17017: 01                       fallthrough
      :                          @1210
 17018: 82 46                    s1 = u64 [t2]
 17020: ab b6 d6                 jump @1206 if s1 != a4
      :                          @1211
 17023: 7b 4a                    u64 [t2] = a3
 17025: 7b 18 10                 u64 [sp + 0x10] = a1
 17028: 7b 19 08                 u64 [sp + 0x8] = a2
 17031: c9 c0 05                 s0 = ra - a5
 17034: 7b 17                    u64 [sp] = a0
 17036: 64 57                    a0 = s0
 17038: 82 18 20                 a1 = u64 [sp + 0x20]
 17041: 82 16 18                 s1 = u64 [sp + 0x18]
 17044: 64 69                    a2 = s1
 17046: 50 20 de 01 01 14        ra = 478, jump @1603
      :                          @1212 [@dyn 239]
 17052: 64 62                    t0 = s1
 17054: 82 16 20                 s1 = u64 [sp + 0x20]
 17057: 82 17                    a0 = u64 [sp]
 17059: 33 09 20 00 03           a2 = 0x30020
 17064: 95 98 00 00 00 08        a1 = a2 + 0x8000000
 17070: 01                       fallthrough
      :                          @1213
 17071: 82 89                    a2 = u64 [a1]
 17073: c9 98 0a                 a3 = a1 - a2
 17076: ab 6a 19                 jump @1217 if a3 != s1
      :                          @1214
 17079: c9 29 0a                 a3 = a2 - t0
 17082: 01                       fallthrough
      :                          @1215
 17083: 82 8b                    a4 = u64 [a1]
 17085: ab 9b f2                 jump @1213 if a4 != a2
      :                          @1216
 17088: 7b 8a                    u64 [a1] = a3
 17090: 33 0c                    a5 = 0
 17092: 82 19 08                 a2 = u64 [sp + 0x8]
 17095: 82 18 10                 a1 = u64 [sp + 0x10]
 17098: 28 d9 00                 jump @1242
      :                          @1217
 17101: 82 19 08                 a2 = u64 [sp + 0x8]
 17104: 82 18 10                 a1 = u64 [sp + 0x10]
 17107: 28 d0 00                 jump @1242
      :                          @1218
 17110: 51 09 ca 00              jump @1241 if a2 == 0
      :                          @1219
 17114: 66 8a                    a3 = cpop a1
 17116: 33 0b 01                 a4 = 0x1
 17119: ab ba bd 00              jump @1240 if a3 != a4
      :                          @1220
 17123: 95 83 ff                 t1 = a1 + 0xffffffffffffffff
 17126: 33 04 00 00 00 08        t2 = 0x8000000
 17132: 33 02 20 00 03           t0 = 0x30020
 17137: c8 42 00                 ra = t0 + t2
 17140: 01                       fallthrough
      :                          @1221
 17141: 82 0a                    a3 = u64 [ra]
 17143: c8 9a 0c                 a5 = a3 + a2
 17146: ac ac a2 00              jump @1240 if a5 <u a3
      :                          @1222
 17150: c8 8c 06                 s1 = a5 + a1
 17153: 33 05                    s0 = 0
 17155: ac c6 a0 00              jump @1242 if s1 <u a5
      :                          @1223
 17159: 56 46 00 00 00 08 9c 00  jump @1242 if s1 >u 134217728
      :                          @1224
 17167: c9 c2 06                 s1 = t0 - a5
 17170: 95 66 00 00 00 08        s1 = s1 + 0x8000000
 17176: d2 63 05                 s0 = t1 & s1
 17179: c8 5c 0c                 a5 = a5 + s0
 17182: 64 34                    t2 = t1
 17184: 64 23                    t1 = t0
 17186: 01                       fallthrough
      :                          @1225
 17187: 82 0b                    a4 = u64 [ra]
 17189: ab ab 06                 jump @1227 if a4 != a3
      :                          @1226
 17192: 7b 0c                    u64 [ra] = a5
 17194: 01                       fallthrough
      :                          @1227
 17195: 64 32                    t0 = t1
 17197: 64 43                    t1 = t2
 17199: 33 04 00 00 00 08        t2 = 0x8000000
 17205: ab ab c0                 jump @1221 if a4 != a3
      :                          @1228
 17208: 28 5f                    jump @1239
      :                          @1229
 17210: 51 09 66                 jump @1241 if a2 == 0
      :                          @1230
 17213: 66 8a                    a3 = cpop a1
 17215: 33 0b 01                 a4 = 0x1
 17218: ab ba 5a                 jump @1240 if a3 != a4
      :                          @1231
 17221: 95 83 ff                 t1 = a1 + 0xffffffffffffffff
 17224: 33 04 00 00 00 08        t2 = 0x8000000
 17230: 33 02 20 00 03           t0 = 0x30020
 17235: c8 42 00                 ra = t0 + t2
 17238: 01                       fallthrough
      :                          @1232
 17239: 82 0a                    a3 = u64 [ra]
 17241: c8 9a 0c                 a5 = a3 + a2
 17244: ac ac 40                 jump @1240 if a5 <u a3
      :                          @1233
 17247: c8 8c 06                 s1 = a5 + a1
 17250: 33 05                    s0 = 0
 17252: ac c6 3f                 jump @1242 if s1 <u a5
      :                          @1234
 17255: 56 46 00 00 00 08 3c     jump @1242 if s1 >u 134217728
      :                          @1235
 17262: c9 c2 06                 s1 = t0 - a5
 17265: 95 66 00 00 00 08        s1 = s1 + 0x8000000
 17271: d2 63 05                 s0 = t1 & s1
 17274: c8 5c 0c                 a5 = a5 + s0
 17277: 64 34                    t2 = t1
 17279: 64 23                    t1 = t0
 17281: 01                       fallthrough
      :                          @1236
 17282: 82 0b                    a4 = u64 [ra]
 17284: ab ab 06                 jump @1238 if a4 != a3
      :                          @1237
 17287: 7b 0c                    u64 [ra] = a5
 17289: 01                       fallthrough
      :                          @1238
 17290: 64 32                    t0 = t1
 17292: 64 43                    t1 = t2
 17294: 33 04 00 00 00 08        t2 = 0x8000000
 17300: ab ab c3                 jump @1232 if a4 != a3
      :                          @1239
 17303: c9 56 05                 s0 = s1 - s0
 17306: 28 09                    jump @1242
      :                          @1240
 17308: 33 05                    s0 = 0
 17310: 28 05                    jump @1242
      :                          @1241
 17312: 64 85                    s0 = a1
 17314: 01                       fallthrough
      :                          @1242
 17315: 88 5a 01                 a3 = s0 <u 0x1
 17318: db 55 08                 a1 = s0 if s0 != 0
 17321: 7b 78 08                 u64 [a0 + 0x8] = a1
 17324: 7b 79 10                 u64 [a0 + 0x10] = a2
 17327: 7b 7a                    u64 [a0] = a3
 17329: 82 10 38                 ra = u64 [sp + 0x38]
 17332: 82 15 30                 s0 = u64 [sp + 0x30]
 17335: 82 16 28                 s1 = u64 [sp + 0x28]
 17338: 95 11 40                 sp = sp + 0x40
 17341: 32 00                    ret
      :                          @1243
 17343: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 17346: 7b 10 40                 u64 [sp + 0x40] = ra
 17349: 7b 15 38                 u64 [sp + 0x38] = s0
 17352: 7b 16 30                 u64 [sp + 0x30] = s1
 17355: 64 75                    s0 = a0
 17357: 82 7b                    a4 = u64 [a0]
 17359: 95 b7 01                 a0 = a4 + 0x1
 17362: 97 ba 01                 a3 = a4 << 0x1
 17365: e4 a7 07                 a0 = maxu(a0, a3)
 17368: 33 08 04                 a1 = 0x4
 17371: e4 87 06                 s1 = maxu(a0, a1)
 17374: 33 07                    a0 = 0
 17376: 57 06 a2 db              jump @505 if s1 <s 0
      :                          @1244
 17380: 97 69 01                 a2 = s1 << 0x1
 17383: 14 0c fe ff ff ff ff ff ff 7f a5 = 0x7ffffffffffffffe
 17393: ac 9c 91 db              jump @505 if a5 <u a2
      :                          @1245
 17397: 52 0b 07                 jump @1247 if a4 != 0
      :                          @1246
 17400: 33 07                    a0 = 0
 17402: 28 0f                    jump @1248
      :                          @1247
 17404: 82 57 08                 a0 = u64 [s0 + 0x8]
 17407: 7b 17 18                 u64 [sp + 0x18] = a0
 17410: 7b 1a 28                 u64 [sp + 0x28] = a3
 17413: 33 07 02                 a0 = 0x2
 17416: 01                       fallthrough
      :                          @1248
 17417: 7b 17 20                 u64 [sp + 0x20] = a0
 17420: 64 17                    a0 = sp
 17422: 33 08 02                 a1 = 0x2
 17425: 95 1a 18                 a3 = sp + 0x18
 17428: 50 20 e0 01 01 fe        ra = 480, jump @1202
      :                          @1249 [@dyn 240]
 17434: 82 17                    a0 = u64 [sp]
 17436: 52 07 19                 jump @1251 if a0 != 0
      :                          @1250
 17439: 82 17 08                 a0 = u64 [sp + 0x8]
 17442: 7b 57 08                 u64 [s0 + 0x8] = a0
 17445: 7b 56                    u64 [s0] = s1
 17447: 82 10 40                 ra = u64 [sp + 0x40]
 17450: 82 15 38                 s0 = u64 [sp + 0x38]
 17453: 82 16 30                 s1 = u64 [sp + 0x30]
 17456: 95 11 48                 sp = sp + 0x48
 17459: 32 00                    ret
      :                          @1251
 17461: 82 17 08                 a0 = u64 [sp + 0x8]
 17464: 28 4a db                 jump @505
      :                          @1252
 17467: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 17470: 7b 10 40                 u64 [sp + 0x40] = ra
 17473: 7b 15 38                 u64 [sp + 0x38] = s0
 17476: 7b 16 30                 u64 [sp + 0x30] = s1
 17479: 64 75                    s0 = a0
 17481: 82 7a                    a3 = u64 [a0]
 17483: 95 a7 01                 a0 = a3 + 0x1
 17486: 97 a8 01                 a1 = a3 << 0x1
 17489: e4 87 08                 a1 = maxu(a0, a1)
 17492: 98 89 3d                 a2 = a1 >> 0x3d
 17495: 33 07                    a0 = 0
 17497: 52 09 29 db              jump @505 if a2 != 0
      :                          @1253
 17501: 33 09 04                 a2 = 0x4
 17504: e4 98 06                 s1 = maxu(a1, a2)
 17507: 97 69 03                 a2 = s1 << 0x3
 17510: 14 0b f8 ff ff ff ff ff ff 7f a4 = 0x7ffffffffffffff8
 17520: ac 9b 12 db              jump @505 if a4 <u a2
      :                          @1254
 17524: 52 0a 07                 jump @1256 if a3 != 0
      :                          @1255
 17527: 33 07                    a0 = 0
 17529: 28 12                    jump @1257
      :                          @1256
 17531: 82 57 08                 a0 = u64 [s0 + 0x8]
 17534: 97 aa 03                 a3 = a3 << 0x3
 17537: 7b 17 18                 u64 [sp + 0x18] = a0
 17540: 7b 1a 28                 u64 [sp + 0x28] = a3
 17543: 33 07 08                 a0 = 0x8
 17546: 01                       fallthrough
      :                          @1257
 17547: 7b 17 20                 u64 [sp + 0x20] = a0
 17550: 64 17                    a0 = sp
 17552: 33 08 08                 a1 = 0x8
 17555: 95 1a 18                 a3 = sp + 0x18
 17558: 50 20 e2 01 7f fd        ra = 482, jump @1202
      :                          @1258 [@dyn 241]
 17564: 82 17                    a0 = u64 [sp]
 17566: 52 07 19                 jump @1260 if a0 != 0
      :                          @1259
 17569: 82 17 08                 a0 = u64 [sp + 0x8]
 17572: 7b 57 08                 u64 [s0 + 0x8] = a0
 17575: 7b 56                    u64 [s0] = s1
 17577: 82 10 40                 ra = u64 [sp + 0x40]
 17580: 82 15 38                 s0 = u64 [sp + 0x38]
 17583: 82 16 30                 s1 = u64 [sp + 0x30]
 17586: 95 11 48                 sp = sp + 0x48
 17589: 32 00                    ret
      :                          @1260
 17591: 82 17 08                 a0 = u64 [sp + 0x8]
 17594: 28 c8 da                 jump @505
      :                          @1261
 17597: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 17600: 7b 10 40                 u64 [sp + 0x40] = ra
 17603: 7b 15 38                 u64 [sp + 0x38] = s0
 17606: 7b 16 30                 u64 [sp + 0x30] = s1
 17609: 64 75                    s0 = a0
 17611: 82 7a                    a3 = u64 [a0]
 17613: 95 a7 01                 a0 = a3 + 0x1
 17616: 97 a8 01                 a1 = a3 << 0x1
 17619: e4 87 08                 a1 = maxu(a0, a1)
 17622: 98 89 3e                 a2 = a1 >> 0x3e
 17625: 33 07                    a0 = 0
 17627: 52 09 a7 da              jump @505 if a2 != 0
      :                          @1262
 17631: 33 09 04                 a2 = 0x4
 17634: e4 98 06                 s1 = maxu(a1, a2)
 17637: 97 69 02                 a2 = s1 << 0x2
 17640: 14 0b fe ff ff ff ff ff ff 7f a4 = 0x7ffffffffffffffe
 17650: ac 9b 90 da              jump @505 if a4 <u a2
      :                          @1263
 17654: 52 0a 07                 jump @1265 if a3 != 0
      :                          @1264
 17657: 33 07                    a0 = 0
 17659: 28 12                    jump @1266
      :                          @1265
 17661: 82 57 08                 a0 = u64 [s0 + 0x8]
 17664: 97 aa 02                 a3 = a3 << 0x2
 17667: 7b 17 18                 u64 [sp + 0x18] = a0
 17670: 7b 1a 28                 u64 [sp + 0x28] = a3
 17673: 33 07 02                 a0 = 0x2
 17676: 01                       fallthrough
      :                          @1266
 17677: 7b 17 20                 u64 [sp + 0x20] = a0
 17680: 64 17                    a0 = sp
 17682: 33 08 02                 a1 = 0x2
 17685: 95 1a 18                 a3 = sp + 0x18
 17688: 50 20 e4 01 fd fc        ra = 484, jump @1202
      :                          @1267 [@dyn 242]
 17694: 82 17                    a0 = u64 [sp]
 17696: 52 07 19                 jump @1269 if a0 != 0
      :                          @1268
 17699: 82 17 08                 a0 = u64 [sp + 0x8]
 17702: 7b 57 08                 u64 [s0 + 0x8] = a0
 17705: 7b 56                    u64 [s0] = s1
 17707: 82 10 40                 ra = u64 [sp + 0x40]
 17710: 82 15 38                 s0 = u64 [sp + 0x38]
 17713: 82 16 30                 s1 = u64 [sp + 0x30]
 17716: 95 11 48                 sp = sp + 0x48
 17719: 32 00                    ret
      :                          @1269
 17721: 82 17 08                 a0 = u64 [sp + 0x8]
 17724: 28 46 da                 jump @505
      :                          @1270
 17727: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 17730: 7b 10 38                 u64 [sp + 0x38] = ra
 17733: 7b 15 30                 u64 [sp + 0x30] = s0
 17736: 7b 16 28                 u64 [sp + 0x28] = s1
 17739: ac 9a 62                 jump @1277 if a3 <u a2
      :                          @1271
 17742: 64 a6                    s1 = a3
 17744: 82 8a 10                 a3 = u64 [a1 + 0x10]
 17747: ac 6a 5a                 jump @1277 if a3 <u s1
      :                          @1272
 17750: 64 75                    s0 = a0
 17752: ab 96 16                 jump @1274 if s1 != a2
      :                          @1273
 17755: 49 15 08 01              u64 [s0 + 8] = 0x1
 17759: 49 15 10                 u64 [s0 + 16] = 0
 17762: 49 15 18                 u64 [s0 + 24] = 0
 17765: 33 07 a0 11 01           a0 = 0x111a0
 17770: 7b 57                    u64 [s0] = a0
 17772: 28 33                    jump @1276
      :                          @1274
 17774: 82 87                    a0 = u64 [a1]
 17776: 82 7b                    a4 = u64 [a0]
 17778: 7b 19                    u64 [sp] = a2
 17780: 82 89 08                 a2 = u64 [a1 + 0x8]
 17783: 95 88 18                 a1 = a1 + 0x18
 17786: 95 17 08                 a0 = sp + 0x8
 17789: b4 b0 02 e6 01           ra = 486, jump [a4]
      :                          @1275 [@dyn 243]
 17794: 82 17 10                 a0 = u64 [sp + 0x10]
 17797: 82 1b                    a4 = u64 [sp]
 17799: c9 b6 08                 a1 = s1 - a4
 17802: 82 19 08                 a2 = u64 [sp + 0x8]
 17805: 82 1a 20                 a3 = u64 [sp + 0x20]
 17808: c8 b7 07                 a0 = a0 + a4
 17811: 7b 58 10                 u64 [s0 + 0x10] = a1
 17814: 7b 59                    u64 [s0] = a2
 17816: 7b 5a 18                 u64 [s0 + 0x18] = a3
 17819: 7b 57 08                 u64 [s0 + 0x8] = a0
 17822: 01                       fallthrough
      :                          @1276
 17823: 82 10 38                 ra = u64 [sp + 0x38]
 17826: 82 15 30                 s0 = u64 [sp + 0x30]
 17829: 82 16 28                 s1 = u64 [sp + 0x28]
 17832: 95 11 40                 sp = sp + 0x40
 17835: 32 00                    ret
      :                          @1277
 17837: 00                       trap
      :                          @1278
 17838: 95 11 a8 fd              sp = sp + 0xfffffffffffffda8
 17842: 7b 10 50 02              u64 [sp + 0x250] = ra
 17846: 7b 15 48 02              u64 [sp + 0x248] = s0
 17850: 7b 16 40 02              u64 [sp + 0x240] = s1
 17854: 82 89 10                 a2 = u64 [a1 + 0x10]
 17857: 82 8a 08                 a3 = u64 [a1 + 0x8]
 17860: 55 19 02 08              jump @1280 if a2 >=u 2
      :                          @1279
 17864: 33 0b                    a4 = 0
 17866: 28 52                    jump @1287
      :                          @1280
 17868: 7c ab 01                 a4 = u8 [a3 + 0x1]
 17871: 7c ac                    a5 = u8 [a3]
 17873: 97 bb 08                 a4 = a4 << 0x8
 17876: d4 bc 0c                 a5 = a5 | a4
 17879: 33 0b 05                 a4 = 0x5
 17882: 52 2c ef 00 42           jump @1287 if a5 != 239
      :                          @1281
 17887: 51 19 02 e9              jump @1279 if a2 == 2
      :                          @1282
 17891: 7c ac 02                 a5 = u8 [a3 + 0x2]
 17894: 33 0b 06                 a4 = 0x6
 17897: 52 1c 01 33              jump @1287 if a5 != 1
      :                          @1283
 17901: 51 19 03 db              jump @1279 if a2 == 3
      :                          @1284
 17905: 7c ac 03                 a5 = u8 [a3 + 0x3]
 17908: 33 0b 07                 a4 = 0x7
 17911: 52 1c 01 25              jump @1287 if a5 != 1
      :                          @1285
 17915: 84 9b fe                 a4 = a2 & 0xfffffffffffffffe
 17918: 51 1b 04 ca              jump @1279 if a4 == 4
      :                          @1286
 17922: 7c ab 05                 a4 = u8 [a3 + 0x5]
 17925: 7c ac 04                 a5 = u8 [a3 + 0x4]
 17928: 97 bb 08                 a4 = a4 << 0x8
 17931: d4 cb 0b                 a4 = a4 | a5
 17934: 6f b6                    s1 = reverse a4
 17936: 98 66 30                 s1 = s1 >> 0x30
 17939: 84 6c 03                 a5 = s1 & 0x3
 17942: 33 0b 03                 a4 = 0x3
 17945: 51 0c 2f                 jump @1289 if a5 == 0
      :                          @1287
 17948: 78 7b 08                 u8 [a0 + 0x8] = a4
 17951: 14 0b 00 00 00 00 00 00 00 80 a4 = 0x8000000000000000
 17961: 7b 7b                    u64 [a0] = a4
 17963: 01                       fallthrough
      :                          @1288
 17964: 82 87                    a0 = u64 [a1]
 17966: 82 7c 20                 a5 = u64 [a0 + 0x20]
 17969: 95 87 18                 a0 = a1 + 0x18
 17972: 64 a8                    a1 = a3
 17974: 82 10 50 02              ra = u64 [sp + 0x250]
 17978: 82 15 48 02              s0 = u64 [sp + 0x248]
 17982: 82 16 40 02              s1 = u64 [sp + 0x240]
 17986: 95 11 58 02              sp = sp + 0x258
 17990: 32 0c                    jump [a5]
      :                          @1289
 17992: 51 19 06 80              jump @1279 if a2 == 6
      :                          @1290
 17996: 7c ac 06                 a5 = u8 [a3 + 0x6]
 17999: 33 05 02                 s0 = 0x2
 18002: 33 0b 08                 a4 = 0x8
 18005: ab 5c c7                 jump @1287 if a5 != s0
      :                          @1291
 18008: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 18012: 7b 18 c0 00              u64 [sp + 0xc0] = a1
 18016: 7b 19 a8 00              u64 [sp + 0xa8] = a2
 18020: 95 99 f9                 a2 = a2 + 0xfffffffffffffff9
 18023: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 18027: 95 a8 07                 a1 = a3 + 0x7
 18030: 95 17 58 01              a0 = sp + 0x158
 18034: 50 20 e8 01 13 09        ra = 488, jump @1434
      :                          @1292 [@dyn 244]
 18040: 82 1c 58 01              a5 = u64 [sp + 0x158]
 18044: 7c 1b 60 01              a4 = u8 [sp + 0x160]
 18048: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 18058: aa 7c 64 04              jump @1362 if a5 == a0
      :                          @1293
 18062: 7c 17 62 01              a0 = u8 [sp + 0x162]
 18066: 7c 18 61 01              a1 = u8 [sp + 0x161]
 18070: 7c 19 63 01              a2 = u8 [sp + 0x163]
 18074: 7c 1a 64 01              a3 = u8 [sp + 0x164]
 18078: 97 77 08                 a0 = a0 << 0x8
 18081: d4 87 07                 a0 = a0 | a1
 18084: 97 99 10                 a2 = a2 << 0x10
 18087: 97 aa 18                 a3 = a3 << 0x18
 18090: d4 a9 09                 a2 = a2 | a3
 18093: 7c 18 65 01              a1 = u8 [sp + 0x165]
 18097: 7c 1a 66 01              a3 = u8 [sp + 0x166]
 18101: d4 97 07                 a0 = a0 | a2
 18104: 7c 19 67 01              a2 = u8 [sp + 0x167]
 18108: 97 88 20                 a1 = a1 << 0x20
 18111: 97 aa 28                 a3 = a3 << 0x28
 18114: d4 a8 08                 a1 = a1 | a3
 18117: 97 99 30                 a2 = a2 << 0x30
 18120: d4 98 08                 a1 = a1 | a2
 18123: d4 87 07                 a0 = a0 | a1
 18126: 82 18 68 01              a1 = u64 [sp + 0x168]
 18130: 97 77 08                 a0 = a0 << 0x8
 18133: d4 b7 05                 s0 = a0 | a4
 18136: 33 0b 10                 a4 = 0x10
 18139: 56 28 00 04 81 00        jump @1303 if a1 >u 1024
      :                          @1294
 18145: 51 08 77                 jump @1302 if a1 == 0
      :                          @1295
 18148: 98 67 02                 a0 = s1 >> 0x2
 18151: 33 0b 0c                 a4 = 0xc
 18154: 7b 17 88 00              u64 [sp + 0x88] = a0
 18158: ab 78 6e                 jump @1303 if a1 != a0
      :                          @1296
 18161: 7b 18 70                 u64 [sp + 0x70] = a1
 18164: 7b 1c 90 00              u64 [sp + 0x90] = a5
 18168: 7b 15 98 00              u64 [sp + 0x98] = s0
 18172: 82 19 78 01              a2 = u64 [sp + 0x178]
 18176: 51 09 94 00              jump @1312 if a2 == 0
      :                          @1297
 18180: 82 1a 70 01              a3 = u64 [sp + 0x170]
 18184: 49 11 78                 u64 [sp + 120] = 0
 18187: 82 17 80 01              a0 = u64 [sp + 0x180]
 18191: 7b 17 68                 u64 [sp + 0x68] = a0
 18194: 7c a7                    a0 = u8 [a3]
 18196: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 18199: 95 aa 01                 a3 = a3 + 0x1
 18202: 49 21 80 00 02           u64 [sp + 128] = 0x2
 18207: 51 17 04 83 00           jump @1313 if a0 == 4
      :                          @1298
 18212: 33 0b 0b                 a4 = 0xb
 18215: 52 17 03 8f 00           jump @1315 if a0 != 3
      :                          @1299
 18220: 95 17 58 01              a0 = sp + 0x158
 18224: 64 a8                    a1 = a3
 18226: 50 20 ea 01 53 08        ra = 490, jump @1434
      :                          @1300 [@dyn 245]
 18232: 82 18 58 01              a1 = u64 [sp + 0x158]
 18236: 7c 1b 60 01              a4 = u8 [sp + 0x160]
 18240: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 18250: 7b 18 a0 00              u64 [sp + 0xa0] = a1
 18254: ab 78 72                 jump @1316 if a1 != a0
      :                          @1301
 18257: 49 21 a0 00              u64 [sp + 160] = 0
 18261: 28 25 03                 jump @1348
      :                          @1302
 18264: 33 0b 11                 a4 = 0x11
 18267: 01                       fallthrough
      :                          @1303
 18268: 51 0c 92 03              jump @1362 if a5 == 0
      :                          @1304
 18272: 56 4c 00 00 00 04 8e 03  jump @1362 if a5 >u 67108864
      :                          @1305
 18280: 97 c7 01                 a0 = a5 << 0x1
 18283: 33 08 20 00 03           a1 = 0x30020
 18288: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 18294: 01                       fallthrough
      :                          @1306
 18295: 82 89                    a2 = u64 [a1]
 18297: c9 98 0a                 a3 = a1 - a2
 18300: ab 5a 72 03              jump @1362 if a3 != s0
      :                          @1307
 18304: c9 79 0a                 a3 = a2 - a0
 18307: 01                       fallthrough
      :                          @1308
 18308: 82 8c                    a5 = u64 [a1]
 18310: ab 9c f1                 jump @1306 if a5 != a2
      :                          @1309
 18313: 7b 8a                    u64 [a1] = a3
 18315: 33 06                    s1 = 0
 18317: 01                       fallthrough
      :                          @1310
 18318: ab 9c e9                 jump @1306 if a5 != a2
      :                          @1311
 18321: 28 5d 03                 jump @1362
      :                          @1312
 18324: 33 0b                    a4 = 0
 18326: 49 21 a0 00              u64 [sp + 160] = 0
 18330: 49 21 80 00 02           u64 [sp + 128] = 0x2
 18335: 28 db 02                 jump @1348
      :                          @1313
 18338: 82 17 78                 a0 = u64 [sp + 0x78]
 18341: 7b 17 60                 u64 [sp + 0x60] = a0
 18344: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 18348: 55 19 03 d6 00           jump @1329 if a2 >=u 3
      :                          @1314
 18353: 33 0b                    a4 = 0
 18355: 28 c7 02                 jump @1348
      :                          @1315
 18358: 82 17 78                 a0 = u64 [sp + 0x78]
 18361: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 18365: 28 bd 02                 jump @1348
      :                          @1316
 18368: 7c 17 62 01              a0 = u8 [sp + 0x162]
 18372: 7c 18 61 01              a1 = u8 [sp + 0x161]
 18376: 7c 19 63 01              a2 = u8 [sp + 0x163]
 18380: 7c 1a 64 01              a3 = u8 [sp + 0x164]
 18384: 97 77 08                 a0 = a0 << 0x8
 18387: d4 87 07                 a0 = a0 | a1
 18390: 97 99 10                 a2 = a2 << 0x10
 18393: 97 aa 18                 a3 = a3 << 0x18
 18396: d4 a9 09                 a2 = a2 | a3
 18399: 7c 18 65 01              a1 = u8 [sp + 0x165]
 18403: 7c 1a 66 01              a3 = u8 [sp + 0x166]
 18407: d4 97 07                 a0 = a0 | a2
 18410: 7c 19 67 01              a2 = u8 [sp + 0x167]
 18414: 97 88 20                 a1 = a1 << 0x20
 18417: 97 aa 28                 a3 = a3 << 0x28
 18420: d4 a8 08                 a1 = a1 | a3
 18423: 97 99 30                 a2 = a2 << 0x30
 18426: d4 98 08                 a1 = a1 | a2
 18429: 82 19 68 01              a2 = u64 [sp + 0x168]
 18433: d4 87 07                 a0 = a0 | a1
 18436: 97 77 08                 a0 = a0 << 0x8
 18439: d4 b7 02                 t0 = a0 | a4
 18442: 7b 19 60                 u64 [sp + 0x60] = a2
 18445: 54 29 00 01 4c           jump @1326 if a2 <=u 256
      :                          @1317
 18450: 33 0b 12                 a4 = 0x12
 18453: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 18457: 51 07 38 ff              jump @1301 if a0 == 0
      :                          @1318
 18461: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 18465: 56 47 00 00 00 04 30 ff  jump @1301 if a0 >u 67108864
      :                          @1319
 18473: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 18477: 97 88 01                 a1 = a1 << 0x1
 18480: 33 09 20 00 03           a2 = 0x30020
 18485: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 18491: 01                       fallthrough
      :                          @1320
 18492: 82 9a                    a3 = u64 [a2]
 18494: c9 a9 0c                 a5 = a2 - a3
 18497: ab 2c 10 ff              jump @1301 if a5 != t0
      :                          @1321
 18501: c9 8a 0c                 a5 = a3 - a1
 18504: 01                       fallthrough
      :                          @1322
 18505: 82 96                    s1 = u64 [a2]
 18507: ab a6 f1                 jump @1320 if s1 != a3
      :                          @1323
 18510: 7b 9c                    u64 [a2] = a5
 18512: 33 07                    a0 = 0
 18514: 01                       fallthrough
      :                          @1324
 18515: ab a6 e9                 jump @1320 if s1 != a3
      :                          @1325
 18518: 28 fb fe                 jump @1301
      :                          @1326
 18521: 82 19 78 01              a2 = u64 [sp + 0x178]
 18525: 51 09 0d 02              jump @1346 if a2 == 0
      :                          @1327
 18529: 82 1a 70 01              a3 = u64 [sp + 0x170]
 18533: 7c a7                    a0 = u8 [a3]
 18535: 52 17 04 0b 02           jump @1347 if a0 != 4
      :                          @1328
 18540: 82 17 80 01              a0 = u64 [sp + 0x180]
 18544: 7b 17 78                 u64 [sp + 0x78] = a0
 18547: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 18550: 95 aa 01                 a3 = a3 + 0x1
 18553: 7b 12 80 00              u64 [sp + 0x80] = t0
 18557: 53 19 03 34 ff           jump @1314 if a2 <u 3
      :                          @1329
 18562: 7c a7 02                 a0 = u8 [a3 + 0x2]
 18565: 33 0b 09                 a4 = 0x9
 18568: 52 07 f2 01              jump @1348 if a0 != 0
      :                          @1330
 18572: 82 18 60                 a1 = u64 [sp + 0x60]
 18575: 97 87 01                 a0 = a1 << 0x1
 18578: 7b 17 50                 u64 [sp + 0x50] = a0
 18581: 95 77 03                 a0 = a0 + 0x3
 18584: 93 87                    a0 = 0 if a1 == 0
 18586: 82 18 70                 a1 = u64 [sp + 0x70]
 18589: 97 88 01                 a1 = a1 << 0x1
 18592: 7b 18 30                 u64 [sp + 0x30] = a1
 18595: c8 78 08                 a1 = a1 + a0
 18598: 95 8c 0d                 a5 = a1 + 0xd
 18601: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 18605: 82 88 10                 a1 = u64 [a1 + 0x10]
 18608: 82 19 68                 a2 = u64 [sp + 0x68]
 18611: 82 1b 78                 a4 = u64 [sp + 0x78]
 18614: c8 b9 09                 a2 = a2 + a4
 18617: 7b 1c 38                 u64 [sp + 0x38] = a5
 18620: c8 c9 09                 a2 = a2 + a5
 18623: c8 69 09                 a2 = a2 + s1
 18626: 33 0b 01                 a4 = 0x1
 18629: 7b 1b a8 00              u64 [sp + 0xa8] = a4
 18633: ac 98 8b 05              jump @1416 if a1 <u a2
      :                          @1331
 18637: 7c ab 01                 a4 = u8 [a3 + 0x1]
 18640: 7c aa                    a3 = u8 [a3]
 18642: 97 bb 08                 a4 = a4 << 0x8
 18645: d4 ba 0a                 a3 = a3 | a4
 18648: 6f aa                    a3 = reverse a3
 18650: 98 aa 30                 a3 = a3 >> 0x30
 18653: 7b 1a 08                 u64 [sp + 0x8] = a3
 18656: c8 a9 09                 a2 = a2 + a3
 18659: 49 21 a8 00 02           u64 [sp + 168] = 0x2
 18664: ac 89 6c 05              jump @1416 if a2 <u a1
      :                          @1332
 18668: 49 21 58 01              u64 [sp + 344] = 0
 18672: 49 21 60 01 02           u64 [sp + 352] = 0x2
 18677: 49 21 68 01              u64 [sp + 360] = 0
 18681: 49 21 70 01              u64 [sp + 368] = 0
 18685: 49 21 78 01 08           u64 [sp + 376] = 0x8
 18690: 49 21 80 01              u64 [sp + 384] = 0
 18694: 33 0b a0 11 01           a4 = 0x111a0
 18699: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
 18703: 33 0a 01                 a3 = 0x1
 18706: 7b 1a a8 01              u64 [sp + 0x1a8] = a3
 18710: 49 21 e0 01              u64 [sp + 480] = 0
 18714: 49 21 88 01              u64 [sp + 392] = 0
 18718: 49 21 b0 01              u64 [sp + 432] = 0
 18722: 49 21 b8 01              u64 [sp + 440] = 0
 18726: 49 21 90 01 08           u64 [sp + 400] = 0x8
 18731: 49 21 98 01              u64 [sp + 408] = 0
 18735: 7b 1b                    u64 [sp] = a4
 18737: 7b 1b c0 01              u64 [sp + 0x1c0] = a4
 18741: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
 18745: 46 21 e8 01              u8 [sp + 488] = 0
 18749: 49 21 d0 01              u64 [sp + 464] = 0
 18753: 49 21 d8 01              u64 [sp + 472] = 0
 18757: 82 19 38                 a2 = u64 [sp + 0x38]
 18760: ac 98 3d f7              jump @1157 if a1 <u a2
      :                          @1333
 18764: 82 19 88 00              a2 = u64 [sp + 0x88]
 18768: 51 09 c0 02              jump @1392 if a2 == 0
      :                          @1334
 18772: 82 19 c0 00              a2 = u64 [sp + 0xc0]
 18776: 82 99 08                 a2 = u64 [a2 + 0x8]
 18779: 49 21 b0 00              u64 [sp + 176] = 0
 18783: 82 1a 38                 a3 = u64 [sp + 0x38]
 18786: c8 a9 09                 a2 = a2 + a3
 18789: 7b 19 18                 u64 [sp + 0x18] = a2
 18792: c9 a8 09                 a2 = a1 - a3
 18795: 7b 19 58                 u64 [sp + 0x58] = a2
 18798: 82 19 88 00              a2 = u64 [sp + 0x88]
 18802: 97 99 02                 a2 = a2 << 0x2
 18805: 7b 19 10                 u64 [sp + 0x10] = a2
 18808: c9 78 08                 a1 = a1 - a0
 18811: 82 17 30                 a0 = u64 [sp + 0x30]
 18814: c9 78 07                 a0 = a1 - a0
 18817: 95 78 f2                 a1 = a0 + 0xfffffffffffffff2
 18820: 7b 18 20                 u64 [sp + 0x20] = a1
 18823: 95 77 f3                 a0 = a0 + 0xfffffffffffffff3
 18826: 7b 17 28                 u64 [sp + 0x28] = a0
 18829: 49 21 88 00 01           u64 [sp + 136] = 0x1
 18834: 28 59                    jump @1336
      :                          @1335
 18836: 82 17 40                 a0 = u64 [sp + 0x40]
 18839: 97 77 18                 a0 = a0 << 0x18
 18842: 82 18 48                 a1 = u64 [sp + 0x48]
 18845: 97 88 10                 a1 = a1 << 0x10
 18848: 82 19 60 01              a2 = u64 [sp + 0x160]
 18852: d4 87 07                 a0 = a0 | a1
 18855: d4 57 07                 a0 = a0 | s0
 18858: 8b 77 08                 i32 a0 = a0 >> 0x8
 18861: 82 1a b0 00              a3 = u64 [sp + 0xb0]
 18865: c8 a9 09                 a2 = a2 + a3
 18868: 78 95                    u8 [a2] = s0
 18870: 98 78 08                 a1 = a0 >> 0x8
 18873: 78 98 02                 u8 [a2 + 0x2] = a1
 18876: 78 97 01                 u8 [a2 + 0x1] = a0
 18879: 98 77 10                 a0 = a0 >> 0x10
 18882: 78 97 03                 u8 [a2 + 0x3] = a0
 18885: 82 17 88 00              a0 = u64 [sp + 0x88]
 18889: 7b 17 68 01              u64 [sp + 0x168] = a0
 18893: 95 aa 04                 a3 = a3 + 0x4
 18896: 95 77 01                 a0 = a0 + 0x1
 18899: 7b 17 88 00              u64 [sp + 0x88] = a0
 18903: 82 17 58                 a0 = u64 [sp + 0x58]
 18906: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 18909: 7b 17 58                 u64 [sp + 0x58] = a0
 18912: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 18916: 82 17 10                 a0 = u64 [sp + 0x10]
 18919: aa a7 b3 02              jump @1398 if a0 == a3
      :                          @1336
 18923: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 18927: 82 18 28                 a1 = u64 [sp + 0x28]
 18930: aa 78 0f 01              jump @1363 if a1 == a0
      :                          @1337
 18934: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 18938: 82 18 20                 a1 = u64 [sp + 0x20]
 18941: aa 78 04 01              jump @1363 if a1 == a0
      :                          @1338
 18945: 82 17 58                 a0 = u64 [sp + 0x58]
 18948: 84 77 fe                 a0 = a0 & 0xfffffffffffffffe
 18951: 51 17 02 fa 00           jump @1363 if a0 == 2
      :                          @1339
 18956: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 18960: 82 18 18                 a1 = u64 [sp + 0x18]
 18963: c8 87 07                 a0 = a0 + a1
 18966: 7d 79                    a2 = i8 [a0]
 18968: 49 21 a8 00 03           u64 [sp + 168] = 0x3
 18973: 7b 19 48                 u64 [sp + 0x48] = a2
 18976: 57 09 e6 00              jump @1364 if a2 <s 0
      :                          @1340
 18980: 7c 79 01                 a2 = u8 [a0 + 0x1]
 18983: 7b 19 40                 u64 [sp + 0x40] = a2
 18986: 56 29 80 00 dc 00        jump @1364 if a2 >u 128
      :                          @1341
 18992: 7c 78 03                 a1 = u8 [a0 + 0x3]
 18995: 7c 77 02                 a0 = u8 [a0 + 0x2]
 18998: 97 88 08                 a1 = a1 << 0x8
 19001: d4 87 07                 a0 = a0 | a1
 19004: 6f 75                    s0 = reverse a0
 19006: 98 55 30                 s0 = s0 >> 0x30
 19009: 56 25 ff 03 c5 00        jump @1364 if s0 >u 1023
      :                          @1342
 19015: 7e 17 48                 a0 = u16 [sp + 0x48]
 19018: ac 75 bc 00              jump @1364 if s0 <u a0
      :                          @1343
 19022: 82 17 58 01              a0 = u64 [sp + 0x158]
 19026: 82 18 88 00              a1 = u64 [sp + 0x88]
 19030: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 19033: ab 78 3b ff              jump @1335 if a1 != a0
      :                          @1344
 19037: 95 17 58 01              a0 = sp + 0x158
 19041: 50 20 ec 01 5c fa        ra = 492, jump @1261
      :                          @1345 [@dyn 246]
 19047: 28 2d ff                 jump @1335
      :                          @1346
 19050: 33 0b                    a4 = 0
 19052: 7b 12 80 00              u64 [sp + 0x80] = t0
 19056: 28 0a                    jump @1348
      :                          @1347
 19058: 33 0b 0a                 a4 = 0xa
 19061: 7b 12 80 00              u64 [sp + 0x80] = t0
 19065: 01                       fallthrough
      :                          @1348
 19066: 82 15 98 00              s0 = u64 [sp + 0x98]
 19070: 82 18 90 00              a1 = u64 [sp + 0x90]
 19074: 51 08 2f                 jump @1355 if a1 == 0
      :                          @1349
 19077: 56 48 00 00 00 04 2c     jump @1355 if a1 >u 67108864
      :                          @1350
 19084: 97 87 01                 a0 = a1 << 0x1
 19087: 33 08 20 00 03           a1 = 0x30020
 19092: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 19098: 01                       fallthrough
      :                          @1351
 19099: 82 89                    a2 = u64 [a1]
 19101: c9 98 0a                 a3 = a1 - a2
 19104: ab 5a 11                 jump @1355 if a3 != s0
      :                          @1352
 19107: c9 79 0a                 a3 = a2 - a0
 19110: 01                       fallthrough
      :                          @1353
 19111: 82 8c                    a5 = u64 [a1]
 19113: ab 9c f2                 jump @1351 if a5 != a2
      :                          @1354
 19116: 7b 8a                    u64 [a1] = a3
 19118: 33 06                    s1 = 0
 19120: 01                       fallthrough
      :                          @1355
 19121: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 19125: 51 07 39                 jump @1362 if a0 == 0
      :                          @1356
 19128: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 19132: 56 48 00 00 00 04 32     jump @1362 if a1 >u 67108864
      :                          @1357
 19139: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 19143: 97 77 01                 a0 = a0 << 0x1
 19146: 33 08 20 00 03           a1 = 0x30020
 19151: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 19157: 82 15 80 00              s0 = u64 [sp + 0x80]
 19161: 01                       fallthrough
      :                          @1358
 19162: 82 89                    a2 = u64 [a1]
 19164: c9 98 0a                 a3 = a1 - a2
 19167: ab 5a 0f                 jump @1362 if a3 != s0
      :                          @1359
 19170: c9 79 0a                 a3 = a2 - a0
 19173: 01                       fallthrough
      :                          @1360
 19174: 82 8c                    a5 = u64 [a1]
 19176: ab 9c f2                 jump @1358 if a5 != a2
      :                          @1361
 19179: 7b 8a                    u64 [a1] = a3
 19181: 01                       fallthrough
      :                          @1362
 19182: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 19186: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 19190: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 19194: 82 1a b0 00              a3 = u64 [sp + 0xb0]
 19198: 28 1e fb                 jump @1287
      :                          @1363
 19201: 49 21 a8 00              u64 [sp + 168] = 0
 19205: 01                       fallthrough
      :                          @1364
 19206: 82 17 58 01              a0 = u64 [sp + 0x158]
 19210: 51 07 33                 jump @1371 if a0 == 0
      :                          @1365
 19213: 56 47 00 00 00 02 30     jump @1371 if a0 >u 33554432
      :                          @1366
 19220: 97 77 02                 a0 = a0 << 0x2
 19223: 82 18 60 01              a1 = u64 [sp + 0x160]
 19227: 33 09 20 00 03           a2 = 0x30020
 19232: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 19238: 01                       fallthrough
      :                          @1367
 19239: 82 9a                    a3 = u64 [a2]
 19241: c9 a9 0b                 a4 = a2 - a3
 19244: ab 8b 11                 jump @1371 if a4 != a1
      :                          @1368
 19247: c9 7a 0b                 a4 = a3 - a0
 19250: 01                       fallthrough
      :                          @1369
 19251: 82 9c                    a5 = u64 [a2]
 19253: ab ac f2                 jump @1367 if a5 != a3
      :                          @1370
 19256: 7b 9b                    u64 [a2] = a4
 19258: 33 06                    s1 = 0
 19260: 01                       fallthrough
      :                          @1371
 19261: 82 17 70 01              a0 = u64 [sp + 0x170]
 19265: 51 07 33                 jump @1378 if a0 == 0
      :                          @1372
 19268: 56 47 00 00 00 01 30     jump @1378 if a0 >u 16777216
      :                          @1373
 19275: 97 77 03                 a0 = a0 << 0x3
 19278: 82 18 78 01              a1 = u64 [sp + 0x178]
 19282: 33 09 20 00 03           a2 = 0x30020
 19287: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 19293: 01                       fallthrough
      :                          @1374
 19294: 82 9a                    a3 = u64 [a2]
 19296: c9 a9 0b                 a4 = a2 - a3
 19299: ab 8b 11                 jump @1378 if a4 != a1
      :                          @1375
 19302: c9 7a 0b                 a4 = a3 - a0
 19305: 01                       fallthrough
      :                          @1376
 19306: 82 9c                    a5 = u64 [a2]
 19308: ab ac f2                 jump @1374 if a5 != a3
      :                          @1377
 19311: 7b 9b                    u64 [a2] = a4
 19313: 33 06                    s1 = 0
 19315: 01                       fallthrough
      :                          @1378
 19316: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
 19320: 82 7a 20                 a3 = u64 [a0 + 0x20]
 19323: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
 19327: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 19331: 95 17 b8 01              a0 = sp + 0x1b8
 19335: b4 a0 02 ee 01           ra = 494, jump [a3]
      :                          @1379 [@dyn 247]
 19340: 82 16 98 01              s1 = u64 [sp + 0x198]
 19344: 82 17 90 01              a0 = u64 [sp + 0x190]
 19348: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 19352: 51 06 27                 jump @1383 if s1 == 0
      :                          @1380
 19355: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 19359: 95 55 18                 s0 = s0 + 0x18
 19362: 01                       fallthrough
      :                          @1381
 19363: 82 57 e8                 a0 = u64 [s0 + 0xffffffffffffffe8]
 19366: 82 7a 20                 a3 = u64 [a0 + 0x20]
 19369: 82 58 f0                 a1 = u64 [s0 + 0xfffffffffffffff0]
 19372: 82 59 f8                 a2 = u64 [s0 + 0xfffffffffffffff8]
 19375: 64 57                    a0 = s0
 19377: b4 a0 02 f0 01           ra = 496, jump [a3]
      :                          @1382 [@dyn 248]
 19382: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 19385: 95 55 20                 s0 = s0 + 0x20
 19388: 52 06 e7                 jump @1381 if s1 != 0
      :                          @1383
 19391: 82 17 88 01              a0 = u64 [sp + 0x188]
 19395: 51 07 32                 jump @1390 if a0 == 0
      :                          @1384
 19398: 56 37 00 00 40 2f        jump @1390 if a0 >u 4194304
      :                          @1385
 19404: 97 77 05                 a0 = a0 << 0x5
 19407: 33 08 20 00 03           a1 = 0x30020
 19412: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 19418: 01                       fallthrough
      :                          @1386
 19419: 82 89                    a2 = u64 [a1]
 19421: c9 98 0a                 a3 = a1 - a2
 19424: 82 1b b0 00              a4 = u64 [sp + 0xb0]
 19428: ab ba 11                 jump @1390 if a3 != a4
      :                          @1387
 19431: c9 79 0a                 a3 = a2 - a0
 19434: 01                       fallthrough
      :                          @1388
 19435: 82 8b                    a4 = u64 [a1]
 19437: ab 9b ee                 jump @1386 if a4 != a2
      :                          @1389
 19440: 7b 8a                    u64 [a1] = a3
 19442: 33 0c                    a5 = 0
 19444: 01                       fallthrough
      :                          @1390
 19445: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 19449: 82 7a 20                 a3 = u64 [a0 + 0x20]
 19452: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
 19456: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 19460: 95 17 d8 01              a0 = sp + 0x1d8
 19464: b4 a0 02 f2 01           ra = 498, jump [a3]
      :                          @1391 [@dyn 249]
 19469: 28 47 02                 jump @1416
      :                          @1392
 19472: 82 17 38                 a0 = u64 [sp + 0x38]
 19475: c8 67 07                 a0 = a0 + s1
 19478: 7b 17 40                 u64 [sp + 0x40] = a0
 19481: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
 19485: 01                       fallthrough
      :                          @1393
 19486: 82 17 98 00              a0 = u64 [sp + 0x98]
 19490: 82 18 30                 a1 = u64 [sp + 0x30]
 19493: c8 87 07                 a0 = a0 + a1
 19496: 7b 17 48                 u64 [sp + 0x48] = a0
 19499: 82 17 80 01              a0 = u64 [sp + 0x180]
 19503: 49 21 a8 00              u64 [sp + 168] = 0
 19507: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 19511: 97 77 03                 a0 = a0 << 0x3
 19514: 7b 17 88 00              u64 [sp + 0x88] = a0
 19518: 82 15 98 00              s0 = u64 [sp + 0x98]
 19522: 28 3c                    jump @1395
      :                          @1394
 19524: 82 17 78 01              a0 = u64 [sp + 0x178]
 19528: 82 18 a8 00              a1 = u64 [sp + 0xa8]
 19532: 82 19 58                 a2 = u64 [sp + 0x58]
 19535: c8 98 08                 a1 = a1 + a2
 19538: 95 55 02                 s0 = s0 + 0x2
 19541: 82 19 88 00              a2 = u64 [sp + 0x88]
 19545: c8 97 07                 a0 = a0 + a2
 19548: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 19552: 7b 78                    u64 [a0] = a1
 19554: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 19558: 95 77 01                 a0 = a0 + 0x1
 19561: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 19565: 7b 17 80 01              u64 [sp + 0x180] = a0
 19569: 95 99 08                 a2 = a2 + 0x8
 19572: 7b 19 88 00              u64 [sp + 0x88] = a2
 19576: 82 17 48                 a0 = u64 [sp + 0x48]
 19579: aa 75 33                 jump @1399 if s0 == a0
      :                          @1395
 19582: 82 17 70 01              a0 = u64 [sp + 0x170]
 19586: 7e 58                    a1 = u16 [s0 ]
 19588: 7b 18 58                 u64 [sp + 0x58] = a1
 19591: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 19595: ab 78 b9                 jump @1394 if a1 != a0
      :                          @1396
 19598: 95 17 70 01              a0 = sp + 0x170
 19602: 50 20 f4 01 a9 f7        ra = 500, jump @1252
      :                          @1397 [@dyn 250]
 19608: 28 ac                    jump @1394
      :                          @1398
 19610: 82 17 38                 a0 = u64 [sp + 0x38]
 19613: c8 67 07                 a0 = a0 + s1
 19616: 7b 17 40                 u64 [sp + 0x40] = a0
 19619: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
 19623: 82 17 70                 a0 = u64 [sp + 0x70]
 19626: 52 07 74 ff              jump @1393 if a0 != 0
      :                          @1399
 19630: 95 15 a0 01              s0 = sp + 0x1a0
 19634: 82 17 68                 a0 = u64 [sp + 0x68]
 19637: 82 19 40                 a2 = u64 [sp + 0x40]
 19640: c8 79 0a                 a3 = a2 + a0
 19643: 95 17 20 02              a0 = sp + 0x220
 19647: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 19651: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 19655: 50 20 f6 01 78 f8        ra = 502, jump @1270
      :                          @1400 [@dyn 251]
 19661: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
 19665: 82 7a 20                 a3 = u64 [a0 + 0x20]
 19668: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
 19672: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 19676: 95 17 b8 01              a0 = sp + 0x1b8
 19680: b4 a0 02 f8 01           ra = 504, jump [a3]
      :                          @1401 [@dyn 252]
 19685: 82 17 38 02              a0 = u64 [sp + 0x238]
 19689: 82 18 30 02              a1 = u64 [sp + 0x230]
 19693: 82 19 28 02              a2 = u64 [sp + 0x228]
 19697: 82 1a 20 02              a3 = u64 [sp + 0x220]
 19701: 7b 57 18                 u64 [s0 + 0x18] = a0
 19704: 7b 58 10                 u64 [s0 + 0x10] = a1
 19707: 7b 59 08                 u64 [s0 + 0x8] = a2
 19710: 7b 5a                    u64 [s0] = a3
 19712: 82 17 60                 a0 = u64 [sp + 0x60]
 19715: 51 07 7e                 jump @1408 if a0 == 0
      :                          @1402
 19718: 82 15 80 00              s0 = u64 [sp + 0x80]
 19722: 28 41                    jump @1404
      :                          @1403
 19724: 82 17 90 01              a0 = u64 [sp + 0x190]
 19728: 82 1b a8 00              a4 = u64 [sp + 0xa8]
 19732: 97 b8 05                 a1 = a4 << 0x5
 19735: 82 19 08 02              a2 = u64 [sp + 0x208]
 19739: c8 87 07                 a0 = a0 + a1
 19742: 82 18 00 02              a1 = u64 [sp + 0x200]
 19746: 82 1a f8 01              a3 = u64 [sp + 0x1f8]
 19750: 7b 79 18                 u64 [a0 + 0x18] = a2
 19753: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
 19757: 7b 78 10                 u64 [a0 + 0x10] = a1
 19760: 7b 7a 08                 u64 [a0 + 0x8] = a3
 19763: 95 55 02                 s0 = s0 + 0x2
 19766: 7b 79                    u64 [a0] = a2
 19768: 95 b7 01                 a0 = a4 + 0x1
 19771: 82 18 50                 a1 = u64 [sp + 0x50]
 19774: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 19777: 7b 17 98 01              u64 [sp + 0x198] = a0
 19781: 7b 18 50                 u64 [sp + 0x50] = a1
 19784: 51 08 39                 jump @1408 if a1 == 0
      :                          @1404
 19787: 7e 57                    a0 = u16 [s0 ]
 19789: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 19793: c8 79 0a                 a3 = a2 + a0
 19796: 95 17 f0 01              a0 = sp + 0x1f0
 19800: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 19804: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 19808: 50 20 fa 01 df f7        ra = 506, jump @1270
      :                          @1405 [@dyn 253]
 19814: 82 18 98 01              a1 = u64 [sp + 0x198]
 19818: 82 17 88 01              a0 = u64 [sp + 0x188]
 19822: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 19826: ab 78 9a                 jump @1403 if a1 != a0
      :                          @1406
 19829: 95 17 88 01              a0 = sp + 0x188
 19833: 50 20 fc 01 1b f4        ra = 508, jump @1193
      :                          @1407 [@dyn 254]
 19839: 28 8d                    jump @1403
      :                          @1408
 19841: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 19845: 82 78 10                 a1 = u64 [a0 + 0x10]
 19848: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 19852: ac 78 f8 01              jump @1433 if a1 <u a0
      :                          @1409
 19856: 64 85                    s0 = a1
 19858: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 19862: ab 78 10                 jump @1411 if a1 != a0
      :                          @1410
 19865: 49 21 18 02              u64 [sp + 536] = 0
 19869: 49 21 10 02              u64 [sp + 528] = 0
 19873: 33 05 01                 s0 = 0x1
 19876: 28 3c                    jump @1413
      :                          @1411
 19878: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 19882: 82 87                    a0 = u64 [a1]
 19884: 82 7b                    a4 = u64 [a0]
 19886: 82 89 08                 a2 = u64 [a1 + 0x8]
 19889: 95 88 18                 a1 = a1 + 0x18
 19892: 95 17 20 02              a0 = sp + 0x220
 19896: 64 5a                    a3 = s0
 19898: b4 b0 02 fe 01           ra = 510, jump [a4]
      :                          @1412 [@dyn 255]
 19903: 82 1b 28 02              a4 = u64 [sp + 0x228]
 19907: 82 1a b0 00              a3 = u64 [sp + 0xb0]
 19911: c9 a5 07                 a0 = s0 - a3
 19914: 82 18 38 02              a1 = u64 [sp + 0x238]
 19918: 82 19 20 02              a2 = u64 [sp + 0x220]
 19922: 7b 19                    u64 [sp] = a2
 19924: c8 ab 05                 s0 = a4 + a3
 19927: 7b 17 10 02              u64 [sp + 0x210] = a0
 19931: 7b 18 18 02              u64 [sp + 0x218] = a1
 19935: 01                       fallthrough
      :                          @1413
 19936: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 19940: 82 7a 20                 a3 = u64 [a0 + 0x20]
 19943: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
 19947: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 19951: 95 17 d8 01              a0 = sp + 0x1d8
 19955: b4 a0 02 00 02           ra = 512, jump [a3]
      :                          @1414 [@dyn 256]
 19960: 82 17 10 02              a0 = u64 [sp + 0x210]
 19964: 82 18 18 02              a1 = u64 [sp + 0x218]
 19968: 95 19 d0 01              a2 = sp + 0x1d0
 19972: 7b 97                    u64 [a2] = a0
 19974: 7b 98 08                 u64 [a2 + 0x8] = a1
 19977: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 19981: 82 18                    a1 = u64 [sp]
 19983: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
 19987: 7b 15 c8 01              u64 [sp + 0x1c8] = s0
 19991: 82 18 08                 a1 = u64 [sp + 0x8]
 19994: d3 87 07                 a0 = a0 ^ a1
 19997: 82 15 58 01              s0 = u64 [sp + 0x158]
 20001: 7c 18 60 01              a1 = u8 [sp + 0x160]
 20005: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 20009: 88 77 01                 a0 = a0 <u 0x1
 20012: 78 17 e8 01              u8 [sp + 0x1e8] = a0
 20016: 95 18 61 01              a1 = sp + 0x161
 20020: 95 17 c9 00              a0 = sp + 0xc9
 20024: 33 09 8f 00              a2 = 0x8f
 20028: 50 20 02 02 5b 08        ra = 514, jump @1603
      :                          @1415 [@dyn 257]
 20034: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 20044: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 20048: ab 75 a4 00              jump @1431 if s0 != a0
      :                          @1416
 20052: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 20056: 82 18 a8 00              a1 = u64 [sp + 0xa8]
 20060: 78 78 08                 u8 [a0 + 0x8] = a1
 20063: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20073: 7b 78                    u64 [a0] = a1
 20075: 82 17 90 00              a0 = u64 [sp + 0x90]
 20079: 51 07 3b                 jump @1423 if a0 == 0
      :                          @1417
 20082: 82 18 90 00              a1 = u64 [sp + 0x90]
 20086: 56 48 00 00 00 04 34     jump @1423 if a1 >u 67108864
      :                          @1418
 20093: 82 17 90 00              a0 = u64 [sp + 0x90]
 20097: 97 77 01                 a0 = a0 << 0x1
 20100: 33 08 20 00 03           a1 = 0x30020
 20105: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 20111: 01                       fallthrough
      :                          @1419
 20112: 82 89                    a2 = u64 [a1]
 20114: c9 98 0a                 a3 = a1 - a2
 20117: 82 1b 98 00              a4 = u64 [sp + 0x98]
 20121: ab ba 11                 jump @1423 if a3 != a4
      :                          @1420
 20124: c9 79 0a                 a3 = a2 - a0
 20127: 01                       fallthrough
      :                          @1421
 20128: 82 8b                    a4 = u64 [a1]
 20130: ab 9b ee                 jump @1419 if a4 != a2
      :                          @1422
 20133: 7b 8a                    u64 [a1] = a3
 20135: 33 0c                    a5 = 0
 20137: 01                       fallthrough
      :                          @1423
 20138: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 20142: 51 07 39                 jump @1430 if a0 == 0
      :                          @1424
 20145: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 20149: 56 48 00 00 00 04 32     jump @1430 if a1 >u 67108864
      :                          @1425
 20156: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 20160: 97 77 01                 a0 = a0 << 0x1
 20163: 33 08 20 00 03           a1 = 0x30020
 20168: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 20174: 01                       fallthrough
      :                          @1426
 20175: 82 89                    a2 = u64 [a1]
 20177: c9 98 0a                 a3 = a1 - a2
 20180: 82 1b 80 00              a4 = u64 [sp + 0x80]
 20184: ab ba 0f                 jump @1430 if a3 != a4
      :                          @1427
 20187: c9 79 0a                 a3 = a2 - a0
 20190: 01                       fallthrough
      :                          @1428
 20191: 82 8b                    a4 = u64 [a1]
 20193: ab 9b ee                 jump @1426 if a4 != a2
      :                          @1429
 20196: 7b 8a                    u64 [a1] = a3
 20198: 01                       fallthrough
      :                          @1430
 20199: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 20203: 82 8a 08                 a3 = u64 [a1 + 0x8]
 20206: 82 89 10                 a2 = u64 [a1 + 0x10]
 20209: 28 3b f7                 jump @1288
      :                          @1431
 20212: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 20216: 95 57 51                 a0 = s0 + 0x51
 20219: 95 18 c9 00              a1 = sp + 0xc9
 20223: 33 09 8f 00              a2 = 0x8f
 20227: 50 20 04 02 94 07        ra = 516, jump @1603
      :                          @1432 [@dyn 258]
 20233: 82 17 90 00              a0 = u64 [sp + 0x90]
 20237: 7b 57                    u64 [s0] = a0
 20239: 82 17 98 00              a0 = u64 [sp + 0x98]
 20243: 7b 57 08                 u64 [s0 + 0x8] = a0
 20246: 82 17 70                 a0 = u64 [sp + 0x70]
 20249: 7b 57 10                 u64 [s0 + 0x10] = a0
 20252: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 20256: 7b 57 18                 u64 [s0 + 0x18] = a0
 20259: 82 17 80 00              a0 = u64 [sp + 0x80]
 20263: 7b 57 20                 u64 [s0 + 0x20] = a0
 20266: 82 17 60                 a0 = u64 [sp + 0x60]
 20269: 7b 57 28                 u64 [s0 + 0x28] = a0
 20272: 82 17 68                 a0 = u64 [sp + 0x68]
 20275: 7b 57 30                 u64 [s0 + 0x30] = a0
 20278: 82 17 78                 a0 = u64 [sp + 0x78]
 20281: 7b 57 38                 u64 [s0 + 0x38] = a0
 20284: 79 56 40                 u16 [s0 + 0x40] = s1
 20287: 82 17 08                 a0 = u64 [sp + 0x8]
 20290: 79 57 42                 u16 [s0 + 0x42] = a0
 20293: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 20297: 82 78                    a1 = u64 [a0]
 20299: 82 79 08                 a2 = u64 [a0 + 0x8]
 20302: 82 7a 10                 a3 = u64 [a0 + 0x10]
 20305: 82 77 18                 a0 = u64 [a0 + 0x18]
 20308: 7b 58 e0 00              u64 [s0 + 0xe0] = a1
 20312: 7b 59 e8 00              u64 [s0 + 0xe8] = a2
 20316: 7b 5a f0 00              u64 [s0 + 0xf0] = a3
 20320: 7b 57 f8 00              u64 [s0 + 0xf8] = a0
 20324: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 20328: 7b 57 48                 u64 [s0 + 0x48] = a0
 20331: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 20335: 78 57 50                 u8 [s0 + 0x50] = a0
 20338: 82 10 50 02              ra = u64 [sp + 0x250]
 20342: 82 15 48 02              s0 = u64 [sp + 0x248]
 20346: 82 16 40 02              s1 = u64 [sp + 0x240]
 20350: 95 11 58 02              sp = sp + 0x258
 20354: 32 00                    ret
      :                          @1433
 20356: 00                       trap
      :                          @1434
 20357: 95 11 90                 sp = sp + 0xffffffffffffff90
 20360: 7b 10 68                 u64 [sp + 0x68] = ra
 20363: 7b 15 60                 u64 [sp + 0x60] = s0
 20366: 7b 16 58                 u64 [sp + 0x58] = s1
 20369: 33 0a 02                 a3 = 0x2
 20372: ae a9 14                 jump @1436 if a2 >=u a3
      :                          @1435
 20375: 46 17 08                 u8 [a0 + 8] = 0
 20378: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20388: 7b 78                    u64 [a0] = a1
 20390: 28 44                    jump @1440
      :                          @1436
 20392: 7c 8a 01                 a3 = u8 [a1 + 0x1]
 20395: 7c 8b                    a4 = u8 [a1]
 20397: 97 aa 08                 a3 = a3 << 0x8
 20400: d4 ba 0a                 a3 = a3 | a4
 20403: 97 ab 30                 a4 = a3 << 0x30
 20406: 51 0b 23                 jump @1439 if a4 == 0
      :                          @1437
 20409: 95 9b fe                 a4 = a2 + 0xfffffffffffffffe
 20412: 6f a9                    a2 = reverse a3
 20414: 98 93 30                 t1 = a2 >> 0x30
 20417: 97 3a 01                 a3 = t1 << 0x1
 20420: ae ab 34                 jump @1441 if a4 >=u a3
      :                          @1438
 20423: 46 17 08 0e              u8 [a0 + 8] = 0xe
 20427: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20437: 7b 78                    u64 [a0] = a1
 20439: 28 13                    jump @1440
      :                          @1439
 20441: 46 17 08 0d              u8 [a0 + 8] = 0xd
 20445: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20455: 7b 78                    u64 [a0] = a1
 20457: 01                       fallthrough
      :                          @1440
 20458: 82 10 68                 ra = u64 [sp + 0x68]
 20461: 82 15 60                 s0 = u64 [sp + 0x60]
 20464: 82 16 58                 s1 = u64 [sp + 0x58]
 20467: 95 11 70                 sp = sp + 0x70
 20470: 32 00                    ret
      :                          @1441
 20472: 7b 1b 28                 u64 [sp + 0x28] = a4
 20475: 95 89 02                 a2 = a1 + 0x2
 20478: 7b 19 30                 u64 [sp + 0x30] = a2
 20481: 33 02 00 00 00 08        t0 = 0x8000000
 20487: 33 0c 20 00 03           a5 = 0x30020
 20492: c8 2c 0c                 a5 = a5 + t0
 20495: 33 04 fe ff ff 07        t2 = 0x7fffffe
 20501: 01                       fallthrough
      :                          @1442
 20502: 82 c9                    a2 = u64 [a5]
 20504: c8 a9 05                 s0 = a2 + a3
 20507: ac 95 6c cf              jump @508 if s0 <u a2
      :                          @1443
 20511: ac 54 68 cf              jump @508 if t2 <u s0
      :                          @1444
 20515: 7b 1a 38                 u64 [sp + 0x38] = a3
 20518: 33 0a 20 00 03           a3 = 0x30020
 20523: c9 5a 0a                 a3 = a3 - s0
 20526: c8 2a 00                 ra = a3 + t0
 20529: 84 0b 01                 a4 = ra & 0x1
 20532: c8 b5 05                 s0 = s0 + a4
 20535: 01                       fallthrough
      :                          @1445
 20536: 82 c6                    s1 = u64 [a5]
 20538: ab 96 06                 jump @1447 if s1 != a2
      :                          @1446
 20541: 7b c5                    u64 [a5] = s0
 20543: 01                       fallthrough
      :                          @1447
 20544: 82 1a 38                 a3 = u64 [sp + 0x38]
 20547: ab 96 d3                 jump @1442 if s1 != a2
      :                          @1448
 20550: 33 0c                    a5 = 0
 20552: 33 06                    s1 = 0
 20554: c9 b0 04                 t2 = ra - a4
 20557: 7b 13 40                 u64 [sp + 0x40] = t1
 20560: 7b 14 48                 u64 [sp + 0x48] = t2
 20563: 49 11 50                 u64 [sp + 80] = 0
 20566: 33 09 01                 a2 = 0x1
 20569: e4 93 0a                 a3 = maxu(t1, a2)
 20572: 33 05 03                 s0 = 0x3
 20575: 82 12 30                 t0 = u64 [sp + 0x30]
 20578: 7b 17 10                 u64 [sp + 0x10] = a0
 20581: 7b 18 08                 u64 [sp + 0x8] = a1
 20584: 7b 1a                    u64 [sp] = a3
 20586: 28 1d                    jump @1450
      :                          @1449
 20588: 95 66 01                 s1 = s1 + 0x1
 20591: 6f b9                    a2 = reverse a4
 20593: 98 99 30                 a2 = a2 >> 0x30
 20596: c8 9c 0c                 a5 = a5 + a2
 20599: c8 54 0b                 a4 = t2 + s0
 20602: 79 b9 fd                 u16 [a4 + 0xfffffffffffffffd] = a2
 20605: 7b 16 50                 u64 [sp + 0x50] = s1
 20608: 95 55 02                 s0 = s0 + 0x2
 20611: aa 6a 96 00              jump @1463 if a3 == s1
      :                          @1450
 20615: c8 52 09                 a2 = t0 + s0
 20618: c8 58 0b                 a4 = a1 + s0
 20621: 7c bb                    a4 = u8 [a4]
 20623: 7c 99 fd                 a2 = u8 [a2 + 0xfffffffffffffffd]
 20626: 97 bb 08                 a4 = a4 << 0x8
 20629: d4 9b 0b                 a4 = a4 | a2
 20632: 97 b9 30                 a2 = a4 << 0x30
 20635: 51 09 2e                 jump @1454 if a2 == 0
      :                          @1451
 20638: 82 19 40                 a2 = u64 [sp + 0x40]
 20641: ab 96 cb                 jump @1449 if s1 != a2
      :                          @1452
 20644: 95 17 40                 a0 = sp + 0x40
 20647: 7b 1c 20                 u64 [sp + 0x20] = a5
 20650: 7b 1b 18                 u64 [sp + 0x18] = a4
 20653: 50 20 06 02 12 f3        ra = 518, jump @1243
      :                          @1453 [@dyn 259]
 20659: 82 1b 18                 a4 = u64 [sp + 0x18]
 20662: 82 1a                    a3 = u64 [sp]
 20664: 82 1c 20                 a5 = u64 [sp + 0x20]
 20667: 82 12 30                 t0 = u64 [sp + 0x30]
 20670: 82 18 08                 a1 = u64 [sp + 0x8]
 20673: 82 17 10                 a0 = u64 [sp + 0x10]
 20676: 82 14 48                 t2 = u64 [sp + 0x48]
 20679: 28 a5                    jump @1449
      :                          @1454
 20681: 82 18 40                 a1 = u64 [sp + 0x40]
 20684: 46 17 08 0f              u8 [a0 + 8] = 0xf
 20688: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 20698: 7b 79                    u64 [a0] = a2
 20700: 51 08 0e ff              jump @1440 if a1 == 0
      :                          @1455
 20704: 33 07 00 00 00 04        a0 = 0x4000000
 20710: ac 87 04 ff              jump @1440 if a0 <u a1
      :                          @1456
 20714: 82 17 48                 a0 = u64 [sp + 0x48]
 20717: 97 88 01                 a1 = a1 << 0x1
 20720: 33 0a 20 00 03           a3 = 0x30020
 20725: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
 20731: 01                       fallthrough
      :                          @1457
 20732: 82 9a                    a3 = u64 [a2]
 20734: c9 a9 0b                 a4 = a2 - a3
 20737: ab 7b e9 fe              jump @1440 if a4 != a0
      :                          @1458
 20741: c9 8a 0b                 a4 = a3 - a1
 20744: 01                       fallthrough
      :                          @1459
 20745: 82 9c                    a5 = u64 [a2]
 20747: ab ac f1                 jump @1457 if a5 != a3
      :                          @1460
 20750: 7b 9b                    u64 [a2] = a4
 20752: 33 06                    s1 = 0
 20754: 01                       fallthrough
      :                          @1461
 20755: ab ac e9                 jump @1457 if a5 != a3
      :                          @1462
 20758: 28 d4 fe                 jump @1440
      :                          @1463
 20761: 82 16 38                 s1 = u64 [sp + 0x38]
 20764: 82 18 28                 a1 = u64 [sp + 0x28]
 20767: c9 68 08                 a1 = a1 - s1
 20770: 82 19 50                 a2 = u64 [sp + 0x50]
 20773: 82 1a 48                 a3 = u64 [sp + 0x48]
 20776: 82 1b 40                 a4 = u64 [sp + 0x40]
 20779: c8 62 02                 t0 = t0 + s1
 20782: 7b 79 10                 u64 [a0 + 0x10] = a2
 20785: 7b 7a 08                 u64 [a0 + 0x8] = a3
 20788: 7b 7b                    u64 [a0] = a4
 20790: 7b 72 18                 u64 [a0 + 0x18] = t0
 20793: 7b 78 20                 u64 [a0 + 0x20] = a1
 20796: 7b 7c 28                 u64 [a0 + 0x28] = a5
 20799: 28 ab fe                 jump @1440
      :                          @1464 [@dyn 260]
 20802: 95 11 90                 sp = sp + 0xffffffffffffff90
 20805: 7b 10 68                 u64 [sp + 0x68] = ra
 20808: 7b 15 60                 u64 [sp + 0x60] = s0
 20811: 7b 16 58                 u64 [sp + 0x58] = s1
 20814: 82 8a 38                 a3 = u64 [a1 + 0x38]
 20817: 82 79 08                 a2 = u64 [a0 + 0x8]
 20820: 7b 19 40                 u64 [sp + 0x40] = a2
 20823: 82 76 10                 s1 = u64 [a0 + 0x10]
 20826: 82 85 30                 s0 = u64 [a1 + 0x30]
 20829: 7b 1a 28                 u64 [sp + 0x28] = a3
 20832: 82 a9 20                 a2 = u64 [a3 + 0x20]
 20835: 33 08 22                 a1 = 0x22
 20838: 64 57                    a0 = s0
 20840: 7b 19 18                 u64 [sp + 0x18] = a2
 20843: b4 90 02 0a 02           ra = 522, jump [a2]
      :                          @1465 [@dyn 261]
 20848: 33 08 01                 a1 = 0x1
 20851: 52 07 63 02              jump @1533 if a0 != 0
      :                          @1466
 20855: 51 06 1a 02              jump @1523 if s1 == 0
      :                          @1467
 20859: 7b 15 08                 u64 [sp + 0x8] = s0
 20862: 49 01                    u64 [sp + 0] = 0
 20864: 33 0a                    a3 = 0
 20866: 33 02 a1                 t0 = 0xffffffffffffffa1
 20869: 49 11 10 01 00 01        u64 [sp + 16] = 0x10001
 20875: 33 04 22                 t2 = 0x22
 20878: 33 03 5c                 t1 = 0x5c
 20881: 82 15 40                 s0 = u64 [sp + 0x40]
 20884: 64 68                    a1 = s1
 20886: 7b 16 20                 u64 [sp + 0x20] = s1
 20889: 28 0f                    jump @1469
      :                          @1468
 20891: c9 58 08                 a1 = a1 - s0
 20894: c8 9a 0a                 a3 = a3 + a2
 20897: 82 16 20                 s1 = u64 [sp + 0x20]
 20900: 51 08 b4 01              jump @1515 if a1 == 0
      :                          @1469
 20904: 33 07                    a0 = 0
 20906: c8 85 09                 a2 = s0 + a1
 20909: 7b 19 38                 u64 [sp + 0x38] = a2
 20912: 01                       fallthrough
      :                          @1470
 20913: c8 75 09                 a2 = s0 + a0
 20916: 7c 9b                    a4 = u8 [a2]
 20918: 95 bc 81                 a5 = a4 + 0xffffffffffffff81
 20921: ac 2c 12                 jump @1475 if a5 <u t0
      :                          @1471
 20924: aa 4b 0f                 jump @1475 if a4 == t2
      :                          @1472
 20927: aa 3b 0c                 jump @1475 if a4 == t1
      :                          @1473
 20930: 95 77 01                 a0 = a0 + 0x1
 20933: ab 78 ec                 jump @1470 if a1 != a0
      :                          @1474
 20936: 28 8c 01                 jump @1514
      :                          @1475
 20939: 7d 98                    a1 = i8 [a2]
 20941: 84 86 ff 00              s1 = a1 & 0xff
 20945: 57 08 0b                 jump @1477 if a1 <s 0
      :                          @1476
 20948: 95 99 01                 a2 = a2 + 0x1
 20951: 7b 19 30                 u64 [sp + 0x30] = a2
 20954: 28 5d                    jump @1482
      :                          @1477
 20956: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 20959: 84 68 1f                 a1 = s1 & 0x1f
 20962: 84 bb 3f                 a4 = a4 & 0x3f
 20965: 33 0c df 00              a5 = 0xdf
 20969: ae 6c 33                 jump @1480 if a5 >=u s1
      :                          @1478
 20972: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 20975: 97 bb 06                 a4 = a4 << 0x6
 20978: 84 cc 3f                 a5 = a5 & 0x3f
 20981: d4 cb 0b                 a4 = a4 | a5
 20984: 33 0c f0 00              a5 = 0xf0
 20988: ac c6 2e                 jump @1481 if s1 <u a5
      :                          @1479
 20991: 95 9c 04                 a5 = a2 + 0x4
 20994: 7b 1c 30                 u64 [sp + 0x30] = a5
 20997: 7c 99 03                 a2 = u8 [a2 + 0x3]
 21000: 97 88 3d                 a1 = a1 << 0x3d
 21003: 98 88 2b                 a1 = a1 >> 0x2b
 21006: 97 bb 06                 a4 = a4 << 0x6
 21009: 84 99 3f                 a2 = a2 & 0x3f
 21012: d4 b9 09                 a2 = a2 | a4
 21015: d4 89 06                 s1 = a2 | a1
 21018: 28 1d                    jump @1482
      :                          @1480
 21020: 95 99 02                 a2 = a2 + 0x2
 21023: 7b 19 30                 u64 [sp + 0x30] = a2
 21026: 97 88 06                 a1 = a1 << 0x6
 21029: d4 b8 06                 s1 = a1 | a4
 21032: 28 0f                    jump @1482
      :                          @1481
 21034: 95 99 03                 a2 = a2 + 0x3
 21037: 7b 19 30                 u64 [sp + 0x30] = a2
 21040: 97 88 0c                 a1 = a1 << 0xc
 21043: d4 8b 06                 s1 = a4 | a1
 21046: 01                       fallthrough
      :                          @1482
 21047: c8 a7 05                 s0 = a0 + a3
 21050: 95 17 4c                 a0 = sp + 0x4c
 21053: 64 68                    a1 = s1
 21055: 82 19 10                 a2 = u64 [sp + 0x10]
 21058: 50 20 0c 02 05 e5        ra = 524, jump @995
      :                          @1483 [@dyn 262]
 21064: 7c 17 4c                 a0 = u8 [sp + 0x4c]
 21067: 52 27 80 00 0a           jump @1485 if a0 != 128
      :                          @1484
 21072: 64 59                    a2 = s0
 21074: 28 d2 00                 jump @1510
      :                          @1485
 21077: 7c 17 57                 a0 = u8 [sp + 0x57]
 21080: 7c 18 56                 a1 = u8 [sp + 0x56]
 21083: bf 87 07                 i32 a0 = a0 - a1
 21086: 84 77 ff 00              a0 = a0 & 0xff
 21090: 33 03 5c                 t1 = 0x5c
 21093: 52 17 01 0f              jump @1487 if a0 != 1
      :                          @1486
 21097: 64 59                    a2 = s0
 21099: 33 02 a1                 t0 = 0xffffffffffffffa1
 21102: 33 04 22                 t2 = 0x22
 21105: 28 bd 00                 jump @1511
      :                          @1487
 21108: 82 1a                    a3 = u64 [sp]
 21110: ac a5 86 01              jump @1536 if s0 <u a3
      :                          @1488
 21114: 82 18 40                 a1 = u64 [sp + 0x40]
 21117: c8 a8 08                 a1 = a1 + a3
 21120: 51 0a 16                 jump @1493 if a3 == 0
      :                          @1489
 21123: 82 17 20                 a0 = u64 [sp + 0x20]
 21126: ae 7a 0c                 jump @1492 if a3 >=u a0
      :                          @1490
 21129: 7d 87                    a0 = i8 [a1]
 21131: 5a 17 bf 0b              jump @1493 if a0 >s 4294967231
      :                          @1491
 21135: 28 6d 01                 jump @1536
      :                          @1492
 21138: ab 7a 6a 01              jump @1536 if a3 != a0
      :                          @1493
 21142: 51 05 1c                 jump @1498 if s0 == 0
      :                          @1494
 21145: 82 17 20                 a0 = u64 [sp + 0x20]
 21148: ae 75 12                 jump @1497 if s0 >=u a0
      :                          @1495
 21151: 82 17 40                 a0 = u64 [sp + 0x40]
 21154: c8 57 07                 a0 = a0 + s0
 21157: 7d 77                    a0 = i8 [a0]
 21159: 5a 17 bf 0b              jump @1498 if a0 >s 4294967231
      :                          @1496
 21163: 28 51 01                 jump @1536
      :                          @1497
 21166: ab 75 4e 01              jump @1536 if s0 != a0
      :                          @1498
 21170: 82 17 28                 a0 = u64 [sp + 0x28]
 21173: 82 7b 18                 a4 = u64 [a0 + 0x18]
 21176: c9 a5 09                 a2 = s0 - a3
 21179: 82 17 08                 a0 = u64 [sp + 0x8]
 21182: 7b 1b                    u64 [sp] = a4
 21184: b4 b0 02 0e 02           ra = 526, jump [a4]
      :                          @1499 [@dyn 263]
 21189: 52 07 21 01              jump @1534 if a0 != 0
      :                          @1500
 21193: 7c 17 4c                 a0 = u8 [sp + 0x4c]
 21196: 52 27 80 00 19           jump @1504 if a0 != 128
      :                          @1501
 21201: 81 18 50                 a1 = i32 [sp + 0x50]
 21204: 82 17 08                 a0 = u64 [sp + 0x8]
 21207: 82 19 18                 a2 = u64 [sp + 0x18]
 21210: b4 90 02 10 02           ra = 528, jump [a2]
      :                          @1502 [@dyn 264]
 21215: 51 07 23                 jump @1506 if a0 == 0
      :                          @1503
 21218: 28 04 01                 jump @1534
      :                          @1504
 21221: 7c 18 56                 a1 = u8 [sp + 0x56]
 21224: 7c 19 57                 a2 = u8 [sp + 0x57]
 21227: c9 89 09                 a2 = a2 - a1
 21230: 95 17 4c                 a0 = sp + 0x4c
 21233: c8 78 08                 a1 = a1 + a0
 21236: 82 17 08                 a0 = u64 [sp + 0x8]
 21239: 82 1a                    a3 = u64 [sp]
 21241: b4 a0 02 12 02           ra = 530, jump [a3]
      :                          @1505 [@dyn 265]
 21246: 52 07 e8 00              jump @1534 if a0 != 0
      :                          @1506
 21250: 33 07 01                 a0 = 0x1
 21253: 53 26 80 00 17           jump @1509 if s1 <u 128
      :                          @1507
 21258: 98 68 0b                 a1 = s1 >> 0xb
 21261: 33 07 02                 a0 = 0x2
 21264: 51 08 0c                 jump @1509 if a1 == 0
      :                          @1508
 21267: 98 67 10                 a0 = s1 >> 0x10
 21270: 8e 77                    a0 = a0 >u 0
 21272: 95 77 03                 a0 = a0 + 0x3
 21275: 01                       fallthrough
      :                          @1509
 21276: 64 59                    a2 = s0
 21278: c8 57 07                 a0 = a0 + s0
 21281: 7b 17                    u64 [sp] = a0
 21283: 01                       fallthrough
      :                          @1510
 21284: 33 02 a1                 t0 = 0xffffffffffffffa1
 21287: 33 04 22                 t2 = 0x22
 21290: 33 03 5c                 t1 = 0x5c
 21293: 01                       fallthrough
      :                          @1511
 21294: 82 18 38                 a1 = u64 [sp + 0x38]
 21297: 82 15 30                 s0 = u64 [sp + 0x30]
 21300: 33 0a 01                 a3 = 0x1
 21303: 33 07 80 00              a0 = 0x80
 21307: ac 76 60 fe              jump @1468 if s1 <u a0
      :                          @1512
 21311: 98 67 0b                 a0 = s1 >> 0xb
 21314: 33 0a 02                 a3 = 0x2
 21317: 51 07 56 fe              jump @1468 if a0 == 0
      :                          @1513
 21321: 98 66 10                 s1 = s1 >> 0x10
 21324: 8e 6a                    a3 = s1 >u 0
 21326: 95 aa 03                 a3 = a3 + 0x3
 21329: 28 4a fe                 jump @1468
      :                          @1514
 21332: c8 8a 0a                 a3 = a3 + a1
 21335: 01                       fallthrough
      :                          @1515
 21336: 82 19                    a2 = u64 [sp]
 21338: ac 9a 91 00              jump @1535 if a3 <u a2
      :                          @1516
 21342: 82 15 08                 s0 = u64 [sp + 0x8]
 21345: 51 09 34                 jump @1524 if a2 == 0
      :                          @1517
 21348: ae 69 3a                 jump @1526 if a2 >=u s1
      :                          @1518
 21351: 82 17 40                 a0 = u64 [sp + 0x40]
 21354: c8 97 07                 a0 = a0 + a2
 21357: 7d 77                    a0 = i8 [a0]
 21359: 33 0b bf                 a4 = 0xffffffffffffffbf
 21362: 64 98                    a1 = a2
 21364: af 7b 77                 jump @1535 if a4 >=s a0
      :                          @1519
 21367: 51 0a 23                 jump @1525 if a3 == 0
      :                          @1520
 21370: ae 6a 2b                 jump @1528 if a3 >=u s1
      :                          @1521
 21373: 82 17 40                 a0 = u64 [sp + 0x40]
 21376: c8 a7 07                 a0 = a0 + a3
 21379: 7d 77                    a0 = i8 [a0]
 21381: 33 0b bf                 a4 = 0xffffffffffffffbf
 21384: 64 89                    a2 = a1
 21386: af 7b 61                 jump @1535 if a4 >=s a0
      :                          @1522
 21389: 64 a6                    s1 = a3
 21391: 28 1b                    jump @1529
      :                          @1523
 21393: 33 08                    a1 = 0
 21395: 28 17                    jump @1529
      :                          @1524
 21397: 33 08                    a1 = 0
 21399: 52 0a e3                 jump @1520 if a3 != 0
      :                          @1525
 21402: 33 06                    s1 = 0
 21404: 28 0e                    jump @1529
      :                          @1526
 21406: 64 68                    a1 = s1
 21408: aa 69 d7                 jump @1519 if a2 == s1
      :                          @1527
 21411: 28 48                    jump @1535
      :                          @1528
 21413: 64 89                    a2 = a1
 21415: ab 6a 44                 jump @1535 if a3 != s1
      :                          @1529
 21418: 82 17 28                 a0 = u64 [sp + 0x28]
 21421: 82 7a 18                 a3 = u64 [a0 + 0x18]
 21424: c9 86 09                 a2 = s1 - a1
 21427: 82 17 40                 a0 = u64 [sp + 0x40]
 21430: c8 78 08                 a1 = a1 + a0
 21433: 64 57                    a0 = s0
 21435: b4 a0 02 14 02           ra = 532, jump [a3]
      :                          @1530 [@dyn 266]
 21440: 33 08 01                 a1 = 0x1
 21443: 52 07 13                 jump @1533 if a0 != 0
      :                          @1531
 21446: 33 08 22                 a1 = 0x22
 21449: 64 57                    a0 = s0
 21451: 82 19 18                 a2 = u64 [sp + 0x18]
 21454: b4 90 02 16 02           ra = 534, jump [a2]
      :                          @1532 [@dyn 267]
 21459: 64 78                    a1 = a0
 21461: 01                       fallthrough
      :                          @1533
 21462: 64 87                    a0 = a1
 21464: 82 10 68                 ra = u64 [sp + 0x68]
 21467: 82 15 60                 s0 = u64 [sp + 0x60]
 21470: 82 16 58                 s1 = u64 [sp + 0x58]
 21473: 95 11 70                 sp = sp + 0x70
 21476: 32 00                    ret
      :                          @1534
 21478: 33 08 01                 a1 = 0x1
 21481: 28 ed                    jump @1533
      :                          @1535
 21483: 33 0b 60 08 01           a4 = 0x10860
 21488: 82 17 40                 a0 = u64 [sp + 0x40]
 21491: 64 68                    a1 = s1
 21493: 33 00 d4 01              ra = 0x1d4
 21497: 28 8e ec                 jump @1159
      :                          @1536
 21500: 33 0b 48 08 01           a4 = 0x10848
 21505: 82 17 40                 a0 = u64 [sp + 0x40]
 21508: 82 18 20                 a1 = u64 [sp + 0x20]
 21511: 64 a9                    a2 = a3
 21513: 64 5a                    a3 = s0
 21515: 33 00 d4 01              ra = 0x1d4
 21519: 28 78 ec                 jump @1159
      :                          @1537
 21522: 82 73 10                 t1 = u64 [a0 + 0x10]
 21525: 33 09 01                 a2 = 0x1
 21528: ab 93 09                 jump @1539 if t1 != a2
      :                          @1538
 21531: 82 79 18                 a2 = u64 [a0 + 0x18]
 21534: 51 09 35                 jump @1545 if a2 == 0
      :                          @1539
 21537: 82 72 20                 t0 = u64 [a0 + 0x20]
 21540: 33 0a 00 00 00 f8        a3 = 0xfffffffff8000000
 21546: 95 2b ff ff ff f7        a4 = t0 + 0xfffffffff7ffffff
 21552: ac ab 23                 jump @1545 if a4 <u a3
      :                          @1540
 21555: 33 0a 20 00 03           a3 = 0x30020
 21560: 95 aa 00 00 00 08        a3 = a3 + 0x8000000
 21566: 01                       fallthrough
      :                          @1541
 21567: 82 ab                    a4 = u64 [a3]
 21569: c9 ba 0c                 a5 = a3 - a4
 21572: ab 3c 0f                 jump @1545 if a5 != t1
      :                          @1542
 21575: c9 2b 0c                 a5 = a4 - t0
 21578: 01                       fallthrough
      :                          @1543
 21579: 82 a9                    a2 = u64 [a3]
 21581: ab b9 f2                 jump @1541 if a2 != a4
      :                          @1544
 21584: 7b ac                    u64 [a3] = a5
 21586: 01                       fallthrough
      :                          @1545
 21587: 33 08 ff                 a1 = 0xffffffffffffffff
 21590: aa 87 4c                 jump @1552 if a0 == a1
      :                          @1546
 21593: 95 79 08                 a2 = a0 + 0x8
 21596: 3e 02 00 00 03           u64 [0x30000] = t0
 21601: 3e 04 08 00 03           u64 [0x30008] = t2
 21606: 82 92                    t0 = u64 [a2]
 21608: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21611: 7b 94                    u64 [a2] = t2
 21613: 64 28                    a1 = t0
 21615: 3a 02 00 00 03           t0 = u64 [0x30000]
 21620: 3a 04 08 00 03           t2 = u64 [0x30008]
 21625: 33 09 01                 a2 = 0x1
 21628: ab 98 26                 jump @1552 if a1 != a2
      :                          @1547
 21631: 33 08 20 00 03           a1 = 0x30020
 21636: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 21642: 01                       fallthrough
      :                          @1548
 21643: 82 89                    a2 = u64 [a1]
 21645: c9 98 0a                 a3 = a1 - a2
 21648: ab 7a 12                 jump @1552 if a3 != a0
      :                          @1549
 21651: 95 9a d8                 a3 = a2 + 0xffffffffffffffd8
 21654: 01                       fallthrough
      :                          @1550
 21655: 82 8b                    a4 = u64 [a1]
 21657: ab 9b f2                 jump @1548 if a4 != a2
      :                          @1551
 21660: 7b 8a                    u64 [a1] = a3
 21662: 33 0c                    a5 = 0
 21664: 32 00                    ret
      :                          @1552
 21666: 32 00                    ret
      :                          @1553
 21668: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 21671: 7b 10 20                 u64 [sp + 0x20] = ra
 21674: 7b 15 18                 u64 [sp + 0x18] = s0
 21677: 7b 16 10                 u64 [sp + 0x10] = s1
 21680: 64 75                    s0 = a0
 21682: 82 77 10                 a0 = u64 [a0 + 0x10]
 21685: 51 07 32                 jump @1560 if a0 == 0
      :                          @1554
 21688: 56 47 00 00 00 04 2f     jump @1560 if a0 >u 67108864
      :                          @1555
 21695: 97 77 01                 a0 = a0 << 0x1
 21698: 82 58 18                 a1 = u64 [s0 + 0x18]
 21701: 33 09 20 00 03           a2 = 0x30020
 21706: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 21712: 01                       fallthrough
      :                          @1556
 21713: 82 9a                    a3 = u64 [a2]
 21715: c9 a9 0b                 a4 = a2 - a3
 21718: ab 8b 11                 jump @1560 if a4 != a1
      :                          @1557
 21721: c9 7a 0b                 a4 = a3 - a0
 21724: 01                       fallthrough
      :                          @1558
 21725: 82 9c                    a5 = u64 [a2]
 21727: ab ac f2                 jump @1556 if a5 != a3
      :                          @1559
 21730: 7b 9b                    u64 [a2] = a4
 21732: 33 06                    s1 = 0
 21734: 01                       fallthrough
      :                          @1560
 21735: 82 57 28                 a0 = u64 [s0 + 0x28]
 21738: 51 07 32                 jump @1567 if a0 == 0
      :                          @1561
 21741: 56 47 00 00 00 04 2f     jump @1567 if a0 >u 67108864
      :                          @1562
 21748: 97 77 01                 a0 = a0 << 0x1
 21751: 82 58 30                 a1 = u64 [s0 + 0x30]
 21754: 33 09 20 00 03           a2 = 0x30020
 21759: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 21765: 01                       fallthrough
      :                          @1563
 21766: 82 9a                    a3 = u64 [a2]
 21768: c9 a9 0b                 a4 = a2 - a3
 21771: ab 8b 11                 jump @1567 if a4 != a1
      :                          @1564
 21774: c9 7a 0b                 a4 = a3 - a0
 21777: 01                       fallthrough
      :                          @1565
 21778: 82 9c                    a5 = u64 [a2]
 21780: ab ac f2                 jump @1563 if a5 != a3
      :                          @1566
 21783: 7b 9b                    u64 [a2] = a4
 21785: 33 06                    s1 = 0
 21787: 01                       fallthrough
      :                          @1567
 21788: 82 57 58                 a0 = u64 [s0 + 0x58]
 21791: 51 07 32                 jump @1574 if a0 == 0
      :                          @1568
 21794: 56 47 00 00 00 02 2f     jump @1574 if a0 >u 33554432
      :                          @1569
 21801: 97 77 02                 a0 = a0 << 0x2
 21804: 82 58 60                 a1 = u64 [s0 + 0x60]
 21807: 33 09 20 00 03           a2 = 0x30020
 21812: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 21818: 01                       fallthrough
      :                          @1570
 21819: 82 9a                    a3 = u64 [a2]
 21821: c9 a9 0b                 a4 = a2 - a3
 21824: ab 8b 11                 jump @1574 if a4 != a1
      :                          @1571
 21827: c9 7a 0b                 a4 = a3 - a0
 21830: 01                       fallthrough
      :                          @1572
 21831: 82 9c                    a5 = u64 [a2]
 21833: ab ac f2                 jump @1570 if a5 != a3
      :                          @1573
 21836: 7b 9b                    u64 [a2] = a4
 21838: 33 06                    s1 = 0
 21840: 01                       fallthrough
      :                          @1574
 21841: 82 57 70                 a0 = u64 [s0 + 0x70]
 21844: 51 07 32                 jump @1581 if a0 == 0
      :                          @1575
 21847: 56 47 00 00 00 01 2f     jump @1581 if a0 >u 16777216
      :                          @1576
 21854: 97 77 03                 a0 = a0 << 0x3
 21857: 82 58 78                 a1 = u64 [s0 + 0x78]
 21860: 33 09 20 00 03           a2 = 0x30020
 21865: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 21871: 01                       fallthrough
      :                          @1577
 21872: 82 9a                    a3 = u64 [a2]
 21874: c9 a9 0b                 a4 = a2 - a3
 21877: ab 8b 11                 jump @1581 if a4 != a1
      :                          @1578
 21880: c9 7a 0b                 a4 = a3 - a0
 21883: 01                       fallthrough
      :                          @1579
 21884: 82 9c                    a5 = u64 [a2]
 21886: ab ac f2                 jump @1577 if a5 != a3
      :                          @1580
 21889: 7b 9b                    u64 [a2] = a4
 21891: 33 06                    s1 = 0
 21893: 01                       fallthrough
      :                          @1581
 21894: 82 57 a0 00              a0 = u64 [s0 + 0xa0]
 21898: 82 7a 20                 a3 = u64 [a0 + 0x20]
 21901: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 21905: 82 59 b0 00              a2 = u64 [s0 + 0xb0]
 21909: 95 57 b8 00              a0 = s0 + 0xb8
 21913: b4 a0 02 18 02           ra = 536, jump [a3]
      :                          @1582 [@dyn 268]
 21918: 64 57                    a0 = s0
 21920: 82 55 98 00              s0 = u64 [s0 + 0x98]
 21924: 7b 17                    u64 [sp] = a0
 21926: 82 77 90 00              a0 = u64 [a0 + 0x90]
 21930: 7b 17 08                 u64 [sp + 0x8] = a0
 21933: 51 05 26                 jump @1586 if s0 == 0
      :                          @1583
 21936: 82 16 08                 s1 = u64 [sp + 0x8]
 21939: 95 66 18                 s1 = s1 + 0x18
 21942: 01                       fallthrough
      :                          @1584
 21943: 82 67 e8                 a0 = u64 [s1 + 0xffffffffffffffe8]
 21946: 82 7a 20                 a3 = u64 [a0 + 0x20]
 21949: 82 68 f0                 a1 = u64 [s1 + 0xfffffffffffffff0]
 21952: 82 69 f8                 a2 = u64 [s1 + 0xfffffffffffffff8]
 21955: 64 67                    a0 = s1
 21957: b4 a0 02 1a 02           ra = 538, jump [a3]
      :                          @1585 [@dyn 269]
 21962: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 21965: 95 66 20                 s1 = s1 + 0x20
 21968: 52 05 e7                 jump @1584 if s0 != 0
      :                          @1586
 21971: 82 15                    s0 = u64 [sp]
 21973: 82 57 88 00              a0 = u64 [s0 + 0x88]
 21977: 82 16 08                 s1 = u64 [sp + 0x8]
 21980: 51 07 2e                 jump @1593 if a0 == 0
      :                          @1587
 21983: 56 37 00 00 40 2b        jump @1593 if a0 >u 4194304
      :                          @1588
 21989: 97 77 05                 a0 = a0 << 0x5
 21992: 33 08 20 00 03           a1 = 0x30020
 21997: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 22003: 01                       fallthrough
      :                          @1589
 22004: 82 89                    a2 = u64 [a1]
 22006: c9 98 0a                 a3 = a1 - a2
 22009: ab 6a 11                 jump @1593 if a3 != s1
      :                          @1590
 22012: c9 79 0a                 a3 = a2 - a0
 22015: 01                       fallthrough
      :                          @1591
 22016: 82 8b                    a4 = u64 [a1]
 22018: ab 9b f2                 jump @1589 if a4 != a2
      :                          @1592
 22021: 7b 8a                    u64 [a1] = a3
 22023: 33 0c                    a5 = 0
 22025: 01                       fallthrough
      :                          @1593
 22026: 82 57 c0 00              a0 = u64 [s0 + 0xc0]
 22030: 82 7a 20                 a3 = u64 [a0 + 0x20]
 22033: 82 58 c8 00              a1 = u64 [s0 + 0xc8]
 22037: 82 59 d0 00              a2 = u64 [s0 + 0xd0]
 22041: 95 57 d8 00              a0 = s0 + 0xd8
 22045: b4 a0 02 1c 02           ra = 540, jump [a3]
      :                          @1594 [@dyn 270]
 22050: 82 57 f0 00              a0 = u64 [s0 + 0xf0]
 22054: 82 7a 20                 a3 = u64 [a0 + 0x20]
 22057: 82 58 f8 00              a1 = u64 [s0 + 0xf8]
 22061: 82 59 00 01              a2 = u64 [s0 + 0x100]
 22065: 95 57 08 01              a0 = s0 + 0x108
 22069: b4 a0 02 1e 02           ra = 542, jump [a3]
      :                          @1595 [@dyn 271]
 22074: 33 07 ff                 a0 = 0xffffffffffffffff
 22077: aa 75 4c                 jump @1602 if s0 == a0
      :                          @1596
 22080: 95 58 08                 a1 = s0 + 0x8
 22083: 3e 02 00 00 03           u64 [0x30000] = t0
 22088: 3e 04 08 00 03           u64 [0x30008] = t2
 22093: 82 82                    t0 = u64 [a1]
 22095: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22098: 7b 84                    u64 [a1] = t2
 22100: 64 27                    a0 = t0
 22102: 3a 02 00 00 03           t0 = u64 [0x30000]
 22107: 3a 04 08 00 03           t2 = u64 [0x30008]
 22112: 33 08 01                 a1 = 0x1
 22115: ab 87 26                 jump @1602 if a0 != a1
      :                          @1597
 22118: 33 07 20 00 03           a0 = 0x30020
 22123: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 22129: 01                       fallthrough
      :                          @1598
 22130: 82 78                    a1 = u64 [a0]
 22132: c9 87 09                 a2 = a0 - a1
 22135: ab 59 12                 jump @1602 if a2 != s0
      :                          @1599
 22138: 95 89 f0 fe              a2 = a1 + 0xfffffffffffffef0
 22142: 01                       fallthrough
      :                          @1600
 22143: 82 7a                    a3 = u64 [a0]
 22145: ab 8a f1                 jump @1598 if a3 != a1
      :                          @1601
 22148: 7b 79                    u64 [a0] = a2
 22150: 33 0b                    a4 = 0
 22152: 01                       fallthrough
      :                          @1602
 22153: 82 10 20                 ra = u64 [sp + 0x20]
 22156: 82 15 18                 s0 = u64 [sp + 0x18]
 22159: 82 16 10                 s1 = u64 [sp + 0x10]
 22162: 95 11 28                 sp = sp + 0x28
 22165: 32 00                    ret
      :                          @1603
 22167: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 22170: 7b 10 10                 u64 [sp + 0x10] = ra
 22173: 7b 15 08                 u64 [sp + 0x8] = s0
 22176: 7b 16                    u64 [sp] = s1
 22178: 53 19 10 59              jump @1613 if a2 <u 16
      :                          @1604
 22182: 8d 7a                    i32 a3 = -a0
 22184: 84 a2 07                 t0 = a3 & 0x7
 22187: c8 27 06                 s1 = a0 + t0
 22190: ae 67 1a                 jump @1607 if a0 >=u s1
      :                          @1605
 22193: 64 2c                    a5 = t0
 22195: 64 7a                    a3 = a0
 22197: 64 8b                    a4 = a1
 22199: 01                       fallthrough
      :                          @1606
 22200: 7c b5                    s0 = u8 [a4]
 22202: 78 a5                    u8 [a3] = s0
 22204: 95 aa 01                 a3 = a3 + 0x1
 22207: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 22210: 95 bb 01                 a4 = a4 + 0x1
 22213: 52 0c f3                 jump @1606 if a5 != 0
      :                          @1607
 22216: c8 28 08                 a1 = a1 + t0
 22219: c9 29 09                 a2 = a2 - t0
 22222: 84 9c f8                 a5 = a2 & 0xfffffffffffffff8
 22225: 84 8b 07                 a4 = a1 & 0x7
 22228: c8 c6 0a                 a3 = s1 + a5
 22231: 52 0b 49                 jump @1616 if a4 != 0
      :                          @1608
 22234: ae a6 13                 jump @1611 if s1 >=u a3
      :                          @1609
 22237: 64 8b                    a4 = a1
 22239: 01                       fallthrough
      :                          @1610
 22240: 82 b5                    s0 = u64 [a4]
 22242: 7b 65                    u64 [s1] = s0
 22244: 95 66 08                 s1 = s1 + 0x8
 22247: 95 bb 08                 a4 = a4 + 0x8
 22250: ac a6 f6                 jump @1610 if s1 <u a3
      :                          @1611
 22253: c8 c8 08                 a1 = a1 + a5
 22256: 84 99 07                 a2 = a2 & 0x7
 22259: c8 9a 0b                 a4 = a3 + a2
 22262: ac ba 0d                 jump @1614 if a3 <u a4
      :                          @1612
 22265: 28 1a                    jump @1615
      :                          @1613
 22267: 64 7a                    a3 = a0
 22269: c8 97 0b                 a4 = a0 + a2
 22272: ae b7 13                 jump @1615 if a0 >=u a4
      :                          @1614
 22275: 7c 8b                    a4 = u8 [a1]
 22277: 78 ab                    u8 [a3] = a4
 22279: 95 aa 01                 a3 = a3 + 0x1
 22282: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 22285: 95 88 01                 a1 = a1 + 0x1
 22288: 52 09 f3                 jump @1614 if a2 != 0
      :                          @1615
 22291: 82 10 10                 ra = u64 [sp + 0x10]
 22294: 82 15 08                 s0 = u64 [sp + 0x8]
 22297: 82 16                    s1 = u64 [sp]
 22299: 95 11 18                 sp = sp + 0x18
 22302: 32 00                    ret
      :                          @1616
 22304: ae a6 cd                 jump @1611 if s1 >=u a3
      :                          @1617
 22307: 97 85 03                 s0 = a1 << 0x3
 22310: 84 52 38                 t0 = s0 & 0x38
 22313: 84 84 f8                 t2 = a1 & 0xfffffffffffffff8
 22316: 82 4b                    a4 = u64 [t2]
 22318: 8d 55                    i32 s0 = -s0
 22320: 84 53 38                 t1 = s0 & 0x38
 22323: 95 44 08                 t2 = t2 + 0x8
 22326: 01                       fallthrough
      :                          @1618
 22327: 82 45                    s0 = u64 [t2]
 22329: d0 2b 00                 ra = a4 >> t0
 22332: cf 35 0b                 a4 = s0 << t1
 22335: d4 0b 0b                 a4 = a4 | ra
 22338: 7b 6b                    u64 [s1] = a4
 22340: 95 66 08                 s1 = s1 + 0x8
 22343: 95 44 08                 t2 = t2 + 0x8
 22346: 64 5b                    a4 = s0
 22348: ac a6 eb                 jump @1618 if s1 <u a3
      :                          @1619
 22351: 28 9e                    jump @1611
      :                          @1620
 22353: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 22356: 7b 10 20                 u64 [sp + 0x20] = ra
 22359: 7b 15 18                 u64 [sp + 0x18] = s0
 22362: 7b 16 10                 u64 [sp + 0x10] = s1
 22365: c9 87 0a                 a3 = a0 - a1
 22368: ae 9a 8a 00              jump @1634 if a3 >=u a2
      :                          @1621
 22372: c8 97 0c                 a5 = a0 + a2
 22375: 33 0a 10                 a3 = 0x10
 22378: c8 98 04                 t2 = a1 + a2
 22381: ac a9 60                 jump @1630 if a2 <u a3
      :                          @1622
 22384: 84 c3 07                 t1 = a5 & 0x7
 22387: 84 c6 f8                 s1 = a5 & 0xfffffffffffffff8
 22390: 9a 32                    t0 = -t1
 22392: ae c6 1a                 jump @1625 if s1 >=u a5
      :                          @1623
 22395: c8 98 05                 s0 = a1 + a2
 22398: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 22401: 01                       fallthrough
      :                          @1624
 22402: 7c 5a                    a3 = u8 [s0]
 22404: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 22407: 78 ca ff                 u8 [a5 + 0xffffffffffffffff] = a3
 22410: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 22413: 64 bc                    a5 = a4
 22415: ac b6 f3                 jump @1624 if s1 <u a4
      :                          @1625
 22418: c8 42 02                 t0 = t0 + t2
 22421: c9 39 09                 a2 = a2 - t1
 22424: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 22427: 84 25 07                 s0 = t0 & 0x7
 22430: 9a a0                    ra = -a3
 22432: c9 a6 0c                 a5 = s1 - a3
 22435: 52 05 c7 00              jump @1647 if s0 != 0
      :                          @1626
 22439: ae 6c 1c                 jump @1629 if a5 >=u s1
      :                          @1627
 22442: c8 98 08                 a1 = a1 + a2
 22445: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 22448: 64 6a                    a3 = s1
 22450: 01                       fallthrough
      :                          @1628
 22451: 82 85                    s0 = u64 [a1]
 22453: 95 ab f8                 a4 = a3 + 0xfffffffffffffff8
 22456: 7b a5 f8                 u64 [a3 + 0xfffffffffffffff8] = s0
 22459: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 22462: 64 ba                    a3 = a4
 22464: ac bc f3                 jump @1628 if a5 <u a4
      :                          @1629
 22467: c8 06 0c                 a5 = s1 + ra
 22470: c8 02 04                 t2 = t0 + ra
 22473: 84 99 07                 a2 = a2 & 0x7
 22476: 01                       fallthrough
      :                          @1630
 22477: c9 9c 08                 a1 = a5 - a2
 22480: ae c8 8c 00              jump @1646 if a1 >=u a5
      :                          @1631
 22484: 95 4b ff                 a4 = t2 + 0xffffffffffffffff
 22487: 01                       fallthrough
      :                          @1632
 22488: 7c b9                    a2 = u8 [a4]
 22490: 95 ca ff                 a3 = a5 + 0xffffffffffffffff
 22493: 78 c9 ff                 u8 [a5 + 0xffffffffffffffff] = a2
 22496: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 22499: 64 ac                    a5 = a3
 22501: ac a8 f3                 jump @1632 if a1 <u a3
      :                          @1633
 22504: 28 74                    jump @1646
      :                          @1634
 22506: 53 19 10 5a              jump @1644 if a2 <u 16
      :                          @1635
 22510: 8d 7a                    i32 a3 = -a0
 22512: 84 a2 07                 t0 = a3 & 0x7
 22515: c8 27 05                 s0 = a0 + t0
 22518: ae 57 1a                 jump @1638 if a0 >=u s0
      :                          @1636
 22521: 64 2c                    a5 = t0
 22523: 64 7a                    a3 = a0
 22525: 64 8b                    a4 = a1
 22527: 01                       fallthrough
      :                          @1637
 22528: 7c b6                    s1 = u8 [a4]
 22530: 78 a6                    u8 [a3] = s1
 22532: 95 aa 01                 a3 = a3 + 0x1
 22535: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 22538: 95 bb 01                 a4 = a4 + 0x1
 22541: 52 0c f3                 jump @1637 if a5 != 0
      :                          @1638
 22544: c8 28 08                 a1 = a1 + t0
 22547: c9 29 09                 a2 = a2 - t0
 22550: 84 9c f8                 a5 = a2 & 0xfffffffffffffff8
 22553: 84 8b 07                 a4 = a1 & 0x7
 22556: c8 c5 0a                 a3 = s0 + a5
 22559: 52 0b 8d 00              jump @1651 if a4 != 0
      :                          @1639
 22563: ae a5 13                 jump @1642 if s0 >=u a3
      :                          @1640
 22566: 64 8b                    a4 = a1
 22568: 01                       fallthrough
      :                          @1641
 22569: 82 b6                    s1 = u64 [a4]
 22571: 7b 56                    u64 [s0] = s1
 22573: 95 55 08                 s0 = s0 + 0x8
 22576: 95 bb 08                 a4 = a4 + 0x8
 22579: ac a5 f6                 jump @1641 if s0 <u a3
      :                          @1642
 22582: c8 c8 08                 a1 = a1 + a5
 22585: 84 99 07                 a2 = a2 & 0x7
 22588: c8 9a 0b                 a4 = a3 + a2
 22591: ac ba 0d                 jump @1645 if a3 <u a4
      :                          @1643
 22594: 28 1a                    jump @1646
      :                          @1644
 22596: 64 7a                    a3 = a0
 22598: c8 97 0b                 a4 = a0 + a2
 22601: ae b7 13                 jump @1646 if a0 >=u a4
      :                          @1645
 22604: 7c 8b                    a4 = u8 [a1]
 22606: 78 ab                    u8 [a3] = a4
 22608: 95 aa 01                 a3 = a3 + 0x1
 22611: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 22614: 95 88 01                 a1 = a1 + 0x1
 22617: 52 09 f3                 jump @1645 if a2 != 0
      :                          @1646
 22620: 82 10 20                 ra = u64 [sp + 0x20]
 22623: 82 15 18                 s0 = u64 [sp + 0x18]
 22626: 82 16 10                 s1 = u64 [sp + 0x10]
 22629: 95 11 28                 sp = sp + 0x28
 22632: 32 00                    ret
      :                          @1647
 22634: ae 6c 59 ff              jump @1629 if a5 >=u s1
      :                          @1648
 22638: 97 28 03                 a1 = t0 << 0x3
 22641: 84 8a 38                 a3 = a1 & 0x38
 22644: 7b 1a 08                 u64 [sp + 0x8] = a3
 22647: 84 2a f8                 a3 = t0 & 0xfffffffffffffff8
 22650: 82 a5                    s0 = u64 [a3]
 22652: 8d 88                    i32 a1 = -a1
 22654: 84 88 38                 a1 = a1 & 0x38
 22657: 7b 18                    u64 [sp] = a1
 22659: 95 a8 f8                 a1 = a3 + 0xfffffffffffffff8
 22662: 64 6a                    a3 = s1
 22664: 01                       fallthrough
      :                          @1649
 22665: 82 84                    t2 = u64 [a1]
 22667: 82 1b                    a4 = u64 [sp]
 22669: cf b5 0b                 a4 = s0 << a4
 22672: 82 15 08                 s0 = u64 [sp + 0x8]
 22675: d0 54 03                 t1 = t2 >> s0
 22678: d4 b3 05                 s0 = t1 | a4
 22681: 95 a3 f8                 t1 = a3 + 0xfffffffffffffff8
 22684: 7b a5 f8                 u64 [a3 + 0xfffffffffffffff8] = s0
 22687: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 22690: 64 3a                    a3 = t1
 22692: 64 45                    s0 = t2
 22694: ac 3c e3                 jump @1649 if a5 <u t1
      :                          @1650
 22697: 28 1a ff                 jump @1629
      :                          @1651
 22700: ae a5 8a                 jump @1642 if s0 >=u a3
      :                          @1652
 22703: 97 86 03                 s1 = a1 << 0x3
 22706: 84 62 38                 t0 = s1 & 0x38
 22709: 84 84 f8                 t2 = a1 & 0xfffffffffffffff8
 22712: 82 4b                    a4 = u64 [t2]
 22714: 8d 66                    i32 s1 = -s1
 22716: 84 63 38                 t1 = s1 & 0x38
 22719: 95 44 08                 t2 = t2 + 0x8
 22722: 01                       fallthrough
      :                          @1653
 22723: 82 46                    s1 = u64 [t2]
 22725: d0 2b 00                 ra = a4 >> t0
 22728: cf 36 0b                 a4 = s1 << t1
 22731: d4 0b 0b                 a4 = a4 | ra
 22734: 7b 5b                    u64 [s0] = a4
 22736: 95 55 08                 s0 = s0 + 0x8
 22739: 95 44 08                 t2 = t2 + 0x8
 22742: 64 6b                    a4 = s1
 22744: ac a5 eb                 jump @1653 if s0 <u a3
      :                          @1654
 22747: 28 5b ff                 jump @1642
      :                          @1655
 22750: 53 19 10 60              jump @1665 if a2 <u 16
      :                          @1656
 22754: 8d 7a                    i32 a3 = -a0
 22756: 84 a2 07                 t0 = a3 & 0x7
 22759: c8 27 0b                 a4 = a0 + t0
 22762: ae b7 13                 jump @1659 if a0 >=u a4
      :                          @1657
 22765: 64 2c                    a5 = t0
 22767: 64 7a                    a3 = a0
 22769: 01                       fallthrough
      :                          @1658
 22770: 78 a8                    u8 [a3] = a1
 22772: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 22775: 95 aa 01                 a3 = a3 + 0x1
 22778: 52 0c f8                 jump @1658 if a5 != 0
      :                          @1659
 22781: c9 29 09                 a2 = a2 - t0
 22784: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 22787: c8 ba 0a                 a3 = a3 + a4
 22790: ae ab 22                 jump @1662 if a4 >=u a3
      :                          @1660
 22793: 97 82 38                 t0 = a1 << 0x38
 22796: 14 0c 00 01 01 01 01 00 00 00 a5 = 0x101010100
 22806: d6 c2 02                 t0 = t0 mulhu a5
 22809: 97 2c 20                 a5 = t0 << 0x20
 22812: d4 2c 0c                 a5 = a5 | t0
 22815: 01                       fallthrough
      :                          @1661
 22816: 7b bc                    u64 [a4] = a5
 22818: 95 bb 08                 a4 = a4 + 0x8
 22821: ac ab fb                 jump @1661 if a4 <u a3
      :                          @1662
 22824: 84 99 07                 a2 = a2 & 0x7
 22827: c8 9a 0b                 a4 = a3 + a2
 22830: ae ba 0e                 jump @1664 if a3 >=u a4
      :                          @1663
 22833: 78 a8                    u8 [a3] = a1
 22835: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 22838: 95 aa 01                 a3 = a3 + 0x1
 22841: 52 09 f8                 jump @1663 if a2 != 0
      :                          @1664
 22844: 32 00                    ret
      :                          @1665
 22846: 64 7a                    a3 = a0
 22848: c8 97 0b                 a4 = a0 + a2
 22851: ac b7 ee                 jump @1663 if a0 <u a4
      :                          @1666
 22854: 28 f6                    jump @1664
