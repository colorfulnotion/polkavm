// RO data = 4564/4564 bytes
// RW data = 16/134217776 bytes
// Stack size = 16773120 bytes
// RO data = [164, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 174, 1, 0, 0, 168, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 172, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 176, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 166, 1, 0, 0, 170, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 69, 111, 102, 104, 101, 97, 100, 101, 114, 98, 111, 100, 121, 99, 111, 100, 101, 116, 114, 117, 101, 32, 32, 32, 32, 114, 97, 119, 76, 101, 103, 97, 99, 121, 65, 110, 97, 108, 121, 122, 101, 100, 69, 105, 112, 55, 55, 48, 50, 99, 111, 100, 101, 95, 105, 110, 102, 111, 99, 111, 100, 101, 95, 115, 101, 99, 116, 105, 111, 110, 99, 111, 100, 101, 95, 111, 102, 102, 115, 101, 116, 99, 111, 110, 116, 97, 105, 110, 101, 114, 95, 115, 101, 99, 116, 105, 111, 110, 100, 97, 116, 97, 95, 115, 101, 99, 116, 105, 111, 110, 105, 115, 95, 100, 97, 116, 97, 95, 102, 105, 108, 108, 101, 100, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 69, 111, 102, 66, 111, 100, 121, 90, 101, 114, 111, 67, 111, 100, 101, 83, 101, 99, 116, 105, 111, 110, 115, 73, 110, 118, 97, 108, 105, 100, 84, 121, 112, 101, 115, 75, 105, 110, 100, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 98, 121, 116, 101, 99, 111, 100, 101, 78, 111, 110, 83, 105, 122, 101, 115, 67, 111, 100, 101, 73, 110, 102, 111, 90, 101, 114, 111, 83, 105, 122, 101, 116, 121, 112, 101, 115, 95, 115, 105, 122, 101, 99, 111, 100, 101, 95, 115, 105, 122, 101, 115, 99, 111, 110, 116, 97, 105, 110, 101, 114, 95, 115, 105, 122, 101, 115, 100, 97, 116, 97, 95, 115, 105, 122, 101, 115, 117, 109, 95, 99, 111, 100, 101, 95, 115, 105, 122, 101, 115, 115, 117, 109, 95, 99, 111, 110, 116, 97, 105, 110, 101, 114, 95, 115, 105, 122, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 69, 111, 102, 72, 101, 97, 100, 101, 114, 69, 105, 112, 55, 55, 48, 50, 66, 121, 116, 101, 99, 111, 100, 101, 100, 101, 108, 101, 103, 97, 116, 101, 100, 95, 97, 100, 100, 114, 101, 115, 115, 118, 101, 114, 115, 105, 111, 110, 105, 110, 112, 117, 116, 115, 111, 117, 116, 112, 117, 116, 115, 109, 97, 120, 95, 115, 116, 97, 99, 107, 95, 115, 105, 122, 101, 76, 101, 103, 97, 99, 121, 65, 110, 97, 108, 121, 122, 101, 100, 66, 121, 116, 101, 99, 111, 100, 101, 111, 114, 105, 103, 105, 110, 97, 108, 95, 108, 101, 110, 106, 117, 109, 112, 95, 116, 97, 98, 108, 101, 114, 101, 102, 105, 110, 101, 32, 99, 97, 108, 108, 101, 100, 98, 121, 116, 101, 99, 111, 100, 101, 32, 100, 101, 99, 111, 100, 101, 100, 58, 32, 0, 0, 108, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 54, 48, 56, 48, 54, 48, 52, 48, 53, 50, 51, 52, 56, 48, 49, 53, 54, 48, 48, 101, 53, 55, 53, 102, 56, 48, 102, 100, 53, 98, 53, 48, 54, 48, 98, 48, 56, 48, 54, 48, 49, 97, 53, 102, 51, 57, 53, 102, 102, 51, 102, 101, 54, 48, 56, 48, 54, 48, 52, 48, 53, 50, 51, 52, 56, 48, 49, 53, 54, 48, 48, 101, 53, 55, 53, 102, 56, 48, 102, 100, 53, 98, 53, 48, 54, 48, 48, 52, 51, 54, 49, 48, 54, 48, 50, 54, 53, 55, 53, 102, 51, 53, 54, 48, 101, 48, 49, 99, 56, 48, 54, 51, 49, 97, 52, 51, 99, 51, 51, 56, 49, 52, 54, 48, 50, 97, 53, 55, 53, 98, 53, 102, 56, 48, 102, 100, 53, 98, 54, 48, 51, 48, 54, 48, 52, 52, 53, 54, 53, 98, 54, 48, 52, 48, 53, 49, 54, 48, 51, 98, 57, 49, 57, 48, 54, 48, 54, 51, 53, 54, 53, 98, 54, 48, 52, 48, 53, 49, 56, 48, 57, 49, 48, 51, 57, 48, 102, 51, 53, 98, 53, 102, 54, 49, 48, 49, 98, 99, 57, 48, 53, 48, 57, 48, 53, 54, 53, 98, 53, 102, 56, 49, 57, 48, 53, 48, 57, 49, 57, 48, 53, 48, 53, 54, 53, 98, 54, 48, 53, 100, 56, 49, 54, 48, 52, 100, 53, 54, 53, 98, 56, 50, 53, 50, 53, 48, 53, 48, 53, 54, 53, 98, 53, 102, 54, 48, 50, 48, 56, 50, 48, 49, 57, 48, 53, 48, 54, 48, 55, 52, 53, 102, 56, 51, 48, 49, 56, 52, 54, 48, 53, 54, 53, 54, 53, 98, 57, 50, 57, 49, 53, 48, 53, 48, 53, 54, 102, 101, 97, 50, 54, 52, 54, 57, 55, 48, 54, 54, 55, 51, 53, 56, 50, 50, 49, 50, 50, 48, 98, 48, 56, 51, 99, 50, 55, 55, 56, 57, 50, 99, 98, 98, 52, 57, 57, 100, 57, 97, 53, 55, 50, 55, 53, 52, 53, 49, 50, 99, 53, 98, 50, 51, 54, 55, 52, 99, 55, 53, 98, 54, 97, 98, 99, 100, 52, 48, 52, 52, 53, 53, 49, 52, 99, 49, 102, 102, 56, 48, 51, 54, 56, 98, 54, 52, 55, 51, 54, 102, 54, 99, 54, 51, 52, 51, 48, 48, 48, 56, 49, 97, 48, 48, 51, 51, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 0, 0, 64, 1, 0, 0, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 0, 0, 78, 1, 0, 0, 0, 0, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 102, 1, 0, 0, 0, 0, 0, 0, 106, 1, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 78, 1, 0, 0, 0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 90, 1, 0, 0, 0, 0, 0, 0, 94, 1, 0, 0, 0, 0, 0, 0, 98, 1, 0, 0, 0, 0, 0, 0, 100, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 255, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 41, 91, 58, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 198, 1, 0, 0, 0, 0, 0, 0, 204, 1, 0, 0, 0, 0, 0, 0, 208, 1, 0, 0, 0, 0, 0, 0, 32, 123, 32, 44, 32, 32, 123, 10, 44, 10, 125, 32, 125, 40, 40, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 47, 114, 111, 111, 116, 47, 46, 114, 117, 115, 116, 117, 112, 47, 116, 111, 111, 108, 99, 104, 97, 105, 110, 115, 47, 114, 118, 101, 45, 110, 105, 103, 104, 116, 108, 121, 45, 49, 56, 54, 47, 108, 105, 98, 47, 114, 117, 115, 116, 108, 105, 98, 47, 115, 114, 99, 47, 114, 117, 115, 116, 47, 108, 105, 98, 114, 97, 114, 121, 47, 99, 111, 114, 101, 47, 115, 114, 99, 47, 102, 109, 116, 47, 109, 111, 100, 46, 114, 115, 102, 97, 108, 115, 101, 0, 0, 0, 0, 0, 0, 228, 7, 1, 0, 0, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 0, 169, 10, 0, 0, 38, 0, 0, 0, 228, 7, 1, 0, 0, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 0, 178, 10, 0, 0, 26, 0, 0, 0, 0, 6, 1, 1, 3, 1, 4, 2, 5, 7, 7, 2, 8, 8, 9, 2, 10, 5, 11, 2, 14, 4, 16, 1, 17, 2, 18, 5, 19, 28, 20, 1, 21, 2, 23, 2, 25, 13, 28, 5, 29, 8, 31, 1, 36, 1, 106, 4, 107, 2, 175, 3, 177, 2, 188, 2, 207, 2, 209, 2, 212, 12, 213, 9, 214, 2, 215, 2, 218, 1, 224, 5, 225, 2, 231, 4, 232, 2, 238, 32, 240, 4, 248, 2, 250, 4, 251, 1, 12, 39, 59, 62, 78, 79, 143, 158, 158, 159, 123, 139, 147, 150, 162, 178, 186, 134, 177, 6, 7, 9, 54, 61, 62, 86, 243, 208, 209, 4, 20, 24, 54, 55, 86, 87, 127, 170, 174, 175, 189, 53, 224, 18, 135, 137, 142, 158, 4, 13, 14, 17, 18, 41, 49, 52, 58, 69, 70, 73, 74, 78, 79, 100, 101, 138, 140, 141, 143, 182, 193, 195, 196, 198, 203, 214, 92, 182, 183, 27, 28, 7, 8, 10, 11, 20, 23, 54, 57, 58, 168, 169, 216, 217, 9, 55, 144, 145, 168, 7, 10, 59, 62, 102, 105, 143, 146, 17, 111, 95, 191, 238, 239, 90, 98, 244, 252, 255, 83, 84, 154, 155, 46, 47, 39, 40, 85, 157, 160, 161, 163, 164, 167, 168, 173, 186, 188, 196, 6, 11, 12, 21, 29, 58, 63, 69, 81, 166, 167, 204, 205, 160, 7, 25, 26, 34, 37, 62, 63, 231, 236, 239, 255, 197, 198, 4, 32, 35, 37, 38, 40, 51, 56, 58, 72, 74, 76, 80, 83, 85, 86, 88, 90, 92, 94, 96, 99, 101, 102, 107, 115, 120, 125, 127, 138, 164, 170, 175, 176, 192, 208, 174, 175, 110, 111, 221, 222, 147, 94, 34, 123, 5, 3, 4, 45, 3, 102, 3, 1, 47, 46, 128, 130, 29, 3, 49, 15, 28, 4, 36, 9, 30, 5, 43, 5, 68, 4, 14, 42, 128, 170, 6, 36, 4, 36, 4, 40, 8, 52, 11, 78, 3, 52, 12, 129, 55, 9, 22, 10, 8, 24, 59, 69, 57, 3, 99, 8, 9, 48, 22, 5, 33, 3, 27, 5, 1, 64, 56, 4, 75, 5, 47, 4, 10, 7, 9, 7, 64, 32, 39, 4, 12, 9, 54, 3, 58, 5, 26, 7, 4, 12, 7, 80, 73, 55, 51, 13, 51, 7, 46, 8, 10, 6, 38, 3, 29, 8, 2, 128, 208, 82, 16, 3, 55, 44, 8, 42, 22, 26, 38, 28, 20, 23, 9, 78, 4, 36, 9, 68, 13, 25, 7, 10, 6, 72, 8, 39, 9, 117, 11, 66, 62, 42, 6, 59, 5, 10, 6, 81, 6, 1, 5, 16, 3, 5, 11, 89, 8, 2, 29, 98, 30, 72, 8, 10, 128, 166, 94, 34, 69, 11, 10, 6, 13, 19, 58, 6, 10, 6, 20, 28, 44, 4, 23, 128, 185, 60, 100, 83, 12, 72, 9, 10, 70, 69, 27, 72, 8, 83, 13, 73, 7, 10, 128, 182, 34, 14, 10, 6, 70, 10, 29, 3, 71, 73, 55, 3, 14, 8, 10, 6, 57, 7, 10, 129, 54, 25, 7, 59, 3, 29, 85, 1, 15, 50, 13, 131, 155, 102, 117, 11, 128, 196, 138, 76, 99, 13, 132, 48, 16, 22, 10, 143, 155, 5, 130, 71, 154, 185, 58, 134, 198, 130, 57, 7, 42, 4, 92, 6, 38, 10, 70, 10, 40, 5, 19, 129, 176, 58, 128, 198, 91, 101, 75, 4, 57, 7, 17, 64, 5, 11, 2, 14, 151, 248, 8, 132, 214, 41, 10, 162, 231, 129, 51, 15, 1, 29, 6, 14, 4, 8, 129, 140, 137, 4, 107, 5, 13, 3, 9, 7, 16, 143, 96, 128, 250, 6, 129, 180, 76, 71, 9, 116, 60, 128, 246, 10, 115, 8, 112, 21, 70, 122, 20, 12, 20, 12, 87, 9, 25, 128, 135, 129, 71, 3, 133, 66, 15, 21, 132, 80, 31, 6, 6, 128, 213, 43, 5, 62, 33, 1, 112, 45, 3, 26, 4, 2, 129, 64, 31, 17, 58, 5, 1, 129, 208, 42, 128, 214, 43, 4, 1, 129, 224, 128, 247, 41, 76, 4, 10, 4, 2, 131, 17, 68, 76, 61, 128, 194, 60, 6, 1, 4, 85, 5, 27, 52, 2, 129, 14, 44, 4, 100, 12, 86, 10, 128, 174, 56, 29, 13, 44, 4, 9, 7, 2, 14, 6, 128, 154, 131, 216, 4, 17, 3, 13, 3, 119, 4, 95, 6, 12, 4, 1, 15, 12, 4, 56, 8, 10, 6, 40, 8, 44, 4, 2, 62, 129, 84, 12, 29, 3, 10, 5, 56, 7, 28, 6, 9, 7, 128, 250, 132, 6, 0, 1, 3, 5, 5, 6, 6, 2, 7, 6, 8, 7, 9, 17, 10, 28, 11, 25, 12, 26, 13, 16, 14, 12, 15, 4, 16, 3, 18, 18, 19, 9, 22, 1, 23, 4, 24, 1, 25, 3, 26, 7, 27, 1, 28, 2, 31, 22, 32, 3, 43, 3, 45, 11, 46, 1, 48, 4, 49, 2, 50, 1, 167, 4, 169, 2, 170, 4, 171, 8, 250, 2, 251, 5, 253, 2, 254, 3, 255, 9, 173, 120, 121, 139, 141, 162, 48, 87, 88, 139, 140, 144, 28, 221, 14, 15, 75, 76, 251, 252, 46, 47, 63, 92, 93, 95, 226, 132, 141, 142, 145, 146, 169, 177, 186, 187, 197, 198, 201, 202, 222, 228, 229, 255, 0, 4, 17, 18, 41, 49, 52, 55, 58, 59, 61, 73, 74, 93, 132, 142, 146, 169, 177, 180, 186, 187, 198, 202, 206, 207, 228, 229, 0, 4, 13, 14, 17, 18, 41, 49, 52, 58, 59, 69, 70, 73, 74, 94, 100, 101, 132, 145, 155, 157, 201, 206, 207, 13, 17, 41, 58, 59, 69, 73, 87, 91, 92, 94, 95, 100, 101, 141, 145, 169, 180, 186, 187, 197, 201, 223, 228, 229, 240, 13, 17, 69, 73, 100, 101, 128, 132, 178, 188, 190, 191, 213, 215, 240, 241, 131, 133, 139, 164, 166, 190, 191, 197, 199, 207, 218, 219, 72, 152, 189, 205, 198, 206, 207, 73, 78, 79, 87, 89, 94, 95, 137, 142, 143, 177, 182, 183, 191, 193, 198, 199, 215, 17, 22, 23, 91, 92, 246, 247, 254, 255, 128, 109, 113, 222, 223, 14, 31, 110, 111, 28, 29, 95, 125, 126, 174, 175, 77, 187, 188, 22, 23, 30, 31, 70, 71, 78, 79, 88, 90, 92, 94, 126, 127, 181, 197, 212, 213, 220, 240, 241, 245, 114, 115, 143, 116, 117, 150, 38, 46, 47, 167, 175, 183, 191, 199, 207, 215, 223, 154, 0, 64, 151, 152, 48, 143, 31, 206, 207, 210, 212, 206, 255, 78, 79, 90, 91, 7, 8, 15, 16, 39, 47, 238, 239, 110, 111, 55, 61, 63, 66, 69, 144, 145, 83, 103, 117, 200, 201, 208, 209, 216, 217, 231, 254, 255, 0, 32, 95, 34, 130, 223, 4, 130, 68, 8, 27, 4, 6, 17, 129, 172, 14, 128, 171, 5, 31, 8, 129, 28, 3, 25, 8, 1, 4, 47, 4, 52, 4, 7, 3, 1, 7, 6, 7, 17, 10, 80, 15, 18, 7, 85, 7, 3, 4, 28, 10, 9, 3, 8, 3, 7, 3, 2, 3, 3, 3, 12, 4, 5, 3, 11, 6, 1, 14, 21, 5, 78, 7, 27, 7, 87, 7, 2, 6, 23, 12, 80, 4, 67, 3, 45, 3, 1, 4, 17, 6, 15, 12, 58, 4, 29, 37, 95, 32, 109, 4, 106, 37, 128, 200, 5, 130, 176, 3, 26, 6, 130, 253, 3, 89, 7, 22, 9, 24, 9, 20, 12, 20, 12, 106, 6, 10, 6, 26, 6, 89, 7, 43, 5, 70, 10, 44, 4, 12, 4, 1, 3, 49, 11, 44, 4, 26, 6, 11, 3, 128, 172, 6, 10, 6, 47, 49, 128, 244, 8, 60, 3, 15, 3, 62, 5, 56, 8, 43, 5, 130, 255, 17, 24, 8, 47, 17, 45, 3, 33, 15, 33, 15, 128, 140, 4, 130, 154, 22, 11, 21, 136, 148, 5, 47, 5, 59, 7, 2, 14, 24, 9, 128, 190, 34, 116, 12, 128, 214, 26, 129, 16, 5, 128, 225, 9, 242, 158, 3, 55, 9, 129, 92, 20, 128, 184, 8, 128, 221, 21, 59, 3, 10, 6, 56, 8, 70, 8, 12, 6, 116, 11, 30, 3, 90, 4, 89, 9, 128, 131, 24, 28, 10, 22, 9, 76, 4, 128, 138, 6, 171, 164, 12, 23, 4, 49, 161, 4, 129, 218, 38, 7, 12, 5, 5, 128, 166, 16, 129, 245, 7, 1, 32, 42, 6, 76, 4, 128, 141, 4, 128, 190, 3, 27, 3, 15, 13, 0, 0, 0, 0, 3, 0, 0, 131, 4, 32, 0, 145, 5, 96, 0, 93, 19, 160, 0, 18, 23, 32, 31, 12, 32, 96, 31, 239, 44, 32, 43, 42, 48, 160, 43, 111, 166, 96, 44, 2, 168, 224, 44, 30, 251, 224, 45, 0, 254, 32, 54, 158, 255, 96, 54, 253, 1, 225, 54, 1, 10, 33, 55, 36, 13, 225, 55, 171, 14, 97, 57, 47, 24, 225, 57, 48, 28, 225, 74, 243, 30, 225, 78, 64, 52, 161, 82, 30, 97, 225, 83, 240, 106, 97, 84, 79, 111, 225, 84, 157, 188, 97, 85, 0, 207, 97, 86, 101, 209, 161, 86, 0, 218, 33, 87, 0, 224, 161, 88, 174, 226, 33, 90, 236, 228, 225, 91, 208, 232, 97, 92, 32, 0, 238, 92, 240, 1, 127, 93, 0, 112, 0, 7, 0, 45, 1, 1, 1, 2, 1, 2, 1, 1, 72, 11, 48, 21, 16, 1, 101, 7, 2, 6, 2, 2, 1, 4, 35, 1, 30, 27, 91, 11, 58, 9, 9, 1, 24, 4, 1, 9, 1, 3, 1, 5, 43, 3, 59, 9, 42, 24, 1, 32, 55, 1, 1, 1, 4, 8, 4, 1, 3, 7, 10, 2, 29, 1, 58, 1, 1, 1, 2, 4, 8, 1, 9, 1, 10, 2, 26, 1, 2, 2, 57, 1, 4, 2, 4, 2, 2, 3, 3, 1, 30, 2, 3, 1, 11, 2, 57, 1, 4, 5, 1, 2, 4, 1, 20, 2, 22, 6, 1, 1, 58, 1, 1, 2, 1, 4, 8, 1, 7, 3, 10, 2, 30, 1, 59, 1, 1, 1, 12, 1, 9, 1, 40, 1, 3, 1, 55, 1, 1, 3, 5, 3, 1, 4, 7, 2, 11, 2, 29, 1, 58, 1, 2, 2, 1, 1, 3, 3, 1, 4, 7, 2, 11, 2, 28, 2, 57, 2, 1, 1, 2, 4, 8, 1, 9, 1, 10, 2, 29, 1, 72, 1, 4, 1, 2, 3, 1, 1, 8, 1, 81, 1, 2, 7, 12, 8, 98, 1, 2, 9, 11, 7, 73, 2, 27, 1, 1, 1, 1, 1, 55, 14, 1, 5, 1, 2, 5, 11, 1, 36, 9, 1, 102, 4, 1, 6, 1, 2, 2, 2, 25, 2, 4, 3, 16, 4, 13, 1, 2, 2, 6, 1, 15, 1, 0, 3, 0, 4, 28, 3, 29, 2, 30, 2, 64, 2, 1, 7, 8, 1, 2, 11, 9, 1, 45, 3, 1, 1, 117, 2, 34, 1, 118, 3, 4, 2, 9, 1, 6, 3, 219, 2, 2, 1, 58, 1, 1, 7, 1, 1, 1, 1, 2, 8, 6, 10, 2, 1, 48, 31, 49, 4, 48, 10, 4, 3, 38, 9, 12, 2, 32, 4, 2, 6, 56, 1, 1, 2, 3, 1, 1, 5, 56, 8, 2, 2, 152, 3, 1, 13, 1, 7, 4, 1, 6, 1, 3, 2, 198, 64, 0, 1, 195, 33, 0, 3, 141, 1, 96, 32, 0, 6, 105, 2, 0, 4, 1, 10, 32, 2, 80, 2, 0, 1, 3, 1, 4, 1, 25, 2, 5, 1, 151, 2, 26, 18, 13, 1, 38, 8, 25, 11, 1, 1, 44, 3, 48, 1, 2, 4, 2, 2, 2, 1, 36, 1, 67, 6, 2, 2, 2, 2, 12, 1, 8, 1, 47, 1, 51, 1, 1, 3, 2, 2, 5, 2, 1, 1, 42, 2, 8, 1, 238, 1, 2, 1, 4, 1, 0, 1, 0, 16, 16, 16, 0, 2, 0, 1, 226, 1, 149, 5, 0, 3, 1, 2, 5, 4, 40, 3, 4, 1, 165, 2, 0, 4, 65, 5, 0, 2, 79, 4, 70, 11, 49, 4, 123, 1, 54, 15, 41, 1, 2, 2, 10, 3, 49, 4, 2, 2, 7, 1, 61, 3, 36, 5, 1, 8, 62, 1, 12, 2, 52, 9, 1, 1, 8, 4, 2, 1, 95, 3, 2, 4, 6, 1, 2, 1, 157, 1, 3, 8, 21, 2, 57, 2, 1, 1, 1, 1, 12, 1, 9, 1, 14, 7, 3, 5, 67, 1, 2, 6, 1, 1, 2, 1, 1, 3, 4, 3, 1, 1, 14, 2, 85, 8, 2, 3, 1, 1, 23, 1, 81, 1, 2, 6, 1, 1, 2, 1, 1, 2, 1, 2, 235, 1, 2, 4, 6, 2, 1, 2, 27, 2, 85, 8, 2, 1, 1, 2, 106, 1, 1, 1, 2, 8, 101, 1, 1, 1, 2, 4, 1, 5, 0, 9, 1, 2, 245, 1, 10, 4, 4, 1, 144, 4, 2, 2, 4, 1, 32, 10, 40, 6, 2, 4, 8, 1, 9, 6, 2, 3, 46, 13, 1, 2, 0, 7, 1, 6, 1, 1, 82, 22, 2, 7, 1, 2, 1, 2, 122, 6, 3, 1, 1, 2, 1, 7, 1, 1, 72, 2, 3, 1, 1, 1, 0, 2, 11, 2, 52, 5, 5, 3, 23, 1, 0, 1, 6, 15, 0, 12, 3, 3, 0, 5, 59, 7, 0, 1, 63, 4, 81, 1, 11, 2, 0, 2, 0, 46, 2, 23, 0, 5, 3, 6, 8, 8, 2, 7, 30, 4, 148, 3, 0, 55, 4, 50, 8, 1, 14, 1, 22, 5, 1, 15, 0, 7, 1, 17, 2, 7, 1, 2, 1, 5, 100, 1, 160, 7, 0, 1, 61, 4, 0, 4, 254, 2, 0, 7, 109, 7, 0, 96, 128, 240, 0, 0, 0, 0, 0, 0, 214, 1, 0, 0, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 122, 1, 0, 0, 0, 0, 0, 0, 216, 1, 0, 0, 0, 0, 0, 0, 218, 1, 0, 0, 0, 0, 0, 0, 74, 117, 109, 112, 84, 97, 98, 108, 101, 109, 97, 112]
// RW data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
// Instructions = 7462
// Code size = 22847 bytes

      :                          @0
     0: 28 82 17 00 00           jump @357
      :                          @1
     5: 28 f0 1d 00 00           jump @458
      :                          @2
    10: 28 f4 1d                 jump @459
      :                          @3
    13: 95 11 c8                 sp = sp + 0xffffffffffffffc8
    16: 7b 10 30                 u64 [sp + 0x30] = ra
    19: 7b 15 28                 u64 [sp + 0x28] = s0
    22: 7b 16 20                 u64 [sp + 0x20] = s1
    25: 64 85                    s0 = a1
    27: 82 88 38                 a1 = u64 [a1 + 0x38]
    30: 64 76                    s1 = a0
    32: 82 57 30                 a0 = u64 [s0 + 0x30]
    35: 82 8a 18                 a3 = u64 [a1 + 0x18]
    38: 95 68 20                 a1 = s1 + 0x20
    41: 7b 18 08                 u64 [sp + 0x8] = a1
    44: 95 68 28                 a1 = s1 + 0x28
    47: 7b 18                    u64 [sp] = a1
    49: 33 08 33 03 01           a1 = 0x10333
    54: 33 09 16                 a2 = 0x16
    57: b4 a0 01 02              ra = 2, jump [a3]
      :                          @4 [@dyn 1]
    61: 7b 15 10                 u64 [sp + 0x10] = s0
    64: 78 17 18                 u8 [sp + 0x18] = a0
    67: 46 11 19                 u8 [sp + 25] = 0
    70: 33 08 37 02 01           a1 = 0x10237
    75: 33 0b 34 01              a4 = 0x134
    79: 95 17 10                 a0 = sp + 0x10
    82: 33 09 08                 a2 = 0x8
    85: 64 6a                    a3 = s1
    87: 50 10 04 31 3b           ra = 4, jump @1070
      :                          @5 [@dyn 2]
    92: 33 08 49 03 01           a1 = 0x10349
    97: 33 0b 48                 a4 = 0x48
   100: 95 17 10                 a0 = sp + 0x10
   103: 33 09 0c                 a2 = 0xc
   106: 82 1a                    a3 = u64 [sp]
   108: 50 10 06 1c 3b           ra = 6, jump @1070
      :                          @6 [@dyn 3]
   113: 33 08 55 03 01           a1 = 0x10355
   118: 33 0b 24                 a4 = 0x24
   121: 95 17 10                 a0 = sp + 0x10
   124: 33 09 0a                 a2 = 0xa
   127: 95 1a 08                 a3 = sp + 0x8
   130: 50 10 08 06 3b           ra = 8, jump @1070
      :                          @7 [@dyn 4]
   135: 7c 19 19                 a2 = u8 [sp + 0x19]
   138: 7c 18 18                 a1 = u8 [sp + 0x18]
   141: d4 89 07                 a0 = a2 | a1
   144: 51 09 40                 jump @12 if a2 == 0
      :                          @8
   147: 84 88 01                 a1 = a1 & 0x1
   150: 52 08 3a                 jump @12 if a1 != 0
      :                          @9
   153: 82 17 10                 a0 = u64 [sp + 0x10]
   156: 7c 78 24                 a1 = u8 [a0 + 0x24]
   159: 84 88 04                 a1 = a1 & 0x4
   162: 52 08 19                 jump @11 if a1 != 0
      :                          @10
   165: 82 78 38                 a1 = u64 [a0 + 0x38]
   168: 82 77 30                 a0 = u64 [a0 + 0x30]
   171: 82 8a 18                 a3 = u64 [a1 + 0x18]
   174: 33 08 13 07 01           a1 = 0x10713
   179: 33 09 02                 a2 = 0x2
   182: 33 00 0a                 ra = 0xa
   185: 32 0a                    jump [a3]
      :                          @11
   187: 82 78 38                 a1 = u64 [a0 + 0x38]
   190: 82 77 30                 a0 = u64 [a0 + 0x30]
   193: 82 8a 18                 a3 = u64 [a1 + 0x18]
   196: 33 08 12 07 01           a1 = 0x10712
   201: 33 09 01                 a2 = 0x1
   204: b4 a0 01 0a              ra = 10, jump [a3]
      :                          @12 [@dyn 5]
   208: 84 77 01                 a0 = a0 & 0x1
   211: 82 10 30                 ra = u64 [sp + 0x30]
   214: 82 15 28                 s0 = u64 [sp + 0x28]
   217: 82 16 20                 s1 = u64 [sp + 0x20]
   220: 95 11 38                 sp = sp + 0x38
   223: 32 00                    ret
      :                          @13
   225: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   228: 7b 10 30                 u64 [sp + 0x30] = ra
   231: 7b 15 28                 u64 [sp + 0x28] = s0
   234: 7b 16 20                 u64 [sp + 0x20] = s1
   237: 64 85                    s0 = a1
   239: 82 88 38                 a1 = u64 [a1 + 0x38]
   242: 82 5a 30                 a3 = u64 [s0 + 0x30]
   245: 82 8b 18                 a4 = u64 [a1 + 0x18]
   248: 95 76 02                 s1 = a0 + 0x2
   251: 7b 17 08                 u64 [sp + 0x8] = a0
   254: 95 77 03                 a0 = a0 + 0x3
   257: 7b 17                    u64 [sp] = a0
   259: 33 08 47 02 01           a1 = 0x10247
   264: 33 09 08                 a2 = 0x8
   267: 64 a7                    a0 = a3
   269: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @14 [@dyn 6]
   273: 7b 15 10                 u64 [sp + 0x10] = s0
   276: 78 17 18                 u8 [sp + 0x18] = a0
   279: 46 11 19                 u8 [sp + 25] = 0
   282: 33 08 18 03 01           a1 = 0x10318
   287: 33 05 3e                 s0 = 0x3e
   290: 95 17 10                 a0 = sp + 0x10
   293: 33 09 06                 a2 = 0x6
   296: 64 6a                    a3 = s1
   298: 33 0b 3e                 a4 = 0x3e
   301: 50 10 0e 5b 3a           ra = 14, jump @1070
      :                          @15 [@dyn 7]
   306: 33 08 1e 03 01           a1 = 0x1031e
   311: 95 17 10                 a0 = sp + 0x10
   314: 33 09 07                 a2 = 0x7
   317: 82 1a                    a3 = u64 [sp]
   319: 64 5b                    a4 = s0
   321: 50 10 10 47 3a           ra = 16, jump @1070
      :                          @16 [@dyn 8]
   326: 33 08 25 03 01           a1 = 0x10325
   331: 33 0b 20                 a4 = 0x20
   334: 95 17 10                 a0 = sp + 0x10
   337: 33 09 0e                 a2 = 0xe
   340: 95 1a 08                 a3 = sp + 0x8
   343: 50 10 12 31 3a           ra = 18, jump @1070
      :                          @17 [@dyn 9]
   348: 7c 19 19                 a2 = u8 [sp + 0x19]
   351: 7c 18 18                 a1 = u8 [sp + 0x18]
   354: d4 89 07                 a0 = a2 | a1
   357: 51 09 40                 jump @22 if a2 == 0
      :                          @18
   360: 84 88 01                 a1 = a1 & 0x1
   363: 52 08 3a                 jump @22 if a1 != 0
      :                          @19
   366: 82 17 10                 a0 = u64 [sp + 0x10]
   369: 7c 78 24                 a1 = u8 [a0 + 0x24]
   372: 84 88 04                 a1 = a1 & 0x4
   375: 52 08 19                 jump @21 if a1 != 0
      :                          @20
   378: 82 78 38                 a1 = u64 [a0 + 0x38]
   381: 82 77 30                 a0 = u64 [a0 + 0x30]
   384: 82 8a 18                 a3 = u64 [a1 + 0x18]
   387: 33 08 13 07 01           a1 = 0x10713
   392: 33 09 02                 a2 = 0x2
   395: 33 00 14                 ra = 0x14
   398: 32 0a                    jump [a3]
      :                          @21
   400: 82 78 38                 a1 = u64 [a0 + 0x38]
   403: 82 77 30                 a0 = u64 [a0 + 0x30]
   406: 82 8a 18                 a3 = u64 [a1 + 0x18]
   409: 33 08 12 07 01           a1 = 0x10712
   414: 33 09 01                 a2 = 0x1
   417: b4 a0 01 14              ra = 20, jump [a3]
      :                          @22 [@dyn 10]
   421: 84 77 01                 a0 = a0 & 0x1
   424: 82 10 30                 ra = u64 [sp + 0x30]
   427: 82 15 28                 s0 = u64 [sp + 0x28]
   430: 82 16 20                 s1 = u64 [sp + 0x20]
   433: 95 11 38                 sp = sp + 0x38
   436: 32 00                    ret
      :                          @23
   438: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   441: 7b 10 30                 u64 [sp + 0x30] = ra
   444: 7b 15 28                 u64 [sp + 0x28] = s0
   447: 7b 16 20                 u64 [sp + 0x20] = s1
   450: 64 85                    s0 = a1
   452: 82 88 38                 a1 = u64 [a1 + 0x38]
   455: 82 5a 30                 a3 = u64 [s0 + 0x30]
   458: 82 8b 18                 a4 = u64 [a1 + 0x18]
   461: 95 76 20                 s1 = a0 + 0x20
   464: 7b 17 08                 u64 [sp + 0x8] = a0
   467: 95 77 34                 a0 = a0 + 0x34
   470: 7b 17                    u64 [sp] = a0
   472: 33 08 f1 02 01           a1 = 0x102f1
   477: 33 09 0f                 a2 = 0xf
   480: 64 a7                    a0 = a3
   482: b4 b0 01 16              ra = 22, jump [a4]
      :                          @24 [@dyn 11]
   486: 7b 15 10                 u64 [sp + 0x10] = s0
   489: 78 17 18                 u8 [sp + 0x18] = a0
   492: 46 11 19                 u8 [sp + 25] = 0
   495: 33 08 00 03 01           a1 = 0x10300
   500: 33 0b 3a 01              a4 = 0x13a
   504: 95 17 10                 a0 = sp + 0x10
   507: 33 09 11                 a2 = 0x11
   510: 64 6a                    a3 = s1
   512: 50 10 18 88 39           ra = 24, jump @1070
      :                          @25 [@dyn 12]
   517: 33 08 11 03 01           a1 = 0x10311
   522: 33 0b 3e                 a4 = 0x3e
   525: 95 17 10                 a0 = sp + 0x10
   528: 33 09 07                 a2 = 0x7
   531: 82 1a                    a3 = u64 [sp]
   533: 50 10 1a 73 39           ra = 26, jump @1070
      :                          @26 [@dyn 13]
   538: 33 08 d9 00 01           a1 = 0x100d9
   543: 33 0b 3c                 a4 = 0x3c
   546: 95 17 10                 a0 = sp + 0x10
   549: 33 09 03                 a2 = 0x3
   552: 95 1a 08                 a3 = sp + 0x8
   555: 50 10 1c 5d 39           ra = 28, jump @1070
      :                          @27 [@dyn 14]
   560: 7c 19 19                 a2 = u8 [sp + 0x19]
   563: 7c 18 18                 a1 = u8 [sp + 0x18]
   566: d4 89 07                 a0 = a2 | a1
   569: 51 09 40                 jump @32 if a2 == 0
      :                          @28
   572: 84 88 01                 a1 = a1 & 0x1
   575: 52 08 3a                 jump @32 if a1 != 0
      :                          @29
   578: 82 17 10                 a0 = u64 [sp + 0x10]
   581: 7c 78 24                 a1 = u8 [a0 + 0x24]
   584: 84 88 04                 a1 = a1 & 0x4
   587: 52 08 19                 jump @31 if a1 != 0
      :                          @30
   590: 82 78 38                 a1 = u64 [a0 + 0x38]
   593: 82 77 30                 a0 = u64 [a0 + 0x30]
   596: 82 8a 18                 a3 = u64 [a1 + 0x18]
   599: 33 08 13 07 01           a1 = 0x10713
   604: 33 09 02                 a2 = 0x2
   607: 33 00 1e                 ra = 0x1e
   610: 32 0a                    jump [a3]
      :                          @31
   612: 82 78 38                 a1 = u64 [a0 + 0x38]
   615: 82 77 30                 a0 = u64 [a0 + 0x30]
   618: 82 8a 18                 a3 = u64 [a1 + 0x18]
   621: 33 08 12 07 01           a1 = 0x10712
   626: 33 09 01                 a2 = 0x1
   629: b4 a0 01 1e              ra = 30, jump [a3]
      :                          @32 [@dyn 15]
   633: 84 77 01                 a0 = a0 & 0x1
   636: 82 10 30                 ra = u64 [sp + 0x30]
   639: 82 15 28                 s0 = u64 [sp + 0x28]
   642: 82 16 20                 s1 = u64 [sp + 0x20]
   645: 95 11 38                 sp = sp + 0x38
   648: 32 00                    ret
      :                          @33 [@dyn 16]
   650: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   654: 7b 10 80 00              u64 [sp + 0x80] = ra
   658: 80 89 24                 a2 = u32 [a1 + 0x24]
   661: 82 77                    a0 = u64 [a0]
   663: 84 9a 10                 a3 = a2 & 0x10
   666: 52 0a 16                 jump @36 if a3 != 0
      :                          @34
   669: 84 99 20                 a2 = a2 & 0x20
   672: 52 09 3e                 jump @39 if a2 != 0
      :                          @35
   675: 7f 77                    a0 = i16 [a0]
   677: 82 10 80 00              ra = u64 [sp + 0x80]
   681: 95 11 88 00              sp = sp + 0x88
   685: 28 02 3d                 jump @1145
      :                          @36
   688: 7e 7a                    a3 = u16 [a0 ]
   690: 33 0b 7f                 a4 = 0x7f
   693: 64 12                    t0 = sp
   695: 01                       fallthrough
      :                          @37
   696: 64 b9                    a2 = a4
   698: 97 ab 30                 a4 = a3 << 0x30
   701: 98 bc 34                 a5 = a4 >> 0x34
   704: c8 92 03                 t1 = t0 + a2
   707: 84 aa 0f                 a3 = a3 & 0xf
   710: 88 a7 0a                 a0 = a3 <u 0xa
   713: 86 ab 30                 a4 = a3 | 0x30
   716: 95 aa 57                 a3 = a3 + 0x57
   719: db 7b 0a                 a3 = a4 if a0 != 0
   722: 78 3a                    u8 [t1] = a3
   724: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
   727: 64 ca                    a3 = a5
   729: 52 0c df                 jump @37 if a5 != 0
      :                          @38
   732: 28 2e                    jump @41
      :                          @39
   734: 7e 7a                    a3 = u16 [a0 ]
   736: 33 0b 7f                 a4 = 0x7f
   739: 64 12                    t0 = sp
   741: 01                       fallthrough
      :                          @40
   742: 64 b9                    a2 = a4
   744: 97 ab 30                 a4 = a3 << 0x30
   747: 98 bc 34                 a5 = a4 >> 0x34
   750: c8 92 03                 t1 = t0 + a2
   753: 84 aa 0f                 a3 = a3 & 0xf
   756: 88 a7 0a                 a0 = a3 <u 0xa
   759: 86 ab 30                 a4 = a3 | 0x30
   762: 95 aa 37                 a3 = a3 + 0x37
   765: db 7b 0a                 a3 = a4 if a0 != 0
   768: 78 3a                    u8 [t1] = a3
   770: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
   773: 64 ca                    a3 = a5
   775: 52 0c df                 jump @40 if a5 != 0
      :                          @41
   778: 95 99 01                 a2 = a2 + 0x1
   781: c8 b2 0a                 a3 = t0 + a4
   784: 95 aa 01                 a3 = a3 + 0x1
   787: 9a 9b 81 00              a4 = 0x81 - a2
   791: 33 09 02                 a2 = 0x2
   794: 64 87                    a0 = a1
   796: 33 08 1a 07 01           a1 = 0x1071a
   801: 50 10 22 60 2c           ra = 34, jump @834
      :                          @42 [@dyn 17]
   806: 82 10 80 00              ra = u64 [sp + 0x80]
   810: 95 11 88 00              sp = sp + 0x88
   814: 32 00                    ret
      :                          @43 [@dyn 18]
   816: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   819: 7b 10 38                 u64 [sp + 0x38] = ra
   822: 7b 15 30                 u64 [sp + 0x30] = s0
   825: 7b 16 28                 u64 [sp + 0x28] = s1
   828: 64 85                    s0 = a1
   830: 82 88 38                 a1 = u64 [a1 + 0x38]
   833: 82 76                    s1 = u64 [a0]
   835: 82 57 30                 a0 = u64 [s0 + 0x30]
   838: 82 8a 18                 a3 = u64 [a1 + 0x18]
   841: 33 08 c8 11 01           a1 = 0x111c8
   846: 33 09 09                 a2 = 0x9
   849: b4 a0 01 26              ra = 38, jump [a3]
      :                          @44 [@dyn 19]
   853: 82 69                    a2 = u64 [s1]
   855: 7b 15                    u64 [sp] = s0
   857: 78 17 08                 u8 [sp + 0x8] = a0
   860: 46 11 09                 u8 [sp + 9] = 0
   863: 82 97 18                 a0 = u64 [a2 + 0x18]
   866: 98 78 03                 a1 = a0 >> 0x3
   869: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
   872: c9 a8 08                 a1 = a1 - a3
   875: c8 87 07                 a0 = a0 + a1
   878: 98 78 03                 a1 = a0 >> 0x3
   881: 84 77 07                 a0 = a0 & 0x7
   884: 8e 77                    a0 = a0 >u 0
   886: c8 78 08                 a1 = a1 + a0
   889: 97 87 01                 a0 = a1 << 0x1
   892: 51 08 6b                 jump @52 if a1 == 0
      :                          @45
   895: 82 99 10                 a2 = u64 [a2 + 0x10]
   898: 33 02 20 00 03           t0 = 0x30020
   903: 95 2a 00 00 00 08        a3 = t0 + 0x8000000
   909: 01                       fallthrough
      :                          @46
   910: 82 a6                    s1 = u64 [a3]
   912: c8 76 05                 s0 = s1 + a0
   915: ac 65 e9 3c              jump @1156 if s0 <u s1
      :                          @47
   919: 98 5b 1b                 a4 = s0 >> 0x1b
   922: 52 0b e2 3c              jump @1156 if a4 != 0
      :                          @48
   926: 82 ab                    a4 = u64 [a3]
   928: ab 6b ee                 jump @46 if a4 != s1
      :                          @49
   931: 7b a5                    u64 [a3] = s0
   933: c9 52 0a                 a3 = t0 - s0
   936: 95 aa 00 00 00 08        a3 = a3 + 0x8000000
   942: c9 72 0c                 a5 = t0 - a0
   945: 95 cb 01 00 00 08        a4 = a5 + 0x8000001
   951: c9 6b 0b                 a4 = a4 - s1
   954: 33 0c 27 02 01           a5 = 0x10227
   959: 01                       fallthrough
      :                          @50
   960: 7c 96                    s1 = u8 [a2]
   962: 84 65 0f                 s0 = s1 & 0xf
   965: 98 66 04                 s1 = s1 >> 0x4
   968: c8 c6 06                 s1 = s1 + a5
   971: 7c 66                    s1 = u8 [s1]
   973: c8 c5 05                 s0 = s0 + a5
   976: 7c 55                    s0 = u8 [s0]
   978: 95 99 01                 a2 = a2 + 0x1
   981: 78 b6 ff                 u8 [a4 + 0xffffffffffffffff] = s1
   984: 78 b5                    u8 [a4] = s0
   986: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   989: 95 bb 02                 a4 = a4 + 0x2
   992: 52 08 e0                 jump @50 if a1 != 0
      :                          @51
   995: 64 78                    a1 = a0
   997: 28 06                    jump @53
      :                          @52
   999: 33 0a 01                 a3 = 0x1
  1002: 01                       fallthrough
      :                          @53
  1003: 7b 18 10                 u64 [sp + 0x10] = a1
  1006: 7b 1a 18                 u64 [sp + 0x18] = a3
  1009: 7b 17 20                 u64 [sp + 0x20] = a0
  1012: 33 08 d1 11 01           a1 = 0x111d1
  1017: 33 0b 08 02              a4 = 0x208
  1021: 64 17                    a0 = sp
  1023: 33 09 03                 a2 = 0x3
  1026: 95 1a 10                 a3 = sp + 0x10
  1029: 50 10 28 83 37           ra = 40, jump @1070
      :                          @54 [@dyn 20]
  1034: 7c 18 09                 a1 = u8 [sp + 0x9]
  1037: 7c 17 08                 a0 = u8 [sp + 0x8]
  1040: 51 08 46                 jump @60 if a1 == 0
      :                          @55
  1043: 84 78 01                 a1 = a0 & 0x1
  1046: 33 07 01                 a0 = 0x1
  1049: 52 08 39                 jump @59 if a1 != 0
      :                          @56
  1052: 82 17                    a0 = u64 [sp]
  1054: 7c 78 24                 a1 = u8 [a0 + 0x24]
  1057: 84 88 04                 a1 = a1 & 0x4
  1060: 52 08 19                 jump @58 if a1 != 0
      :                          @57
  1063: 82 78 38                 a1 = u64 [a0 + 0x38]
  1066: 82 77 30                 a0 = u64 [a0 + 0x30]
  1069: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1072: 33 08 13 07 01           a1 = 0x10713
  1077: 33 09 02                 a2 = 0x2
  1080: 33 00 2a                 ra = 0x2a
  1083: 32 0a                    jump [a3]
      :                          @58
  1085: 82 78 38                 a1 = u64 [a0 + 0x38]
  1088: 82 77 30                 a0 = u64 [a0 + 0x30]
  1091: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1094: 33 08 12 07 01           a1 = 0x10712
  1099: 33 09 01                 a2 = 0x1
  1102: b4 a0 01 2a              ra = 42, jump [a3]
      :                          @59 [@dyn 21]
  1106: 78 17 08                 u8 [sp + 0x8] = a0
  1109: 01                       fallthrough
      :                          @60
  1110: 82 18 10                 a1 = u64 [sp + 0x10]
  1113: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  1119: 95 8a ff ff ff f7        a3 = a1 + 0xfffffffff7ffffff
  1125: ac 9a 26                 jump @66 if a3 <u a2
      :                          @61
  1128: 82 19 18                 a2 = u64 [sp + 0x18]
  1131: 33 0a 20 00 03           a3 = 0x30020
  1136: 95 aa 00 00 00 08        a3 = a3 + 0x8000000
  1142: 01                       fallthrough
      :                          @62
  1143: 82 ab                    a4 = u64 [a3]
  1145: c9 ba 0c                 a5 = a3 - a4
  1148: ab 9c 0f                 jump @66 if a5 != a2
      :                          @63
  1151: c9 8b 0c                 a5 = a4 - a1
  1154: 01                       fallthrough
      :                          @64
  1155: 82 a6                    s1 = u64 [a3]
  1157: ab b6 f2                 jump @62 if s1 != a4
      :                          @65
  1160: 7b ac                    u64 [a3] = a5
  1162: 01                       fallthrough
      :                          @66
  1163: 84 77 01                 a0 = a0 & 0x1
  1166: 82 10 38                 ra = u64 [sp + 0x38]
  1169: 82 15 30                 s0 = u64 [sp + 0x30]
  1172: 82 16 28                 s1 = u64 [sp + 0x28]
  1175: 95 11 40                 sp = sp + 0x40
  1178: 32 00                    ret
      :                          @67 [@dyn 22]
  1180: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1184: 7b 10 80 00              u64 [sp + 0x80] = ra
  1188: 80 89 24                 a2 = u32 [a1 + 0x24]
  1191: 82 77                    a0 = u64 [a0]
  1193: 84 9a 10                 a3 = a2 & 0x10
  1196: 52 0a 16                 jump @70 if a3 != 0
      :                          @68
  1199: 84 99 20                 a2 = a2 & 0x20
  1202: 52 09 3b                 jump @73 if a2 != 0
      :                          @69
  1205: 82 77                    a0 = u64 [a0]
  1207: 82 10 80 00              ra = u64 [sp + 0x80]
  1211: 95 11 88 00              sp = sp + 0x88
  1215: 28 9f 29                 jump @824
      :                          @70
  1218: 82 7b                    a4 = u64 [a0]
  1220: 33 0a 7f                 a3 = 0x7f
  1223: 64 12                    t0 = sp
  1225: 01                       fallthrough
      :                          @71
  1226: 64 a9                    a2 = a3
  1228: 98 bc 04                 a5 = a4 >> 0x4
  1231: c8 a2 03                 t1 = t0 + a3
  1234: 84 bb 0f                 a4 = a4 & 0xf
  1237: 88 b7 0a                 a0 = a4 <u 0xa
  1240: 86 ba 30                 a3 = a4 | 0x30
  1243: 95 bb 57                 a4 = a4 + 0x57
  1246: db 7a 0b                 a4 = a3 if a0 != 0
  1249: 78 3b                    u8 [t1] = a4
  1251: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  1254: 64 cb                    a4 = a5
  1256: 52 0c e2                 jump @71 if a5 != 0
      :                          @72
  1259: 28 2b                    jump @75
      :                          @73
  1261: 82 7b                    a4 = u64 [a0]
  1263: 33 0a 7f                 a3 = 0x7f
  1266: 64 12                    t0 = sp
  1268: 01                       fallthrough
      :                          @74
  1269: 64 a9                    a2 = a3
  1271: 98 bc 04                 a5 = a4 >> 0x4
  1274: c8 a2 03                 t1 = t0 + a3
  1277: 84 bb 0f                 a4 = a4 & 0xf
  1280: 88 b7 0a                 a0 = a4 <u 0xa
  1283: 86 ba 30                 a3 = a4 | 0x30
  1286: 95 bb 37                 a4 = a4 + 0x37
  1289: db 7a 0b                 a4 = a3 if a0 != 0
  1292: 78 3b                    u8 [t1] = a4
  1294: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  1297: 64 cb                    a4 = a5
  1299: 52 0c e2                 jump @74 if a5 != 0
      :                          @75
  1302: 95 99 01                 a2 = a2 + 0x1
  1305: c8 2a 0a                 a3 = a3 + t0
  1308: 95 aa 01                 a3 = a3 + 0x1
  1311: 9a 9b 81 00              a4 = 0x81 - a2
  1315: 33 09 02                 a2 = 0x2
  1318: 64 87                    a0 = a1
  1320: 33 08 1a 07 01           a1 = 0x1071a
  1325: 50 10 2e 54 2a           ra = 46, jump @834
      :                          @76 [@dyn 23]
  1330: 82 10 80 00              ra = u64 [sp + 0x80]
  1334: 95 11 88 00              sp = sp + 0x88
  1338: 32 00                    ret
      :                          @77
  1340: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1343: 7b 10 30                 u64 [sp + 0x30] = ra
  1346: 7b 15 28                 u64 [sp + 0x28] = s0
  1349: 7b 16 20                 u64 [sp + 0x20] = s1
  1352: 82 79                    a2 = u64 [a0]
  1354: 64 86                    s1 = a1
  1356: 82 88 38                 a1 = u64 [a1 + 0x38]
  1359: 95 9a f0 00              a3 = a2 + 0xf0
  1363: 82 67 30                 a0 = u64 [s1 + 0x30]
  1366: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1369: 7b 1a 08                 u64 [sp + 0x8] = a3
  1372: 95 95 10                 s0 = a2 + 0x10
  1375: 95 98 58                 a1 = a2 + 0x58
  1378: 7b 18                    u64 [sp] = a1
  1380: 33 08 c0 00 01           a1 = 0x100c0
  1385: 33 09 03                 a2 = 0x3
  1388: b4 b0 01 30              ra = 48, jump [a4]
      :                          @78 [@dyn 24]
  1392: 7b 16 10                 u64 [sp + 0x10] = s1
  1395: 78 17 18                 u8 [sp + 0x18] = a0
  1398: 46 11 19                 u8 [sp + 25] = 0
  1401: 33 08 c3 00 01           a1 = 0x100c3
  1406: 33 0b e8 00              a4 = 0xe8
  1410: 95 17 10                 a0 = sp + 0x10
  1413: 33 09 06                 a2 = 0x6
  1416: 64 5a                    a3 = s0
  1418: 50 10 32 fe 35           ra = 50, jump @1070
      :                          @79 [@dyn 25]
  1423: 33 08 c9 00 01           a1 = 0x100c9
  1428: 33 0b d4 00              a4 = 0xd4
  1432: 95 17 10                 a0 = sp + 0x10
  1435: 33 09 04                 a2 = 0x4
  1438: 82 1a                    a3 = u64 [sp]
  1440: 50 10 34 e8 35           ra = 52, jump @1070
      :                          @80 [@dyn 26]
  1445: 33 08 d9 00 01           a1 = 0x100d9
  1450: 33 0b 3c                 a4 = 0x3c
  1453: 95 17 10                 a0 = sp + 0x10
  1456: 33 09 03                 a2 = 0x3
  1459: 95 1a 08                 a3 = sp + 0x8
  1462: 50 10 36 d2 35           ra = 54, jump @1070
      :                          @81 [@dyn 27]
  1467: 7c 19 19                 a2 = u8 [sp + 0x19]
  1470: 7c 18 18                 a1 = u8 [sp + 0x18]
  1473: d4 89 07                 a0 = a2 | a1
  1476: 51 09 40                 jump @86 if a2 == 0
      :                          @82
  1479: 84 88 01                 a1 = a1 & 0x1
  1482: 52 08 3a                 jump @86 if a1 != 0
      :                          @83
  1485: 82 17 10                 a0 = u64 [sp + 0x10]
  1488: 7c 78 24                 a1 = u8 [a0 + 0x24]
  1491: 84 88 04                 a1 = a1 & 0x4
  1494: 52 08 19                 jump @85 if a1 != 0
      :                          @84
  1497: 82 78 38                 a1 = u64 [a0 + 0x38]
  1500: 82 77 30                 a0 = u64 [a0 + 0x30]
  1503: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1506: 33 08 13 07 01           a1 = 0x10713
  1511: 33 09 02                 a2 = 0x2
  1514: 33 00 38                 ra = 0x38
  1517: 32 0a                    jump [a3]
      :                          @85
  1519: 82 78 38                 a1 = u64 [a0 + 0x38]
  1522: 82 77 30                 a0 = u64 [a0 + 0x30]
  1525: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1528: 33 08 12 07 01           a1 = 0x10712
  1533: 33 09 01                 a2 = 0x1
  1536: b4 a0 01 38              ra = 56, jump [a3]
      :                          @86 [@dyn 28]
  1540: 84 77 01                 a0 = a0 & 0x1
  1543: 82 10 30                 ra = u64 [sp + 0x30]
  1546: 82 15 28                 s0 = u64 [sp + 0x28]
  1549: 82 16 20                 s1 = u64 [sp + 0x20]
  1552: 95 11 38                 sp = sp + 0x38
  1555: 32 00                    ret
      :                          @87 [@dyn 29]
  1557: 82 77                    a0 = u64 [a0]
  1559: 7c 79                    a2 = u8 [a0]
  1561: 64 87                    a0 = a1
  1563: 51 09 0e                 jump @89 if a2 == 0
      :                          @88
  1566: 33 08 d1 00 01           a1 = 0x100d1
  1571: 33 09 04                 a2 = 0x4
  1574: 28 db 2b                 jump @887
      :                          @89
  1577: 33 08 3d 08 01           a1 = 0x1083d
  1582: 33 09 05                 a2 = 0x5
  1585: 28 d0 2b                 jump @887
      :                          @90 [@dyn 30]
  1588: 82 77                    a0 = u64 [a0]
  1590: 28 44 1b                 jump @537
      :                          @91 [@dyn 31]
  1593: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1597: 7b 10 80 00              u64 [sp + 0x80] = ra
  1601: 64 82                    t0 = a1
  1603: 80 88 24                 a1 = u32 [a1 + 0x24]
  1606: 84 89 10                 a2 = a1 & 0x10
  1609: 52 09 7c                 jump @100 if a2 != 0
      :                          @92
  1612: 84 88 20                 a1 = a1 & 0x20
  1615: 52 08 a1 00              jump @103 if a1 != 0
      :                          @93
  1619: 7c 78                    a1 = u8 [a0]
  1621: 33 0a 03                 a3 = 0x3
  1624: 33 07 1c 07 01           a0 = 0x1071c
  1629: 64 89                    a2 = a1
  1631: 53 18 0a 28              jump @95 if a1 <u 10
      :                          @94
  1635: 96 89 29                 a2 = a1 * 0x29
  1638: 98 99 0c                 a2 = a2 >> 0xc
  1641: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  1644: c8 8a 0a                 a3 = a3 + a1
  1647: 97 aa 39                 a3 = a3 << 0x39
  1650: 98 aa 38                 a3 = a3 >> 0x38
  1653: c8 7a 0a                 a3 = a3 + a0
  1656: 7c ab                    a4 = u8 [a3]
  1658: 7c aa 01                 a3 = u8 [a3 + 0x1]
  1661: 78 1b 01                 u8 [sp + 0x1] = a4
  1664: 78 1a 02                 u8 [sp + 0x2] = a3
  1667: 33 0a 01                 a3 = 0x1
  1670: 01                       fallthrough
      :                          @95
  1671: 51 08 06                 jump @97 if a1 == 0
      :                          @96
  1674: 51 09 1d                 jump @98 if a2 == 0
      :                          @97
  1677: 97 99 01                 a2 = a2 << 0x1
  1680: 95 99 01                 a2 = a2 + 0x1
  1683: 84 98 ff 00              a1 = a2 & 0xff
  1687: c8 87 07                 a0 = a0 + a1
  1690: 7c 77                    a0 = u8 [a0]
  1692: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1695: 64 18                    a1 = sp
  1697: c8 a8 08                 a1 = a1 + a3
  1700: 78 87                    u8 [a1] = a0
  1702: 01                       fallthrough
      :                          @98
  1703: 9a ab 03                 a4 = 0x3 - a3
  1706: 64 17                    a0 = sp
  1708: c8 7a 0a                 a3 = a3 + a0
  1711: 33 08 01                 a1 = 0x1
  1714: 64 27                    a0 = t0
  1716: 33 09                    a2 = 0
  1718: 50 10 40 cb 28           ra = 64, jump @834
      :                          @99 [@dyn 32]
  1723: 82 10 80 00              ra = u64 [sp + 0x80]
  1727: 95 11 88 00              sp = sp + 0x88
  1731: 32 00                    ret
      :                          @100
  1733: 7c 7a                    a3 = u8 [a0]
  1735: 33 09 7f                 a2 = 0x7f
  1738: 64 13                    t1 = sp
  1740: 01                       fallthrough
      :                          @101
  1741: 64 98                    a1 = a2
  1743: 98 ab 04                 a4 = a3 >> 0x4
  1746: 84 aa 0f                 a3 = a3 & 0xf
  1749: c8 39 09                 a2 = a2 + t1
  1752: 88 ac 0a                 a5 = a3 <u 0xa
  1755: 86 a7 30                 a0 = a3 | 0x30
  1758: 95 aa 57                 a3 = a3 + 0x57
  1761: db c7 0a                 a3 = a0 if a5 != 0
  1764: 78 9a                    u8 [a2] = a3
  1766: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  1769: 64 ba                    a3 = a4
  1771: 52 0b e2                 jump @101 if a4 != 0
      :                          @102
  1774: 28 2b                    jump @105
      :                          @103
  1776: 7c 7a                    a3 = u8 [a0]
  1778: 33 09 7f                 a2 = 0x7f
  1781: 64 13                    t1 = sp
  1783: 01                       fallthrough
      :                          @104
  1784: 64 98                    a1 = a2
  1786: 98 ab 04                 a4 = a3 >> 0x4
  1789: 84 aa 0f                 a3 = a3 & 0xf
  1792: c8 39 09                 a2 = a2 + t1
  1795: 88 ac 0a                 a5 = a3 <u 0xa
  1798: 86 a7 30                 a0 = a3 | 0x30
  1801: 95 aa 37                 a3 = a3 + 0x37
  1804: db c7 0a                 a3 = a0 if a5 != 0
  1807: 78 9a                    u8 [a2] = a3
  1809: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  1812: 64 ba                    a3 = a4
  1814: 52 0b e2                 jump @104 if a4 != 0
      :                          @105
  1817: 95 88 01                 a1 = a1 + 0x1
  1820: c8 39 09                 a2 = a2 + t1
  1823: 95 9a 01                 a3 = a2 + 0x1
  1826: 9a 8b 81 00              a4 = 0x81 - a1
  1830: 33 08 1a 07 01           a1 = 0x1071a
  1835: 33 09 02                 a2 = 0x2
  1838: 64 27                    a0 = t0
  1840: 50 10 42 51 28           ra = 66, jump @834
      :                          @106 [@dyn 33]
  1845: 82 10 80 00              ra = u64 [sp + 0x80]
  1849: 95 11 88 00              sp = sp + 0x88
  1853: 32 00                    ret
      :                          @107 [@dyn 34]
  1855: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1859: 7b 10 80 00              u64 [sp + 0x80] = ra
  1863: 80 89 24                 a2 = u32 [a1 + 0x24]
  1866: 84 9a 10                 a3 = a2 & 0x10
  1869: 52 0a 16                 jump @110 if a3 != 0
      :                          @108
  1872: 84 99 20                 a2 = a2 & 0x20
  1875: 52 09 3e                 jump @113 if a2 != 0
      :                          @109
  1878: 7f 77                    a0 = i16 [a0]
  1880: 82 10 80 00              ra = u64 [sp + 0x80]
  1884: 95 11 88 00              sp = sp + 0x88
  1888: 28 4f 38                 jump @1145
      :                          @110
  1891: 7e 7a                    a3 = u16 [a0 ]
  1893: 33 0b 7f                 a4 = 0x7f
  1896: 64 12                    t0 = sp
  1898: 01                       fallthrough
      :                          @111
  1899: 64 b9                    a2 = a4
  1901: 97 ab 30                 a4 = a3 << 0x30
  1904: 98 bc 34                 a5 = a4 >> 0x34
  1907: c8 92 03                 t1 = t0 + a2
  1910: 84 aa 0f                 a3 = a3 & 0xf
  1913: 88 a7 0a                 a0 = a3 <u 0xa
  1916: 86 ab 30                 a4 = a3 | 0x30
  1919: 95 aa 57                 a3 = a3 + 0x57
  1922: db 7b 0a                 a3 = a4 if a0 != 0
  1925: 78 3a                    u8 [t1] = a3
  1927: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
  1930: 64 ca                    a3 = a5
  1932: 52 0c df                 jump @111 if a5 != 0
      :                          @112
  1935: 28 2e                    jump @115
      :                          @113
  1937: 7e 7a                    a3 = u16 [a0 ]
  1939: 33 0b 7f                 a4 = 0x7f
  1942: 64 12                    t0 = sp
  1944: 01                       fallthrough
      :                          @114
  1945: 64 b9                    a2 = a4
  1947: 97 ab 30                 a4 = a3 << 0x30
  1950: 98 bc 34                 a5 = a4 >> 0x34
  1953: c8 92 03                 t1 = t0 + a2
  1956: 84 aa 0f                 a3 = a3 & 0xf
  1959: 88 a7 0a                 a0 = a3 <u 0xa
  1962: 86 ab 30                 a4 = a3 | 0x30
  1965: 95 aa 37                 a3 = a3 + 0x37
  1968: db 7b 0a                 a3 = a4 if a0 != 0
  1971: 78 3a                    u8 [t1] = a3
  1973: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
  1976: 64 ca                    a3 = a5
  1978: 52 0c df                 jump @114 if a5 != 0
      :                          @115
  1981: 95 99 01                 a2 = a2 + 0x1
  1984: c8 b2 0a                 a3 = t0 + a4
  1987: 95 aa 01                 a3 = a3 + 0x1
  1990: 9a 9b 81 00              a4 = 0x81 - a2
  1994: 33 09 02                 a2 = 0x2
  1997: 64 87                    a0 = a1
  1999: 33 08 1a 07 01           a1 = 0x1071a
  2004: 50 10 46 ad 27           ra = 70, jump @834
      :                          @116 [@dyn 35]
  2009: 82 10 80 00              ra = u64 [sp + 0x80]
  2013: 95 11 88 00              sp = sp + 0x88
  2017: 32 00                    ret
      :                          @117 [@dyn 36]
  2019: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  2023: 7b 10 80 00              u64 [sp + 0x80] = ra
  2027: 80 89 24                 a2 = u32 [a1 + 0x24]
  2030: 84 9a 10                 a3 = a2 & 0x10
  2033: 52 0a 16                 jump @120 if a3 != 0
      :                          @118
  2036: 84 99 20                 a2 = a2 & 0x20
  2039: 52 09 3b                 jump @123 if a2 != 0
      :                          @119
  2042: 82 77                    a0 = u64 [a0]
  2044: 82 10 80 00              ra = u64 [sp + 0x80]
  2048: 95 11 88 00              sp = sp + 0x88
  2052: 28 5a 26                 jump @824
      :                          @120
  2055: 82 7b                    a4 = u64 [a0]
  2057: 33 0a 7f                 a3 = 0x7f
  2060: 64 12                    t0 = sp
  2062: 01                       fallthrough
      :                          @121
  2063: 64 a9                    a2 = a3
  2065: 98 bc 04                 a5 = a4 >> 0x4
  2068: c8 a2 03                 t1 = t0 + a3
  2071: 84 bb 0f                 a4 = a4 & 0xf
  2074: 88 b7 0a                 a0 = a4 <u 0xa
  2077: 86 ba 30                 a3 = a4 | 0x30
  2080: 95 bb 57                 a4 = a4 + 0x57
  2083: db 7a 0b                 a4 = a3 if a0 != 0
  2086: 78 3b                    u8 [t1] = a4
  2088: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  2091: 64 cb                    a4 = a5
  2093: 52 0c e2                 jump @121 if a5 != 0
      :                          @122
  2096: 28 2b                    jump @125
      :                          @123
  2098: 82 7b                    a4 = u64 [a0]
  2100: 33 0a 7f                 a3 = 0x7f
  2103: 64 12                    t0 = sp
  2105: 01                       fallthrough
      :                          @124
  2106: 64 a9                    a2 = a3
  2108: 98 bc 04                 a5 = a4 >> 0x4
  2111: c8 a2 03                 t1 = t0 + a3
  2114: 84 bb 0f                 a4 = a4 & 0xf
  2117: 88 b7 0a                 a0 = a4 <u 0xa
  2120: 86 ba 30                 a3 = a4 | 0x30
  2123: 95 bb 37                 a4 = a4 + 0x37
  2126: db 7a 0b                 a4 = a3 if a0 != 0
  2129: 78 3b                    u8 [t1] = a4
  2131: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  2134: 64 cb                    a4 = a5
  2136: 52 0c e2                 jump @124 if a5 != 0
      :                          @125
  2139: 95 99 01                 a2 = a2 + 0x1
  2142: c8 2a 0a                 a3 = a3 + t0
  2145: 95 aa 01                 a3 = a3 + 0x1
  2148: 9a 9b 81 00              a4 = 0x81 - a2
  2152: 33 09 02                 a2 = 0x2
  2155: 64 87                    a0 = a1
  2157: 33 08 1a 07 01           a1 = 0x1071a
  2162: 50 10 4a 0f 27           ra = 74, jump @834
      :                          @126 [@dyn 37]
  2167: 82 10 80 00              ra = u64 [sp + 0x80]
  2171: 95 11 88 00              sp = sp + 0x88
  2175: 32 00                    ret
      :                          @127 [@dyn 38]
  2177: 82 78                    a1 = u64 [a0]
  2179: 51 08 3b                 jump @134 if a1 == 0
      :                          @128
  2182: 97 82 01                 t0 = a1 << 0x1
  2185: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  2191: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
  2197: ac 9a 29                 jump @134 if a3 <u a2
      :                          @129
  2200: 82 77 08                 a0 = u64 [a0 + 0x8]
  2203: 33 09 20 00 03           a2 = 0x30020
  2208: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  2214: 01                       fallthrough
      :                          @130
  2215: 82 9a                    a3 = u64 [a2]
  2217: c9 a9 0b                 a4 = a2 - a3
  2220: ab 7b 12                 jump @134 if a4 != a0
      :                          @131
  2223: c9 2a 0b                 a4 = a3 - t0
  2226: 01                       fallthrough
      :                          @132
  2227: 82 9c                    a5 = u64 [a2]
  2229: ab ac f2                 jump @130 if a5 != a3
      :                          @133
  2232: 7b 9b                    u64 [a2] = a4
  2234: 33 08                    a1 = 0
  2236: 32 00                    ret
      :                          @134
  2238: 32 00                    ret
      :                          @135 [@dyn 39]
  2240: 82 78                    a1 = u64 [a0]
  2242: 51 08 3b                 jump @142 if a1 == 0
      :                          @136
  2245: 97 82 03                 t0 = a1 << 0x3
  2248: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  2254: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
  2260: ac 9a 29                 jump @142 if a3 <u a2
      :                          @137
  2263: 82 77 08                 a0 = u64 [a0 + 0x8]
  2266: 33 09 20 00 03           a2 = 0x30020
  2271: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  2277: 01                       fallthrough
      :                          @138
  2278: 82 9a                    a3 = u64 [a2]
  2280: c9 a9 0b                 a4 = a2 - a3
  2283: ab 7b 12                 jump @142 if a4 != a0
      :                          @139
  2286: c9 2a 0b                 a4 = a3 - t0
  2289: 01                       fallthrough
      :                          @140
  2290: 82 9c                    a5 = u64 [a2]
  2292: ab ac f2                 jump @138 if a5 != a3
      :                          @141
  2295: 7b 9b                    u64 [a2] = a4
  2297: 33 08                    a1 = 0
  2299: 32 00                    ret
      :                          @142
  2301: 32 00                    ret
      :                          @143 [@dyn 40]
  2303: 82 78                    a1 = u64 [a0]
  2305: 82 8c 20                 a5 = u64 [a1 + 0x20]
  2308: 82 78 08                 a1 = u64 [a0 + 0x8]
  2311: 82 79 10                 a2 = u64 [a0 + 0x10]
  2314: 95 77 18                 a0 = a0 + 0x18
  2317: 32 0c                    jump [a5]
      :                          @144 [@dyn 41]
  2319: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  2322: 7b 10 20                 u64 [sp + 0x20] = ra
  2325: 7b 15 18                 u64 [sp + 0x18] = s0
  2328: 7b 16 10                 u64 [sp + 0x10] = s1
  2331: 82 75 10                 s0 = u64 [a0 + 0x10]
  2334: 7b 17                    u64 [sp] = a0
  2336: 82 77 08                 a0 = u64 [a0 + 0x8]
  2339: 7b 17 08                 u64 [sp + 0x8] = a0
  2342: 51 05 25                 jump @148 if s0 == 0
      :                          @145
  2345: 82 16 08                 s1 = u64 [sp + 0x8]
  2348: 95 66 18                 s1 = s1 + 0x18
  2351: 01                       fallthrough
      :                          @146
  2352: 82 67 e8                 a0 = u64 [s1 + 0xffffffffffffffe8]
  2355: 82 7a 20                 a3 = u64 [a0 + 0x20]
  2358: 82 68 f0                 a1 = u64 [s1 + 0xfffffffffffffff0]
  2361: 82 69 f8                 a2 = u64 [s1 + 0xfffffffffffffff8]
  2364: 64 67                    a0 = s1
  2366: b4 a0 01 54              ra = 84, jump [a3]
      :                          @147 [@dyn 42]
  2370: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2373: 95 66 20                 s1 = s1 + 0x20
  2376: 52 05 e8                 jump @146 if s0 != 0
      :                          @148
  2379: 82 17                    a0 = u64 [sp]
  2381: 82 77                    a0 = u64 [a0]
  2383: 82 16 08                 s1 = u64 [sp + 0x8]
  2386: 51 07 37                 jump @155 if a0 == 0
      :                          @149
  2389: 97 77 05                 a0 = a0 << 0x5
  2392: 33 08 00 00 00 f8        a1 = 0xfffffffff8000000
  2398: 95 79 ff ff ff f7        a2 = a0 + 0xfffffffff7ffffff
  2404: ac 89 25                 jump @155 if a2 <u a1
      :                          @150
  2407: 33 08 20 00 03           a1 = 0x30020
  2412: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  2418: 01                       fallthrough
      :                          @151
  2419: 82 89                    a2 = u64 [a1]
  2421: c9 98 0a                 a3 = a1 - a2
  2424: ab 6a 11                 jump @155 if a3 != s1
      :                          @152
  2427: c9 79 0a                 a3 = a2 - a0
  2430: 01                       fallthrough
      :                          @153
  2431: 82 8b                    a4 = u64 [a1]
  2433: ab 9b f2                 jump @151 if a4 != a2
      :                          @154
  2436: 7b 8a                    u64 [a1] = a3
  2438: 33 0c                    a5 = 0
  2440: 01                       fallthrough
      :                          @155
  2441: 82 10 20                 ra = u64 [sp + 0x20]
  2444: 82 15 18                 s0 = u64 [sp + 0x18]
  2447: 82 16 10                 s1 = u64 [sp + 0x10]
  2450: 95 11 28                 sp = sp + 0x28
  2453: 32 00                    ret
      :                          @156 [@dyn 43]
  2455: 82 78                    a1 = u64 [a0]
  2457: 51 08 3b                 jump @163 if a1 == 0
      :                          @157
  2460: 97 82 02                 t0 = a1 << 0x2
  2463: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  2469: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
  2475: ac 9a 29                 jump @163 if a3 <u a2
      :                          @158
  2478: 82 77 08                 a0 = u64 [a0 + 0x8]
  2481: 33 09 20 00 03           a2 = 0x30020
  2486: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  2492: 01                       fallthrough
      :                          @159
  2493: 82 9a                    a3 = u64 [a2]
  2495: c9 a9 0b                 a4 = a2 - a3
  2498: ab 7b 12                 jump @163 if a4 != a0
      :                          @160
  2501: c9 2a 0b                 a4 = a3 - t0
  2504: 01                       fallthrough
      :                          @161
  2505: 82 9c                    a5 = u64 [a2]
  2507: ab ac f2                 jump @159 if a5 != a3
      :                          @162
  2510: 7b 9b                    u64 [a2] = a4
  2512: 33 08                    a1 = 0
  2514: 32 00                    ret
      :                          @163
  2516: 32 00                    ret
      :                          @164 [@dyn 44]
  2518: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  2522: 7b 10 80 00              u64 [sp + 0x80] = ra
  2526: 7b 15 78                 u64 [sp + 0x78] = s0
  2529: 7b 16 70                 u64 [sp + 0x70] = s1
  2532: 82 89 38                 a2 = u64 [a1 + 0x38]
  2535: 82 7a 08                 a3 = u64 [a0 + 0x8]
  2538: 7b 1a                    u64 [sp] = a3
  2540: 82 75 10                 s0 = u64 [a0 + 0x10]
  2543: 7b 18 08                 u64 [sp + 0x8] = a1
  2546: 82 87 30                 a0 = u64 [a1 + 0x30]
  2549: 82 9a 18                 a3 = u64 [a2 + 0x18]
  2552: 33 08 d1 06 01           a1 = 0x106d1
  2557: 33 09 01                 a2 = 0x1
  2560: 33 06 01                 s1 = 0x1
  2563: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @165 [@dyn 45]
  2567: 51 05 1e                 jump @170 if s0 == 0
      :                          @166
  2570: 52 07 98 00              jump @175 if a0 != 0
      :                          @167
  2574: 82 18 08                 a1 = u64 [sp + 0x8]
  2577: 7c 87 24                 a0 = u8 [a1 + 0x24]
  2580: 84 77 04                 a0 = a0 & 0x4
  2583: 52 07 16                 jump @171 if a0 != 0
      :                          @168
  2586: 82 17                    a0 = u64 [sp]
  2588: 50 10 5c c5 f6           ra = 92, jump @13
      :                          @169 [@dyn 46]
  2593: 64 76                    s1 = a0
  2595: 28 7f                    jump @175
      :                          @170
  2597: 64 79                    a2 = a0
  2599: 82 18 08                 a1 = u64 [sp + 0x8]
  2602: 28 81 00                 jump @176
      :                          @171
  2605: 82 89 38                 a2 = u64 [a1 + 0x38]
  2608: 82 87 30                 a0 = u64 [a1 + 0x30]
  2611: 82 9a 18                 a3 = u64 [a2 + 0x18]
  2614: 33 08 18 07 01           a1 = 0x10718
  2619: 33 09 01                 a2 = 0x1
  2622: 33 06 01                 s1 = 0x1
  2625: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @172 [@dyn 47]
  2629: 52 07 5d                 jump @175 if a0 != 0
      :                          @173
  2632: 82 1b 08                 a4 = u64 [sp + 0x8]
  2635: 82 b7 30                 a0 = u64 [a4 + 0x30]
  2638: 82 b8 38                 a1 = u64 [a4 + 0x38]
  2641: 7b 17 10                 u64 [sp + 0x10] = a0
  2644: 7b 18 18                 u64 [sp + 0x18] = a1
  2647: 95 17 2f                 a0 = sp + 0x2f
  2650: 7b 17 20                 u64 [sp + 0x20] = a0
  2653: 82 b7                    a0 = u64 [a4]
  2655: 82 b8 08                 a1 = u64 [a4 + 0x8]
  2658: 82 b9 10                 a2 = u64 [a4 + 0x10]
  2661: 82 ba 18                 a3 = u64 [a4 + 0x18]
  2664: 7b 17 30                 u64 [sp + 0x30] = a0
  2667: 7b 18 38                 u64 [sp + 0x38] = a1
  2670: 7b 19 40                 u64 [sp + 0x40] = a2
  2673: 7b 1a 48                 u64 [sp + 0x48] = a3
  2676: 82 b7 20                 a0 = u64 [a4 + 0x20]
  2679: 82 b8 28                 a1 = u64 [a4 + 0x28]
  2682: 33 06 01                 s1 = 0x1
  2685: 78 16 2f                 u8 [sp + 0x2f] = s1
  2688: 7b 17 50                 u64 [sp + 0x50] = a0
  2691: 7b 18 58                 u64 [sp + 0x58] = a1
  2694: 95 17 10                 a0 = sp + 0x10
  2697: 7b 17 60                 u64 [sp + 0x60] = a0
  2700: 33 07 d8 06 01           a0 = 0x106d8
  2705: 7b 17 68                 u64 [sp + 0x68] = a0
  2708: 95 18 30                 a1 = sp + 0x30
  2711: 82 17                    a0 = u64 [sp]
  2713: 50 10 60 48 f6           ra = 96, jump @13
      :                          @174 [@dyn 48]
  2718: 51 07 05 01              jump @192 if a0 == 0
      :                          @175
  2722: 82 18 08                 a1 = u64 [sp + 0x8]
  2725: 64 69                    a2 = s1
  2727: 52 15 01 2f              jump @179 if s0 != 1
      :                          @176
  2731: 33 07 01                 a0 = 0x1
  2734: 52 09 18                 jump @178 if a2 != 0
      :                          @177
  2737: 82 89 38                 a2 = u64 [a1 + 0x38]
  2740: 82 87 30                 a0 = u64 [a1 + 0x30]
  2743: 82 9a 18                 a3 = u64 [a2 + 0x18]
  2746: 33 08 19 07 01           a1 = 0x10719
  2751: 33 09 01                 a2 = 0x1
  2754: b4 a0 01 62              ra = 98, jump [a3]
      :                          @178 [@dyn 49]
  2758: 82 10 80 00              ra = u64 [sp + 0x80]
  2762: 82 15 78                 s0 = u64 [sp + 0x78]
  2765: 82 16 70                 s1 = u64 [sp + 0x70]
  2768: 95 11 88 00              sp = sp + 0x88
  2772: 32 00                    ret
      :                          @179
  2774: 97 56 02                 s1 = s0 << 0x2
  2777: 82 15                    s0 = u64 [sp]
  2779: 95 55 04                 s0 = s0 + 0x4
  2782: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  2785: 28 12                    jump @182
      :                          @180
  2787: 82 18 08                 a1 = u64 [sp + 0x8]
  2790: 33 09 01                 a2 = 0x1
  2793: 01                       fallthrough
      :                          @181
  2794: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  2797: 95 55 04                 s0 = s0 + 0x4
  2800: 51 06 bb                 jump @176 if s1 == 0
      :                          @182
  2803: 84 97 01                 a0 = a2 & 0x1
  2806: 33 09 01                 a2 = 0x1
  2809: 52 07 f1                 jump @181 if a0 != 0
      :                          @183
  2812: 7c 87 24                 a0 = u8 [a1 + 0x24]
  2815: 84 77 04                 a0 = a0 & 0x4
  2818: 52 07 2f                 jump @188 if a0 != 0
      :                          @184
  2821: 82 89 38                 a2 = u64 [a1 + 0x38]
  2824: 82 87 30                 a0 = u64 [a1 + 0x30]
  2827: 82 9a 18                 a3 = u64 [a2 + 0x18]
  2830: 33 09 02                 a2 = 0x2
  2833: 33 08 0b 07 01           a1 = 0x1070b
  2838: b4 a0 01 64              ra = 100, jump [a3]
      :                          @185 [@dyn 50]
  2842: 82 18 08                 a1 = u64 [sp + 0x8]
  2845: 33 09 01                 a2 = 0x1
  2848: 52 07 ca                 jump @181 if a0 != 0
      :                          @186
  2851: 64 57                    a0 = s0
  2853: 50 10 66 bc f5           ra = 102, jump @13
      :                          @187 [@dyn 51]
  2858: 82 18 08                 a1 = u64 [sp + 0x8]
  2861: 64 79                    a2 = a0
  2863: 28 bb                    jump @181
      :                          @188
  2865: 82 87 30                 a0 = u64 [a1 + 0x30]
  2868: 82 89 38                 a2 = u64 [a1 + 0x38]
  2871: 7b 17 10                 u64 [sp + 0x10] = a0
  2874: 7b 19 18                 u64 [sp + 0x18] = a2
  2877: 82 87                    a0 = u64 [a1]
  2879: 82 8b 08                 a4 = u64 [a1 + 0x8]
  2882: 82 89 10                 a2 = u64 [a1 + 0x10]
  2885: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2888: 7b 17 30                 u64 [sp + 0x30] = a0
  2891: 7b 1b 38                 u64 [sp + 0x38] = a4
  2894: 7b 19 40                 u64 [sp + 0x40] = a2
  2897: 7b 1a 48                 u64 [sp + 0x48] = a3
  2900: 82 87 20                 a0 = u64 [a1 + 0x20]
  2903: 82 88 28                 a1 = u64 [a1 + 0x28]
  2906: 46 11 2f 01              u8 [sp + 47] = 0x1
  2910: 95 19 2f                 a2 = sp + 0x2f
  2913: 7b 19 20                 u64 [sp + 0x20] = a2
  2916: 7b 17 50                 u64 [sp + 0x50] = a0
  2919: 7b 18 58                 u64 [sp + 0x58] = a1
  2922: 95 17 10                 a0 = sp + 0x10
  2925: 7b 17 60                 u64 [sp + 0x60] = a0
  2928: 33 07 d8 06 01           a0 = 0x106d8
  2933: 7b 17 68                 u64 [sp + 0x68] = a0
  2936: 95 18 30                 a1 = sp + 0x30
  2939: 64 57                    a0 = s0
  2941: 50 10 68 64 f5           ra = 104, jump @13
      :                          @189 [@dyn 52]
  2946: 52 07 61 ff              jump @180 if a0 != 0
      :                          @190
  2950: 82 18 68                 a1 = u64 [sp + 0x68]
  2953: 82 17 60                 a0 = u64 [sp + 0x60]
  2956: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2959: 33 09 02                 a2 = 0x2
  2962: 33 08 10 07 01           a1 = 0x10710
  2967: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @191 [@dyn 53]
  2971: 64 79                    a2 = a0
  2973: 82 18 08                 a1 = u64 [sp + 0x8]
  2976: 28 4a ff                 jump @181
      :                          @192
  2979: 82 18 68                 a1 = u64 [sp + 0x68]
  2982: 82 17 60                 a0 = u64 [sp + 0x60]
  2985: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2988: 33 08 10 07 01           a1 = 0x10710
  2993: 33 09 02                 a2 = 0x2
  2996: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @193 [@dyn 54]
  3000: 28 69 fe                 jump @169
      :                          @194 [@dyn 55]
  3003: 95 11 60 ff              sp = sp + 0xffffffffffffff60
  3007: 7b 10 98 00              u64 [sp + 0x98] = ra
  3011: 7b 15 90 00              u64 [sp + 0x90] = s0
  3015: 7b 16 88 00              u64 [sp + 0x88] = s1
  3019: 82 89 38                 a2 = u64 [a1 + 0x38]
  3022: 82 75 08                 s0 = u64 [a0 + 0x8]
  3025: 82 76 10                 s1 = u64 [a0 + 0x10]
  3028: 7b 18 18                 u64 [sp + 0x18] = a1
  3031: 82 87 30                 a0 = u64 [a1 + 0x30]
  3034: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3037: 33 08 d1 06 01           a1 = 0x106d1
  3042: 33 09 01                 a2 = 0x1
  3045: 33 0b 01                 a4 = 0x1
  3048: 7b 19 10                 u64 [sp + 0x10] = a2
  3051: b4 a0 01 70              ra = 112, jump [a3]
      :                          @195 [@dyn 56]
  3055: 7b 16 08                 u64 [sp + 0x8] = s1
  3058: 51 06 25                 jump @200 if s1 == 0
      :                          @196
  3061: 7b 15                    u64 [sp] = s0
  3063: 7b 15 20                 u64 [sp + 0x20] = s0
  3066: 52 07 9a 00              jump @205 if a0 != 0
      :                          @197
  3070: 82 18 18                 a1 = u64 [sp + 0x18]
  3073: 7c 87 24                 a0 = u8 [a1 + 0x24]
  3076: 84 77 04                 a0 = a0 & 0x4
  3079: 52 07 18                 jump @201 if a0 != 0
      :                          @198
  3082: 95 17 20                 a0 = sp + 0x20
  3085: 50 10 72 7d f6           ra = 114, jump @33
      :                          @199 [@dyn 57]
  3090: 7b 17 10                 u64 [sp + 0x10] = a0
  3093: 28 7f                    jump @205
      :                          @200
  3095: 64 79                    a2 = a0
  3097: 82 18 18                 a1 = u64 [sp + 0x18]
  3100: 28 85 00                 jump @206
      :                          @201
  3103: 82 85 38                 s0 = u64 [a1 + 0x38]
  3106: 82 86 30                 s1 = u64 [a1 + 0x30]
  3109: 82 5a 18                 a3 = u64 [s0 + 0x18]
  3112: 33 08 18 07 01           a1 = 0x10718
  3117: 33 09 01                 a2 = 0x1
  3120: 7b 19 10                 u64 [sp + 0x10] = a2
  3123: 64 67                    a0 = s1
  3125: b4 a0 01 74              ra = 116, jump [a3]
      :                          @202 [@dyn 58]
  3129: 52 07 5b                 jump @205 if a0 != 0
      :                          @203
  3132: 7b 16 28                 u64 [sp + 0x28] = s1
  3135: 7b 15 30                 u64 [sp + 0x30] = s0
  3138: 95 17 47                 a0 = sp + 0x47
  3141: 7b 17 38                 u64 [sp + 0x38] = a0
  3144: 82 1b 18                 a4 = u64 [sp + 0x18]
  3147: 82 b7                    a0 = u64 [a4]
  3149: 82 b8 08                 a1 = u64 [a4 + 0x8]
  3152: 82 b9 10                 a2 = u64 [a4 + 0x10]
  3155: 82 ba 18                 a3 = u64 [a4 + 0x18]
  3158: 7b 17 48                 u64 [sp + 0x48] = a0
  3161: 7b 18 50                 u64 [sp + 0x50] = a1
  3164: 7b 19 58                 u64 [sp + 0x58] = a2
  3167: 7b 1a 60                 u64 [sp + 0x60] = a3
  3170: 82 b7 20                 a0 = u64 [a4 + 0x20]
  3173: 82 b8 28                 a1 = u64 [a4 + 0x28]
  3176: 49 11 10 01              u64 [sp + 16] = 0x1
  3180: 46 11 47 01              u8 [sp + 71] = 0x1
  3184: 7b 17 68                 u64 [sp + 0x68] = a0
  3187: 7b 18 70                 u64 [sp + 0x70] = a1
  3190: 95 17 28                 a0 = sp + 0x28
  3193: 7b 17 78                 u64 [sp + 0x78] = a0
  3196: 33 07 d8 06 01           a0 = 0x106d8
  3201: 7b 17 80 00              u64 [sp + 0x80] = a0
  3205: 95 17 20                 a0 = sp + 0x20
  3208: 95 18 48                 a1 = sp + 0x48
  3211: 50 10 76 ff f5           ra = 118, jump @33
      :                          @204 [@dyn 59]
  3216: 51 07 0d 01              jump @222 if a0 == 0
      :                          @205
  3220: 82 18 18                 a1 = u64 [sp + 0x18]
  3223: 82 19 10                 a2 = u64 [sp + 0x10]
  3226: 82 16 08                 s1 = u64 [sp + 0x8]
  3229: 52 16 01 31              jump @209 if s1 != 1
      :                          @206
  3233: 33 07 01                 a0 = 0x1
  3236: 52 09 18                 jump @208 if a2 != 0
      :                          @207
  3239: 82 89 38                 a2 = u64 [a1 + 0x38]
  3242: 82 87 30                 a0 = u64 [a1 + 0x30]
  3245: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3248: 33 08 19 07 01           a1 = 0x10719
  3253: 33 09 01                 a2 = 0x1
  3256: b4 a0 01 78              ra = 120, jump [a3]
      :                          @208 [@dyn 60]
  3260: 82 10 98 00              ra = u64 [sp + 0x98]
  3264: 82 15 90 00              s0 = u64 [sp + 0x90]
  3268: 82 16 88 00              s1 = u64 [sp + 0x88]
  3272: 95 11 a0 00              sp = sp + 0xa0
  3276: 32 00                    ret
      :                          @209
  3278: 97 66 01                 s1 = s1 << 0x1
  3281: 82 15                    s0 = u64 [sp]
  3283: 95 55 02                 s0 = s0 + 0x2
  3286: 95 66 fe                 s1 = s1 + 0xfffffffffffffffe
  3289: 28 12                    jump @212
      :                          @210
  3291: 82 18 18                 a1 = u64 [sp + 0x18]
  3294: 33 09 01                 a2 = 0x1
  3297: 01                       fallthrough
      :                          @211
  3298: 95 66 fe                 s1 = s1 + 0xfffffffffffffffe
  3301: 95 55 02                 s0 = s0 + 0x2
  3304: 51 06 b9                 jump @206 if s1 == 0
      :                          @212
  3307: 7b 15 20                 u64 [sp + 0x20] = s0
  3310: 84 97 01                 a0 = a2 & 0x1
  3313: 33 09 01                 a2 = 0x1
  3316: 52 07 ee                 jump @211 if a0 != 0
      :                          @213
  3319: 7c 89 24                 a2 = u8 [a1 + 0x24]
  3322: 82 87 30                 a0 = u64 [a1 + 0x30]
  3325: 82 8a 38                 a3 = u64 [a1 + 0x38]
  3328: 84 99 04                 a2 = a2 & 0x4
  3331: 52 09 2a                 jump @218 if a2 != 0
      :                          @214
  3334: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3337: 33 09 02                 a2 = 0x2
  3340: 33 08 0b 07 01           a1 = 0x1070b
  3345: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @215 [@dyn 61]
  3349: 82 18 18                 a1 = u64 [sp + 0x18]
  3352: 33 09 01                 a2 = 0x1
  3355: 52 07 c7                 jump @211 if a0 != 0
      :                          @216
  3358: 95 17 20                 a0 = sp + 0x20
  3361: 50 10 7c 69 f5           ra = 124, jump @33
      :                          @217 [@dyn 62]
  3366: 82 18 18                 a1 = u64 [sp + 0x18]
  3369: 64 79                    a2 = a0
  3371: 28 b7                    jump @211
      :                          @218
  3373: 7b 17 28                 u64 [sp + 0x28] = a0
  3376: 7b 1a 30                 u64 [sp + 0x30] = a3
  3379: 82 87                    a0 = u64 [a1]
  3381: 82 8b 08                 a4 = u64 [a1 + 0x8]
  3384: 82 89 10                 a2 = u64 [a1 + 0x10]
  3387: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3390: 7b 17 48                 u64 [sp + 0x48] = a0
  3393: 7b 1b 50                 u64 [sp + 0x50] = a4
  3396: 7b 19 58                 u64 [sp + 0x58] = a2
  3399: 7b 1a 60                 u64 [sp + 0x60] = a3
  3402: 82 87 20                 a0 = u64 [a1 + 0x20]
  3405: 82 88 28                 a1 = u64 [a1 + 0x28]
  3408: 46 11 47 01              u8 [sp + 71] = 0x1
  3412: 95 19 47                 a2 = sp + 0x47
  3415: 7b 19 38                 u64 [sp + 0x38] = a2
  3418: 7b 17 68                 u64 [sp + 0x68] = a0
  3421: 7b 18 70                 u64 [sp + 0x70] = a1
  3424: 95 17 28                 a0 = sp + 0x28
  3427: 7b 17 78                 u64 [sp + 0x78] = a0
  3430: 33 07 d8 06 01           a0 = 0x106d8
  3435: 7b 17 80 00              u64 [sp + 0x80] = a0
  3439: 95 17 20                 a0 = sp + 0x20
  3442: 95 18 48                 a1 = sp + 0x48
  3445: 50 10 7e 15 f5           ra = 126, jump @33
      :                          @219 [@dyn 63]
  3450: 52 07 61 ff              jump @210 if a0 != 0
      :                          @220
  3454: 82 18 80 00              a1 = u64 [sp + 0x80]
  3458: 82 17 78                 a0 = u64 [sp + 0x78]
  3461: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3464: 33 09 02                 a2 = 0x2
  3467: 33 08 10 07 01           a1 = 0x10710
  3472: b4 a0 02 80 00           ra = 128, jump [a3]
      :                          @221 [@dyn 64]
  3477: 64 79                    a2 = a0
  3479: 82 18 18                 a1 = u64 [sp + 0x18]
  3482: 28 48 ff                 jump @211
      :                          @222
  3485: 82 18 80 00              a1 = u64 [sp + 0x80]
  3489: 82 17 78                 a0 = u64 [sp + 0x78]
  3492: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3495: 33 08 10 07 01           a1 = 0x10710
  3500: 33 09 02                 a2 = 0x2
  3503: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @223 [@dyn 65]
  3508: 28 5e fe                 jump @199
      :                          @224 [@dyn 66]
  3511: 95 11 60 ff              sp = sp + 0xffffffffffffff60
  3515: 7b 10 98 00              u64 [sp + 0x98] = ra
  3519: 7b 15 90 00              u64 [sp + 0x90] = s0
  3523: 7b 16 88 00              u64 [sp + 0x88] = s1
  3527: 82 89 38                 a2 = u64 [a1 + 0x38]
  3530: 82 75 08                 s0 = u64 [a0 + 0x8]
  3533: 82 76 10                 s1 = u64 [a0 + 0x10]
  3536: 7b 18 18                 u64 [sp + 0x18] = a1
  3539: 82 87 30                 a0 = u64 [a1 + 0x30]
  3542: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3545: 33 08 d1 06 01           a1 = 0x106d1
  3550: 33 09 01                 a2 = 0x1
  3553: 33 0b 01                 a4 = 0x1
  3556: 7b 19 10                 u64 [sp + 0x10] = a2
  3559: b4 a0 02 86 00           ra = 134, jump [a3]
      :                          @225 [@dyn 67]
  3564: 7b 16 08                 u64 [sp + 0x8] = s1
  3567: 51 06 27                 jump @230 if s1 == 0
      :                          @226
  3570: 7b 15                    u64 [sp] = s0
  3572: 7b 15 20                 u64 [sp + 0x20] = s0
  3575: 52 07 9e 00              jump @235 if a0 != 0
      :                          @227
  3579: 82 18 18                 a1 = u64 [sp + 0x18]
  3582: 7c 87 24                 a0 = u8 [a1 + 0x24]
  3585: 84 77 04                 a0 = a0 & 0x4
  3588: 52 07 1a                 jump @231 if a0 != 0
      :                          @228
  3591: 95 17 20                 a0 = sp + 0x20
  3594: 50 20 88 00 92 f6        ra = 136, jump @67
      :                          @229 [@dyn 68]
  3600: 7b 17 10                 u64 [sp + 0x10] = a0
  3603: 28 82 00                 jump @235
      :                          @230
  3606: 64 79                    a2 = a0
  3608: 82 18 18                 a1 = u64 [sp + 0x18]
  3611: 28 87 00                 jump @236
      :                          @231
  3614: 82 85 38                 s0 = u64 [a1 + 0x38]
  3617: 82 86 30                 s1 = u64 [a1 + 0x30]
  3620: 82 5a 18                 a3 = u64 [s0 + 0x18]
  3623: 33 08 18 07 01           a1 = 0x10718
  3628: 33 09 01                 a2 = 0x1
  3631: 7b 19 10                 u64 [sp + 0x10] = a2
  3634: 64 67                    a0 = s1
  3636: b4 a0 02 8a 00           ra = 138, jump [a3]
      :                          @232 [@dyn 69]
  3641: 52 07 5c                 jump @235 if a0 != 0
      :                          @233
  3644: 7b 16 28                 u64 [sp + 0x28] = s1
  3647: 7b 15 30                 u64 [sp + 0x30] = s0
  3650: 95 17 47                 a0 = sp + 0x47
  3653: 7b 17 38                 u64 [sp + 0x38] = a0
  3656: 82 1b 18                 a4 = u64 [sp + 0x18]
  3659: 82 b7                    a0 = u64 [a4]
  3661: 82 b8 08                 a1 = u64 [a4 + 0x8]
  3664: 82 b9 10                 a2 = u64 [a4 + 0x10]
  3667: 82 ba 18                 a3 = u64 [a4 + 0x18]
  3670: 7b 17 48                 u64 [sp + 0x48] = a0
  3673: 7b 18 50                 u64 [sp + 0x50] = a1
  3676: 7b 19 58                 u64 [sp + 0x58] = a2
  3679: 7b 1a 60                 u64 [sp + 0x60] = a3
  3682: 82 b7 20                 a0 = u64 [a4 + 0x20]
  3685: 82 b8 28                 a1 = u64 [a4 + 0x28]
  3688: 49 11 10 01              u64 [sp + 16] = 0x1
  3692: 46 11 47 01              u8 [sp + 71] = 0x1
  3696: 7b 17 68                 u64 [sp + 0x68] = a0
  3699: 7b 18 70                 u64 [sp + 0x70] = a1
  3702: 95 17 28                 a0 = sp + 0x28
  3705: 7b 17 78                 u64 [sp + 0x78] = a0
  3708: 33 07 d8 06 01           a0 = 0x106d8
  3713: 7b 17 80 00              u64 [sp + 0x80] = a0
  3717: 95 17 20                 a0 = sp + 0x20
  3720: 95 18 48                 a1 = sp + 0x48
  3723: 50 20 8c 00 11 f6        ra = 140, jump @67
      :                          @234 [@dyn 70]
  3729: 51 07 11 01              jump @252 if a0 == 0
      :                          @235
  3733: 82 18 18                 a1 = u64 [sp + 0x18]
  3736: 82 19 10                 a2 = u64 [sp + 0x10]
  3739: 82 16 08                 s1 = u64 [sp + 0x8]
  3742: 52 16 01 32              jump @239 if s1 != 1
      :                          @236
  3746: 33 07 01                 a0 = 0x1
  3749: 52 09 19                 jump @238 if a2 != 0
      :                          @237
  3752: 82 89 38                 a2 = u64 [a1 + 0x38]
  3755: 82 87 30                 a0 = u64 [a1 + 0x30]
  3758: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3761: 33 08 19 07 01           a1 = 0x10719
  3766: 33 09 01                 a2 = 0x1
  3769: b4 a0 02 8e 00           ra = 142, jump [a3]
      :                          @238 [@dyn 71]
  3774: 82 10 98 00              ra = u64 [sp + 0x98]
  3778: 82 15 90 00              s0 = u64 [sp + 0x90]
  3782: 82 16 88 00              s1 = u64 [sp + 0x88]
  3786: 95 11 a0 00              sp = sp + 0xa0
  3790: 32 00                    ret
      :                          @239
  3792: 97 66 03                 s1 = s1 << 0x3
  3795: 82 15                    s0 = u64 [sp]
  3797: 95 55 08                 s0 = s0 + 0x8
  3800: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  3803: 28 12                    jump @242
      :                          @240
  3805: 82 18 18                 a1 = u64 [sp + 0x18]
  3808: 33 09 01                 a2 = 0x1
  3811: 01                       fallthrough
      :                          @241
  3812: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  3815: 95 55 08                 s0 = s0 + 0x8
  3818: 51 06 b8                 jump @236 if s1 == 0
      :                          @242
  3821: 7b 15 20                 u64 [sp + 0x20] = s0
  3824: 84 97 01                 a0 = a2 & 0x1
  3827: 33 09 01                 a2 = 0x1
  3830: 52 07 ee                 jump @241 if a0 != 0
      :                          @243
  3833: 7c 89 24                 a2 = u8 [a1 + 0x24]
  3836: 82 87 30                 a0 = u64 [a1 + 0x30]
  3839: 82 8a 38                 a3 = u64 [a1 + 0x38]
  3842: 84 99 04                 a2 = a2 & 0x4
  3845: 52 09 2c                 jump @248 if a2 != 0
      :                          @244
  3848: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3851: 33 09 02                 a2 = 0x2
  3854: 33 08 0b 07 01           a1 = 0x1070b
  3859: b4 a0 02 90 00           ra = 144, jump [a3]
      :                          @245 [@dyn 72]
  3864: 82 18 18                 a1 = u64 [sp + 0x18]
  3867: 33 09 01                 a2 = 0x1
  3870: 52 07 c6                 jump @241 if a0 != 0
      :                          @246
  3873: 95 17 20                 a0 = sp + 0x20
  3876: 50 20 92 00 78 f5        ra = 146, jump @67
      :                          @247 [@dyn 73]
  3882: 82 18 18                 a1 = u64 [sp + 0x18]
  3885: 64 79                    a2 = a0
  3887: 28 b5                    jump @241
      :                          @248
  3889: 7b 17 28                 u64 [sp + 0x28] = a0
  3892: 7b 1a 30                 u64 [sp + 0x30] = a3
  3895: 82 87                    a0 = u64 [a1]
  3897: 82 8b 08                 a4 = u64 [a1 + 0x8]
  3900: 82 89 10                 a2 = u64 [a1 + 0x10]
  3903: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3906: 7b 17 48                 u64 [sp + 0x48] = a0
  3909: 7b 1b 50                 u64 [sp + 0x50] = a4
  3912: 7b 19 58                 u64 [sp + 0x58] = a2
  3915: 7b 1a 60                 u64 [sp + 0x60] = a3
  3918: 82 87 20                 a0 = u64 [a1 + 0x20]
  3921: 82 88 28                 a1 = u64 [a1 + 0x28]
  3924: 46 11 47 01              u8 [sp + 71] = 0x1
  3928: 95 19 47                 a2 = sp + 0x47
  3931: 7b 19 38                 u64 [sp + 0x38] = a2
  3934: 7b 17 68                 u64 [sp + 0x68] = a0
  3937: 7b 18 70                 u64 [sp + 0x70] = a1
  3940: 95 17 28                 a0 = sp + 0x28
  3943: 7b 17 78                 u64 [sp + 0x78] = a0
  3946: 33 07 d8 06 01           a0 = 0x106d8
  3951: 7b 17 80 00              u64 [sp + 0x80] = a0
  3955: 95 17 20                 a0 = sp + 0x20
  3958: 95 18 48                 a1 = sp + 0x48
  3961: 50 20 94 00 23 f5        ra = 148, jump @67
      :                          @249 [@dyn 74]
  3967: 52 07 5e ff              jump @240 if a0 != 0
      :                          @250
  3971: 82 18 80 00              a1 = u64 [sp + 0x80]
  3975: 82 17 78                 a0 = u64 [sp + 0x78]
  3978: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3981: 33 09 02                 a2 = 0x2
  3984: 33 08 10 07 01           a1 = 0x10710
  3989: b4 a0 02 96 00           ra = 150, jump [a3]
      :                          @251 [@dyn 75]
  3994: 64 79                    a2 = a0
  3996: 82 18 18                 a1 = u64 [sp + 0x18]
  3999: 28 45 ff                 jump @241
      :                          @252
  4002: 82 18 80 00              a1 = u64 [sp + 0x80]
  4006: 82 17 78                 a0 = u64 [sp + 0x78]
  4009: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4012: 33 08 10 07 01           a1 = 0x10710
  4017: 33 09 02                 a2 = 0x2
  4020: b4 a0 02 98 00           ra = 152, jump [a3]
      :                          @253 [@dyn 76]
  4025: 28 57 fe                 jump @229
      :                          @254 [@dyn 77]
  4028: 95 11 48 ff              sp = sp + 0xffffffffffffff48
  4032: 7b 10 b0 00              u64 [sp + 0xb0] = ra
  4036: 7b 15 a8 00              u64 [sp + 0xa8] = s0
  4040: 7b 16 a0 00              u64 [sp + 0xa0] = s1
  4044: 64 85                    s0 = a1
  4046: 82 88 38                 a1 = u64 [a1 + 0x38]
  4049: 82 79 08                 a2 = u64 [a0 + 0x8]
  4052: 7b 19                    u64 [sp] = a2
  4054: 82 76 10                 s1 = u64 [a0 + 0x10]
  4057: 82 57 30                 a0 = u64 [s0 + 0x30]
  4060: 7b 18 18                 u64 [sp + 0x18] = a1
  4063: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4066: 33 08 d1 06 01           a1 = 0x106d1
  4071: 33 09 01                 a2 = 0x1
  4074: 33 0b 01                 a4 = 0x1
  4077: 7b 19 10                 u64 [sp + 0x10] = a2
  4080: 7b 17 38                 u64 [sp + 0x38] = a0
  4083: 7b 1a 28                 u64 [sp + 0x28] = a3
  4086: b4 a0 02 9c 00           ra = 156, jump [a3]
      :                          @255 [@dyn 78]
  4091: 7b 16 08                 u64 [sp + 0x8] = s1
  4094: 51 06 25                 jump @260 if s1 == 0
      :                          @256
  4097: 80 58 24                 a1 = u32 [s0 + 0x24]
  4100: 84 88 04                 a1 = a1 & 0x4
  4103: 7b 18 30                 u64 [sp + 0x30] = a1
  4106: 52 07 95 00              jump @265 if a0 != 0
      :                          @257
  4110: 82 17 30                 a0 = u64 [sp + 0x30]
  4113: 52 07 17                 jump @261 if a0 != 0
      :                          @258
  4116: 82 17                    a0 = u64 [sp]
  4118: 64 58                    a1 = s0
  4120: 50 20 9e 00 62 11        ra = 158, jump @537
      :                          @259 [@dyn 79]
  4126: 7b 17 10                 u64 [sp + 0x10] = a0
  4129: 28 7e                    jump @265
      :                          @260
  4131: 64 78                    a1 = a0
  4133: 28 86 00                 jump @266
      :                          @261
  4136: 33 08 18 07 01           a1 = 0x10718
  4141: 33 09 01                 a2 = 0x1
  4144: 7b 19 10                 u64 [sp + 0x10] = a2
  4147: 82 17 38                 a0 = u64 [sp + 0x38]
  4150: 82 1a 28                 a3 = u64 [sp + 0x28]
  4153: b4 a0 02 a0 00           ra = 160, jump [a3]
      :                          @262 [@dyn 80]
  4158: 52 07 61                 jump @265 if a0 != 0
      :                          @263
  4161: 82 57                    a0 = u64 [s0]
  4163: 95 18 5f                 a1 = sp + 0x5f
  4166: 7b 18 50                 u64 [sp + 0x50] = a1
  4169: 82 58 08                 a1 = u64 [s0 + 0x8]
  4172: 7b 17 60                 u64 [sp + 0x60] = a0
  4175: 82 57 10                 a0 = u64 [s0 + 0x10]
  4178: 82 59 18                 a2 = u64 [s0 + 0x18]
  4181: 7b 18 68                 u64 [sp + 0x68] = a1
  4184: 82 58 20                 a1 = u64 [s0 + 0x20]
  4187: 7b 17 70                 u64 [sp + 0x70] = a0
  4190: 7b 19 78                 u64 [sp + 0x78] = a2
  4193: 7b 18 80 00              u64 [sp + 0x80] = a1
  4197: 82 57 28                 a0 = u64 [s0 + 0x28]
  4200: 49 11 10 01              u64 [sp + 16] = 0x1
  4204: 46 11 5f 01              u8 [sp + 95] = 0x1
  4208: 82 18 38                 a1 = u64 [sp + 0x38]
  4211: 7b 18 40                 u64 [sp + 0x40] = a1
  4214: 82 18 18                 a1 = u64 [sp + 0x18]
  4217: 7b 18 48                 u64 [sp + 0x48] = a1
  4220: 7b 17 88 00              u64 [sp + 0x88] = a0
  4224: 95 17 40                 a0 = sp + 0x40
  4227: 7b 17 90 00              u64 [sp + 0x90] = a0
  4231: 33 07 d8 06 01           a0 = 0x106d8
  4236: 7b 17 98 00              u64 [sp + 0x98] = a0
  4240: 95 18 60                 a1 = sp + 0x60
  4243: 82 17                    a0 = u64 [sp]
  4245: 50 20 a2 00 e5 10        ra = 162, jump @537
      :                          @264 [@dyn 81]
  4251: 51 07 02 01              jump @282 if a0 == 0
      :                          @265
  4255: 33 09 01                 a2 = 0x1
  4258: 82 18 10                 a1 = u64 [sp + 0x10]
  4261: 82 17 08                 a0 = u64 [sp + 0x8]
  4264: ab 97 2e                 jump @269 if a0 != a2
      :                          @266
  4267: 33 07 01                 a0 = 0x1
  4270: 52 08 16                 jump @268 if a1 != 0
      :                          @267
  4273: 33 08 19 07 01           a1 = 0x10719
  4278: 33 09 01                 a2 = 0x1
  4281: 82 17 38                 a0 = u64 [sp + 0x38]
  4284: 82 1a 28                 a3 = u64 [sp + 0x28]
  4287: b4 a0 02 a4 00           ra = 164, jump [a3]
      :                          @268 [@dyn 82]
  4292: 82 10 b0 00              ra = u64 [sp + 0xb0]
  4296: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  4300: 82 16 a0 00              s1 = u64 [sp + 0xa0]
  4304: 95 11 b8 00              sp = sp + 0xb8
  4308: 32 00                    ret
      :                          @269
  4310: 7b 15 20                 u64 [sp + 0x20] = s0
  4313: 97 75 05                 s0 = a0 << 0x5
  4316: 82 17                    a0 = u64 [sp]
  4318: 95 76 20                 s1 = a0 + 0x20
  4321: 95 55 e0                 s0 = s0 + 0xffffffffffffffe0
  4324: 28 0f                    jump @272
      :                          @270
  4326: 33 08 01                 a1 = 0x1
  4329: 01                       fallthrough
      :                          @271
  4330: 95 55 e0                 s0 = s0 + 0xffffffffffffffe0
  4333: 95 66 20                 s1 = s1 + 0x20
  4336: 51 05 bb                 jump @266 if s0 == 0
      :                          @272
  4339: 84 87 01                 a0 = a1 & 0x1
  4342: 33 08 01                 a1 = 0x1
  4345: 52 07 f1                 jump @271 if a0 != 0
      :                          @273
  4348: 82 17 30                 a0 = u64 [sp + 0x30]
  4351: 52 07 2b                 jump @278 if a0 != 0
      :                          @274
  4354: 33 09 02                 a2 = 0x2
  4357: 82 17 38                 a0 = u64 [sp + 0x38]
  4360: 33 08 0b 07 01           a1 = 0x1070b
  4365: 82 1a 28                 a3 = u64 [sp + 0x28]
  4368: b4 a0 02 a6 00           ra = 166, jump [a3]
      :                          @275 [@dyn 83]
  4373: 33 08 01                 a1 = 0x1
  4376: 52 07 d2                 jump @271 if a0 != 0
      :                          @276
  4379: 64 67                    a0 = s1
  4381: 82 18 20                 a1 = u64 [sp + 0x20]
  4384: 50 20 a8 00 5a 10        ra = 168, jump @537
      :                          @277 [@dyn 84]
  4390: 64 78                    a1 = a0
  4392: 28 c2                    jump @271
      :                          @278
  4394: 82 1a 20                 a3 = u64 [sp + 0x20]
  4397: 82 a7                    a0 = u64 [a3]
  4399: 82 a8 08                 a1 = u64 [a3 + 0x8]
  4402: 7b 17 60                 u64 [sp + 0x60] = a0
  4405: 82 a7 10                 a0 = u64 [a3 + 0x10]
  4408: 82 a9 18                 a2 = u64 [a3 + 0x18]
  4411: 7b 18 68                 u64 [sp + 0x68] = a1
  4414: 82 a8 20                 a1 = u64 [a3 + 0x20]
  4417: 7b 17 70                 u64 [sp + 0x70] = a0
  4420: 7b 19 78                 u64 [sp + 0x78] = a2
  4423: 46 11 5f 01              u8 [sp + 95] = 0x1
  4427: 7b 18 80 00              u64 [sp + 0x80] = a1
  4431: 82 a7 28                 a0 = u64 [a3 + 0x28]
  4434: 82 18 38                 a1 = u64 [sp + 0x38]
  4437: 7b 18 40                 u64 [sp + 0x40] = a1
  4440: 82 18 18                 a1 = u64 [sp + 0x18]
  4443: 7b 18 48                 u64 [sp + 0x48] = a1
  4446: 95 18 5f                 a1 = sp + 0x5f
  4449: 7b 18 50                 u64 [sp + 0x50] = a1
  4452: 7b 17 88 00              u64 [sp + 0x88] = a0
  4456: 95 17 40                 a0 = sp + 0x40
  4459: 7b 17 90 00              u64 [sp + 0x90] = a0
  4463: 33 07 d8 06 01           a0 = 0x106d8
  4468: 7b 17 98 00              u64 [sp + 0x98] = a0
  4472: 95 18 60                 a1 = sp + 0x60
  4475: 64 67                    a0 = s1
  4477: 50 20 aa 00 fd 0f        ra = 170, jump @537
      :                          @279 [@dyn 85]
  4483: 52 07 63 ff              jump @270 if a0 != 0
      :                          @280
  4487: 95 17 40                 a0 = sp + 0x40
  4490: 33 09 02                 a2 = 0x2
  4493: 33 08 10 07 01           a1 = 0x10710
  4498: 50 20 ac 00 9c 2b        ra = 172, jump @1093
      :                          @281 [@dyn 86]
  4504: 64 78                    a1 = a0
  4506: 28 50 ff                 jump @271
      :                          @282
  4509: 33 08 10 07 01           a1 = 0x10710
  4514: 95 17 40                 a0 = sp + 0x40
  4517: 33 09 02                 a2 = 0x2
  4520: 50 20 ae 00 86 2b        ra = 174, jump @1093
      :                          @283 [@dyn 87]
  4526: 28 70 fe                 jump @259
      :                          @284 [@dyn 88]
  4529: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4533: 7b 10 90 00              u64 [sp + 0x90] = ra
  4537: 7b 15 88 00              u64 [sp + 0x88] = s0
  4541: 7b 16 80 00              u64 [sp + 0x80] = s1
  4545: 82 79                    a2 = u64 [a0]
  4547: 95 77 08                 a0 = a0 + 0x8
  4550: 7b 17 18                 u64 [sp + 0x18] = a0
  4553: 51 09 61                 jump @294 if a2 == 0
      :                          @285
  4556: 52 19 01 b5 00           jump @302 if a2 != 1
      :                          @286
  4561: 82 89 38                 a2 = u64 [a1 + 0x38]
  4564: 82 87 30                 a0 = u64 [a1 + 0x30]
  4567: 64 86                    s1 = a1
  4569: 7b 19                    u64 [sp] = a2
  4571: 82 95 18                 s0 = u64 [a2 + 0x18]
  4574: 33 08 c0 00 01           a1 = 0x100c0
  4579: 33 09 03                 a2 = 0x3
  4582: 7b 17 08                 u64 [sp + 0x8] = a0
  4585: b4 50 02 b2 00           ra = 178, jump [s0]
      :                          @287 [@dyn 89]
  4590: 52 07 b3 00              jump @304 if a0 != 0
      :                          @288
  4594: 7b 16 10                 u64 [sp + 0x10] = s1
  4597: 7c 67 24                 a0 = u8 [s1 + 0x24]
  4600: 84 77 04                 a0 = a0 & 0x4
  4603: 52 07 f5 00              jump @312 if a0 != 0
      :                          @289
  4607: 33 08 15 07 01           a1 = 0x10715
  4612: 33 09 01                 a2 = 0x1
  4615: 33 06 01                 s1 = 0x1
  4618: 82 17 08                 a0 = u64 [sp + 0x8]
  4621: b4 50 02 b4 00           ra = 180, jump [s0]
      :                          @290 [@dyn 90]
  4626: 52 07 93 00              jump @305 if a0 != 0
      :                          @291
  4630: 82 17 18                 a0 = u64 [sp + 0x18]
  4633: 82 15 10                 s0 = u64 [sp + 0x10]
  4636: 64 58                    a1 = s0
  4638: 50 20 b6 00 1e f3        ra = 182, jump @77
      :                          @292 [@dyn 91]
  4644: 51 07 40 02              jump @328 if a0 == 0
      :                          @293
  4648: 28 7d                    jump @305
      :                          @294
  4650: 82 89 38                 a2 = u64 [a1 + 0x38]
  4653: 82 87 30                 a0 = u64 [a1 + 0x30]
  4656: 64 86                    s1 = a1
  4658: 7b 19                    u64 [sp] = a2
  4660: 82 95 18                 s0 = u64 [a2 + 0x18]
  4663: 33 08 dc 00 01           a1 = 0x100dc
  4668: 33 09 0e                 a2 = 0xe
  4671: 7b 17 08                 u64 [sp + 0x8] = a0
  4674: b4 50 02 b8 00           ra = 184, jump [s0]
      :                          @295 [@dyn 92]
  4679: 52 07 5a                 jump @304 if a0 != 0
      :                          @296
  4682: 7b 16 10                 u64 [sp + 0x10] = s1
  4685: 7c 67 24                 a0 = u8 [s1 + 0x24]
  4688: 84 77 04                 a0 = a0 & 0x4
  4691: 52 07 11 01              jump @317 if a0 != 0
      :                          @297
  4695: 33 08 15 07 01           a1 = 0x10715
  4700: 33 09 01                 a2 = 0x1
  4703: 33 06 01                 s1 = 0x1
  4706: 82 17 08                 a0 = u64 [sp + 0x8]
  4709: b4 50 02 ba 00           ra = 186, jump [s0]
      :                          @298 [@dyn 93]
  4714: 52 07 3b                 jump @305 if a0 != 0
      :                          @299
  4717: 82 17 18                 a0 = u64 [sp + 0x18]
  4720: 82 15 10                 s0 = u64 [sp + 0x10]
  4723: 64 58                    a1 = s0
  4725: 50 20 bc 00 98 ed        ra = 188, jump @3
      :                          @300 [@dyn 94]
  4731: 51 07 e9 01              jump @328 if a0 == 0
      :                          @301
  4735: 28 26                    jump @305
      :                          @302
  4737: 82 89 38                 a2 = u64 [a1 + 0x38]
  4740: 82 87 30                 a0 = u64 [a1 + 0x30]
  4743: 64 86                    s1 = a1
  4745: 7b 19                    u64 [sp] = a2
  4747: 82 95 18                 s0 = u64 [a2 + 0x18]
  4750: 33 08 ea 00 01           a1 = 0x100ea
  4755: 33 09 07                 a2 = 0x7
  4758: 7b 17 08                 u64 [sp + 0x8] = a0
  4761: b4 50 02 be 00           ra = 190, jump [s0]
      :                          @303 [@dyn 95]
  4766: 51 07 1b                 jump @306 if a0 == 0
      :                          @304
  4769: 33 06 01                 s1 = 0x1
  4772: 01                       fallthrough
      :                          @305
  4773: 64 67                    a0 = s1
  4775: 82 10 90 00              ra = u64 [sp + 0x90]
  4779: 82 15 88 00              s0 = u64 [sp + 0x88]
  4783: 82 16 80 00              s1 = u64 [sp + 0x80]
  4787: 95 11 98 00              sp = sp + 0x98
  4791: 32 00                    ret
      :                          @306
  4793: 7b 16 10                 u64 [sp + 0x10] = s1
  4796: 7c 67 24                 a0 = u8 [s1 + 0x24]
  4799: 84 77 04                 a0 = a0 & 0x4
  4802: 52 07 16 01              jump @322 if a0 != 0
      :                          @307
  4806: 33 08 15 07 01           a1 = 0x10715
  4811: 33 09 01                 a2 = 0x1
  4814: 33 06 01                 s1 = 0x1
  4817: 82 17 08                 a0 = u64 [sp + 0x8]
  4820: b4 50 02 c0 00           ra = 192, jump [s0]
      :                          @308 [@dyn 96]
  4825: 52 07 cc                 jump @305 if a0 != 0
      :                          @309
  4828: 82 17 18                 a0 = u64 [sp + 0x18]
  4831: 82 15 10                 s0 = u64 [sp + 0x10]
  4834: 64 58                    a1 = s0
  4836: 50 20 c2 00 d2 ee        ra = 194, jump @23
      :                          @310 [@dyn 97]
  4842: 51 07 7a 01              jump @328 if a0 == 0
      :                          @311
  4846: 28 b7                    jump @305
      :                          @312
  4848: 33 08 16 07 01           a1 = 0x10716
  4853: 33 09 02                 a2 = 0x2
  4856: 82 17 08                 a0 = u64 [sp + 0x8]
  4859: b4 50 02 c4 00           ra = 196, jump [s0]
      :                          @313 [@dyn 98]
  4864: 82 15 10                 s0 = u64 [sp + 0x10]
  4867: 33 06 01                 s1 = 0x1
  4870: 52 07 9f                 jump @305 if a0 != 0
      :                          @314
  4873: 82 17 08                 a0 = u64 [sp + 0x8]
  4876: 7b 17 20                 u64 [sp + 0x20] = a0
  4879: 82 17                    a0 = u64 [sp]
  4881: 7b 17 28                 u64 [sp + 0x28] = a0
  4884: 95 17 3f                 a0 = sp + 0x3f
  4887: 7b 17 30                 u64 [sp + 0x30] = a0
  4890: 82 57                    a0 = u64 [s0]
  4892: 82 58 08                 a1 = u64 [s0 + 0x8]
  4895: 82 59 10                 a2 = u64 [s0 + 0x10]
  4898: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4901: 7b 17 40                 u64 [sp + 0x40] = a0
  4904: 7b 18 48                 u64 [sp + 0x48] = a1
  4907: 7b 19 50                 u64 [sp + 0x50] = a2
  4910: 7b 1a 58                 u64 [sp + 0x58] = a3
  4913: 82 57 20                 a0 = u64 [s0 + 0x20]
  4916: 82 58 28                 a1 = u64 [s0 + 0x28]
  4919: 33 06 01                 s1 = 0x1
  4922: 78 16 3f                 u8 [sp + 0x3f] = s1
  4925: 7b 17 60                 u64 [sp + 0x60] = a0
  4928: 7b 18 68                 u64 [sp + 0x68] = a1
  4931: 95 17 20                 a0 = sp + 0x20
  4934: 7b 17 70                 u64 [sp + 0x70] = a0
  4937: 33 07 d8 06 01           a0 = 0x106d8
  4942: 7b 17 78                 u64 [sp + 0x78] = a0
  4945: 95 18 40                 a1 = sp + 0x40
  4948: 82 17 18                 a0 = u64 [sp + 0x18]
  4951: 50 20 c6 00 e5 f1        ra = 198, jump @77
      :                          @315 [@dyn 99]
  4957: 51 07 ed 00              jump @326 if a0 == 0
      :                          @316
  4961: 28 44 ff                 jump @305
      :                          @317
  4964: 33 08 16 07 01           a1 = 0x10716
  4969: 33 09 02                 a2 = 0x2
  4972: 82 17 08                 a0 = u64 [sp + 0x8]
  4975: b4 50 02 c8 00           ra = 200, jump [s0]
      :                          @318 [@dyn 100]
  4980: 82 15 10                 s0 = u64 [sp + 0x10]
  4983: 33 06 01                 s1 = 0x1
  4986: 52 07 2b ff              jump @305 if a0 != 0
      :                          @319
  4990: 82 17 08                 a0 = u64 [sp + 0x8]
  4993: 7b 17 20                 u64 [sp + 0x20] = a0
  4996: 82 17                    a0 = u64 [sp]
  4998: 7b 17 28                 u64 [sp + 0x28] = a0
  5001: 95 17 3f                 a0 = sp + 0x3f
  5004: 7b 17 30                 u64 [sp + 0x30] = a0
  5007: 82 57                    a0 = u64 [s0]
  5009: 82 58 08                 a1 = u64 [s0 + 0x8]
  5012: 82 59 10                 a2 = u64 [s0 + 0x10]
  5015: 82 5a 18                 a3 = u64 [s0 + 0x18]
  5018: 7b 17 40                 u64 [sp + 0x40] = a0
  5021: 7b 18 48                 u64 [sp + 0x48] = a1
  5024: 7b 19 50                 u64 [sp + 0x50] = a2
  5027: 7b 1a 58                 u64 [sp + 0x58] = a3
  5030: 82 57 20                 a0 = u64 [s0 + 0x20]
  5033: 82 58 28                 a1 = u64 [s0 + 0x28]
  5036: 33 06 01                 s1 = 0x1
  5039: 78 16 3f                 u8 [sp + 0x3f] = s1
  5042: 7b 17 60                 u64 [sp + 0x60] = a0
  5045: 7b 18 68                 u64 [sp + 0x68] = a1
  5048: 95 17 20                 a0 = sp + 0x20
  5051: 7b 17 70                 u64 [sp + 0x70] = a0
  5054: 33 07 d8 06 01           a0 = 0x106d8
  5059: 7b 17 78                 u64 [sp + 0x78] = a0
  5062: 95 18 40                 a1 = sp + 0x40
  5065: 82 17 18                 a0 = u64 [sp + 0x18]
  5068: 50 20 ca 00 41 ec        ra = 202, jump @3
      :                          @320 [@dyn 101]
  5074: 51 07 78                 jump @326 if a0 == 0
      :                          @321
  5077: 28 d0 fe                 jump @305
      :                          @322
  5080: 33 08 16 07 01           a1 = 0x10716
  5085: 33 09 02                 a2 = 0x2
  5088: 82 17 08                 a0 = u64 [sp + 0x8]
  5091: b4 50 02 cc 00           ra = 204, jump [s0]
      :                          @323 [@dyn 102]
  5096: 82 15 10                 s0 = u64 [sp + 0x10]
  5099: 33 06 01                 s1 = 0x1
  5102: 52 07 b7 fe              jump @305 if a0 != 0
      :                          @324
  5106: 82 17 08                 a0 = u64 [sp + 0x8]
  5109: 7b 17 20                 u64 [sp + 0x20] = a0
  5112: 82 17                    a0 = u64 [sp]
  5114: 7b 17 28                 u64 [sp + 0x28] = a0
  5117: 95 17 3f                 a0 = sp + 0x3f
  5120: 7b 17 30                 u64 [sp + 0x30] = a0
  5123: 82 57                    a0 = u64 [s0]
  5125: 82 58 08                 a1 = u64 [s0 + 0x8]
  5128: 82 59 10                 a2 = u64 [s0 + 0x10]
  5131: 82 5a 18                 a3 = u64 [s0 + 0x18]
  5134: 7b 17 40                 u64 [sp + 0x40] = a0
  5137: 7b 18 48                 u64 [sp + 0x48] = a1
  5140: 7b 19 50                 u64 [sp + 0x50] = a2
  5143: 7b 1a 58                 u64 [sp + 0x58] = a3
  5146: 82 57 20                 a0 = u64 [s0 + 0x20]
  5149: 82 58 28                 a1 = u64 [s0 + 0x28]
  5152: 33 06 01                 s1 = 0x1
  5155: 78 16 3f                 u8 [sp + 0x3f] = s1
  5158: 7b 17 60                 u64 [sp + 0x60] = a0
  5161: 7b 18 68                 u64 [sp + 0x68] = a1
  5164: 95 17 20                 a0 = sp + 0x20
  5167: 7b 17 70                 u64 [sp + 0x70] = a0
  5170: 33 07 d8 06 01           a0 = 0x106d8
  5175: 7b 17 78                 u64 [sp + 0x78] = a0
  5178: 95 18 40                 a1 = sp + 0x40
  5181: 82 17 18                 a0 = u64 [sp + 0x18]
  5184: 50 20 ce 00 76 ed        ra = 206, jump @23
      :                          @325 [@dyn 103]
  5190: 52 07 5f fe              jump @305 if a0 != 0
      :                          @326
  5194: 82 18 78                 a1 = u64 [sp + 0x78]
  5197: 82 17 70                 a0 = u64 [sp + 0x70]
  5200: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5203: 33 08 10 07 01           a1 = 0x10710
  5208: 33 09 02                 a2 = 0x2
  5211: b4 a0 02 d0 00           ra = 208, jump [a3]
      :                          @327 [@dyn 104]
  5216: 52 07 45 fe              jump @305 if a0 != 0
      :                          @328
  5220: 82 58 38                 a1 = u64 [s0 + 0x38]
  5223: 82 57 30                 a0 = u64 [s0 + 0x30]
  5226: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5229: 33 08 d0 06 01           a1 = 0x106d0
  5234: 33 09 01                 a2 = 0x1
  5237: b4 a0 02 d2 00           ra = 210, jump [a3]
      :                          @329 [@dyn 105]
  5242: 64 76                    s1 = a0
  5244: 28 29 fe                 jump @305
      :                          @330 [@dyn 106]
  5247: 95 11 60 ff              sp = sp + 0xffffffffffffff60
  5251: 7b 10 98 00              u64 [sp + 0x98] = ra
  5255: 7b 15 90 00              u64 [sp + 0x90] = s0
  5259: 7b 16 88 00              u64 [sp + 0x88] = s1
  5263: 64 85                    s0 = a1
  5265: 95 78 18                 a1 = a0 + 0x18
  5268: 95 79 48                 a2 = a0 + 0x48
  5271: 95 7a 88 00              a3 = a0 + 0x88
  5275: 95 7b 30                 a4 = a0 + 0x30
  5278: 95 7c 68                 a5 = a0 + 0x68
  5281: 95 76 90 00              s1 = a0 + 0x90
  5285: 7b 16 70                 u64 [sp + 0x70] = s1
  5288: 7b 17                    u64 [sp] = a0
  5290: 33 07 40 01 01           a0 = 0x10140
  5295: 7b 17 08                 u64 [sp + 0x8] = a0
  5298: 95 16 10                 s1 = sp + 0x10
  5301: 7b 18 10                 u64 [sp + 0x10] = a1
  5304: 33 07 60 01 01           a0 = 0x10160
  5309: 7b 17 18                 u64 [sp + 0x18] = a0
  5312: 7b 19 20                 u64 [sp + 0x20] = a2
  5315: 33 07 80 01 01           a0 = 0x10180
  5320: 7b 17 28                 u64 [sp + 0x28] = a0
  5323: 7b 1a 30                 u64 [sp + 0x30] = a3
  5326: 33 08 a0 01 01           a1 = 0x101a0
  5331: 7b 18 38                 u64 [sp + 0x38] = a1
  5334: 7b 1b 40                 u64 [sp + 0x40] = a4
  5337: 33 08 c0 01 01           a1 = 0x101c0
  5342: 7b 18 48                 u64 [sp + 0x48] = a1
  5345: 7b 1c 50                 u64 [sp + 0x50] = a5
  5348: 7b 17 58                 u64 [sp + 0x58] = a0
  5351: 95 17 70                 a0 = sp + 0x70
  5354: 7b 17 60                 u64 [sp + 0x60] = a0
  5357: 82 58 38                 a1 = u64 [s0 + 0x38]
  5360: 33 07 e0 01 01           a0 = 0x101e0
  5365: 7b 17 68                 u64 [sp + 0x68] = a0
  5368: 82 57 30                 a0 = u64 [s0 + 0x30]
  5371: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5374: 33 08 00 02 01           a1 = 0x10200
  5379: 33 09 07                 a2 = 0x7
  5382: b4 a0 02 d6 00           ra = 214, jump [a3]
      :                          @331 [@dyn 107]
  5387: 7b 15 78                 u64 [sp + 0x78] = s0
  5390: 78 17 80 00              u8 [sp + 0x80] = a0
  5394: 46 21 81 00              u8 [sp + 129] = 0
  5398: 33 08 f1 00 01           a1 = 0x100f1
  5403: 33 05 98 01              s0 = 0x198
  5407: 95 17 78                 a0 = sp + 0x78
  5410: 33 09 09                 a2 = 0x9
  5413: 64 1a                    a3 = sp
  5415: 33 0b 98 01              a4 = 0x198
  5419: 50 20 d8 00 5d 26        ra = 216, jump @1070
      :                          @332 [@dyn 108]
  5425: 33 08 fa 00 01           a1 = 0x100fa
  5430: 95 17 78                 a0 = sp + 0x78
  5433: 33 09 0c                 a2 = 0xc
  5436: 64 6a                    a3 = s1
  5438: 64 5b                    a4 = s0
  5440: 50 20 da 00 48 26        ra = 218, jump @1070
      :                          @333 [@dyn 109]
  5446: 33 08 cd 00 01           a1 = 0x100cd
  5451: 95 17 78                 a0 = sp + 0x78
  5454: 33 09 04                 a2 = 0x4
  5457: 95 1a 20                 a3 = sp + 0x20
  5460: 64 5b                    a4 = s0
  5462: 50 20 dc 00 32 26        ra = 220, jump @1070
      :                          @334 [@dyn 110]
  5468: 33 08 06 01 01           a1 = 0x10106
  5473: 95 17 78                 a0 = sp + 0x78
  5476: 33 09 0b                 a2 = 0xb
  5479: 95 1a 30                 a3 = sp + 0x30
  5482: 64 5b                    a4 = s0
  5484: 50 20 de 00 1c 26        ra = 222, jump @1070
      :                          @335 [@dyn 111]
  5490: 33 08 11 01 01           a1 = 0x10111
  5495: 95 17 78                 a0 = sp + 0x78
  5498: 33 09 11                 a2 = 0x11
  5501: 95 1a 40                 a3 = sp + 0x40
  5504: 64 5b                    a4 = s0
  5506: 50 20 e0 00 06 26        ra = 224, jump @1070
      :                          @336 [@dyn 112]
  5512: 33 08 22 01 01           a1 = 0x10122
  5517: 95 17 78                 a0 = sp + 0x78
  5520: 33 09 0c                 a2 = 0xc
  5523: 95 1a 50                 a3 = sp + 0x50
  5526: 64 5b                    a4 = s0
  5528: 50 20 e2 00 f0 25        ra = 226, jump @1070
      :                          @337 [@dyn 113]
  5534: 33 08 2e 01 01           a1 = 0x1012e
  5539: 95 17 78                 a0 = sp + 0x78
  5542: 33 09 0e                 a2 = 0xe
  5545: 95 1a 60                 a3 = sp + 0x60
  5548: 64 5b                    a4 = s0
  5550: 50 20 e4 00 da 25        ra = 228, jump @1070
      :                          @338 [@dyn 114]
  5556: 7c 17 81 00              a0 = u8 [sp + 0x81]
  5560: 7c 18 80 00              a1 = u8 [sp + 0x80]
  5564: 84 79 01                 a2 = a0 & 0x1
  5567: d4 87 07                 a0 = a0 | a1
  5570: 51 09 42                 jump @343 if a2 == 0
      :                          @339
  5573: 84 88 01                 a1 = a1 & 0x1
  5576: 52 08 3c                 jump @343 if a1 != 0
      :                          @340
  5579: 82 17 78                 a0 = u64 [sp + 0x78]
  5582: 7c 78 24                 a1 = u8 [a0 + 0x24]
  5585: 84 88 04                 a1 = a1 & 0x4
  5588: 52 08 1a                 jump @342 if a1 != 0
      :                          @341
  5591: 82 78 38                 a1 = u64 [a0 + 0x38]
  5594: 82 77 30                 a0 = u64 [a0 + 0x30]
  5597: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5600: 33 08 13 07 01           a1 = 0x10713
  5605: 33 09 02                 a2 = 0x2
  5608: 33 00 e6 00              ra = 0xe6
  5612: 32 0a                    jump [a3]
      :                          @342
  5614: 82 78 38                 a1 = u64 [a0 + 0x38]
  5617: 82 77 30                 a0 = u64 [a0 + 0x30]
  5620: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5623: 33 08 12 07 01           a1 = 0x10712
  5628: 33 09 01                 a2 = 0x1
  5631: b4 a0 02 e6 00           ra = 230, jump [a3]
      :                          @343 [@dyn 115]
  5636: 84 77 01                 a0 = a0 & 0x1
  5639: 82 10 98 00              ra = u64 [sp + 0x98]
  5643: 82 15 90 00              s0 = u64 [sp + 0x90]
  5647: 82 16 88 00              s1 = u64 [sp + 0x88]
  5651: 95 11 a0 00              sp = sp + 0xa0
  5655: 32 00                    ret
      :                          @344 [@dyn 116]
  5657: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5661: 7b 10 88 00              u64 [sp + 0x88] = ra
  5665: 7b 15 80 00              u64 [sp + 0x80] = s0
  5669: 7b 16 78                 u64 [sp + 0x78] = s1
  5672: 64 85                    s0 = a1
  5674: 95 78 40                 a1 = a0 + 0x40
  5677: 95 79 18                 a2 = a0 + 0x18
  5680: 95 7a 42                 a3 = a0 + 0x42
  5683: 95 7b 30                 a4 = a0 + 0x30
  5686: 95 7c 38                 a5 = a0 + 0x38
  5689: 7b 1c 60                 u64 [sp + 0x60] = a5
  5692: 7b 18                    u64 [sp] = a1
  5694: 33 08 a8 02 01           a1 = 0x102a8
  5699: 7b 18 08                 u64 [sp + 0x8] = a1
  5702: 7b 17 10                 u64 [sp + 0x10] = a0
  5705: 33 07 c8 02 01           a0 = 0x102c8
  5710: 7b 17 18                 u64 [sp + 0x18] = a0
  5713: 7b 19 20                 u64 [sp + 0x20] = a2
  5716: 7b 17 28                 u64 [sp + 0x28] = a0
  5719: 7b 1a 30                 u64 [sp + 0x30] = a3
  5722: 7b 18 38                 u64 [sp + 0x38] = a1
  5725: 7b 1b 40                 u64 [sp + 0x40] = a4
  5728: 33 07 a0 01 01           a0 = 0x101a0
  5733: 7b 17 48                 u64 [sp + 0x48] = a0
  5736: 95 17 60                 a0 = sp + 0x60
  5739: 7b 17 50                 u64 [sp + 0x50] = a0
  5742: 82 58 38                 a1 = u64 [s0 + 0x38]
  5745: 33 07 a0 00 01           a0 = 0x100a0
  5750: 7b 17 58                 u64 [sp + 0x58] = a0
  5753: 82 57 30                 a0 = u64 [s0 + 0x30]
  5756: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5759: 95 16 30                 s1 = sp + 0x30
  5762: 33 08 e8 02 01           a1 = 0x102e8
  5767: 33 09 09                 a2 = 0x9
  5770: b4 a0 02 ea 00           ra = 234, jump [a3]
      :                          @345 [@dyn 117]
  5775: 7b 15 68                 u64 [sp + 0x68] = s0
  5778: 78 17 70                 u8 [sp + 0x70] = a0
  5781: 46 11 71                 u8 [sp + 113] = 0
  5784: 33 08 57 02 01           a1 = 0x10257
  5789: 33 05 98 01              s0 = 0x198
  5793: 95 17 68                 a0 = sp + 0x68
  5796: 33 09 0a                 a2 = 0xa
  5799: 64 1a                    a3 = sp
  5801: 33 0b 98 01              a4 = 0x198
  5805: 50 20 ec 00 db 24        ra = 236, jump @1070
      :                          @346 [@dyn 118]
  5811: 33 08 61 02 01           a1 = 0x10261
  5816: 95 17 68                 a0 = sp + 0x68
  5819: 33 09 0a                 a2 = 0xa
  5822: 95 1a 10                 a3 = sp + 0x10
  5825: 64 5b                    a4 = s0
  5827: 50 20 ee 00 c5 24        ra = 238, jump @1070
      :                          @347 [@dyn 119]
  5833: 33 08 6b 02 01           a1 = 0x1026b
  5838: 95 17 68                 a0 = sp + 0x68
  5841: 33 09 0f                 a2 = 0xf
  5844: 95 1a 20                 a3 = sp + 0x20
  5847: 64 5b                    a4 = s0
  5849: 50 20 f0 00 af 24        ra = 240, jump @1070
      :                          @348 [@dyn 120]
  5855: 33 08 7a 02 01           a1 = 0x1027a
  5860: 95 17 68                 a0 = sp + 0x68
  5863: 33 09 09                 a2 = 0x9
  5866: 64 6a                    a3 = s1
  5868: 64 5b                    a4 = s0
  5870: 50 20 f2 00 9a 24        ra = 242, jump @1070
      :                          @349 [@dyn 121]
  5876: 33 08 83 02 01           a1 = 0x10283
  5881: 95 17 68                 a0 = sp + 0x68
  5884: 33 09 0e                 a2 = 0xe
  5887: 95 1a 40                 a3 = sp + 0x40
  5890: 64 5b                    a4 = s0
  5892: 50 20 f4 00 84 24        ra = 244, jump @1070
      :                          @350 [@dyn 122]
  5898: 33 08 91 02 01           a1 = 0x10291
  5903: 95 17 68                 a0 = sp + 0x68
  5906: 33 09 13                 a2 = 0x13
  5909: 95 1a 50                 a3 = sp + 0x50
  5912: 64 5b                    a4 = s0
  5914: 50 20 f6 00 6e 24        ra = 246, jump @1070
      :                          @351 [@dyn 123]
  5920: 7c 17 71                 a0 = u8 [sp + 0x71]
  5923: 7c 18 70                 a1 = u8 [sp + 0x70]
  5926: 84 79 01                 a2 = a0 & 0x1
  5929: d4 87 07                 a0 = a0 | a1
  5932: 51 09 42                 jump @356 if a2 == 0
      :                          @352
  5935: 84 88 01                 a1 = a1 & 0x1
  5938: 52 08 3c                 jump @356 if a1 != 0
      :                          @353
  5941: 82 17 68                 a0 = u64 [sp + 0x68]
  5944: 7c 78 24                 a1 = u8 [a0 + 0x24]
  5947: 84 88 04                 a1 = a1 & 0x4
  5950: 52 08 1a                 jump @355 if a1 != 0
      :                          @354
  5953: 82 78 38                 a1 = u64 [a0 + 0x38]
  5956: 82 77 30                 a0 = u64 [a0 + 0x30]
  5959: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5962: 33 08 13 07 01           a1 = 0x10713
  5967: 33 09 02                 a2 = 0x2
  5970: 33 00 f8 00              ra = 0xf8
  5974: 32 0a                    jump [a3]
      :                          @355
  5976: 82 78 38                 a1 = u64 [a0 + 0x38]
  5979: 82 77 30                 a0 = u64 [a0 + 0x30]
  5982: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5985: 33 08 12 07 01           a1 = 0x10712
  5990: 33 09 01                 a2 = 0x1
  5993: b4 a0 02 f8 00           ra = 248, jump [a3]
      :                          @356 [@dyn 124]
  5998: 84 77 01                 a0 = a0 & 0x1
  6001: 82 10 88 00              ra = u64 [sp + 0x88]
  6005: 82 15 80 00              s0 = u64 [sp + 0x80]
  6009: 82 16 78                 s1 = u64 [sp + 0x78]
  6012: 95 11 90 00              sp = sp + 0x90
  6016: 32 00                    ret
      :                          @357 [export #0: 'refine']
  6018: 95 11 80 fd              sp = sp + 0xfffffffffffffd80
  6022: 7b 10 78 02              u64 [sp + 0x278] = ra
  6026: 7b 15 70 02              u64 [sp + 0x270] = s0
  6030: 7b 16 68 02              u64 [sp + 0x268] = s1
  6034: 33 06 20 00 03           s1 = 0x30020
  6039: 95 68 00 00 00 08        a1 = s1 + 0x8000000
  6045: 33 09 f2 ff ff 07        a2 = 0x7fffff2
  6051: 01                       fallthrough
      :                          @358
  6052: 82 87                    a0 = u64 [a1]
  6054: ac 79 d6 28              jump @1156 if a2 <u a0
      :                          @359
  6058: 95 7a 0d                 a3 = a0 + 0xd
  6061: 01                       fallthrough
      :                          @360
  6062: 82 8b                    a4 = u64 [a1]
  6064: ab 7b f4                 jump @358 if a4 != a0
      :                          @361
  6067: 7b 8a                    u64 [a1] = a3
  6069: 33 0c                    a5 = 0
  6071: 49 11 38 f0 fe ff 07     u64 [sp + 56] = 0x7fffef0
  6078: 95 68 f0 fe ff 07        a1 = s1 + 0x7fffef0
  6084: c9 78 08                 a1 = a1 - a0
  6087: 95 85 03 01              s0 = a1 + 0x103
  6091: 33 08 5f 03 01           a1 = 0x1035f
  6096: 33 09 0d                 a2 = 0xd
  6099: 64 57                    a0 = s0
  6101: 50 20 fa 00 b9 3e        ra = 250, jump @1602
      :                          @362 [@dyn 125]
  6107: 33 07 02                 a0 = 0x2
  6110: 33 0b 0d                 a4 = 0xd
  6113: 33 08                    a1 = 0
  6115: 33 09                    a2 = 0
  6117: 64 5a                    a3 = s0
  6119: 33 00 fc 00              ra = 0xfc
  6123: 0a 64                    ecalli 100 // 'log'
  6125: 95 67 00 00 00 08        a0 = s1 + 0x8000000
  6131: 28 09                    jump @364
      :                          @363 [@dyn 126]
  6133: 95 67 00 00 00 08        a0 = s1 + 0x8000000
  6139: 01                       fallthrough
      :                          @364
  6140: 82 78                    a1 = u64 [a0]
  6142: c9 87 09                 a2 = a0 - a1
  6145: ab 59 1c                 jump @368 if a2 != s0
      :                          @365
  6148: 95 89 f3                 a2 = a1 + 0xfffffffffffffff3
  6151: 01                       fallthrough
      :                          @366
  6152: 82 7a                    a3 = u64 [a0]
  6154: ab 8a f2                 jump @364 if a3 != a1
      :                          @367
  6157: 7b 79                    u64 [a0] = a2
  6159: 95 68 00 00 00 08        a1 = s1 + 0x8000000
  6165: 33 09 35 ff ff 07        a2 = 0x7ffff35
  6171: 28 0f                    jump @369
      :                          @368
  6173: 95 68 00 00 00 08        a1 = s1 + 0x8000000
  6179: 33 09 35 ff ff 07        a2 = 0x7ffff35
  6185: 01                       fallthrough
      :                          @369
  6186: 82 87                    a0 = u64 [a1]
  6188: ac 79 50 28              jump @1156 if a2 <u a0
      :                          @370
  6192: 95 7a ca 00              a3 = a0 + 0xca
  6196: 01                       fallthrough
      :                          @371
  6197: 82 8b                    a4 = u64 [a1]
  6199: ab 7b f3                 jump @369 if a4 != a0
      :                          @372
  6202: 7b 8a                    u64 [a1] = a3
  6204: 33 0c                    a5 = 0
  6206: 82 18 38                 a1 = u64 [sp + 0x38]
  6209: c9 78 07                 a0 = a1 - a0
  6212: c8 67 07                 a0 = a0 + s1
  6215: 95 75 46                 s0 = a0 + 0x46
  6218: 33 07 90 03 01           a0 = 0x10390
  6223: 95 77 03                 a0 = a0 + 0x3
  6226: 33 09 06                 a2 = 0x6
  6229: 33 08 c9 00              a1 = 0xc9
  6233: 33 02 d0 05 01           t0 = 0x105d0
  6238: 33 0a ff 00              a3 = 0xff
  6242: 64 5b                    a4 = s0
  6244: 01                       fallthrough
      :                          @373
  6245: 97 99 04                 a2 = a2 << 0x4
  6248: d4 c9 09                 a2 = a2 | a5
  6251: 78 b9                    u8 [a4] = a2
  6253: 51 08 5a                 jump @383 if a1 == 0
      :                          @374
  6256: 7c 79 ff                 a2 = u8 [a0 + 0xffffffffffffffff]
  6259: c8 29 09                 a2 = a2 + t0
  6262: 7c 99                    a2 = u8 [a2]
  6264: aa a9 16                 jump @376 if a2 == a3
      :                          @375
  6267: 7c 7c                    a5 = u8 [a0]
  6269: c8 2c 0c                 a5 = a5 + t0
  6272: 7c cc                    a5 = u8 [a5]
  6274: 95 77 02                 a0 = a0 + 0x2
  6277: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6280: 95 bb 01                 a4 = a4 + 0x1
  6283: ab ac da                 jump @373 if a5 != a3
      :                          @376
  6286: 95 17 50                 a0 = sp + 0x50
  6289: 33 00 fe 00              ra = 0xfe
  6293: 33 0b 90 03 01           a4 = 0x10390
  6298: 33 08 95 01              a1 = 0x195
  6302: 33 09 d0 05 01           a2 = 0x105d0
  6307: 33 0a ff 00              a3 = 0xff
  6311: 28 88 15                 jump @820
      :                          @377 [@dyn 127]
  6314: 95 66 00 00 00 08        s1 = s1 + 0x8000000
  6320: 01                       fallthrough
      :                          @378
  6321: 82 67                    a0 = u64 [s1]
  6323: c9 76 08                 a1 = s1 - a0
  6326: ab 58 10                 jump @382 if a1 != s0
      :                          @379
  6329: 95 78 36 ff              a1 = a0 + 0xffffffffffffff36
  6333: 01                       fallthrough
      :                          @380
  6334: 82 69                    a2 = u64 [s1]
  6336: ab 79 f1                 jump @378 if a2 != a0
      :                          @381
  6339: 7b 68                    u64 [s1] = a1
  6341: 00                       trap
      :                          @382
  6342: 00                       trap
      :                          @383
  6343: 84 53 01                 t1 = s0 & 0x1
  6346: 86 5a 01                 a3 = s0 | 0x1
  6349: 7c 58 01                 a1 = u8 [s0 + 0x1]
  6352: 7c 59                    a2 = u8 [s0]
  6354: 33 02 58 05 01           t0 = 0x10558
  6359: 33 0b 80 05 01           a4 = 0x10580
  6364: 33 07 58 05 01           a0 = 0x10558
  6369: 97 88 08                 a1 = a1 << 0x8
  6372: d4 98 08                 a1 = a1 | a2
  6375: db 3b 07                 a0 = a4 if t1 != 0
  6378: 51 28 ef 00 eb 00        jump @397 if a1 == 239
      :                          @384
  6384: 7c 58 01                 a1 = u8 [s0 + 0x1]
  6387: 7c 59                    a2 = u8 [s0]
  6389: 97 88 08                 a1 = a1 << 0x8
  6392: d4 98 08                 a1 = a1 | a2
  6395: 51 28 ef 01 d1 04        jump @455 if a1 == 495
      :                          @385
  6401: 7b 17 50                 u64 [sp + 0x50] = a0
  6404: 7b 15 58                 u64 [sp + 0x58] = s0
  6407: 49 11 60 ca 00           u64 [sp + 96] = 0xca
  6412: 7b 1a 68                 u64 [sp + 0x68] = a3
  6415: 95 67 00 00 00 08        a0 = s1 + 0x8000000
  6421: 33 08 14 ff ff 07        a1 = 0x7ffff14
  6427: 01                       fallthrough
      :                          @386
  6428: 82 79                    a2 = u64 [a0]
  6430: ac 98 5e 27              jump @1156 if a1 <u a2
      :                          @387
  6434: 95 9a eb 00              a3 = a2 + 0xeb
  6438: 01                       fallthrough
      :                          @388
  6439: 82 7b                    a4 = u64 [a0]
  6441: ab 9b f3                 jump @386 if a4 != a2
      :                          @389
  6444: 7b 7a                    u64 [a0] = a3
  6446: 33 0c                    a5 = 0
  6448: 7b 13 18                 u64 [sp + 0x18] = t1
  6451: 7b 12 28                 u64 [sp + 0x28] = t0
  6454: 82 17 38                 a0 = u64 [sp + 0x38]
  6457: c9 97 07                 a0 = a0 - a2
  6460: c8 67 07                 a0 = a0 + s1
  6463: 7b 17 30                 u64 [sp + 0x30] = a0
  6466: 95 77 25                 a0 = a0 + 0x25
  6469: 49 21 50 01 eb 00        u64 [sp + 336] = 0xeb
  6475: 7b 17 58 01              u64 [sp + 0x158] = a0
  6479: 49 21 60 01              u64 [sp + 352] = 0
  6483: 33 09 ca 00              a2 = 0xca
  6487: 64 58                    a1 = s0
  6489: 50 20 00 01 35 3d        ra = 256, jump @1602
      :                          @390 [@dyn 128]
  6495: 49 21 60 01 ca 00        u64 [sp + 352] = 0xca
  6501: 82 17 30                 a0 = u64 [sp + 0x30]
  6504: 95 77 ef 00              a0 = a0 + 0xef
  6508: 33 09 20                 a2 = 0x20
  6511: 33 08                    a1 = 0
  6513: 50 20 02 01 64 3f        ra = 258, jump @1654
      :                          @391 [@dyn 129]
  6519: 82 17 30                 a0 = u64 [sp + 0x30]
  6522: 46 27 0f 01              u8 [a0 + 271] = 0
  6526: 82 17 58 01              a0 = u64 [sp + 0x158]
  6530: 7b 17 30                 u64 [sp + 0x30] = a0
  6533: 49 21 60 01 eb 00        u64 [sp + 352] = 0xeb
  6539: 95 67 00 00 00 08        a0 = s1 + 0x8000000
  6545: 33 08 e1 ff ff 07        a1 = 0x7ffffe1
  6551: 01                       fallthrough
      :                          @392
  6552: 82 79                    a2 = u64 [a0]
  6554: ac 98 e2 26              jump @1156 if a1 <u a2
      :                          @393
  6558: 95 9a 1e                 a3 = a2 + 0x1e
  6561: 01                       fallthrough
      :                          @394
  6562: 82 7b                    a4 = u64 [a0]
  6564: ab 9b f4                 jump @392 if a4 != a2
      :                          @395
  6567: 7b 7a                    u64 [a0] = a3
  6569: 33 0c                    a5 = 0
  6571: 82 17 38                 a0 = u64 [sp + 0x38]
  6574: c9 97 07                 a0 = a0 - a2
  6577: c8 67 07                 a0 = a0 + s1
  6580: 95 77 f2 00              a0 = a0 + 0xf2
  6584: 33 09 1e                 a2 = 0x1e
  6587: 7b 17 20                 u64 [sp + 0x20] = a0
  6590: 33 08                    a1 = 0
  6592: 50 20 04 01 15 3f        ra = 260, jump @1654
      :                          @396 [@dyn 130]
  6598: 33 07                    a0 = 0
  6600: 33 03 5b                 t1 = 0x5b
  6603: 33 09 eb 00              a2 = 0xeb
  6607: 33 02 5f                 t0 = 0x5f
  6610: 28 2f 02                 jump @426
      :                          @397
  6613: 7b 17 50 01              u64 [sp + 0x150] = a0
  6617: 7b 15 58 01              u64 [sp + 0x158] = s0
  6621: 49 21 60 01 ca 00        u64 [sp + 352] = 0xca
  6627: 7b 1a 30                 u64 [sp + 0x30] = a3
  6630: 7b 1a 68 01              u64 [sp + 0x168] = a3
  6634: 95 17 50                 a0 = sp + 0x50
  6637: 95 18 50 01              a1 = sp + 0x150
  6641: 50 20 06 01 b4 2b        ra = 262, jump @1277
      :                          @398 [@dyn 131]
  6647: 82 18 50                 a1 = u64 [sp + 0x50]
  6650: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
  6660: 7b 18 28                 u64 [sp + 0x28] = a1
  6663: aa 78 ec 03              jump @456 if a1 == a0
      :                          @399
  6667: 7c 17 58                 a0 = u8 [sp + 0x58]
  6670: 7b 17 20                 u64 [sp + 0x20] = a0
  6673: 95 18 59                 a1 = sp + 0x59
  6676: 95 17 70 01              a0 = sp + 0x170
  6680: 33 09 f7 00              a2 = 0xf7
  6684: 50 20 08 01 72 3c        ra = 264, jump @1602
      :                          @400 [@dyn 132]
  6690: 33 08 00 00 00 08        a1 = 0x8000000
  6696: c8 86 07                 a0 = s1 + a1
  6699: 33 02 e8 fe ff 07        t0 = 0x7fffee8
  6705: 01                       fallthrough
      :                          @401
  6706: 82 79                    a2 = u64 [a0]
  6708: ac 92 48 26              jump @1156 if t0 <u a2
      :                          @402
  6712: 82 1a 38                 a3 = u64 [sp + 0x38]
  6715: c9 9a 0a                 a3 = a3 - a2
  6718: c8 6a 0a                 a3 = a3 + s1
  6721: 84 ab 07                 a4 = a3 & 0x7
  6724: c8 b9 0c                 a5 = a2 + a4
  6727: 95 cc 10 01              a5 = a5 + 0x110
  6731: 01                       fallthrough
      :                          @403
  6732: 82 75                    s0 = u64 [a0]
  6734: ab 95 e4                 jump @401 if s0 != a2
      :                          @404
  6737: 7b 7c                    u64 [a0] = a5
  6739: c9 ba 07                 a0 = a3 - a4
  6742: 33 05 01                 s0 = 0x1
  6745: 7b 75                    u64 [a0] = s0
  6747: 7b 75 08                 u64 [a0 + 0x8] = s0
  6750: 82 18 28                 a1 = u64 [sp + 0x28]
  6753: 7b 78 10                 u64 [a0 + 0x10] = a1
  6756: 82 18 20                 a1 = u64 [sp + 0x20]
  6759: 78 78 18                 u8 [a0 + 0x18] = a1
  6762: 7b 17 28                 u64 [sp + 0x28] = a0
  6765: 95 77 19                 a0 = a0 + 0x19
  6768: 95 18 70 01              a1 = sp + 0x170
  6772: 33 09 f7 00              a2 = 0xf7
  6776: 50 20 0a 01 16 3c        ra = 266, jump @1602
      :                          @405 [@dyn 133]
  6782: 49 11 20 17              u64 [sp + 32] = 0x17
  6786: 01                       fallthrough
      :                          @406
  6787: 7b 15 50                 u64 [sp + 0x50] = s0
  6790: 82 17 28                 a0 = u64 [sp + 0x28]
  6793: 7b 17 58                 u64 [sp + 0x58] = a0
  6796: 82 17 10                 a0 = u64 [sp + 0x10]
  6799: 78 17 60                 u8 [sp + 0x60] = a0
  6802: 82 18                    a1 = u64 [sp]
  6804: 78 18 61                 u8 [sp + 0x61] = a1
  6807: 98 87 28                 a0 = a1 >> 0x28
  6810: 78 17 66                 u8 [sp + 0x66] = a0
  6813: 98 87 20                 a0 = a1 >> 0x20
  6816: 78 17 65                 u8 [sp + 0x65] = a0
  6819: 98 87 30                 a0 = a1 >> 0x30
  6822: 78 17 67                 u8 [sp + 0x67] = a0
  6825: 98 87 18                 a0 = a1 >> 0x18
  6828: 78 17 64                 u8 [sp + 0x64] = a0
  6831: 98 87 10                 a0 = a1 >> 0x10
  6834: 78 17 63                 u8 [sp + 0x63] = a0
  6837: 98 87 08                 a0 = a1 >> 0x8
  6840: 78 17 62                 u8 [sp + 0x62] = a0
  6843: 82 17 20                 a0 = u64 [sp + 0x20]
  6846: 7b 17 68                 u64 [sp + 0x68] = a0
  6849: 82 17 30                 a0 = u64 [sp + 0x30]
  6852: 7b 17 70                 u64 [sp + 0x70] = a0
  6855: 82 17 08                 a0 = u64 [sp + 0x8]
  6858: 7b 17 78                 u64 [sp + 0x78] = a0
  6861: 49 21 80 00 ca 00        u64 [sp + 128] = 0xca
  6867: 46 21 8c 00              u8 [sp + 140] = 0
  6871: 95 17 50                 a0 = sp + 0x50
  6874: 7b 17 40                 u64 [sp + 0x40] = a0
  6877: 33 07 b0 00              a0 = 0xb0
  6881: 7b 17 48                 u64 [sp + 0x48] = a0
  6884: 33 07 80 03 01           a0 = 0x10380
  6889: 7b 17 70 01              u64 [sp + 0x170] = a0
  6893: 49 21 78 01 01           u64 [sp + 376] = 0x1
  6898: 49 21 90 01              u64 [sp + 400] = 0
  6902: 95 18 40                 a1 = sp + 0x40
  6905: 7b 18 80 01              u64 [sp + 0x180] = a1
  6909: 49 21 88 01 01           u64 [sp + 392] = 0x1
  6914: 95 67 00 00 00 08        a0 = s1 + 0x8000000
  6920: 33 08 db ff ff 07        a1 = 0x7ffffdb
  6926: 01                       fallthrough
      :                          @407
  6927: 82 79                    a2 = u64 [a0]
  6929: ac 98 6b 25              jump @1156 if a1 <u a2
      :                          @408
  6933: 95 9a 24                 a3 = a2 + 0x24
  6936: 01                       fallthrough
      :                          @409
  6937: 82 7b                    a4 = u64 [a0]
  6939: ab 9b f4                 jump @407 if a4 != a2
      :                          @410
  6942: 7b 7a                    u64 [a0] = a3
  6944: 33 0c                    a5 = 0
  6946: 82 17 38                 a0 = u64 [sp + 0x38]
  6949: c9 97 07                 a0 = a0 - a2
  6952: c8 67 07                 a0 = a0 + s1
  6955: 95 77 ec 00              a0 = a0 + 0xec
  6959: 49 21 50 01 24           u64 [sp + 336] = 0x24
  6964: 7b 17 58 01              u64 [sp + 0x158] = a0
  6968: 49 21 60 01              u64 [sp + 352] = 0
  6972: 33 08 28 05 01           a1 = 0x10528
  6977: 95 17 50 01              a0 = sp + 0x150
  6981: 95 19 70 01              a2 = sp + 0x170
  6985: 50 20 0c 01 31 1a        ra = 268, jump @956
      :                          @411 [@dyn 134]
  6991: 52 07 a5 02              jump @457 if a0 != 0
      :                          @412
  6995: 82 1a 58 01              a3 = u64 [sp + 0x158]
  6999: 82 1b 60 01              a4 = u64 [sp + 0x160]
  7003: 82 17 50 01              a0 = u64 [sp + 0x150]
  7007: 7b 17 38                 u64 [sp + 0x38] = a0
  7010: 33 07 02                 a0 = 0x2
  7013: 33 08                    a1 = 0
  7015: 33 09                    a2 = 0
  7017: 64 a5                    s0 = a3
  7019: 33 00 0e 01              ra = 0x10e
  7023: 0a 64                    ecalli 100 // 'log'
  7025: 01                       fallthrough
      :                          @413 [@dyn 135]
  7026: 82 19 38                 a2 = u64 [sp + 0x38]
  7029: 95 98 ff ff ff f7        a1 = a2 + 0xfffffffff7ffffff
  7035: 53 48 00 00 00 f8 26     jump @419 if a1 <u 4160749568
      :                          @414
  7042: 64 9b                    a4 = a2
  7044: 95 66 00 00 00 08        s1 = s1 + 0x8000000
  7050: 01                       fallthrough
      :                          @415
  7051: 82 67                    a0 = u64 [s1]
  7053: c9 76 08                 a1 = s1 - a0
  7056: ab 58 11                 jump @419 if a1 != s0
      :                          @416
  7059: c9 b7 08                 a1 = a0 - a4
  7062: 01                       fallthrough
      :                          @417
  7063: 82 69                    a2 = u64 [s1]
  7065: ab 79 f2                 jump @415 if a2 != a0
      :                          @418
  7068: 7b 68                    u64 [s1] = a1
  7070: 33 0a                    a3 = 0
  7072: 01                       fallthrough
      :                          @419
  7073: 82 18 50                 a1 = u64 [sp + 0x50]
  7076: 51 08 55 01              jump @442 if a1 == 0
      :                          @420
  7080: 52 18 01 96 01           jump @446 if a1 != 1
      :                          @421
  7085: 82 18 58                 a1 = u64 [sp + 0x58]
  7088: 33 09 ff                 a2 = 0xffffffffffffffff
  7091: 3e 02 00 00 03           u64 [0x30000] = t0
  7096: 3e 04 08 00 03           u64 [0x30008] = t2
  7101: 82 82                    t0 = u64 [a1]
  7103: c8 92 04                 t2 = t0 + a2
  7106: 7b 84                    u64 [a1] = t2
  7108: 64 28                    a1 = t0
  7110: 3a 02 00 00 03           t0 = u64 [0x30000]
  7115: 3a 04 08 00 03           t2 = u64 [0x30008]
  7120: 52 18 01 82 01           jump @447 if a1 != 1
      :                          @422
  7125: 82 17 58                 a0 = u64 [sp + 0x58]
  7128: 50 20 10 01 31 38        ra = 272, jump @1536
      :                          @423 [@dyn 136]
  7134: 28 74 01                 jump @447
      :                          @424
  7137: 98 7b 03                 a4 = a0 >> 0x3
  7140: 82 1c 20                 a5 = u64 [sp + 0x20]
  7143: c8 bc 0c                 a5 = a5 + a4
  7146: 7c ca                    a3 = u8 [a5]
  7148: 84 78 07                 a1 = a0 & 0x7
  7151: 33 0b 01                 a4 = 0x1
  7154: cf 8b 08                 a1 = a4 << a1
  7157: d4 a8 08                 a1 = a1 | a3
  7160: 78 c8                    u8 [a5] = a1
  7162: 01                       fallthrough
      :                          @425
  7163: c8 b7 07                 a0 = a0 + a4
  7166: ae 97 1d                 jump @429 if a0 >=u a2
      :                          @426
  7169: 82 1b 30                 a4 = u64 [sp + 0x30]
  7172: c8 7b 0b                 a4 = a4 + a0
  7175: 7d bc                    a5 = i8 [a4]
  7177: aa 3c d8                 jump @424 if a5 == t1
      :                          @427
  7180: 33 0b 01                 a4 = 0x1
  7183: af c2 ec                 jump @425 if t0 >=s a5
      :                          @428
  7186: 95 c8 a2                 a1 = a5 + 0xffffffffffffffa2
  7189: 84 8b ff 00              a4 = a1 & 0xff
  7193: 28 e2                    jump @425
      :                          @429
  7195: 33 07 10 00 03           a0 = 0x30010
  7200: 95 63 00 00 00 08        t1 = s1 + 0x8000000
  7206: 33 02 d0 ff ff 07        t0 = 0x7ffffd0
  7212: 01                       fallthrough
      :                          @430
  7213: 82 39                    a2 = u64 [t1]
  7215: ac 92 4d 24              jump @1156 if t0 <u a2
      :                          @431
  7219: 82 1a 38                 a3 = u64 [sp + 0x38]
  7222: c9 9a 0a                 a3 = a3 - a2
  7225: c8 6a 0a                 a3 = a3 + s1
  7228: 95 aa e8 00              a3 = a3 + 0xe8
  7232: 84 ab 07                 a4 = a3 & 0x7
  7235: c8 b9 0c                 a5 = a2 + a4
  7238: 95 cc 28                 a5 = a5 + 0x28
  7241: 01                       fallthrough
      :                          @432
  7242: 82 38                    a1 = u64 [t1]
  7244: ab 98 e1                 jump @430 if a1 != a2
      :                          @433
  7247: 7b 3c                    u64 [t1] = a5
  7249: 01                       fallthrough
      :                          @434
  7250: c9 ba 0a                 a3 = a3 - a4
  7253: 49 0a 01                 u64 [a3 + 0] = 0x1
  7256: 49 1a 08 01              u64 [a3 + 8] = 0x1
  7260: 82 17 20                 a0 = u64 [sp + 0x20]
  7263: 7b a7 10                 u64 [a3 + 0x10] = a0
  7266: 82 17 50 01              a0 = u64 [sp + 0x150]
  7270: 82 12 60 01              t0 = u64 [sp + 0x160]
  7274: 82 19 58 01              a2 = u64 [sp + 0x158]
  7278: 7b 19 10                 u64 [sp + 0x10] = a2
  7281: 49 1a 18 58 07           u64 [a3 + 24] = 0x758
  7286: 7b 1a 08                 u64 [sp + 0x8] = a3
  7289: 49 1a 20 1e              u64 [a3 + 32] = 0x1e
  7293: 7b 17 20                 u64 [sp + 0x20] = a0
  7296: ab 72 eb 00              jump @448 if t0 != a0
      :                          @435
  7300: 82 17 20                 a0 = u64 [sp + 0x20]
  7303: 51 07 44 01              jump @454 if a0 == 0
      :                          @436
  7307: 82 18 10                 a1 = u64 [sp + 0x10]
  7310: 84 87 01                 a0 = a1 & 0x1
  7313: 86 88 01                 a1 = a1 | 0x1
  7316: 7b 18 30                 u64 [sp + 0x30] = a1
  7319: 82 18 28                 a1 = u64 [sp + 0x28]
  7322: 33 09 80 05 01           a2 = 0x10580
  7327: db 79 08                 a1 = a2 if a0 != 0
  7330: 7b 18 28                 u64 [sp + 0x28] = a1
  7333: 82 18 20                 a1 = u64 [sp + 0x20]
  7336: 53 28 ca 00 23 01        jump @454 if a1 <u 202
      :                          @437
  7342: 82 17 08                 a0 = u64 [sp + 0x8]
  7345: 82 77 18                 a0 = u64 [a0 + 0x18]
  7348: 53 27 50 06 17 01        jump @454 if a0 <u 1616
      :                          @438
  7354: 82 17 20                 a0 = u64 [sp + 0x20]
  7357: 82 18 10                 a1 = u64 [sp + 0x10]
  7360: c8 87 07                 a0 = a0 + a1
  7363: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7366: 51 07 05 01              jump @454 if a0 == 0
      :                          @439
  7370: 7c 77                    a0 = u8 [a0]
  7372: 52 07 ff 00              jump @454 if a0 != 0
      :                          @440
  7376: 82 17 10                 a0 = u64 [sp + 0x10]
  7379: 98 77 08                 a0 = a0 >> 0x8
  7382: 7b 17                    u64 [sp] = a0
  7384: 33 07 74 01              a0 = 0x174
  7388: 33 0a 50 01              a3 = 0x150
  7392: 82 18 18                 a1 = u64 [sp + 0x18]
  7395: db 87 0a                 a3 = a0 if a1 != 0
  7398: 33 09 ca 00              a2 = 0xca
  7402: 95 17 68                 a0 = sp + 0x68
  7405: 64 58                    a1 = s0
  7407: b4 a0 02 12 01           ra = 274, jump [a3]
      :                          @441 [@dyn 137]
  7412: 33 05                    s0 = 0
  7414: 28 8d fd                 jump @406
      :                          @442
  7417: 82 17 58                 a0 = u64 [sp + 0x58]
  7420: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7423: 82 18 60                 a1 = u64 [sp + 0x60]
  7426: 82 19 68                 a2 = u64 [sp + 0x68]
  7429: 95 17 70                 a0 = sp + 0x70
  7432: b4 a0 02 14 01           ra = 276, jump [a3]
      :                          @443 [@dyn 138]
  7437: 82 17 78                 a0 = u64 [sp + 0x78]
  7440: 3e 02 00 00 03           u64 [0x30000] = t0
  7445: 3e 04 08 00 03           u64 [0x30008] = t2
  7450: 82 72                    t0 = u64 [a0]
  7452: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  7455: 7b 74                    u64 [a0] = t2
  7457: 64 27                    a0 = t0
  7459: 3a 02 00 00 03           t0 = u64 [0x30000]
  7464: 3a 04 08 00 03           t2 = u64 [0x30008]
  7469: 33 08 01                 a1 = 0x1
  7472: ab 87 22                 jump @447 if a0 != a1
      :                          @444
  7475: 82 17 78                 a0 = u64 [sp + 0x78]
  7478: 50 20 16 01 c6 38        ra = 278, jump @1586
      :                          @445 [@dyn 139]
  7484: 28 16                    jump @447
      :                          @446
  7486: 82 17 58                 a0 = u64 [sp + 0x58]
  7489: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7492: 82 18 60                 a1 = u64 [sp + 0x60]
  7495: 82 19 68                 a2 = u64 [sp + 0x68]
  7498: 95 17 70                 a0 = sp + 0x70
  7501: b4 a0 02 18 01           ra = 280, jump [a3]
      :                          @447 [@dyn 140]
  7506: 33 07 00 00 01           a0 = 0x10000
  7511: 33 08                    a1 = 0
  7513: 82 10 78 02              ra = u64 [sp + 0x278]
  7517: 82 15 70 02              s0 = u64 [sp + 0x270]
  7521: 82 16 68 02              s1 = u64 [sp + 0x268]
  7525: 95 11 80 02              sp = sp + 0x280
  7529: 32 00                    ret
      :                          @448
  7531: 33 08 10 00 03           a1 = 0x30010
  7536: 95 64 00 00 00 08        t2 = s1 + 0x8000000
  7542: 33 03 e0 ff ff 07        t1 = 0x7ffffe0
  7548: 01                       fallthrough
      :                          @449
  7549: 82 47                    a0 = u64 [t2]
  7551: ac 73 fd 22              jump @1156 if t1 <u a0
      :                          @450
  7555: 82 1b 38                 a4 = u64 [sp + 0x38]
  7558: c9 7b 0b                 a4 = a4 - a0
  7561: c8 6b 0b                 a4 = a4 + s1
  7564: 95 bb f8 00              a4 = a4 + 0xf8
  7568: 84 bc 07                 a5 = a4 & 0x7
  7571: c8 c7 0a                 a3 = a0 + a5
  7574: 95 aa 18                 a3 = a3 + 0x18
  7577: 01                       fallthrough
      :                          @451
  7578: 82 49                    a2 = u64 [t2]
  7580: ab 79 e1                 jump @449 if a2 != a0
      :                          @452
  7583: 7b 4a                    u64 [t2] = a3
  7585: 01                       fallthrough
      :                          @453
  7586: c9 cb 0b                 a4 = a4 - a5
  7589: 82 17 10                 a0 = u64 [sp + 0x10]
  7592: 7b b7                    u64 [a4] = a0
  7594: 82 17 20                 a0 = u64 [sp + 0x20]
  7597: 7b b7 08                 u64 [a4 + 0x8] = a0
  7600: 7b 1b 30                 u64 [sp + 0x30] = a4
  7603: 49 1b 10 01              u64 [a4 + 16] = 0x1
  7607: 33 07 a8 05 01           a0 = 0x105a8
  7612: 7b 17 28                 u64 [sp + 0x28] = a0
  7615: 7b 12 20                 u64 [sp + 0x20] = t0
  7618: 82 18 20                 a1 = u64 [sp + 0x20]
  7621: 55 28 ca 00 e9 fe        jump @437 if a1 >=u 202
      :                          @454
  7627: 00                       trap
      :                          @455
  7628: 7b 17 50                 u64 [sp + 0x50] = a0
  7631: 7b 15 58                 u64 [sp + 0x58] = s0
  7634: 49 11 60 ca 00           u64 [sp + 96] = 0xca
  7639: 95 17 68                 a0 = sp + 0x68
  7642: 7b 1a 68                 u64 [sp + 0x68] = a3
  7645: 33 08 74 01              a1 = 0x174
  7649: 33 0a 50 01              a3 = 0x150
  7653: db 38 0a                 a3 = a1 if t1 != 0
  7656: 33 09 ca 00              a2 = 0xca
  7660: 64 58                    a1 = s0
  7662: b4 a0 02 1a 01           ra = 282, jump [a3]
      :                          @456 [@dyn 141]
  7667: 00                       trap
      :                          @457
  7668: 00                       trap
      :                          @458 [export #1: 'accumulate']
  7669: 33 07 00 00 01           a0 = 0x10000
  7674: 33 08                    a1 = 0
  7676: 32 00                    ret
      :                          @459 [export #2: 'on_transfer']
  7678: 33 07 00 00 01           a0 = 0x10000
  7683: 33 08                    a1 = 0
  7685: 32 00                    ret
      :                          @460
  7687: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  7690: 7b 10 40                 u64 [sp + 0x40] = ra
  7693: 7b 15 38                 u64 [sp + 0x38] = s0
  7696: 7b 16 30                 u64 [sp + 0x30] = s1
  7699: 64 75                    s0 = a0
  7701: 82 77                    a0 = u64 [a0]
  7703: 95 78 01                 a1 = a0 + 0x1
  7706: 97 79 01                 a2 = a0 << 0x1
  7709: e4 98 08                 a1 = maxu(a1, a2)
  7712: 33 09 08                 a2 = 0x8
  7715: e4 98 06                 s1 = maxu(a1, a2)
  7718: 57 06 3d                 jump @466 if s1 <s 0
      :                          @461
  7721: 51 07 10                 jump @463 if a0 == 0
      :                          @462
  7724: 82 58 08                 a1 = u64 [s0 + 0x8]
  7727: 7b 18 18                 u64 [sp + 0x18] = a1
  7730: 7b 17 28                 u64 [sp + 0x28] = a0
  7733: 33 07 01                 a0 = 0x1
  7736: 01                       fallthrough
      :                          @463
  7737: 7b 17 20                 u64 [sp + 0x20] = a0
  7740: 64 17                    a0 = sp
  7742: 95 19 18                 a2 = sp + 0x18
  7745: 64 68                    a1 = s1
  7747: 50 20 1c 01 2b           ra = 284, jump @468
      :                          @464 [@dyn 142]
  7752: 82 17                    a0 = u64 [sp]
  7754: 52 07 1e                 jump @467 if a0 != 0
      :                          @465
  7757: 82 17 08                 a0 = u64 [sp + 0x8]
  7760: 7b 57 08                 u64 [s0 + 0x8] = a0
  7763: 7b 56                    u64 [s0] = s1
  7765: 82 10 40                 ra = u64 [sp + 0x40]
  7768: 82 15 38                 s0 = u64 [sp + 0x38]
  7771: 82 16 30                 s1 = u64 [sp + 0x30]
  7774: 95 11 48                 sp = sp + 0x48
  7777: 32 00                    ret
      :                          @466
  7779: 33 07                    a0 = 0
  7781: 28 16 01                 jump @496
      :                          @467
  7784: 82 17 08                 a0 = u64 [sp + 0x8]
  7787: 28 10 01                 jump @496
      :                          @468
  7790: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  7793: 7b 10 28                 u64 [sp + 0x28] = ra
  7796: 7b 15 20                 u64 [sp + 0x20] = s0
  7799: 7b 16 18                 u64 [sp + 0x18] = s1
  7802: 82 9a 08                 a3 = u64 [a2 + 0x8]
  7805: 51 0a 7c                 jump @481 if a3 == 0
      :                          @469
  7808: 82 96 10                 s1 = u64 [a2 + 0x10]
  7811: 51 06 9f 00              jump @488 if s1 == 0
      :                          @470
  7815: 82 92                    t0 = u64 [a2]
  7817: 33 03 20 00 03           t1 = 0x30020
  7822: 95 39 00 00 00 08        a2 = t1 + 0x8000000
  7828: 01                       fallthrough
      :                          @471
  7829: 82 9b                    a4 = u64 [a2]
  7831: c8 8b 0a                 a3 = a4 + a1
  7834: ac ba bf 00              jump @494 if a3 <u a4
      :                          @472
  7838: 98 ac 1b                 a5 = a3 >> 0x1b
  7841: 52 0c b8 00              jump @494 if a5 != 0
      :                          @473
  7845: 82 9c                    a5 = u64 [a2]
  7847: ab bc ee                 jump @471 if a5 != a4
      :                          @474
  7850: 7b 9a                    u64 [a2] = a3
  7852: 7b 18 10                 u64 [sp + 0x10] = a1
  7855: c9 a3 05                 s0 = t1 - a3
  7858: 95 55 00 00 00 08        s0 = s0 + 0x8000000
  7864: 7b 17 08                 u64 [sp + 0x8] = a0
  7867: 64 57                    a0 = s0
  7869: 64 28                    a1 = t0
  7871: 64 69                    a2 = s1
  7873: 7b 12                    u64 [sp] = t0
  7875: 50 20 1e 01 cb 37        ra = 286, jump @1602
      :                          @475 [@dyn 143]
  7881: 82 12                    t0 = u64 [sp]
  7883: 82 17 08                 a0 = u64 [sp + 0x8]
  7886: 33 09 20 00 03           a2 = 0x30020
  7891: 95 98 00 00 00 08        a1 = a2 + 0x8000000
  7897: 01                       fallthrough
      :                          @476
  7898: 82 89                    a2 = u64 [a1]
  7900: c9 98 0a                 a3 = a1 - a2
  7903: ab 2a 15                 jump @480 if a3 != t0
      :                          @477
  7906: c9 69 0a                 a3 = a2 - s1
  7909: 01                       fallthrough
      :                          @478
  7910: 82 8b                    a4 = u64 [a1]
  7912: ab 9b f2                 jump @476 if a4 != a2
      :                          @479
  7915: 7b 8a                    u64 [a1] = a3
  7917: 33 0c                    a5 = 0
  7919: 82 18 10                 a1 = u64 [sp + 0x10]
  7922: 28 6a                    jump @495
      :                          @480
  7924: 82 18 10                 a1 = u64 [sp + 0x10]
  7927: 28 65                    jump @495
      :                          @481
  7929: 33 09 20 00 03           a2 = 0x30020
  7934: 95 9a 00 00 00 08        a3 = a2 + 0x8000000
  7940: 01                       fallthrough
      :                          @482
  7941: 82 ac                    a5 = u64 [a3]
  7943: c8 8c 06                 s1 = a5 + a1
  7946: ac c6 4f                 jump @494 if s1 <u a5
      :                          @483
  7949: 98 6b 1b                 a4 = s1 >> 0x1b
  7952: 52 0b 49                 jump @494 if a4 != 0
      :                          @484
  7955: 82 ab                    a4 = u64 [a3]
  7957: ab cb f0                 jump @482 if a4 != a5
      :                          @485
  7960: 7b a6                    u64 [a3] = s1
  7962: 33 05                    s0 = 0
  7964: 01                       fallthrough
      :                          @486
  7965: ab cb e8                 jump @482 if a4 != a5
      :                          @487
  7968: 28 2e                    jump @493
      :                          @488
  7970: 33 09 20 00 03           a2 = 0x30020
  7975: 95 9a 00 00 00 08        a3 = a2 + 0x8000000
  7981: 01                       fallthrough
      :                          @489
  7982: 82 ac                    a5 = u64 [a3]
  7984: c8 8c 06                 s1 = a5 + a1
  7987: ac c6 26                 jump @494 if s1 <u a5
      :                          @490
  7990: 98 6b 1b                 a4 = s1 >> 0x1b
  7993: 52 0b 20                 jump @494 if a4 != 0
      :                          @491
  7996: 82 ab                    a4 = u64 [a3]
  7998: ab cb f0                 jump @489 if a4 != a5
      :                          @492
  8001: 7b a6                    u64 [a3] = s1
  8003: c9 69 09                 a2 = a2 - s1
  8006: 95 95 00 00 00 08        s0 = a2 + 0x8000000
  8012: 28 10                    jump @495
      :                          @493
  8014: c9 69 09                 a2 = a2 - s1
  8017: 95 95 00 00 00 08        s0 = a2 + 0x8000000
  8023: 28 05                    jump @495
      :                          @494
  8025: 33 05                    s0 = 0
  8027: 01                       fallthrough
      :                          @495
  8028: 88 59 01                 a2 = s0 <u 0x1
  8031: 33 0a 01                 a3 = 0x1
  8034: db 55 0a                 a3 = s0 if s0 != 0
  8037: 7b 7a 08                 u64 [a0 + 0x8] = a3
  8040: 7b 78 10                 u64 [a0 + 0x10] = a1
  8043: 7b 79                    u64 [a0] = a2
  8045: 82 10 28                 ra = u64 [sp + 0x28]
  8048: 82 15 20                 s0 = u64 [sp + 0x20]
  8051: 82 16 18                 s1 = u64 [sp + 0x18]
  8054: 95 11 30                 sp = sp + 0x30
  8057: 32 00                    ret
      :                          @496
  8059: 52 07 04                 jump @498 if a0 != 0
      :                          @497
  8062: 00                       trap
      :                          @498
  8063: 00                       trap
      :                          @499
  8064: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8067: 7b 10 40                 u64 [sp + 0x40] = ra
  8070: 7b 15 38                 u64 [sp + 0x38] = s0
  8073: 7b 16 30                 u64 [sp + 0x30] = s1
  8076: c8 89 09                 a2 = a2 + a1
  8079: ac 89 51                 jump @506 if a2 <u a1
      :                          @500
  8082: 64 75                    s0 = a0
  8084: 82 77                    a0 = u64 [a0]
  8086: 97 78 01                 a1 = a0 << 0x1
  8089: 33 0a 08                 a3 = 0x8
  8092: e4 a9 09                 a2 = maxu(a2, a3)
  8095: e4 89 06                 s1 = maxu(a2, a1)
  8098: 57 06 3e                 jump @506 if s1 <s 0
      :                          @501
  8101: 51 07 10                 jump @503 if a0 == 0
      :                          @502
  8104: 82 58 08                 a1 = u64 [s0 + 0x8]
  8107: 7b 18 18                 u64 [sp + 0x18] = a1
  8110: 7b 17 28                 u64 [sp + 0x28] = a0
  8113: 33 07 01                 a0 = 0x1
  8116: 01                       fallthrough
      :                          @503
  8117: 7b 17 20                 u64 [sp + 0x20] = a0
  8120: 64 17                    a0 = sp
  8122: 95 19 18                 a2 = sp + 0x18
  8125: 64 68                    a1 = s1
  8127: 50 20 20 01 af fe        ra = 288, jump @468
      :                          @504 [@dyn 144]
  8133: 82 17                    a0 = u64 [sp]
  8135: 52 07 1d                 jump @507 if a0 != 0
      :                          @505
  8138: 82 17 08                 a0 = u64 [sp + 0x8]
  8141: 7b 57 08                 u64 [s0 + 0x8] = a0
  8144: 7b 56                    u64 [s0] = s1
  8146: 82 10 40                 ra = u64 [sp + 0x40]
  8149: 82 15 38                 s0 = u64 [sp + 0x38]
  8152: 82 16 30                 s1 = u64 [sp + 0x30]
  8155: 95 11 48                 sp = sp + 0x48
  8158: 32 00                    ret
      :                          @506
  8160: 33 07                    a0 = 0
  8162: 28 99                    jump @496
      :                          @507
  8164: 82 17 08                 a0 = u64 [sp + 0x8]
  8167: 28 94                    jump @496
      :                          @508 [@dyn 145]
  8169: 82 72                    t0 = u64 [a0]
  8171: 33 09 00 00 00 f8        a2 = 0xfffffffff8000000
  8177: 95 2a ff ff ff f7        a3 = t0 + 0xfffffffff7ffffff
  8183: ac 9a 29                 jump @514 if a3 <u a2
      :                          @509
  8186: 82 77 08                 a0 = u64 [a0 + 0x8]
  8189: 33 09 20 00 03           a2 = 0x30020
  8194: 95 99 00 00 00 08        a2 = a2 + 0x8000000
  8200: 01                       fallthrough
      :                          @510
  8201: 82 9a                    a3 = u64 [a2]
  8203: c9 a9 0b                 a4 = a2 - a3
  8206: ab 7b 12                 jump @514 if a4 != a0
      :                          @511
  8209: c9 2a 0b                 a4 = a3 - t0
  8212: 01                       fallthrough
      :                          @512
  8213: 82 9c                    a5 = u64 [a2]
  8215: ab ac f2                 jump @510 if a5 != a3
      :                          @513
  8218: 7b 9b                    u64 [a2] = a4
  8220: 33 08                    a1 = 0
  8222: 32 00                    ret
      :                          @514
  8224: 32 00                    ret
      :                          @515 [@dyn 146]
  8226: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8229: 7b 10 18                 u64 [sp + 0x18] = ra
  8232: 7b 15 10                 u64 [sp + 0x10] = s0
  8235: 7b 16 08                 u64 [sp + 0x8] = s1
  8238: 64 75                    s0 = a0
  8240: 82 7a 10                 a3 = u64 [a0 + 0x10]
  8243: 82 77                    a0 = u64 [a0]
  8245: c9 a7 07                 a0 = a0 - a3
  8248: 64 96                    s1 = a2
  8250: ac 97 2b                 jump @518 if a0 <u a2
      :                          @516
  8253: 7b 1a                    u64 [sp] = a3
  8255: 82 57 08                 a0 = u64 [s0 + 0x8]
  8258: c8 a7 07                 a0 = a0 + a3
  8261: 64 69                    a2 = s1
  8263: 50 20 26 01 47 36        ra = 294, jump @1602
      :                          @517 [@dyn 147]
  8269: 82 17                    a0 = u64 [sp]
  8271: c8 76 06                 s1 = s1 + a0
  8274: 7b 56 10                 u64 [s0 + 0x10] = s1
  8277: 33 07                    a0 = 0
  8279: 82 10 18                 ra = u64 [sp + 0x18]
  8282: 82 15 10                 s0 = u64 [sp + 0x10]
  8285: 82 16 08                 s1 = u64 [sp + 0x8]
  8288: 95 11 20                 sp = sp + 0x20
  8291: 32 00                    ret
      :                          @518
  8293: 64 57                    a0 = s0
  8295: 7b 18                    u64 [sp] = a1
  8297: 64 a8                    a1 = a3
  8299: 64 69                    a2 = s1
  8301: 50 20 28 01 13 ff        ra = 296, jump @499
      :                          @519 [@dyn 148]
  8307: 82 18                    a1 = u64 [sp]
  8309: 82 5a 10                 a3 = u64 [s0 + 0x10]
  8312: 28 c5                    jump @516
      :                          @520 [@dyn 149]
  8314: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8317: 7b 10 20                 u64 [sp + 0x20] = ra
  8320: 7b 15 18                 u64 [sp + 0x18] = s0
  8323: 7b 16 10                 u64 [sp + 0x10] = s1
  8326: 33 09 80 00              a2 = 0x80
  8330: 64 75                    s0 = a0
  8332: ae 98 26                 jump @525 if a1 >=u a2
      :                          @521
  8335: 82 56 10                 s1 = u64 [s0 + 0x10]
  8338: 82 57                    a0 = u64 [s0]
  8340: ab 76 10                 jump @524 if s1 != a0
      :                          @522
  8343: 64 57                    a0 = s0
  8345: 7b 18                    u64 [sp] = a1
  8347: 50 20 2c 01 6c fd        ra = 300, jump @460
      :                          @523 [@dyn 150]
  8353: 82 18                    a1 = u64 [sp]
  8355: 01                       fallthrough
      :                          @524
  8356: 82 57 08                 a0 = u64 [s0 + 0x8]
  8359: c8 67 07                 a0 = a0 + s1
  8362: 78 78                    u8 [a0] = a1
  8364: 95 66 01                 s1 = s1 + 0x1
  8367: 28 99 00                 jump @533
      :                          @525
  8370: 8b 87 0b                 i32 a0 = a1 >> 0xb
  8373: 48 11 0c                 u32 [sp + 12] = 0
  8376: 52 07 15                 jump @527 if a0 != 0
      :                          @526
  8379: 95 17 0d                 a0 = sp + 0xd
  8382: 98 89 06                 a2 = a1 >> 0x6
  8385: 86 99 c0 00              a2 = a2 | 0xc0
  8389: 78 19 0c                 u8 [sp + 0xc] = a2
  8392: 33 09 02                 a2 = 0x2
  8395: 28 52                    jump @530
      :                          @527
  8397: 8b 87 10                 i32 a0 = a1 >> 0x10
  8400: 52 07 22                 jump @529 if a0 != 0
      :                          @528
  8403: 95 17 0e                 a0 = sp + 0xe
  8406: 98 89 0c                 a2 = a1 >> 0xc
  8409: 86 99 e0 00              a2 = a2 | 0xe0
  8413: 78 19 0c                 u8 [sp + 0xc] = a2
  8416: 97 89 34                 a2 = a1 << 0x34
  8419: 98 99 3a                 a2 = a2 >> 0x3a
  8422: 95 99 80 00              a2 = a2 + 0x80
  8426: 78 19 0d                 u8 [sp + 0xd] = a2
  8429: 33 09 03                 a2 = 0x3
  8432: 28 2d                    jump @530
      :                          @529
  8434: 95 17 0f                 a0 = sp + 0xf
  8437: 98 89 12                 a2 = a1 >> 0x12
  8440: 86 99 f0 00              a2 = a2 | 0xf0
  8444: 78 19 0c                 u8 [sp + 0xc] = a2
  8447: 97 89 2e                 a2 = a1 << 0x2e
  8450: 98 99 3a                 a2 = a2 >> 0x3a
  8453: 95 99 80 00              a2 = a2 + 0x80
  8457: 78 19 0d                 u8 [sp + 0xd] = a2
  8460: 97 89 34                 a2 = a1 << 0x34
  8463: 98 99 3a                 a2 = a2 >> 0x3a
  8466: 95 99 80 00              a2 = a2 + 0x80
  8470: 78 19 0e                 u8 [sp + 0xe] = a2
  8473: 33 09 04                 a2 = 0x4
  8476: 01                       fallthrough
      :                          @530
  8477: 82 56 10                 s1 = u64 [s0 + 0x10]
  8480: 82 5a                    a3 = u64 [s0]
  8482: 84 88 3f                 a1 = a1 & 0x3f
  8485: 86 88 80 00              a1 = a1 | 0x80
  8489: c9 6a 0a                 a3 = a3 - s1
  8492: 78 78                    u8 [a0] = a1
  8494: ac 9a 2d                 jump @534 if a3 <u a2
      :                          @531
  8497: 7b 19                    u64 [sp] = a2
  8499: 82 57 08                 a0 = u64 [s0 + 0x8]
  8502: c8 67 07                 a0 = a0 + s1
  8505: 95 18 0c                 a1 = sp + 0xc
  8508: 50 20 2e 01 52 35        ra = 302, jump @1602
      :                          @532 [@dyn 151]
  8514: 82 17                    a0 = u64 [sp]
  8516: c8 76 06                 s1 = s1 + a0
  8519: 01                       fallthrough
      :                          @533
  8520: 7b 56 10                 u64 [s0 + 0x10] = s1
  8523: 33 07                    a0 = 0
  8525: 82 10 20                 ra = u64 [sp + 0x20]
  8528: 82 15 18                 s0 = u64 [sp + 0x18]
  8531: 82 16 10                 s1 = u64 [sp + 0x10]
  8534: 95 11 28                 sp = sp + 0x28
  8537: 32 00                    ret
      :                          @534
  8539: 64 57                    a0 = s0
  8541: 64 68                    a1 = s1
  8543: 64 96                    s1 = a2
  8545: 50 20 30 01 1f fe        ra = 304, jump @499
      :                          @535 [@dyn 152]
  8551: 64 69                    a2 = s1
  8553: 82 56 10                 s1 = u64 [s0 + 0x10]
  8556: 28 c5                    jump @531
      :                          @536 [@dyn 153]
  8558: 64 8a                    a3 = a1
  8560: 33 08 28 05 01           a1 = 0x10528
  8565: 64 a9                    a2 = a3
  8567: 28 03 14                 jump @956
      :                          @537 [@dyn 154]
  8570: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8573: 7b 10 18                 u64 [sp + 0x18] = ra
  8576: 7b 15 10                 u64 [sp + 0x10] = s0
  8579: 7b 16 08                 u64 [sp + 0x8] = s1
  8582: 82 79 10                 a2 = u64 [a0 + 0x10]
  8585: 97 94 01                 t2 = a2 << 0x1
  8588: 95 43 02                 t1 = t2 + 0x2
  8591: 57 03 ce 00              jump @559 if t1 <s 0
      :                          @538
  8595: 82 77 08                 a0 = u64 [a0 + 0x8]
  8598: 51 03 35                 jump @545 if t1 == 0
      :                          @539
  8601: 33 0a 10 00 03           a3 = 0x30010
  8606: 33 02 20 00 03           t0 = 0x30020
  8611: 95 2b 00 00 00 08        a4 = t0 + 0x8000000
  8617: 01                       fallthrough
      :                          @540
  8618: 82 bc                    a5 = u64 [a4]
  8620: c8 3c 06                 s1 = a5 + t1
  8623: ac c6 1b                 jump @544 if s1 <u a5
      :                          @541
  8626: 98 65 1b                 s0 = s1 >> 0x1b
  8629: 52 05 15                 jump @544 if s0 != 0
      :                          @542
  8632: 82 b5                    s0 = u64 [a4]
  8634: ab c5 f0                 jump @540 if s0 != a5
      :                          @543
  8637: 7b b6                    u64 [a4] = s1
  8639: c9 62 05                 s0 = t0 - s1
  8642: 95 55 00 00 00 08        s0 = s0 + 0x8000000
  8648: 28 07                    jump @546
      :                          @544
  8650: 00                       trap
      :                          @545
  8651: 33 05 01                 s0 = 0x1
  8654: 01                       fallthrough
      :                          @546
  8655: 46 05 30                 u8 [s0 + 0] = 0x30
  8658: 46 15 01 78              u8 [s0 + 1] = 0x78
  8662: 51 09 49                 jump @552 if a2 == 0
      :                          @547
  8665: 7b 14                    u64 [sp] = t2
  8667: 95 5a 03                 a3 = s0 + 0x3
  8670: 33 0b 27 02 01           a4 = 0x10227
  8675: 01                       fallthrough
      :                          @548
  8676: 7c 7c                    a5 = u8 [a0]
  8678: 84 c6 0f                 s1 = a5 & 0xf
  8681: 98 cc 04                 a5 = a5 >> 0x4
  8684: c8 bc 0c                 a5 = a5 + a4
  8687: 7c cc                    a5 = u8 [a5]
  8689: c8 b6 06                 s1 = s1 + a4
  8692: 7c 66                    s1 = u8 [s1]
  8694: 95 77 01                 a0 = a0 + 0x1
  8697: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  8700: 78 a6                    u8 [a3] = s1
  8702: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  8705: 95 aa 02                 a3 = a3 + 0x2
  8708: 52 09 e0                 jump @548 if a2 != 0
      :                          @549
  8711: 64 87                    a0 = a1
  8713: 64 58                    a1 = s0
  8715: 64 36                    s1 = t1
  8717: 64 39                    a2 = t1
  8719: 50 20 36 01 f2 0f        ra = 310, jump @887
      :                          @550 [@dyn 155]
  8725: 82 18                    a1 = u64 [sp]
  8727: 98 88 1b                 a1 = a1 >> 0x1b
  8730: 51 08 13                 jump @553 if a1 == 0
      :                          @551
  8733: 28 32                    jump @558
      :                          @552
  8735: 64 87                    a0 = a1
  8737: 64 58                    a1 = s0
  8739: 64 36                    s1 = t1
  8741: 64 39                    a2 = t1
  8743: 50 20 38 01 da 0f        ra = 312, jump @887
      :                          @553 [@dyn 156]
  8749: 33 08 20 00 03           a1 = 0x30020
  8754: 95 88 00 00 00 08        a1 = a1 + 0x8000000
  8760: 01                       fallthrough
      :                          @554
  8761: 82 89                    a2 = u64 [a1]
  8763: c9 98 0a                 a3 = a1 - a2
  8766: ab 5a 11                 jump @558 if a3 != s0
      :                          @555
  8769: c9 69 0a                 a3 = a2 - s1
  8772: 01                       fallthrough
      :                          @556
  8773: 82 8b                    a4 = u64 [a1]
  8775: ab 9b f2                 jump @554 if a4 != a2
      :                          @557
  8778: 7b 8a                    u64 [a1] = a3
  8780: 33 0c                    a5 = 0
  8782: 01                       fallthrough
      :                          @558
  8783: 82 10 18                 ra = u64 [sp + 0x18]
  8786: 82 15 10                 s0 = u64 [sp + 0x10]
  8789: 82 16 08                 s1 = u64 [sp + 0x8]
  8792: 95 11 20                 sp = sp + 0x20
  8795: 32 00                    ret
      :                          @559
  8797: 00                       trap
      :                          @560 [@dyn 157]
  8798: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8801: 7b 10 40                 u64 [sp + 0x40] = ra
  8804: 7b 15 38                 u64 [sp + 0x38] = s0
  8807: 7b 16 30                 u64 [sp + 0x30] = s1
  8810: 64 85                    s0 = a1
  8812: 64 76                    s1 = a0
  8814: 95 17 08                 a0 = sp + 0x8
  8817: 33 09 28                 a2 = 0x28
  8820: 33 08                    a1 = 0
  8822: 50 20 3c 01 5f 36        ra = 316, jump @1654
      :                          @561 [@dyn 158]
  8828: 46 11 06 30              u8 [sp + 6] = 0x30
  8832: 46 11 07 78              u8 [sp + 7] = 0x78
  8836: 95 17 09                 a0 = sp + 0x9
  8839: 95 18 31                 a1 = sp + 0x31
  8842: 33 09 27 02 01           a2 = 0x10227
  8847: 01                       fallthrough
      :                          @562
  8848: 7c 6a                    a3 = u8 [s1]
  8850: 84 ab 0f                 a4 = a3 & 0xf
  8853: 98 aa 04                 a3 = a3 >> 0x4
  8856: c8 9a 0a                 a3 = a3 + a2
  8859: 7c aa                    a3 = u8 [a3]
  8861: c8 9b 0b                 a4 = a4 + a2
  8864: 7c bb                    a4 = u8 [a4]
  8866: 78 7a ff                 u8 [a0 + 0xffffffffffffffff] = a3
  8869: 78 7b                    u8 [a0] = a4
  8871: 95 77 02                 a0 = a0 + 0x2
  8874: 95 66 01                 s1 = s1 + 0x1
  8877: ab 87 e3                 jump @562 if a0 != a1
      :                          @563
  8880: 82 58 38                 a1 = u64 [s0 + 0x38]
  8883: 82 57 30                 a0 = u64 [s0 + 0x30]
  8886: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8889: 95 18 06                 a1 = sp + 0x6
  8892: 33 09 2a                 a2 = 0x2a
  8895: b4 a0 02 3e 01           ra = 318, jump [a3]
      :                          @564 [@dyn 159]
  8900: 82 10 40                 ra = u64 [sp + 0x40]
  8903: 82 15 38                 s0 = u64 [sp + 0x38]
  8906: 82 16 30                 s1 = u64 [sp + 0x30]
  8909: 95 11 48                 sp = sp + 0x48
  8912: 32 00                    ret
      :                          @565
  8914: 00                       trap
      :                          @566 [@dyn 160]
  8915: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  8918: 7b 10                    u64 [sp] = ra
  8920: 82 82                    t0 = u64 [a1]
  8922: 84 2b 01                 a4 = t0 & 0x1
  8925: 52 0b 40                 jump @569 if a4 != 0
      :                          @567
  8928: 95 28 10                 a1 = t0 + 0x10
  8931: 33 0b 01                 a4 = 0x1
  8934: 3e 02 00 00 03           u64 [0x30000] = t0
  8939: 3e 04 08 00 03           u64 [0x30008] = t2
  8944: 82 82                    t0 = u64 [a1]
  8946: c8 b2 04                 t2 = t0 + a4
  8949: 7b 84                    u64 [a1] = t2
  8951: 64 28                    a1 = t0
  8953: 3a 02 00 00 03           t0 = u64 [0x30000]
  8958: 3a 04 08 00 03           t2 = u64 [0x30008]
  8963: 57 08 cf                 jump @565 if a1 <s 0
      :                          @568
  8966: 7b 79 08                 u64 [a0 + 0x8] = a2
  8969: 7b 7a 10                 u64 [a0 + 0x10] = a3
  8972: 7b 72 18                 u64 [a0 + 0x18] = t0
  8975: 33 08 a8 05 01           a1 = 0x105a8
  8980: 7b 78                    u64 [a0] = a1
  8982: 82 10                    ra = u64 [sp]
  8984: 95 11 08                 sp = sp + 0x8
  8987: 32 00                    ret
      :                          @569
  8989: 64 ac                    a5 = a3
  8991: 84 2a fe                 a3 = t0 & 0xfffffffffffffffe
  8994: 64 9b                    a4 = a2
  8996: 64 29                    a2 = t0
  8998: 50 20 42 01 b0 05        ra = 322, jump @705
      :                          @570 [@dyn 161]
  9004: 82 10                    ra = u64 [sp]
  9006: 95 11 08                 sp = sp + 0x8
  9009: 32 00                    ret
      :                          @571 [@dyn 162]
  9011: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9014: 7b 10 20                 u64 [sp + 0x20] = ra
  9017: 7b 15 18                 u64 [sp + 0x18] = s0
  9020: 7b 16 10                 u64 [sp + 0x10] = s1
  9023: 82 88                    a1 = u64 [a1]
  9025: 84 8b 01                 a4 = a1 & 0x1
  9028: 52 0b 0b                 jump @574 if a4 != 0
      :                          @572
  9031: 50 20 46 01 2c 04        ra = 326, jump @667
      :                          @573 [@dyn 163]
  9037: 28 2c                    jump @576
      :                          @574
  9039: 84 85 fe                 s0 = a1 & 0xfffffffffffffffe
  9042: c8 a9 08                 a1 = a2 + a3
  9045: c9 58 08                 a1 = a1 - s0
  9048: 7b 18 08                 u64 [sp + 0x8] = a1
  9051: 64 76                    s1 = a0
  9053: 64 57                    a0 = s0
  9055: 64 98                    a1 = a2
  9057: 64 a9                    a2 = a3
  9059: 7b 1a                    u64 [sp] = a3
  9061: 50 20 48 01 e3 33        ra = 328, jump @1619
      :                          @575 [@dyn 164]
  9067: 82 17 08                 a0 = u64 [sp + 0x8]
  9070: 7b 67                    u64 [s1] = a0
  9072: 7b 65 08                 u64 [s1 + 0x8] = s0
  9075: 82 17                    a0 = u64 [sp]
  9077: 7b 67 10                 u64 [s1 + 0x10] = a0
  9080: 01                       fallthrough
      :                          @576
  9081: 82 10 20                 ra = u64 [sp + 0x20]
  9084: 82 15 18                 s0 = u64 [sp + 0x18]
  9087: 82 16 10                 s1 = u64 [sp + 0x10]
  9090: 95 11 28                 sp = sp + 0x28
  9093: 32 00                    ret
      :                          @577 [@dyn 165]
  9095: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  9098: 7b 10 38                 u64 [sp + 0x38] = ra
  9101: 7b 15 30                 u64 [sp + 0x30] = s0
  9104: 7b 16 28                 u64 [sp + 0x28] = s1
  9107: 82 88                    a1 = u64 [a1]
  9109: 64 a4                    t2 = a3
  9111: 84 8b 01                 a4 = a1 & 0x1
  9114: 52 0b 0d                 jump @580 if a4 != 0
      :                          @578
  9117: 64 4a                    a3 = t2
  9119: 50 20 4c 01 d2 01        ra = 332, jump @623
      :                          @579 [@dyn 166]
  9125: 28 53                    jump @586
      :                          @580
  9127: 84 88 fe                 a1 = a1 & 0xfffffffffffffffe
  9130: c9 89 02                 t0 = a2 - a1
  9133: c8 42 0a                 a3 = t0 + t2
  9136: 98 ab 11                 a4 = a3 >> 0x11
  9139: 98 ac 0a                 a5 = a3 >> 0xa
  9142: 68 cc                    a5 = clz a5
  9144: 97 cc 02                 a5 = a5 << 0x2
  9147: 9a c6 01 01              s1 = 0x101 - a5
  9151: 33 0c 1d                 a5 = 0x1d
  9154: da b6 0c                 a5 = s1 if a4 == 0
  9157: aa 89 24                 jump @584 if a2 == a1
      :                          @581
  9160: 98 c6 05                 s1 = a5 >> 0x5
  9163: c8 26 0b                 a4 = s1 + t0
  9166: 98 b9 3b                 a2 = a4 >> 0x3b
  9169: 52 09 35                 jump @587 if a2 != 0
      :                          @582
  9172: 97 bb 05                 a4 = a4 << 0x5
  9175: 84 cc 1d                 a5 = a5 & 0x1d
  9178: d4 bc 0c                 a5 = a5 | a4
  9181: 01                       fallthrough
      :                          @583
  9182: c8 28 08                 a1 = a1 + t0
  9185: e4 2a 09                 a2 = maxu(a3, t0)
  9188: c9 29 0a                 a3 = a2 - t0
  9191: 28 05                    jump @585
      :                          @584
  9193: 64 a4                    t2 = a3
  9195: 01                       fallthrough
      :                          @585
  9196: 7b 78                    u64 [a0] = a1
  9198: 7b 7a 08                 u64 [a0 + 0x8] = a3
  9201: 7b 74 10                 u64 [a0 + 0x10] = t2
  9204: 7b 7c 18                 u64 [a0 + 0x18] = a5
  9207: 01                       fallthrough
      :                          @586
  9208: 82 10 38                 ra = u64 [sp + 0x38]
  9211: 82 15 30                 s0 = u64 [sp + 0x30]
  9214: 82 16 28                 s1 = u64 [sp + 0x28]
  9217: 95 11 40                 sp = sp + 0x40
  9220: 32 00                    ret
      :                          @587
  9222: 7b 16 10                 u64 [sp + 0x10] = s1
  9225: 33 0b 20 00 03           a4 = 0x30020
  9230: 95 b9 00 00 00 08        a2 = a4 + 0x8000000
  9236: 7b 19 20                 u64 [sp + 0x20] = a2
  9239: 33 06 d0 ff ff 07        s1 = 0x7ffffd0
  9245: 49 11 18 d8 ff ff 07     u64 [sp + 24] = 0x7ffffd8
  9252: 01                       fallthrough
      :                          @588
  9253: 82 19 20                 a2 = u64 [sp + 0x20]
  9256: 82 93                    t1 = u64 [a2]
  9258: ac 36 5b                 jump @594 if s1 <u t1
      :                          @589
  9261: c9 3b 00                 ra = a4 - t1
  9264: 82 19 18                 a2 = u64 [sp + 0x18]
  9267: c8 09 09                 a2 = a2 + ra
  9270: 7b 19 08                 u64 [sp + 0x8] = a2
  9273: 84 99 07                 a2 = a2 & 0x7
  9276: 7b 19                    u64 [sp] = a2
  9278: c8 93 0b                 a4 = t1 + a2
  9281: 95 bb 28                 a4 = a4 + 0x28
  9284: 82 10 20                 ra = u64 [sp + 0x20]
  9287: 01                       fallthrough
      :                          @590
  9288: 82 05                    s0 = u64 [ra]
  9290: ab 35 06                 jump @592 if s0 != t1
      :                          @591
  9293: 7b 0b                    u64 [ra] = a4
  9295: 01                       fallthrough
      :                          @592
  9296: 33 0b 20 00 03           a4 = 0x30020
  9301: ab 35 d0                 jump @588 if s0 != t1
      :                          @593
  9304: 97 cc 3b                 a5 = a5 << 0x3b
  9307: 82 19 08                 a2 = u64 [sp + 0x8]
  9310: 82 1b                    a4 = u64 [sp]
  9312: c9 b9 09                 a2 = a2 - a4
  9315: 82 1b 10                 a4 = u64 [sp + 0x10]
  9318: c8 ab 05                 s0 = a4 + a3
  9321: c9 b8 06                 s1 = a1 - a4
  9324: 98 cc 3d                 a5 = a5 >> 0x3d
  9327: 7b 95                    u64 [a2] = s0
  9329: 7b 96 08                 u64 [a2 + 0x8] = s1
  9332: 7b 95 10                 u64 [a2 + 0x10] = s0
  9335: 7b 9c 18                 u64 [a2 + 0x18] = a5
  9338: 33 0b 01                 a4 = 0x1
  9341: 7b 9b 20                 u64 [a2 + 0x20] = a4
  9344: 64 9c                    a5 = a2
  9346: 28 5c ff                 jump @583
      :                          @594
  9349: 00                       trap
      :                          @595 [@dyn 167]
  9350: 82 78                    a1 = u64 [a0]
  9352: 84 89 01                 a2 = a1 & 0x1
  9355: 33 07 01                 a0 = 0x1
  9358: 52 09 0e                 jump @597 if a2 != 0
      :                          @596
  9361: 82 87 10                 a0 = u64 [a1 + 0x10]
  9364: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9367: 88 77 01                 a0 = a0 <u 0x1
  9370: 32 00                    ret
      :                          @597
  9372: 32 00                    ret
      :                          @598 [@dyn 168]
  9374: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  9377: 82 77                    a0 = u64 [a0]
  9379: 84 7a 01                 a3 = a0 & 0x1
  9382: 52 0a 8a 00              jump @614 if a3 != 0
      :                          @599
  9386: 95 78 10                 a1 = a0 + 0x10
  9389: 3e 02 00 00 03           u64 [0x30000] = t0
  9394: 3e 04 08 00 03           u64 [0x30008] = t2
  9399: 82 82                    t0 = u64 [a1]
  9401: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  9404: 7b 84                    u64 [a1] = t2
  9406: 64 28                    a1 = t0
  9408: 3a 02 00 00 03           t0 = u64 [0x30000]
  9413: 3a 04 08 00 03           t2 = u64 [0x30008]
  9418: 33 09 01                 a2 = 0x1
  9421: ab 98 9e 00              jump @621 if a1 != a2
      :                          @600
  9425: 82 74 08                 t2 = u64 [a0 + 0x8]
  9428: 57 04 9c 00              jump @622 if t2 <s 0
      :                          @601
  9432: 33 02 00 00 00 08        t0 = 0x8000000
  9438: ac 42 2e                 jump @607 if t0 <u t2
      :                          @602
  9441: 82 73                    t1 = u64 [a0]
  9443: 33 0b 20 00 03           a4 = 0x30020
  9448: 95 b9 00 00 00 08        a2 = a4 + 0x8000000
  9454: 01                       fallthrough
      :                          @603
  9455: 82 9c                    a5 = u64 [a2]
  9457: c9 c9 0b                 a4 = a2 - a5
  9460: ab 3b 18                 jump @607 if a4 != t1
      :                          @604
  9463: c9 4c 0b                 a4 = a5 - t2
  9466: 01                       fallthrough
      :                          @605
  9467: 82 9a                    a3 = u64 [a2]
  9469: ab ca f2                 jump @603 if a3 != a5
      :                          @606
  9472: 7b 9b                    u64 [a2] = a4
  9474: 33 09 20 00 03           a2 = 0x30020
  9479: c8 29 09                 a2 = a2 + t0
  9482: 28 0b                    jump @608
      :                          @607
  9484: 33 09 20 00 03           a2 = 0x30020
  9489: c8 29 09                 a2 = a2 + t0
  9492: 01                       fallthrough
      :                          @608
  9493: 82 98                    a1 = u64 [a2]
  9495: c9 89 0a                 a3 = a2 - a1
  9498: ab 7a 51                 jump @621 if a3 != a0
      :                          @609
  9501: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
  9504: 01                       fallthrough
      :                          @610
  9505: 82 9b                    a4 = u64 [a2]
  9507: ab 8b f2                 jump @608 if a4 != a1
      :                          @611
  9510: 7b 9a                    u64 [a2] = a3
  9512: 33 0c                    a5 = 0
  9514: 01                       fallthrough
      :                          @612
  9515: ab 8b ea                 jump @608 if a4 != a1
      :                          @613
  9518: 28 3d                    jump @621
      :                          @614
  9520: 84 72 fe                 t0 = a0 & 0xfffffffffffffffe
  9523: c8 98 08                 a1 = a1 + a2
  9526: c9 28 08                 a1 = a1 - t0
  9529: 57 08 37                 jump @622 if a1 <s 0
      :                          @615
  9532: 33 09 00 00 00 08        a2 = 0x8000000
  9538: ac 89 29                 jump @621 if a2 <u a1
      :                          @616
  9541: 33 0a 20 00 03           a3 = 0x30020
  9546: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
  9552: 01                       fallthrough
      :                          @617
  9553: 82 9a                    a3 = u64 [a2]
  9555: c9 a9 0b                 a4 = a2 - a3
  9558: ab 2b 15                 jump @621 if a4 != t0
      :                          @618
  9561: c9 8a 0b                 a4 = a3 - a1
  9564: 01                       fallthrough
      :                          @619
  9565: 82 9c                    a5 = u64 [a2]
  9567: ab ac f2                 jump @617 if a5 != a3
      :                          @620
  9570: 7b 9b                    u64 [a2] = a4
  9572: 33 07                    a0 = 0
  9574: 95 11 08                 sp = sp + 0x8
  9577: 32 00                    ret
      :                          @621
  9579: 95 11 08                 sp = sp + 0x8
  9582: 32 00                    ret
      :                          @622
  9584: 00                       trap
      :                          @623
  9585: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  9588: 7b 10 38                 u64 [sp + 0x38] = ra
  9591: 7b 15 30                 u64 [sp + 0x30] = s0
  9594: 7b 16 28                 u64 [sp + 0x28] = s1
  9597: 82 8b 10                 a4 = u64 [a1 + 0x10]
  9600: 7b 17 18                 u64 [sp + 0x18] = a0
  9603: 33 0c 01                 a5 = 0x1
  9606: ab cb 6d                 jump @633 if a4 != a5
      :                          @624
  9609: 82 84                    t2 = u64 [a1]
  9611: 82 87 08                 a0 = u64 [a1 + 0x8]
  9614: 33 00 20 00 03           ra = 0x30020
  9619: 95 02 00 00 00 08        t0 = ra + 0x8000000
  9625: 01                       fallthrough
      :                          @625
  9626: 82 26                    s1 = u64 [t0]
  9628: c9 62 0c                 a5 = t0 - s1
  9631: ab 8c 0f                 jump @629 if a5 != a1
      :                          @626
  9634: 95 6c e8                 a5 = s1 + 0xffffffffffffffe8
  9637: 01                       fallthrough
      :                          @627
  9638: 82 2b                    a4 = u64 [t0]
  9640: ab 6b f2                 jump @625 if a4 != s1
      :                          @628
  9643: 7b 2c                    u64 [t0] = a5
  9645: 01                       fallthrough
      :                          @629
  9646: c9 49 03                 t1 = a2 - t2
  9649: c8 3a 0a                 a3 = a3 + t1
  9652: 98 7b 11                 a4 = a0 >> 0x11
  9655: 98 78 0a                 a1 = a0 >> 0xa
  9658: 68 88                    a1 = clz a1
  9660: 97 88 02                 a1 = a1 << 0x2
  9663: 9a 86 01 01              s1 = 0x101 - a1
  9667: 33 08 1d                 a1 = 0x1d
  9670: da b6 08                 a1 = s1 if a4 == 0
  9673: aa 49 1c 01              jump @655 if a2 == t2
      :                          @630
  9677: 98 8b 05                 a4 = a1 >> 0x5
  9680: c8 3b 0c                 a5 = a4 + t1
  9683: 98 c9 3b                 a2 = a5 >> 0x3b
  9686: 52 09 2c 01              jump @657 if a2 != 0
      :                          @631
  9690: 97 cb 05                 a4 = a5 << 0x5
  9693: 84 88 1d                 a1 = a1 & 0x1d
  9696: d4 b8 08                 a1 = a1 | a4
  9699: 01                       fallthrough
      :                          @632
  9700: c8 34 04                 t2 = t2 + t1
  9703: e4 3a 0a                 a3 = maxu(a3, t1)
  9706: c9 3a 0a                 a3 = a3 - t1
  9709: c9 37 07                 a0 = a0 - t1
  9712: 28 f5 00                 jump @655
      :                          @633
  9715: 57 0a 7f 01              jump @666 if a3 <s 0
      :                          @634
  9719: 33 05 01                 s0 = 0x1
  9722: 33 0b 01                 a4 = 0x1
  9725: 51 0a 39                 jump @640 if a3 == 0
      :                          @635
  9728: 33 0c 00 00 00 08        a5 = 0x8000000
  9734: 33 02 20 00 03           t0 = 0x30020
  9739: c8 c2 03                 t1 = t0 + a5
  9742: 01                       fallthrough
      :                          @636
  9743: 82 36                    s1 = u64 [t1]
  9745: c8 a6 0b                 a4 = s1 + a3
  9748: ac 6b ed 00              jump @656 if a4 <u s1
      :                          @637
  9752: 98 b5 1b                 s0 = a4 >> 0x1b
  9755: 52 05 e6 00              jump @656 if s0 != 0
      :                          @638
  9759: 82 35                    s0 = u64 [t1]
  9761: ab 65 ee                 jump @636 if s0 != s1
      :                          @639
  9764: 7b 3b                    u64 [t1] = a4
  9766: c9 b2 0b                 a4 = t0 - a4
  9769: 33 0c 00 00 00 08        a5 = 0x8000000
  9775: c8 cb 0b                 a4 = a4 + a5
  9778: 33 05 01                 s0 = 0x1
  9781: 01                       fallthrough
      :                          @640
  9782: 7b 1b 10                 u64 [sp + 0x10] = a4
  9785: 64 b7                    a0 = a4
  9787: 64 86                    s1 = a1
  9789: 64 98                    a1 = a2
  9791: 7b 1a 08                 u64 [sp + 0x8] = a3
  9794: 64 a9                    a2 = a3
  9796: 50 20 52 01 4a 30        ra = 338, jump @1602
      :                          @641 [@dyn 169]
  9802: 95 69 10                 a2 = s1 + 0x10
  9805: 3e 02 00 00 03           u64 [0x30000] = t0
  9810: 3e 04 08 00 03           u64 [0x30008] = t2
  9815: 82 92                    t0 = u64 [a2]
  9817: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
  9820: 7b 94                    u64 [a2] = t2
  9822: 64 29                    a2 = t0
  9824: 3a 02 00 00 03           t0 = u64 [0x30000]
  9829: 3a 04 08 00 03           t2 = u64 [0x30008]
  9834: ab 59 5d                 jump @654 if a2 != s0
      :                          @642
  9837: 64 68                    a1 = s1
  9839: 82 69 08                 a2 = u64 [s1 + 0x8]
  9842: 57 09 ff 00              jump @665 if a2 <s 0
      :                          @643
  9846: 33 02 00 00 00 08        t0 = 0x8000000
  9852: ac 92 2e                 jump @649 if t0 <u a2
      :                          @644
  9855: 82 83                    t1 = u64 [a1]
  9857: 33 0c 20 00 03           a5 = 0x30020
  9862: 95 c6 00 00 00 08        s1 = a5 + 0x8000000
  9868: 01                       fallthrough
      :                          @645
  9869: 82 6a                    a3 = u64 [s1]
  9871: c9 a6 0c                 a5 = s1 - a3
  9874: ab 3c 18                 jump @649 if a5 != t1
      :                          @646
  9877: c9 9a 0c                 a5 = a3 - a2
  9880: 01                       fallthrough
      :                          @647
  9881: 82 65                    s0 = u64 [s1]
  9883: ab a5 f2                 jump @645 if s0 != a3
      :                          @648
  9886: 7b 6c                    u64 [s1] = a5
  9888: 33 0a 20 00 03           a3 = 0x30020
  9893: c8 2a 0a                 a3 = a3 + t0
  9896: 28 0b                    jump @650
      :                          @649
  9898: 33 0a 20 00 03           a3 = 0x30020
  9903: c8 2a 0a                 a3 = a3 + t0
  9906: 01                       fallthrough
      :                          @650
  9907: 82 a9                    a2 = u64 [a3]
  9909: c9 9a 0b                 a4 = a3 - a2
  9912: ab 8b 0f                 jump @654 if a4 != a1
      :                          @651
  9915: 95 9b e8                 a4 = a2 + 0xffffffffffffffe8
  9918: 01                       fallthrough
      :                          @652
  9919: 82 ac                    a5 = u64 [a3]
  9921: ab 9c f2                 jump @650 if a5 != a2
      :                          @653
  9924: 7b ab                    u64 [a3] = a4
  9926: 01                       fallthrough
      :                          @654
  9927: 82 1a 08                 a3 = u64 [sp + 0x8]
  9930: 98 a9 11                 a2 = a3 >> 0x11
  9933: 98 a8 0a                 a1 = a3 >> 0xa
  9936: 68 88                    a1 = clz a1
  9938: 97 88 02                 a1 = a1 << 0x2
  9941: 9a 8b 01 01              a4 = 0x101 - a1
  9945: 33 08 1d                 a1 = 0x1d
  9948: da 9b 08                 a1 = a4 if a2 == 0
  9951: 64 a7                    a0 = a3
  9953: 82 14 10                 t2 = u64 [sp + 0x10]
  9956: 01                       fallthrough
      :                          @655
  9957: 82 19 18                 a2 = u64 [sp + 0x18]
  9960: 7b 94                    u64 [a2] = t2
  9962: 7b 9a 08                 u64 [a2 + 0x8] = a3
  9965: 7b 97 10                 u64 [a2 + 0x10] = a0
  9968: 7b 98 18                 u64 [a2 + 0x18] = a1
  9971: 82 10 38                 ra = u64 [sp + 0x38]
  9974: 82 15 30                 s0 = u64 [sp + 0x30]
  9977: 82 16 28                 s1 = u64 [sp + 0x28]
  9980: 95 11 40                 sp = sp + 0x40
  9983: 32 00                    ret
      :                          @656
  9985: 00                       trap
      :                          @657
  9986: 7b 1b                    u64 [sp] = a4
  9988: 7b 14 10                 u64 [sp + 0x10] = t2
  9991: 95 06 00 00 00 08        s1 = ra + 0x8000000
  9997: 33 0c d0 ff ff 07        a5 = 0x7ffffd0
 10003: 33 0b d8 ff ff 07        a4 = 0x7ffffd8
 10009: 01                       fallthrough
      :                          @658
 10010: 82 62                    t0 = u64 [s1]
 10012: ac 2c 54                 jump @664 if a5 <u t0
      :                          @659
 10015: c9 20 04                 t2 = ra - t0
 10018: c8 b4 04                 t2 = t2 + a4
 10021: 84 49 07                 a2 = t2 & 0x7
 10024: 7b 1b 08                 u64 [sp + 0x8] = a4
 10027: c8 92 0b                 a4 = t0 + a2
 10030: 95 bb 28                 a4 = a4 + 0x28
 10033: 01                       fallthrough
      :                          @660
 10034: 82 65                    s0 = u64 [s1]
 10036: ab 25 06                 jump @662 if s0 != t0
      :                          @661
 10039: 7b 6b                    u64 [s1] = a4
 10041: 01                       fallthrough
      :                          @662
 10042: 82 1b 08                 a4 = u64 [sp + 0x8]
 10045: 33 00 20 00 03           ra = 0x30020
 10050: ab 25 d8                 jump @658 if s0 != t0
      :                          @663
 10053: 97 88 3b                 a1 = a1 << 0x3b
 10056: c9 94 09                 a2 = t2 - a2
 10059: 82 1c                    a5 = u64 [sp]
 10061: c8 7c 0b                 a4 = a5 + a0
 10064: c8 ac 06                 s1 = a5 + a3
 10067: 82 14 10                 t2 = u64 [sp + 0x10]
 10070: c9 c4 05                 s0 = t2 - a5
 10073: 98 88 3d                 a1 = a1 >> 0x3d
 10076: 7b 9b                    u64 [a2] = a4
 10078: 7b 95 08                 u64 [a2 + 0x8] = s0
 10081: 7b 96 10                 u64 [a2 + 0x10] = s1
 10084: 7b 98 18                 u64 [a2 + 0x18] = a1
 10087: 49 19 20 01              u64 [a2 + 32] = 0x1
 10091: 64 98                    a1 = a2
 10093: 28 77 fe                 jump @632
      :                          @664
 10096: 00                       trap
      :                          @665
 10097: 00                       trap
      :                          @666
 10098: 00                       trap
      :                          @667
 10099: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 10102: 7b 10 30                 u64 [sp + 0x30] = ra
 10105: 7b 15 28                 u64 [sp + 0x28] = s0
 10108: 7b 16 20                 u64 [sp + 0x20] = s1
 10111: 64 86                    s1 = a1
 10113: 95 83 10                 t1 = a1 + 0x10
 10116: 01                       fallthrough
      :                          @668
 10117: 82 3b                    a4 = u64 [t1]
 10119: 52 1b 01 09              jump @670 if a4 != 1
      :                          @669
 10123: 49 03                    u64 [t1 + 0] = 0
 10125: 33 0c                    a5 = 0
 10127: 01                       fallthrough
      :                          @670
 10128: 7b 1a 10                 u64 [sp + 0x10] = a3
 10131: 52 1b 01 5e              jump @679 if a4 != 1
      :                          @671
 10135: 7b 17 08                 u64 [sp + 0x8] = a0
 10138: 82 67                    a0 = u64 [s1]
 10140: 82 68 08                 a1 = u64 [s1 + 0x8]
 10143: 7b 18                    u64 [sp] = a1
 10145: 33 05 20 00 03           s0 = 0x30020
 10150: 95 55 00 00 00 08        s0 = s0 + 0x8000000
 10156: 01                       fallthrough
      :                          @672
 10157: 82 58                    a1 = u64 [s0]
 10159: c9 85 0a                 a3 = s0 - a1
 10162: ab 6a 11                 jump @676 if a3 != s1
      :                          @673
 10165: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
 10168: 01                       fallthrough
      :                          @674
 10169: 82 5b                    a4 = u64 [s0]
 10171: ab 8b f2                 jump @672 if a4 != a1
      :                          @675
 10174: 7b 5a                    u64 [s0] = a3
 10176: 33 0c                    a5 = 0
 10178: 01                       fallthrough
      :                          @676
 10179: 64 98                    a1 = a2
 10181: 82 19 10                 a2 = u64 [sp + 0x10]
 10184: 64 75                    s0 = a0
 10186: 50 20 54 01 7e 2f        ra = 340, jump @1619
      :                          @677 [@dyn 170]
 10192: 64 52                    t0 = s0
 10194: 82 1c 08                 a5 = u64 [sp + 0x8]
 10197: 82 17                    a0 = u64 [sp]
 10199: 01                       fallthrough
      :                          @678
 10200: 7b c7                    u64 [a5] = a0
 10202: 7b c2 08                 u64 [a5 + 0x8] = t0
 10205: 82 17 10                 a0 = u64 [sp + 0x10]
 10208: 7b c7 10                 u64 [a5 + 0x10] = a0
 10211: 82 10 30                 ra = u64 [sp + 0x30]
 10214: 82 15 28                 s0 = u64 [sp + 0x28]
 10217: 82 16 20                 s1 = u64 [sp + 0x20]
 10220: 95 11 38                 sp = sp + 0x38
 10223: 32 00                    ret
      :                          @679
 10225: 82 18 10                 a1 = u64 [sp + 0x10]
 10228: 57 08 e1 00              jump @704 if a1 <s 0
      :                          @680
 10232: 33 08 01                 a1 = 0x1
 10235: 82 1a 10                 a3 = u64 [sp + 0x10]
 10238: 51 0a 33                 jump @686 if a3 == 0
      :                          @681
 10241: 33 02 20 00 03           t0 = 0x30020
 10246: 95 28 00 00 00 08        a1 = t0 + 0x8000000
 10252: 01                       fallthrough
      :                          @682
 10253: 82 8b                    a4 = u64 [a1]
 10255: 82 1a 10                 a3 = u64 [sp + 0x10]
 10258: c8 ba 0a                 a3 = a3 + a4
 10261: ac ba b3 00              jump @701 if a3 <u a4
      :                          @683
 10265: 98 ac 1b                 a5 = a3 >> 0x1b
 10268: 52 0c ac 00              jump @701 if a5 != 0
      :                          @684
 10272: 82 8c                    a5 = u64 [a1]
 10274: ab bc eb                 jump @682 if a5 != a4
      :                          @685
 10277: 7b 8a                    u64 [a1] = a3
 10279: c9 a2 0a                 a3 = t0 - a3
 10282: 95 a8 00 00 00 08        a1 = a3 + 0x8000000
 10288: 01                       fallthrough
      :                          @686
 10289: 7b 17 08                 u64 [sp + 0x8] = a0
 10292: 7b 18                    u64 [sp] = a1
 10294: 64 87                    a0 = a1
 10296: 64 98                    a1 = a2
 10298: 82 19 10                 a2 = u64 [sp + 0x10]
 10301: 64 35                    s0 = t1
 10303: 50 20 56 01 4f 2e        ra = 342, jump @1602
      :                          @687 [@dyn 171]
 10309: 3e 02 00 00 03           u64 [0x30000] = t0
 10314: 3e 04 08 00 03           u64 [0x30008] = t2
 10319: 82 52                    t0 = u64 [s0]
 10321: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10324: 7b 54                    u64 [s0] = t2
 10326: 64 27                    a0 = t0
 10328: 3a 02 00 00 03           t0 = u64 [0x30000]
 10333: 3a 04 08 00 03           t2 = u64 [0x30008]
 10338: 33 08 01                 a1 = 0x1
 10341: ab 87 64                 jump @702 if a0 != a1
      :                          @688
 10344: 82 67 08                 a0 = u64 [s1 + 0x8]
 10347: 57 07 69                 jump @703 if a0 <s 0
      :                          @689
 10350: 33 02 00 00 00 08        t0 = 0x8000000
 10356: ac 72 25                 jump @695 if t0 <u a0
      :                          @690
 10359: 82 63                    t1 = u64 [s1]
 10361: 33 0a 20 00 03           a3 = 0x30020
 10366: 95 aa 00 00 00 08        a3 = a3 + 0x8000000
 10372: 01                       fallthrough
      :                          @691
 10373: 82 ab                    a4 = u64 [a3]
 10375: c9 ba 0c                 a5 = a3 - a4
 10378: ab 3c 0f                 jump @695 if a5 != t1
      :                          @692
 10381: c9 7b 0c                 a5 = a4 - a0
 10384: 01                       fallthrough
      :                          @693
 10385: 82 a8                    a1 = u64 [a3]
 10387: ab b8 f2                 jump @691 if a1 != a4
      :                          @694
 10390: 7b ac                    u64 [a3] = a5
 10392: 01                       fallthrough
      :                          @695
 10393: 33 08 20 00 03           a1 = 0x30020
 10398: c8 28 08                 a1 = a1 + t0
 10401: 82 1c 08                 a5 = u64 [sp + 0x8]
 10404: 82 12                    t0 = u64 [sp]
 10406: 01                       fallthrough
      :                          @696
 10407: 82 87                    a0 = u64 [a1]
 10409: c9 78 09                 a2 = a1 - a0
 10412: ab 69 16                 jump @700 if a2 != s1
      :                          @697
 10415: 95 79 e8                 a2 = a0 + 0xffffffffffffffe8
 10418: 01                       fallthrough
      :                          @698
 10419: 82 8a                    a3 = u64 [a1]
 10421: ab 7a f2                 jump @696 if a3 != a0
      :                          @699
 10424: 7b 89                    u64 [a1] = a2
 10426: 33 0b                    a4 = 0
 10428: 82 17 10                 a0 = u64 [sp + 0x10]
 10431: 28 19 ff                 jump @678
      :                          @700
 10434: 82 17 10                 a0 = u64 [sp + 0x10]
 10437: 28 13 ff                 jump @678
      :                          @701
 10440: 00                       trap
      :                          @702
 10441: 82 17 10                 a0 = u64 [sp + 0x10]
 10444: 82 1c 08                 a5 = u64 [sp + 0x8]
 10447: 82 12                    t0 = u64 [sp]
 10449: 28 07 ff                 jump @678
      :                          @703
 10452: 00                       trap
      :                          @704
 10453: 00                       trap
      :                          @705
 10454: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 10457: 7b 10 30                 u64 [sp + 0x30] = ra
 10460: 7b 15 28                 u64 [sp + 0x28] = s0
 10463: 7b 16 20                 u64 [sp + 0x20] = s1
 10466: 7b 1c 18                 u64 [sp + 0x18] = a5
 10469: 7b 1b 10                 u64 [sp + 0x10] = a4
 10472: 7b 19 08                 u64 [sp + 0x8] = a2
 10475: 7b 17                    u64 [sp] = a0
 10477: 33 09 20 00 03           a2 = 0x30020
 10482: 95 93 00 00 00 08        t1 = a2 + 0x8000000
 10488: 33 04 e0 ff ff 07        t2 = 0x7ffffe0
 10494: 33 02 e8 ff ff 07        t0 = 0x7ffffe8
 10500: 01                       fallthrough
      :                          @706
 10501: 82 36                    s1 = u64 [t1]
 10503: ac 64 51                 jump @712 if t2 <u s1
      :                          @707
 10506: c9 69 00                 ra = a2 - s1
 10509: c8 20 00                 ra = ra + t0
 10512: 84 0c 07                 a5 = ra & 0x7
 10515: c8 c6 05                 s0 = s1 + a5
 10518: 95 55 18                 s0 = s0 + 0x18
 10521: 01                       fallthrough
      :                          @708
 10522: 82 37                    a0 = u64 [t1]
 10524: ab 67 e9                 jump @706 if a0 != s1
      :                          @709
 10527: 7b 35                    u64 [t1] = s0
 10529: c9 c0 03                 t1 = ra - a5
 10532: 82 1c 10                 a5 = u64 [sp + 0x10]
 10535: c9 ac 07                 a0 = a5 - a3
 10538: 82 1b 18                 a4 = u64 [sp + 0x18]
 10541: c8 b7 07                 a0 = a0 + a4
 10544: 7b 3a                    u64 [t1] = a3
 10546: 7b 37 08                 u64 [t1 + 0x8] = a0
 10549: 49 13 10 02              u64 [t1 + 16] = 0x2
 10553: 82 16 08                 s1 = u64 [sp + 0x8]
 10556: 01                       fallthrough
      :                          @710
 10557: 82 8a                    a3 = u64 [a1]
 10559: ab 6a 1a                 jump @713 if a3 != s1
      :                          @711
 10562: 7b 83                    u64 [a1] = t1
 10564: 82 18                    a1 = u64 [sp]
 10566: 7b 8c 08                 u64 [a1 + 0x8] = a5
 10569: 7b 8b 10                 u64 [a1 + 0x10] = a4
 10572: 7b 83 18                 u64 [a1 + 0x18] = t1
 10575: 33 07 a8 05 01           a0 = 0x105a8
 10580: 7b 87                    u64 [a1] = a0
 10582: 28 56                    jump @719
      :                          @712
 10584: 00                       trap
      :                          @713
 10585: 95 a7 10                 a0 = a3 + 0x10
 10588: 3e 02 00 00 03           u64 [0x30000] = t0
 10593: 3e 04 08 00 03           u64 [0x30008] = t2
 10598: 82 72                    t0 = u64 [a0]
 10600: 95 24 01                 t2 = t0 + 0x1
 10603: 7b 74                    u64 [a0] = t2
 10605: 64 27                    a0 = t0
 10607: 3a 02 00 00 03           t0 = u64 [0x30000]
 10612: 3a 04 08 00 03           t2 = u64 [0x30008]
 10617: 57 07 59 f9              jump @565 if a0 <s 0
      :                          @714
 10621: 82 18                    a1 = u64 [sp]
 10623: 7b 8c 08                 u64 [a1 + 0x8] = a5
 10626: 7b 8b 10                 u64 [a1 + 0x10] = a4
 10629: 7b 8a 18                 u64 [a1 + 0x18] = a3
 10632: 33 07 a8 05 01           a0 = 0x105a8
 10637: 7b 87                    u64 [a1] = a0
 10639: 95 92 00 00 00 08        t0 = a2 + 0x8000000
 10645: 01                       fallthrough
      :                          @715
 10646: 82 27                    a0 = u64 [t0]
 10648: c9 72 08                 a1 = t0 - a0
 10651: ab 38 11                 jump @719 if a1 != t1
      :                          @716
 10654: 95 78 e8                 a1 = a0 + 0xffffffffffffffe8
 10657: 01                       fallthrough
      :                          @717
 10658: 82 29                    a2 = u64 [t0]
 10660: ab 79 f2                 jump @715 if a2 != a0
      :                          @718
 10663: 7b 28                    u64 [t0] = a1
 10665: 33 0a                    a3 = 0
 10667: 01                       fallthrough
      :                          @719
 10668: 82 10 30                 ra = u64 [sp + 0x30]
 10671: 82 15 28                 s0 = u64 [sp + 0x28]
 10674: 82 16 20                 s1 = u64 [sp + 0x20]
 10677: 95 11 38                 sp = sp + 0x38
 10680: 32 00                    ret
      :                          @720 [@dyn 172]
 10682: 82 88                    a1 = u64 [a1]
 10684: 95 8b 10                 a4 = a1 + 0x10
 10687: 33 0c 01                 a5 = 0x1
 10690: 3e 02 00 00 03           u64 [0x30000] = t0
 10695: 3e 04 08 00 03           u64 [0x30008] = t2
 10700: 82 b2                    t0 = u64 [a4]
 10702: c8 c2 04                 t2 = t0 + a5
 10705: 7b b4                    u64 [a4] = t2
 10707: 64 2b                    a4 = t0
 10709: 3a 02 00 00 03           t0 = u64 [0x30000]
 10714: 3a 04 08 00 03           t2 = u64 [0x30008]
 10719: 57 0b f3 f8              jump @565 if a4 <s 0
      :                          @721
 10723: 7b 79 08                 u64 [a0 + 0x8] = a2
 10726: 7b 7a 10                 u64 [a0 + 0x10] = a3
 10729: 7b 78 18                 u64 [a0 + 0x18] = a1
 10732: 33 08 a8 05 01           a1 = 0x105a8
 10737: 7b 78                    u64 [a0] = a1
 10739: 32 00                    ret
      :                          @722 [@dyn 173]
 10741: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 10744: 7b 10                    u64 [sp] = ra
 10746: 82 88                    a1 = u64 [a1]
 10748: 50 20 5c 01 77 fd        ra = 348, jump @667
      :                          @723 [@dyn 174]
 10754: 82 10                    ra = u64 [sp]
 10756: 95 11 08                 sp = sp + 0x8
 10759: 32 00                    ret
      :                          @724 [@dyn 175]
 10761: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 10764: 7b 10                    u64 [sp] = ra
 10766: 82 88                    a1 = u64 [a1]
 10768: 50 20 60 01 61 fb        ra = 352, jump @623
      :                          @725 [@dyn 176]
 10774: 82 10                    ra = u64 [sp]
 10776: 95 11 08                 sp = sp + 0x8
 10779: 32 00                    ret
      :                          @726 [@dyn 177]
 10781: 82 77                    a0 = u64 [a0]
 10783: 82 77 10                 a0 = u64 [a0 + 0x10]
 10786: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 10789: 88 77 01                 a0 = a0 <u 0x1
 10792: 32 00                    ret
      :                          @727 [@dyn 178]
 10794: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 10797: 7b 15 08                 u64 [sp + 0x8] = s0
 10800: 82 77                    a0 = u64 [a0]
 10802: 95 78 10                 a1 = a0 + 0x10
 10805: 3e 02 00 00 03           u64 [0x30000] = t0
 10810: 3e 04 08 00 03           u64 [0x30008] = t2
 10815: 82 82                    t0 = u64 [a1]
 10817: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 10820: 7b 84                    u64 [a1] = t2
 10822: 64 28                    a1 = t0
 10824: 3a 02 00 00 03           t0 = u64 [0x30000]
 10829: 3a 04 08 00 03           t2 = u64 [0x30008]
 10834: 33 09 01                 a2 = 0x1
 10837: ab 98 5b                 jump @740 if a1 != a2
      :                          @728
 10840: 82 78 08                 a1 = u64 [a0 + 0x8]
 10843: 57 08 5d                 jump @741 if a1 <s 0
      :                          @729
 10846: 33 03 00 00 00 08        t1 = 0x8000000
 10852: 33 02 20 00 03           t0 = 0x30020
 10857: ac 83 26                 jump @735 if t1 <u a1
      :                          @730
 10860: 82 74                    t2 = u64 [a0]
 10862: 95 29 00 00 00 08        a2 = t0 + 0x8000000
 10868: 01                       fallthrough
      :                          @731
 10869: 82 9a                    a3 = u64 [a2]
 10871: c9 a9 0c                 a5 = a2 - a3
 10874: ab 4c 15                 jump @735 if a5 != t2
      :                          @732
 10877: c9 8a 0c                 a5 = a3 - a1
 10880: 01                       fallthrough
      :                          @733
 10881: 82 9b                    a4 = u64 [a2]
 10883: ab ab f2                 jump @731 if a4 != a3
      :                          @734
 10886: 7b 9c                    u64 [a2] = a5
 10888: 33 05                    s0 = 0
 10890: c8 32 09                 a2 = t0 + t1
 10893: 28 06                    jump @736
      :                          @735
 10895: c8 32 09                 a2 = t0 + t1
 10898: 01                       fallthrough
      :                          @736
 10899: 82 98                    a1 = u64 [a2]
 10901: c9 89 0a                 a3 = a2 - a1
 10904: ab 7a 18                 jump @740 if a3 != a0
      :                          @737
 10907: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
 10910: 01                       fallthrough
      :                          @738
 10911: 82 9b                    a4 = u64 [a2]
 10913: ab 8b f2                 jump @736 if a4 != a1
      :                          @739
 10916: 7b 9a                    u64 [a2] = a3
 10918: 33 0c                    a5 = 0
 10920: 82 15 08                 s0 = u64 [sp + 0x8]
 10923: 95 11 10                 sp = sp + 0x10
 10926: 32 00                    ret
      :                          @740
 10928: 82 15 08                 s0 = u64 [sp + 0x8]
 10931: 95 11 10                 sp = sp + 0x10
 10934: 32 00                    ret
      :                          @741
 10936: 00                       trap
      :                          @742 [@dyn 179]
 10937: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 10940: 7b 10                    u64 [sp] = ra
 10942: 82 82                    t0 = u64 [a1]
 10944: 84 2b 01                 a4 = t0 & 0x1
 10947: 52 0b 41                 jump @745 if a4 != 0
      :                          @743
 10950: 95 28 10                 a1 = t0 + 0x10
 10953: 33 0b 01                 a4 = 0x1
 10956: 3e 02 00 00 03           u64 [0x30000] = t0
 10961: 3e 04 08 00 03           u64 [0x30008] = t2
 10966: 82 82                    t0 = u64 [a1]
 10968: c8 b2 04                 t2 = t0 + a4
 10971: 7b 84                    u64 [a1] = t2
 10973: 64 28                    a1 = t0
 10975: 3a 02 00 00 03           t0 = u64 [0x30000]
 10980: 3a 04 08 00 03           t2 = u64 [0x30008]
 10985: 57 08 e9 f7              jump @565 if a1 <s 0
      :                          @744
 10989: 7b 79 08                 u64 [a0 + 0x8] = a2
 10992: 7b 7a 10                 u64 [a0 + 0x10] = a3
 10995: 7b 72 18                 u64 [a0 + 0x18] = t0
 10998: 33 08 a8 05 01           a1 = 0x105a8
 11003: 7b 78                    u64 [a0] = a1
 11005: 82 10                    ra = u64 [sp]
 11007: 95 11 08                 sp = sp + 0x8
 11010: 32 00                    ret
      :                          @745
 11012: 64 9b                    a4 = a2
 11014: 64 29                    a2 = t0
 11016: 64 ac                    a5 = a3
 11018: 64 2a                    a3 = t0
 11020: 50 20 68 01 ca fd        ra = 360, jump @705
      :                          @746 [@dyn 180]
 11026: 82 10                    ra = u64 [sp]
 11028: 95 11 08                 sp = sp + 0x8
 11031: 32 00                    ret
      :                          @747 [@dyn 181]
 11033: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 11036: 7b 10 20                 u64 [sp + 0x20] = ra
 11039: 7b 15 18                 u64 [sp + 0x18] = s0
 11042: 7b 16 10                 u64 [sp + 0x10] = s1
 11045: 82 85                    s0 = u64 [a1]
 11047: 84 58 01                 a1 = s0 & 0x1
 11050: 52 08 0d                 jump @750 if a1 != 0
      :                          @748
 11053: 64 58                    a1 = s0
 11055: 50 20 6c 01 44 fc        ra = 364, jump @667
      :                          @749 [@dyn 182]
 11061: 28 29                    jump @752
      :                          @750
 11063: c8 a9 08                 a1 = a2 + a3
 11066: c9 58 08                 a1 = a1 - s0
 11069: 7b 18 08                 u64 [sp + 0x8] = a1
 11072: 64 76                    s1 = a0
 11074: 64 57                    a0 = s0
 11076: 64 98                    a1 = a2
 11078: 64 a9                    a2 = a3
 11080: 7b 1a                    u64 [sp] = a3
 11082: 50 20 6e 01 fe 2b        ra = 366, jump @1619
      :                          @751 [@dyn 183]
 11088: 82 17 08                 a0 = u64 [sp + 0x8]
 11091: 7b 67                    u64 [s1] = a0
 11093: 7b 65 08                 u64 [s1 + 0x8] = s0
 11096: 82 17                    a0 = u64 [sp]
 11098: 7b 67 10                 u64 [s1 + 0x10] = a0
 11101: 01                       fallthrough
      :                          @752
 11102: 82 10 20                 ra = u64 [sp + 0x20]
 11105: 82 15 18                 s0 = u64 [sp + 0x18]
 11108: 82 16 10                 s1 = u64 [sp + 0x10]
 11111: 95 11 28                 sp = sp + 0x28
 11114: 32 00                    ret
      :                          @753 [@dyn 184]
 11116: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 11119: 7b 10 38                 u64 [sp + 0x38] = ra
 11122: 7b 15 30                 u64 [sp + 0x30] = s0
 11125: 7b 16 28                 u64 [sp + 0x28] = s1
 11128: 82 88                    a1 = u64 [a1]
 11130: 64 a4                    t2 = a3
 11132: 84 8b 01                 a4 = a1 & 0x1
 11135: 52 0b 0d                 jump @756 if a4 != 0
      :                          @754
 11138: 64 4a                    a3 = t2
 11140: 50 20 72 01 ed f9        ra = 370, jump @623
      :                          @755 [@dyn 185]
 11146: 28 50                    jump @762
      :                          @756
 11148: c9 89 02                 t0 = a2 - a1
 11151: c8 42 0a                 a3 = t0 + t2
 11154: 98 ab 11                 a4 = a3 >> 0x11
 11157: 98 ac 0a                 a5 = a3 >> 0xa
 11160: 68 cc                    a5 = clz a5
 11162: 97 cc 02                 a5 = a5 << 0x2
 11165: 9a c6 01 01              s1 = 0x101 - a5
 11169: 33 0c 1d                 a5 = 0x1d
 11172: da b6 0c                 a5 = s1 if a4 == 0
 11175: aa 89 24                 jump @760 if a2 == a1
      :                          @757
 11178: 98 c6 05                 s1 = a5 >> 0x5
 11181: c8 26 0b                 a4 = s1 + t0
 11184: 98 b9 3b                 a2 = a4 >> 0x3b
 11187: 52 09 35                 jump @763 if a2 != 0
      :                          @758
 11190: 97 bb 05                 a4 = a4 << 0x5
 11193: 84 cc 1d                 a5 = a5 & 0x1d
 11196: d4 bc 0c                 a5 = a5 | a4
 11199: 01                       fallthrough
      :                          @759
 11200: c8 28 08                 a1 = a1 + t0
 11203: e4 2a 09                 a2 = maxu(a3, t0)
 11206: c9 29 0a                 a3 = a2 - t0
 11209: 28 05                    jump @761
      :                          @760
 11211: 64 a4                    t2 = a3
 11213: 01                       fallthrough
      :                          @761
 11214: 7b 78                    u64 [a0] = a1
 11216: 7b 7a 08                 u64 [a0 + 0x8] = a3
 11219: 7b 74 10                 u64 [a0 + 0x10] = t2
 11222: 7b 7c 18                 u64 [a0 + 0x18] = a5
 11225: 01                       fallthrough
      :                          @762
 11226: 82 10 38                 ra = u64 [sp + 0x38]
 11229: 82 15 30                 s0 = u64 [sp + 0x30]
 11232: 82 16 28                 s1 = u64 [sp + 0x28]
 11235: 95 11 40                 sp = sp + 0x40
 11238: 32 00                    ret
      :                          @763
 11240: 7b 16 10                 u64 [sp + 0x10] = s1
 11243: 33 0b 20 00 03           a4 = 0x30020
 11248: 95 b9 00 00 00 08        a2 = a4 + 0x8000000
 11254: 7b 19 20                 u64 [sp + 0x20] = a2
 11257: 33 06 d0 ff ff 07        s1 = 0x7ffffd0
 11263: 49 11 18 d8 ff ff 07     u64 [sp + 24] = 0x7ffffd8
 11270: 01                       fallthrough
      :                          @764
 11271: 82 19 20                 a2 = u64 [sp + 0x20]
 11274: 82 93                    t1 = u64 [a2]
 11276: ac 36 5b                 jump @770 if s1 <u t1
      :                          @765
 11279: c9 3b 00                 ra = a4 - t1
 11282: 82 19 18                 a2 = u64 [sp + 0x18]
 11285: c8 09 09                 a2 = a2 + ra
 11288: 7b 19 08                 u64 [sp + 0x8] = a2
 11291: 84 99 07                 a2 = a2 & 0x7
 11294: 7b 19                    u64 [sp] = a2
 11296: c8 93 0b                 a4 = t1 + a2
 11299: 95 bb 28                 a4 = a4 + 0x28
 11302: 82 10 20                 ra = u64 [sp + 0x20]
 11305: 01                       fallthrough
      :                          @766
 11306: 82 05                    s0 = u64 [ra]
 11308: ab 35 06                 jump @768 if s0 != t1
      :                          @767
 11311: 7b 0b                    u64 [ra] = a4
 11313: 01                       fallthrough
      :                          @768
 11314: 33 0b 20 00 03           a4 = 0x30020
 11319: ab 35 d0                 jump @764 if s0 != t1
      :                          @769
 11322: 97 cc 3b                 a5 = a5 << 0x3b
 11325: 82 19 08                 a2 = u64 [sp + 0x8]
 11328: 82 1b                    a4 = u64 [sp]
 11330: c9 b9 09                 a2 = a2 - a4
 11333: 82 1b 10                 a4 = u64 [sp + 0x10]
 11336: c8 ab 05                 s0 = a4 + a3
 11339: c9 b8 06                 s1 = a1 - a4
 11342: 98 cc 3d                 a5 = a5 >> 0x3d
 11345: 7b 95                    u64 [a2] = s0
 11347: 7b 96 08                 u64 [a2 + 0x8] = s1
 11350: 7b 95 10                 u64 [a2 + 0x10] = s0
 11353: 7b 9c 18                 u64 [a2 + 0x18] = a5
 11356: 33 0b 01                 a4 = 0x1
 11359: 7b 9b 20                 u64 [a2 + 0x20] = a4
 11362: 64 9c                    a5 = a2
 11364: 28 5c ff                 jump @759
      :                          @770
 11367: 00                       trap
      :                          @771 [@dyn 186]
 11368: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 11371: 82 77                    a0 = u64 [a0]
 11373: 84 7a 01                 a3 = a0 & 0x1
 11376: 52 0a 8a 00              jump @787 if a3 != 0
      :                          @772
 11380: 95 78 10                 a1 = a0 + 0x10
 11383: 3e 02 00 00 03           u64 [0x30000] = t0
 11388: 3e 04 08 00 03           u64 [0x30008] = t2
 11393: 82 82                    t0 = u64 [a1]
 11395: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 11398: 7b 84                    u64 [a1] = t2
 11400: 64 28                    a1 = t0
 11402: 3a 02 00 00 03           t0 = u64 [0x30000]
 11407: 3a 04 08 00 03           t2 = u64 [0x30008]
 11412: 33 09 01                 a2 = 0x1
 11415: ab 98 9b 00              jump @794 if a1 != a2
      :                          @773
 11419: 82 74 08                 t2 = u64 [a0 + 0x8]
 11422: 57 04 99 00              jump @795 if t2 <s 0
      :                          @774
 11426: 33 02 00 00 00 08        t0 = 0x8000000
 11432: ac 42 2e                 jump @780 if t0 <u t2
      :                          @775
 11435: 82 73                    t1 = u64 [a0]
 11437: 33 0b 20 00 03           a4 = 0x30020
 11442: 95 b9 00 00 00 08        a2 = a4 + 0x8000000
 11448: 01                       fallthrough
      :                          @776
 11449: 82 9c                    a5 = u64 [a2]
 11451: c9 c9 0b                 a4 = a2 - a5
 11454: ab 3b 18                 jump @780 if a4 != t1
      :                          @777
 11457: c9 4c 0b                 a4 = a5 - t2
 11460: 01                       fallthrough
      :                          @778
 11461: 82 9a                    a3 = u64 [a2]
 11463: ab ca f2                 jump @776 if a3 != a5
      :                          @779
 11466: 7b 9b                    u64 [a2] = a4
 11468: 33 09 20 00 03           a2 = 0x30020
 11473: c8 29 09                 a2 = a2 + t0
 11476: 28 0b                    jump @781
      :                          @780
 11478: 33 09 20 00 03           a2 = 0x30020
 11483: c8 29 09                 a2 = a2 + t0
 11486: 01                       fallthrough
      :                          @781
 11487: 82 98                    a1 = u64 [a2]
 11489: c9 89 0a                 a3 = a2 - a1
 11492: ab 7a 4e                 jump @794 if a3 != a0
      :                          @782
 11495: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
 11498: 01                       fallthrough
      :                          @783
 11499: 82 9b                    a4 = u64 [a2]
 11501: ab 8b f2                 jump @781 if a4 != a1
      :                          @784
 11504: 7b 9a                    u64 [a2] = a3
 11506: 33 0c                    a5 = 0
 11508: 01                       fallthrough
      :                          @785
 11509: ab 8b ea                 jump @781 if a4 != a1
      :                          @786
 11512: 28 3a                    jump @794
      :                          @787
 11514: c9 78 08                 a1 = a1 - a0
 11517: c8 98 02                 t0 = a1 + a2
 11520: 57 02 37                 jump @795 if t0 <s 0
      :                          @788
 11523: 33 08 00 00 00 08        a1 = 0x8000000
 11529: ac 28 29                 jump @794 if a1 <u t0
      :                          @789
 11532: 33 0a 20 00 03           a3 = 0x30020
 11537: 95 a8 00 00 00 08        a1 = a3 + 0x8000000
 11543: 01                       fallthrough
      :                          @790
 11544: 82 8a                    a3 = u64 [a1]
 11546: c9 a8 0b                 a4 = a1 - a3
 11549: ab 7b 15                 jump @794 if a4 != a0
      :                          @791
 11552: c9 2a 0b                 a4 = a3 - t0
 11555: 01                       fallthrough
      :                          @792
 11556: 82 8c                    a5 = u64 [a1]
 11558: ab ac f2                 jump @790 if a5 != a3
      :                          @793
 11561: 7b 8b                    u64 [a1] = a4
 11563: 33 09                    a2 = 0
 11565: 95 11 08                 sp = sp + 0x8
 11568: 32 00                    ret
      :                          @794
 11570: 95 11 08                 sp = sp + 0x8
 11573: 32 00                    ret
      :                          @795
 11575: 00                       trap
      :                          @796 [@dyn 187]
 11576: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 11579: 7b 10 18                 u64 [sp + 0x18] = ra
 11582: 7b 15 10                 u64 [sp + 0x10] = s0
 11585: 7b 16 08                 u64 [sp + 0x8] = s1
 11588: 57 0a 61                 jump @807 if a3 <s 0
      :                          @797
 11591: 51 0a 32                 jump @804 if a3 == 0
      :                          @798
 11594: 33 02 20 00 03           t0 = 0x30020
 11599: 95 28 00 00 00 08        a1 = t0 + 0x8000000
 11605: 01                       fallthrough
      :                          @799
 11606: 82 8c                    a5 = u64 [a1]
 11608: c8 ac 06                 s1 = a5 + a3
 11611: ac c6 1d                 jump @803 if s1 <u a5
      :                          @800
 11614: 98 6b 1b                 a4 = s1 >> 0x1b
 11617: 52 0b 17                 jump @803 if a4 != 0
      :                          @801
 11620: 82 8b                    a4 = u64 [a1]
 11622: ab cb f0                 jump @799 if a4 != a5
      :                          @802
 11625: 7b 86                    u64 [a1] = s1
 11627: 7b 17                    u64 [sp] = a0
 11629: c9 62 06                 s1 = t0 - s1
 11632: 95 65 00 00 00 08        s0 = s1 + 0x8000000
 11638: 28 09                    jump @805
      :                          @803
 11640: 00                       trap
      :                          @804
 11641: 7b 17                    u64 [sp] = a0
 11643: 33 05 01                 s0 = 0x1
 11646: 01                       fallthrough
      :                          @805
 11647: 64 57                    a0 = s0
 11649: 64 98                    a1 = a2
 11651: 64 a9                    a2 = a3
 11653: 64 a6                    s1 = a3
 11655: 50 20 78 01 07 29        ra = 376, jump @1602
      :                          @806 [@dyn 188]
 11661: 82 17                    a0 = u64 [sp]
 11663: 7b 76                    u64 [a0] = s1
 11665: 7b 75 08                 u64 [a0 + 0x8] = s0
 11668: 7b 76 10                 u64 [a0 + 0x10] = s1
 11671: 82 10 18                 ra = u64 [sp + 0x18]
 11674: 82 15 10                 s0 = u64 [sp + 0x10]
 11677: 82 16 08                 s1 = u64 [sp + 0x8]
 11680: 95 11 20                 sp = sp + 0x20
 11683: 32 00                    ret
      :                          @807
 11685: 00                       trap
      :                          @808 [@dyn 189]
 11686: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 11689: 7b 10 18                 u64 [sp + 0x18] = ra
 11692: 7b 15 10                 u64 [sp + 0x10] = s0
 11695: 7b 16 08                 u64 [sp + 0x8] = s1
 11698: 57 0a 7c                 jump @819 if a3 <s 0
      :                          @809
 11701: 64 75                    s0 = a0
 11703: 51 0a 35                 jump @816 if a3 == 0
      :                          @810
 11706: 33 07 10 00 03           a0 = 0x30010
 11711: 33 02 20 00 03           t0 = 0x30020
 11716: 95 28 00 00 00 08        a1 = t0 + 0x8000000
 11722: 01                       fallthrough
      :                          @811
 11723: 82 8c                    a5 = u64 [a1]
 11725: c8 ac 06                 s1 = a5 + a3
 11728: ac c6 1b                 jump @815 if s1 <u a5
      :                          @812
 11731: 98 6b 1b                 a4 = s1 >> 0x1b
 11734: 52 0b 15                 jump @815 if a4 != 0
      :                          @813
 11737: 82 8b                    a4 = u64 [a1]
 11739: ab cb f0                 jump @811 if a4 != a5
      :                          @814
 11742: 7b 86                    u64 [a1] = s1
 11744: c9 62 06                 s1 = t0 - s1
 11747: 95 67 00 00 00 08        a0 = s1 + 0x8000000
 11753: 28 07                    jump @817
      :                          @815
 11755: 00                       trap
      :                          @816
 11756: 33 07 01                 a0 = 0x1
 11759: 01                       fallthrough
      :                          @817
 11760: 7b 17                    u64 [sp] = a0
 11762: 64 98                    a1 = a2
 11764: 64 a9                    a2 = a3
 11766: 64 a6                    s1 = a3
 11768: 50 20 7c 01 96 28        ra = 380, jump @1602
      :                          @818 [@dyn 190]
 11774: 98 67 11                 a0 = s1 >> 0x11
 11777: 98 68 0a                 a1 = s1 >> 0xa
 11780: 68 88                    a1 = clz a1
 11782: 97 88 02                 a1 = a1 << 0x2
 11785: 9a 89 01 01              a2 = 0x101 - a1
 11789: 33 08 1d                 a1 = 0x1d
 11792: da 79 08                 a1 = a2 if a0 == 0
 11795: 82 17                    a0 = u64 [sp]
 11797: 7b 57                    u64 [s0] = a0
 11799: 7b 56 08                 u64 [s0 + 0x8] = s1
 11802: 7b 56 10                 u64 [s0 + 0x10] = s1
 11805: 7b 58 18                 u64 [s0 + 0x18] = a1
 11808: 82 10 18                 ra = u64 [sp + 0x18]
 11811: 82 15 10                 s0 = u64 [sp + 0x10]
 11814: 82 16 08                 s1 = u64 [sp + 0x8]
 11817: 95 11 20                 sp = sp + 0x20
 11820: 32 00                    ret
      :                          @819
 11822: 00                       trap
      :                          @820
 11823: 7c bc                    a5 = u8 [a4]
 11825: c8 9c 0c                 a5 = a5 + a2
 11828: 7c cc                    a5 = u8 [a5]
 11830: 95 bb 01                 a4 = a4 + 0x1
 11833: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 11836: ab ac f3                 jump @820 if a5 != a3
      :                          @821
 11839: 33 0a 94 01              a3 = 0x194
 11843: c9 8a 09                 a2 = a3 - a1
 11846: ac 8a 17                 jump @823 if a3 <u a1
      :                          @822
 11849: 33 08 90 03 01           a1 = 0x10390
 11854: c8 98 08                 a1 = a1 + a2
 11857: 7c 88                    a1 = u8 [a1]
 11859: 7a 78 04                 u32 [a0 + 0x4] = a1
 11862: 7b 79 08                 u64 [a0 + 0x8] = a2
 11865: 48 07                    u32 [a0 + 0] = 0
 11867: 32 00                    ret
      :                          @823
 11869: 00                       trap
      :                          @824
 11870: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 11873: 7b 10 50                 u64 [sp + 0x50] = ra
 11876: 7b 15 48                 u64 [sp + 0x48] = s0
 11879: 7b 16 40                 u64 [sp + 0x40] = s1
 11882: 7b 18                    u64 [sp] = a1
 11884: 33 08 14                 a1 = 0x14
 11887: 33 05 1c 07 01           s0 = 0x1071c
 11892: 64 74                    t2 = a0
 11894: 7b 17 08                 u64 [sp + 0x8] = a0
 11897: 53 27 e8 03 8b 00        jump @827 if a0 <u 1000
      :                          @825
 11903: 33 00 14                 ra = 0x14
 11906: 14 07 4b 59 86 38 d6 c5 6d 34 a0 = 0x346dc5d63886594b
 11916: 7b 17 20                 u64 [sp + 0x20] = a0
 11919: 49 11 18 f0 d8 00        u64 [sp + 24] = 0xd8f0
 11925: 49 11 10 7b 14           u64 [sp + 16] = 0x147b
 11930: 33 06 7f 96 98 00        s1 = 0x98967f
 11936: 82 14 08                 t2 = u64 [sp + 0x8]
 11939: 01                       fallthrough
      :                          @826
 11940: 64 42                    t0 = t2
 11942: 82 17 20                 a0 = u64 [sp + 0x20]
 11945: d6 74 07                 a0 = t2 mulhu a0
 11948: 98 74 0b                 t2 = a0 >> 0xb
 11951: 82 17 18                 a0 = u64 [sp + 0x18]
 11954: ca 74 08                 a1 = t2 * a0
 11957: c8 28 0b                 a4 = a1 + t0
 11960: 97 b8 30                 a1 = a4 << 0x30
 11963: 98 88 32                 a1 = a1 >> 0x32
 11966: 82 17 10                 a0 = u64 [sp + 0x10]
 11969: ca 78 08                 a1 = a1 * a0
 11972: 98 83 10                 t1 = a1 >> 0x10
 11975: 98 88 11                 a1 = a1 >> 0x11
 11978: 96 88 9c                 a1 = a1 * 0xffffffffffffff9c
 11981: c8 b8 08                 a1 = a1 + a4
 11984: 84 3b fe 07              a4 = t1 & 0x7fe
 11988: 95 1a 3f                 a3 = sp + 0x3f
 11991: c8 0a 0a                 a3 = a3 + ra
 11994: c8 5b 0b                 a4 = a4 + s0
 11997: 7c b9                    a2 = u8 [a4]
 11999: 7c bb 01                 a4 = u8 [a4 + 0x1]
 12002: 97 88 31                 a1 = a1 << 0x31
 12005: 98 88 30                 a1 = a1 >> 0x30
 12008: c8 58 08                 a1 = a1 + s0
 12011: 7c 8c                    a5 = u8 [a1]
 12013: 78 a9 e9                 u8 [a3 + 0xffffffffffffffe9] = a2
 12016: 7c 89 01                 a2 = u8 [a1 + 0x1]
 12019: 78 ab ea                 u8 [a3 + 0xffffffffffffffea] = a4
 12022: 78 ac eb                 u8 [a3 + 0xffffffffffffffeb] = a5
 12025: 95 08 fc                 a1 = ra + 0xfffffffffffffffc
 12028: 78 a9 ec                 u8 [a3 + 0xffffffffffffffec] = a2
 12031: 64 80                    ra = a1
 12033: ac 26 a3                 jump @826 if s1 <u t0
      :                          @827
 12036: 54 14 09 39              jump @829 if t2 <=u 9
      :                          @828
 12040: 97 49 30                 a2 = t2 << 0x30
 12043: 98 99 32                 a2 = a2 >> 0x32
 12046: 96 99 7b 14              a2 = a2 * 0x147b
 12050: 98 99 11                 a2 = a2 >> 0x11
 12053: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
 12056: c8 4a 07                 a0 = a3 + t2
 12059: 97 77 31                 a0 = a0 << 0x31
 12062: 98 77 30                 a0 = a0 >> 0x30
 12065: 95 1a 2c                 a3 = sp + 0x2c
 12068: c8 57 07                 a0 = a0 + s0
 12071: 7c 7b                    a4 = u8 [a0]
 12073: c8 8a 0c                 a5 = a3 + a1
 12076: 7c 77 01                 a0 = u8 [a0 + 0x1]
 12079: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 12082: c8 8a 0a                 a3 = a3 + a1
 12085: 78 ab                    u8 [a3] = a4
 12087: 78 c7 ff                 u8 [a5 + 0xffffffffffffffff] = a0
 12090: 64 94                    t2 = a2
 12092: 01                       fallthrough
      :                          @829
 12093: 82 17 08                 a0 = u64 [sp + 0x8]
 12096: 51 07 06                 jump @831 if a0 == 0
      :                          @830
 12099: 51 04 1b                 jump @832 if t2 == 0
      :                          @831
 12102: 97 47 01                 a0 = t2 << 0x1
 12105: 84 77 1e                 a0 = a0 & 0x1e
 12108: c8 57 07                 a0 = a0 + s0
 12111: 7c 77 01                 a0 = u8 [a0 + 0x1]
 12114: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 12117: 95 19 2c                 a2 = sp + 0x2c
 12120: c8 89 09                 a2 = a2 + a1
 12123: 78 97                    u8 [a2] = a0
 12125: 01                       fallthrough
      :                          @832
 12126: 9a 8b 14                 a4 = 0x14 - a1
 12129: 95 1a 2c                 a3 = sp + 0x2c
 12132: c8 8a 0a                 a3 = a3 + a1
 12135: 33 08 01                 a1 = 0x1
 12138: 82 17                    a0 = u64 [sp]
 12140: 33 09                    a2 = 0
 12142: 50 20 7e 01 13           ra = 382, jump @834
      :                          @833 [@dyn 191]
 12147: 82 10 50                 ra = u64 [sp + 0x50]
 12150: 82 15 48                 s0 = u64 [sp + 0x48]
 12153: 82 16 40                 s1 = u64 [sp + 0x40]
 12156: 95 11 58                 sp = sp + 0x58
 12159: 32 00                    ret
      :                          @834
 12161: 95 11 98                 sp = sp + 0xffffffffffffff98
 12164: 7b 10 60                 u64 [sp + 0x60] = ra
 12167: 7b 15 58                 u64 [sp + 0x58] = s0
 12170: 7b 16 50                 u64 [sp + 0x50] = s1
 12173: 80 73 24                 t1 = u32 [a0 + 0x24]
 12176: 64 9c                    a5 = a2
 12178: 7b 18 48                 u64 [sp + 0x48] = a1
 12181: 84 38 01                 a1 = t1 & 0x1
 12184: 33 02 2b                 t0 = 0x2b
 12187: 33 09 00 00 11           a2 = 0x110000
 12192: 84 36 04                 s1 = t1 & 0x4
 12195: c8 b8 00                 ra = a1 + a4
 12198: 52 06 08                 jump @836 if s1 != 0
      :                          @835
 12201: 49 11 48                 u64 [sp + 72] = 0
 12204: 28 35                    jump @842
      :                          @836
 12206: 51 0c 23                 jump @840 if a5 == 0
      :                          @837
 12209: 33 06                    s1 = 0
 12211: 64 c4                    t2 = a5
 12213: 82 19 48                 a2 = u64 [sp + 0x48]
 12216: c8 c9 05                 s0 = a2 + a5
 12219: 64 9c                    a5 = a2
 12221: 01                       fallthrough
      :                          @838
 12222: 7d c9                    a2 = i8 [a5]
 12224: 89 99 c0                 a2 = a2 <s 0xffffffffffffffc0
 12227: 85 99 01                 a2 = a2 ^ 0x1
 12230: 95 cc 01                 a5 = a5 + 0x1
 12233: c8 96 06                 s1 = s1 + a2
 12236: ab 5c f2                 jump @838 if a5 != s0
      :                          @839
 12239: 28 07                    jump @841
      :                          @840
 12241: 64 c4                    t2 = a5
 12243: 33 06                    s1 = 0
 12245: 01                       fallthrough
      :                          @841
 12246: c8 60 00                 ra = ra + s1
 12249: 64 4c                    a5 = t2
 12251: 33 09 00 00 11           a2 = 0x110000
 12256: 01                       fallthrough
      :                          @842
 12257: 82 76                    s1 = u64 [a0]
 12259: db 82 09                 a2 = t0 if a1 != 0
 12262: 7b 1b 30                 u64 [sp + 0x30] = a4
 12265: 7b 1a 28                 u64 [sp + 0x28] = a3
 12268: 51 06 35                 jump @848 if s1 == 0
      :                          @843
 12271: 82 75 08                 s0 = u64 [a0 + 0x8]
 12274: ae 50 2f                 jump @848 if ra >=u s0
      :                          @844
 12277: 84 38 08                 a1 = t1 & 0x8
 12280: 52 08 5e                 jump @851 if a1 != 0
      :                          @845
 12283: 7c 76 28                 s1 = u8 [a0 + 0x28]
 12286: 95 68 fd                 a1 = s1 + 0xfffffffffffffffd
 12289: 33 02 01                 t0 = 0x1
 12292: da 82 06                 s1 = t0 if a1 == 0
 12295: c9 05 08                 a1 = s0 - ra
 12298: 7b 1c 20                 u64 [sp + 0x20] = a5
 12301: 7b 19 18                 u64 [sp + 0x18] = a2
 12304: 51 06 ae 00              jump @859 if s1 == 0
      :                          @846
 12308: 52 16 01 9c 00           jump @858 if s1 != 1
      :                          @847
 12313: 64 86                    s1 = a1
 12315: 49 11 10                 u64 [sp + 16] = 0
 12318: 28 a4 00                 jump @860
      :                          @848
 12321: 82 75 30                 s0 = u64 [a0 + 0x30]
 12324: 82 76 38                 s1 = u64 [a0 + 0x38]
 12327: 64 57                    a0 = s0
 12329: 64 68                    a1 = s1
 12331: 82 1a 48                 a3 = u64 [sp + 0x48]
 12334: 64 cb                    a4 = a5
 12336: 50 20 80 01 6e 01        ra = 384, jump @880
      :                          @849 [@dyn 192]
 12342: 33 08 01                 a1 = 0x1
 12345: 52 07 b7 00              jump @865 if a0 != 0
      :                          @850
 12349: 82 6c 18                 a5 = u64 [s1 + 0x18]
 12352: 64 57                    a0 = s0
 12354: 82 18 28                 a1 = u64 [sp + 0x28]
 12357: 82 19 30                 a2 = u64 [sp + 0x30]
 12360: 82 10 60                 ra = u64 [sp + 0x60]
 12363: 82 15 58                 s0 = u64 [sp + 0x58]
 12366: 82 16 50                 s1 = u64 [sp + 0x50]
 12369: 95 11 68                 sp = sp + 0x68
 12372: 32 0c                    jump [a5]
      :                          @851
 12374: 7b 15 38                 u64 [sp + 0x38] = s0
 12377: 64 05                    s0 = ra
 12379: 81 78 20                 a1 = i32 [a0 + 0x20]
 12382: 7b 18 10                 u64 [sp + 0x10] = a1
 12385: 7c 7a 28                 a3 = u8 [a0 + 0x28]
 12388: 7b 1a 08                 u64 [sp + 0x8] = a3
 12391: 82 7a 30                 a3 = u64 [a0 + 0x30]
 12394: 82 78 38                 a1 = u64 [a0 + 0x38]
 12397: 48 17 20 30              u32 [a0 + 32] = 0x30
 12401: 7b 17                    u64 [sp] = a0
 12403: 46 17 28 01              u8 [a0 + 40] = 0x1
 12407: 7b 1a 40                 u64 [sp + 0x40] = a3
 12410: 64 a7                    a0 = a3
 12412: 64 86                    s1 = a1
 12414: 82 1a 48                 a3 = u64 [sp + 0x48]
 12417: 64 cb                    a4 = a5
 12419: 50 20 82 01 1b 01        ra = 386, jump @880
      :                          @852 [@dyn 193]
 12425: 52 07 63                 jump @864 if a0 != 0
      :                          @853
 12428: 82 17 38                 a0 = u64 [sp + 0x38]
 12431: c9 57 05                 s0 = a0 - s0
 12434: 95 55 01                 s0 = s0 + 0x1
 12437: 01                       fallthrough
      :                          @854
 12438: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 12441: 51 05 c5 00              jump @875 if s0 == 0
      :                          @855
 12445: 82 69 20                 a2 = u64 [s1 + 0x20]
 12448: 33 08 30                 a1 = 0x30
 12451: 82 17 40                 a0 = u64 [sp + 0x40]
 12454: b4 90 02 84 01           ra = 388, jump [a2]
      :                          @856 [@dyn 194]
 12459: 51 07 eb                 jump @854 if a0 == 0
      :                          @857
 12462: 28 3e                    jump @864
      :                          @858
 12464: 98 86 01                 s1 = a1 >> 0x1
 12467: 95 88 01                 a1 = a1 + 0x1
 12470: 98 88 01                 a1 = a1 >> 0x1
 12473: 7b 18 10                 u64 [sp + 0x10] = a1
 12476: 28 06                    jump @860
      :                          @859
 12478: 7b 18 10                 u64 [sp + 0x10] = a1
 12481: 01                       fallthrough
      :                          @860
 12482: 82 78 30                 a1 = u64 [a0 + 0x30]
 12485: 7b 18 40                 u64 [sp + 0x40] = a1
 12488: 82 75 38                 s0 = u64 [a0 + 0x38]
 12491: 81 77 20                 a0 = i32 [a0 + 0x20]
 12494: 7b 17 38                 u64 [sp + 0x38] = a0
 12497: 95 66 01                 s1 = s1 + 0x1
 12500: 01                       fallthrough
      :                          @861
 12501: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 12504: 51 06 28                 jump @866 if s1 == 0
      :                          @862
 12507: 82 59 20                 a2 = u64 [s0 + 0x20]
 12510: 82 17 40                 a0 = u64 [sp + 0x40]
 12513: 82 18 38                 a1 = u64 [sp + 0x38]
 12516: b4 90 02 86 01           ra = 390, jump [a2]
      :                          @863 [@dyn 195]
 12521: 51 07 ec                 jump @861 if a0 == 0
      :                          @864
 12524: 33 08 01                 a1 = 0x1
 12527: 01                       fallthrough
      :                          @865
 12528: 64 87                    a0 = a1
 12530: 82 10 60                 ra = u64 [sp + 0x60]
 12533: 82 15 58                 s0 = u64 [sp + 0x58]
 12536: 82 16 50                 s1 = u64 [sp + 0x50]
 12539: 95 11 68                 sp = sp + 0x68
 12542: 32 00                    ret
      :                          @866
 12544: 82 16 40                 s1 = u64 [sp + 0x40]
 12547: 64 67                    a0 = s1
 12549: 64 58                    a1 = s0
 12551: 82 19 18                 a2 = u64 [sp + 0x18]
 12554: 82 1a 48                 a3 = u64 [sp + 0x48]
 12557: 82 1b 20                 a4 = u64 [sp + 0x20]
 12560: 50 20 88 01 8e 00        ra = 392, jump @880
      :                          @867 [@dyn 196]
 12566: 33 08 01                 a1 = 0x1
 12569: 52 07 d7                 jump @865 if a0 != 0
      :                          @868
 12572: 82 5a 18                 a3 = u64 [s0 + 0x18]
 12575: 64 67                    a0 = s1
 12577: 82 18 28                 a1 = u64 [sp + 0x28]
 12580: 82 19 30                 a2 = u64 [sp + 0x30]
 12583: b4 a0 02 8a 01           ra = 394, jump [a3]
      :                          @869 [@dyn 197]
 12588: 33 08 01                 a1 = 0x1
 12591: 52 07 c1                 jump @865 if a0 != 0
      :                          @870
 12594: 82 17 10                 a0 = u64 [sp + 0x10]
 12597: 9a 77                    a0 = -a0
 12599: 7b 17 48                 u64 [sp + 0x48] = a0
 12602: 33 06 ff                 s1 = 0xffffffffffffffff
 12605: 01                       fallthrough
      :                          @871
 12606: 82 17 48                 a0 = u64 [sp + 0x48]
 12609: c8 67 07                 a0 = a0 + s1
 12612: 51 17 ff 45              jump @878 if a0 == 4294967295
      :                          @872
 12616: 82 59 20                 a2 = u64 [s0 + 0x20]
 12619: 82 17 40                 a0 = u64 [sp + 0x40]
 12622: 82 18 38                 a1 = u64 [sp + 0x38]
 12625: b4 90 02 8c 01           ra = 396, jump [a2]
      :                          @873 [@dyn 198]
 12630: 95 66 01                 s1 = s1 + 0x1
 12633: 51 07 e5                 jump @871 if a0 == 0
      :                          @874
 12636: 28 39                    jump @879
      :                          @875
 12638: 82 6a 18                 a3 = u64 [s1 + 0x18]
 12641: 82 17 40                 a0 = u64 [sp + 0x40]
 12644: 82 18 28                 a1 = u64 [sp + 0x28]
 12647: 82 19 30                 a2 = u64 [sp + 0x30]
 12650: b4 a0 02 8e 01           ra = 398, jump [a3]
      :                          @876 [@dyn 199]
 12655: 33 08 01                 a1 = 0x1
 12658: 52 07 7e ff              jump @865 if a0 != 0
      :                          @877
 12662: 33 08                    a1 = 0
 12664: 82 16                    s1 = u64 [sp]
 12666: 82 17 10                 a0 = u64 [sp + 0x10]
 12669: 7a 67 20                 u32 [s1 + 0x20] = a0
 12672: 82 17 08                 a0 = u64 [sp + 0x8]
 12675: 78 67 28                 u8 [s1 + 0x28] = a0
 12678: 28 6a ff                 jump @865
      :                          @878
 12681: 82 16 10                 s1 = u64 [sp + 0x10]
 12684: 82 17 10                 a0 = u64 [sp + 0x10]
 12687: d8 76 08                 a1 = s1 <u a0
 12690: 28 5e ff                 jump @865
      :                          @879
 12693: 82 17 10                 a0 = u64 [sp + 0x10]
 12696: d8 76 08                 a1 = s1 <u a0
 12699: 28 55 ff                 jump @865
      :                          @880
 12702: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 12705: 7b 10 20                 u64 [sp + 0x20] = ra
 12708: 7b 15 18                 u64 [sp + 0x18] = s0
 12711: 7b 16 10                 u64 [sp + 0x10] = s1
 12714: 64 a6                    s1 = a3
 12716: 64 7c                    a5 = a0
 12718: 51 39 00 00 11 28        jump @883 if a2 == 1114112
      :                          @881
 12724: 64 85                    s0 = a1
 12726: 82 8a 20                 a3 = u64 [a1 + 0x20]
 12729: 64 c7                    a0 = a5
 12731: 64 98                    a1 = a2
 12733: 7b 1b 08                 u64 [sp + 0x8] = a4
 12736: 7b 1c                    u64 [sp] = a5
 12738: b4 a0 02 90 01           ra = 400, jump [a3]
      :                          @882 [@dyn 200]
 12743: 82 1c                    a5 = u64 [sp]
 12745: 64 58                    a1 = s0
 12747: 82 1b 08                 a4 = u64 [sp + 0x8]
 12750: 64 79                    a2 = a0
 12752: 33 07 01                 a0 = 0x1
 12755: 52 09 20                 jump @886 if a2 != 0
      :                          @883
 12758: 51 06 1a                 jump @885 if s1 == 0
      :                          @884
 12761: 82 8a 18                 a3 = u64 [a1 + 0x18]
 12764: 64 c7                    a0 = a5
 12766: 64 68                    a1 = s1
 12768: 64 b9                    a2 = a4
 12770: 82 10 20                 ra = u64 [sp + 0x20]
 12773: 82 15 18                 s0 = u64 [sp + 0x18]
 12776: 82 16 10                 s1 = u64 [sp + 0x10]
 12779: 95 11 28                 sp = sp + 0x28
 12782: 32 0a                    jump [a3]
      :                          @885
 12784: 33 07                    a0 = 0
 12786: 01                       fallthrough
      :                          @886
 12787: 82 10 20                 ra = u64 [sp + 0x20]
 12790: 82 15 18                 s0 = u64 [sp + 0x18]
 12793: 82 16 10                 s1 = u64 [sp + 0x10]
 12796: 95 11 28                 sp = sp + 0x28
 12799: 32 00                    ret
      :                          @887
 12801: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 12804: 7b 10 50                 u64 [sp + 0x50] = ra
 12807: 7b 15 48                 u64 [sp + 0x48] = s0
 12810: 7b 16 40                 u64 [sp + 0x40] = s1
 12813: 64 73                    t1 = a0
 12815: 82 7a                    a3 = u64 [a0]
 12817: 82 7b 10                 a4 = u64 [a0 + 0x10]
 12820: d4 ba 0c                 a5 = a3 | a4
 12823: 64 86                    s1 = a1
 12825: 51 0c 1e 03              jump @951 if a5 == 0
      :                          @888
 12829: 84 bb 01                 a4 = a4 & 0x1
 12832: 51 0b 8f 00              jump @908 if a4 == 0
      :                          @889
 12836: 64 30                    ra = t1
 12838: 82 3b 18                 a4 = u64 [t1 + 0x18]
 12841: 64 94                    t2 = a2
 12843: c8 69 09                 a2 = a2 + s1
 12846: 33 08                    a1 = 0
 12848: 51 0b 46                 jump @900 if a4 == 0
      :                          @890
 12851: 33 0c                    a5 = 0
 12853: 33 03 e0 00              t1 = 0xe0
 12857: 33 02 f0 00              t0 = 0xf0
 12861: 64 67                    a0 = s1
 12863: 64 65                    s0 = s1
 12865: 28 14                    jump @893
      :                          @891
 12867: 95 56 01                 s1 = s0 + 0x1
 12870: 01                       fallthrough
      :                          @892
 12871: 95 cc 01                 a5 = a5 + 0x1
 12874: c9 85 05                 s0 = s0 - a1
 12877: c9 56 08                 a1 = s1 - s0
 12880: 64 65                    s0 = s1
 12882: aa cb 27                 jump @901 if a4 == a5
      :                          @893
 12885: aa 95 53                 jump @907 if s0 == a2
      :                          @894
 12888: 7d 56                    s1 = i8 [s0]
 12890: 59 06 e9                 jump @891 if s1 >=s 0
      :                          @895
 12893: 84 66 ff 00              s1 = s1 & 0xff
 12897: ac 36 0b                 jump @898 if s1 <u t1
      :                          @896
 12900: ac 26 0d                 jump @899 if s1 <u t0
      :                          @897
 12903: 95 56 04                 s1 = s0 + 0x4
 12906: 28 dd                    jump @892
      :                          @898
 12908: 95 56 02                 s1 = s0 + 0x2
 12911: 28 d8                    jump @892
      :                          @899
 12913: 95 56 03                 s1 = s0 + 0x3
 12916: 28 d3                    jump @892
      :                          @900
 12918: 64 67                    a0 = s1
 12920: 01                       fallthrough
      :                          @901
 12921: aa 96 2f                 jump @907 if s1 == a2
      :                          @902
 12924: 7d 6b                    a4 = i8 [s1]
 12926: 64 49                    a2 = t2
 12928: 64 76                    s1 = a0
 12930: 64 03                    t1 = ra
 12932: 59 0b 08                 jump @904 if a4 >=s 0
      :                          @903
 12935: 33 0b e0 00              a4 = 0xe0
 12939: 01                       fallthrough
      :                          @904
 12940: 64 67                    a0 = s1
 12942: 51 08 9f 02              jump @950 if a1 == 0
      :                          @905
 12946: ae 98 90 02              jump @949 if a1 >=u a2
      :                          @906
 12950: c8 86 07                 a0 = s1 + a1
 12953: 7d 77                    a0 = i8 [a0]
 12955: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 12958: 85 7b 01                 a4 = a0 ^ 0x1
 12961: 64 67                    a0 = s1
 12963: 93 b7                    a0 = 0 if a4 == 0
 12965: 28 88 02                 jump @950
      :                          @907
 12968: 64 49                    a2 = t2
 12970: 64 76                    s1 = a0
 12972: 64 03                    t1 = ra
 12974: 01                       fallthrough
      :                          @908
 12975: 51 0a 88 02              jump @951 if a3 == 0
      :                          @909
 12979: 82 3b 08                 a4 = u64 [t1 + 0x8]
 12982: 7b 19 18                 u64 [sp + 0x18] = a2
 12985: 7b 16 10                 u64 [sp + 0x10] = s1
 12988: 55 19 20 27              jump @915 if a2 >=u 32
      :                          @910
 12992: 33 02                    t0 = 0
 12994: 51 09 1a                 jump @913 if a2 == 0
      :                          @911
 12997: c8 96 08                 a1 = s1 + a2
 13000: 64 6a                    a3 = s1
 13002: 01                       fallthrough
      :                          @912
 13003: 7d a7                    a0 = i8 [a3]
 13005: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 13008: 85 77 01                 a0 = a0 ^ 0x1
 13011: 95 aa 01                 a3 = a3 + 0x1
 13014: c8 72 02                 t0 = t0 + a0
 13017: ab 8a f2                 jump @912 if a3 != a1
      :                          @913
 13020: ac b2 a4 01              jump @932 if t0 <u a4
      :                          @914
 13024: 28 57 02                 jump @951
      :                          @915
 13027: 7b 1b                    u64 [sp] = a4
 13029: 64 6a                    a3 = s1
 13031: 95 65 07                 s0 = s1 + 0x7
 13034: 84 55 f8                 s0 = s0 & 0xfffffffffffffff8
 13037: c8 96 06                 s1 = s1 + a2
 13040: c9 56 06                 s1 = s1 - s0
 13043: 84 68 07                 a1 = s1 & 0x7
 13046: 33 09                    a2 = 0
 13048: aa a5 14                 jump @917 if s0 == a3
      :                          @916
 13051: 7d ab                    a4 = i8 [a3]
 13053: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 13056: 85 bb 01                 a4 = a4 ^ 0x1
 13059: 95 aa 01                 a3 = a3 + 0x1
 13062: c8 b9 09                 a2 = a2 + a4
 13065: ab 5a f2                 jump @916 if a3 != s0
      :                          @917
 13068: 7b 13 08                 u64 [sp + 0x8] = t1
 13071: 33 0c                    a5 = 0
 13073: 51 08 21                 jump @920 if a1 == 0
      :                          @918
 13076: 84 6b f8                 a4 = s1 & 0xfffffffffffffff8
 13079: c8 b5 0a                 a3 = s0 + a4
 13082: c8 5b 0b                 a4 = a4 + s0
 13085: c8 b8 08                 a1 = a1 + a4
 13088: 01                       fallthrough
      :                          @919
 13089: 7d ab                    a4 = i8 [a3]
 13091: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 13094: 85 bb 01                 a4 = a4 ^ 0x1
 13097: 95 aa 01                 a3 = a3 + 0x1
 13100: c8 bc 0c                 a5 = a5 + a4
 13103: ab 8a f2                 jump @919 if a3 != a1
      :                          @920
 13106: 98 63 03                 t1 = s1 >> 0x3
 13109: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 13119: 14 08 ff 00 ff 00 ff 00 ff 00 a1 = 0xff00ff00ff00ff
 13129: 7b 18 28                 u64 [sp + 0x28] = a1
 13132: 14 00 00 00 00 00 01 00 01 00 ra = 0x1000100000000
 13142: 14 08 01 00 01 00 01 00 01 00 a1 = 0x1000100010001
 13152: 7b 18 20                 u64 [sp + 0x20] = a1
 13155: c8 9c 02                 t0 = a5 + a2
 13158: 28 30                    jump @922
      :                          @921
 13160: 82 15 30                 s0 = u64 [sp + 0x30]
 13163: c8 95 05                 s0 = s0 + a2
 13166: 82 16 38                 s1 = u64 [sp + 0x38]
 13169: c9 63 03                 t1 = t1 - s1
 13172: 84 6c 03                 a5 = s1 & 0x3
 13175: 82 1b 28                 a4 = u64 [sp + 0x28]
 13178: d2 b4 07                 a0 = t2 & a4
 13181: 98 48 08                 a1 = t2 >> 0x8
 13184: d2 b8 08                 a1 = a1 & a4
 13187: c8 87 07                 a0 = a0 + a1
 13190: 82 18 20                 a1 = u64 [sp + 0x20]
 13193: ca 87 07                 a0 = a0 * a1
 13196: 98 77 30                 a0 = a0 >> 0x30
 13199: c8 72 02                 t0 = t0 + a0
 13202: 52 0c 97 00              jump @929 if a5 != 0
      :                          @922
 13206: 51 03 82 00              jump @927 if t1 == 0
      :                          @923
 13210: 64 59                    a2 = s0
 13212: 33 07 c0 00              a0 = 0xc0
 13216: e6 73 07                 a0 = minu(t1, a0)
 13219: 7b 17 38                 u64 [sp + 0x38] = a0
 13222: 97 78 03                 a1 = a0 << 0x3
 13225: 7b 18 30                 u64 [sp + 0x30] = a1
 13228: 33 04                    t2 = 0
 13230: 53 13 04 ba              jump @921 if t1 <u 4
      :                          @924
 13234: 84 85 e0 07              s0 = a1 & 0x7e0
 13238: c8 95 05                 s0 = s0 + a2
 13241: 64 98                    a1 = a2
 13243: 01                       fallthrough
      :                          @925
 13244: 82 80                    ra = u64 [a1]
 13246: 85 07 ff                 a0 = ra ^ 0xffffffffffffffff
 13249: 98 77 07                 a0 = a0 >> 0x7
 13252: 98 0b 06                 a4 = ra >> 0x6
 13255: 82 8c 08                 a5 = u64 [a1 + 0x8]
 13258: d4 b7 07                 a0 = a0 | a4
 13261: d2 a7 07                 a0 = a0 & a3
 13264: c8 47 07                 a0 = a0 + t2
 13267: 85 cb ff                 a4 = a5 ^ 0xffffffffffffffff
 13270: 98 bb 07                 a4 = a4 >> 0x7
 13273: 82 86 10                 s1 = u64 [a1 + 0x10]
 13276: 98 cc 06                 a5 = a5 >> 0x6
 13279: d4 cb 0b                 a4 = a4 | a5
 13282: d2 ab 0b                 a4 = a4 & a3
 13285: 85 6c ff                 a5 = s1 ^ 0xffffffffffffffff
 13288: 98 cc 07                 a5 = a5 >> 0x7
 13291: 98 66 06                 s1 = s1 >> 0x6
 13294: d4 6c 0c                 a5 = a5 | s1
 13297: 82 86 18                 s1 = u64 [a1 + 0x18]
 13300: d2 ac 0c                 a5 = a5 & a3
 13303: c8 cb 0b                 a4 = a4 + a5
 13306: c8 b7 07                 a0 = a0 + a4
 13309: 85 6b ff                 a4 = s1 ^ 0xffffffffffffffff
 13312: 98 bb 07                 a4 = a4 >> 0x7
 13315: 98 66 06                 s1 = s1 >> 0x6
 13318: d4 6b 0b                 a4 = a4 | s1
 13321: d2 ab 0b                 a4 = a4 & a3
 13324: 95 88 20                 a1 = a1 + 0x20
 13327: c8 7b 04                 t2 = a4 + a0
 13330: ab 58 aa                 jump @925 if a1 != s0
      :                          @926
 13333: 28 53 ff                 jump @921
      :                          @927
 13336: 82 19 18                 a2 = u64 [sp + 0x18]
 13339: 82 16 10                 s1 = u64 [sp + 0x10]
 13342: 82 13 08                 t1 = u64 [sp + 0x8]
 13345: 82 1b                    a4 = u64 [sp]
 13347: ac b2 5d                 jump @932 if t0 <u a4
      :                          @928
 13350: 28 11 01                 jump @951
      :                          @929
 13353: 33 08                    a1 = 0
 13355: 84 67 fc 00              a0 = s1 & 0xfc
 13359: 97 77 03                 a0 = a0 << 0x3
 13362: c8 79 03                 t1 = a2 + a0
 13365: 97 cc 03                 a5 = a5 << 0x3
 13368: 82 19 18                 a2 = u64 [sp + 0x18]
 13371: 82 16 10                 s1 = u64 [sp + 0x10]
 13374: 01                       fallthrough
      :                          @930
 13375: 82 37                    a0 = u64 [t1]
 13377: 95 33 08                 t1 = t1 + 0x8
 13380: 85 7b ff                 a4 = a0 ^ 0xffffffffffffffff
 13383: 98 bb 07                 a4 = a4 >> 0x7
 13386: 98 77 06                 a0 = a0 >> 0x6
 13389: d4 b7 07                 a0 = a0 | a4
 13392: d2 a7 07                 a0 = a0 & a3
 13395: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 13398: c8 78 08                 a1 = a1 + a0
 13401: 52 0c e6                 jump @930 if a5 != 0
      :                          @931
 13404: 82 1a 28                 a3 = u64 [sp + 0x28]
 13407: d2 a8 07                 a0 = a1 & a3
 13410: 98 88 08                 a1 = a1 >> 0x8
 13413: d2 a8 08                 a1 = a1 & a3
 13416: c8 87 07                 a0 = a0 + a1
 13419: 82 18 20                 a1 = u64 [sp + 0x20]
 13422: ca 87 07                 a0 = a0 * a1
 13425: 98 77 30                 a0 = a0 >> 0x30
 13428: c8 72 02                 t0 = t0 + a0
 13431: 82 13 08                 t1 = u64 [sp + 0x8]
 13434: 82 1b                    a4 = u64 [sp]
 13436: ae b2 bb 00              jump @951 if t0 >=u a4
      :                          @932
 13440: 7c 38 28                 a1 = u8 [t1 + 0x28]
 13443: 95 87 fd                 a0 = a1 + 0xfffffffffffffffd
 13446: 93 78                    a1 = 0 if a0 == 0
 13448: c9 2b 0a                 a3 = a4 - t0
 13451: 51 08 0e                 jump @935 if a1 == 0
      :                          @933
 13454: 52 18 01 10              jump @936 if a1 != 1
      :                          @934
 13458: 64 a8                    a1 = a3
 13460: 49 11 20                 u64 [sp + 32] = 0
 13463: 28 14                    jump @937
      :                          @935
 13465: 7b 1a 20                 u64 [sp + 0x20] = a3
 13468: 28 0f                    jump @937
      :                          @936
 13470: 98 a8 01                 a1 = a3 >> 0x1
 13473: 95 a7 01                 a0 = a3 + 0x1
 13476: 98 77 01                 a0 = a0 >> 0x1
 13479: 7b 17 20                 u64 [sp + 0x20] = a0
 13482: 01                       fallthrough
      :                          @937
 13483: 82 37 30                 a0 = u64 [t1 + 0x30]
 13486: 7b 17 38                 u64 [sp + 0x38] = a0
 13489: 82 35 38                 s0 = u64 [t1 + 0x38]
 13492: 81 37 20                 a0 = i32 [t1 + 0x20]
 13495: 7b 17 30                 u64 [sp + 0x30] = a0
 13498: 95 86 01                 s1 = a1 + 0x1
 13501: 01                       fallthrough
      :                          @938
 13502: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 13505: 51 06 1a                 jump @942 if s1 == 0
      :                          @939
 13508: 82 59 20                 a2 = u64 [s0 + 0x20]
 13511: 82 17 38                 a0 = u64 [sp + 0x38]
 13514: 82 18 30                 a1 = u64 [sp + 0x30]
 13517: b4 90 02 92 01           ra = 402, jump [a2]
      :                          @940 [@dyn 201]
 13522: 51 07 ec                 jump @938 if a0 == 0
      :                          @941
 13525: 33 07 01                 a0 = 0x1
 13528: 28 8a 00                 jump @954
      :                          @942
 13531: 82 5a 18                 a3 = u64 [s0 + 0x18]
 13534: 82 17 38                 a0 = u64 [sp + 0x38]
 13537: 82 18 10                 a1 = u64 [sp + 0x10]
 13540: 82 19 18                 a2 = u64 [sp + 0x18]
 13543: b4 a0 02 94 01           ra = 404, jump [a3]
      :                          @943 [@dyn 202]
 13548: 64 78                    a1 = a0
 13550: 33 07 01                 a0 = 0x1
 13553: 52 08 71                 jump @954 if a1 != 0
      :                          @944
 13556: 82 17 20                 a0 = u64 [sp + 0x20]
 13559: 9a 77                    a0 = -a0
 13561: 7b 17 28                 u64 [sp + 0x28] = a0
 13564: 33 06 ff                 s1 = 0xffffffffffffffff
 13567: 01                       fallthrough
      :                          @945
 13568: 82 17 28                 a0 = u64 [sp + 0x28]
 13571: c8 67 07                 a0 = a0 + s1
 13574: 33 08 ff                 a1 = 0xffffffffffffffff
 13577: aa 87 47                 jump @952 if a0 == a1
      :                          @946
 13580: 82 59 20                 a2 = u64 [s0 + 0x20]
 13583: 82 17 38                 a0 = u64 [sp + 0x38]
 13586: 82 18 30                 a1 = u64 [sp + 0x30]
 13589: b4 90 02 96 01           ra = 406, jump [a2]
      :                          @947 [@dyn 203]
 13594: 95 66 01                 s1 = s1 + 0x1
 13597: 51 07 e3                 jump @945 if a0 == 0
      :                          @948
 13600: 28 3b                    jump @953
      :                          @949
 13602: d3 98 07                 a0 = a1 ^ a2
 13605: 88 7b 01                 a4 = a0 <u 0x1
 13608: 64 67                    a0 = s1
 13610: 93 b7                    a0 = 0 if a4 == 0
 13612: 01                       fallthrough
      :                          @950
 13613: db 78 09                 a2 = a1 if a0 != 0
 13616: db 77 06                 s1 = a0 if a0 != 0
 13619: 52 0a 80 fd              jump @909 if a3 != 0
      :                          @951
 13623: 82 38 38                 a1 = u64 [t1 + 0x38]
 13626: 82 37 30                 a0 = u64 [t1 + 0x30]
 13629: 82 8c 18                 a5 = u64 [a1 + 0x18]
 13632: 64 68                    a1 = s1
 13634: 82 10 50                 ra = u64 [sp + 0x50]
 13637: 82 15 48                 s0 = u64 [sp + 0x48]
 13640: 82 16 40                 s1 = u64 [sp + 0x40]
 13643: 95 11 58                 sp = sp + 0x58
 13646: 32 0c                    jump [a5]
      :                          @952
 13648: 82 16 20                 s1 = u64 [sp + 0x20]
 13651: 82 17 20                 a0 = u64 [sp + 0x20]
 13654: d8 76 07                 a0 = s1 <u a0
 13657: 28 09                    jump @954
      :                          @953
 13659: 82 17 20                 a0 = u64 [sp + 0x20]
 13662: d8 76 07                 a0 = s1 <u a0
 13665: 01                       fallthrough
      :                          @954
 13666: 82 10 50                 ra = u64 [sp + 0x50]
 13669: 82 15 48                 s0 = u64 [sp + 0x48]
 13672: 82 16 40                 s1 = u64 [sp + 0x40]
 13675: 95 11 58                 sp = sp + 0x58
 13678: 32 00                    ret
      :                          @955 [@dyn 204]
 13680: 82 79 08                 a2 = u64 [a0 + 0x8]
 13683: 82 77                    a0 = u64 [a0]
 13685: 82 9c 18                 a5 = u64 [a2 + 0x18]
 13688: 32 0c                    jump [a5]
      :                          @956
 13690: 95 11 80                 sp = sp + 0xffffffffffffff80
 13693: 7b 10 78                 u64 [sp + 0x78] = ra
 13696: 7b 15 70                 u64 [sp + 0x70] = s0
 13699: 7b 16 68                 u64 [sp + 0x68] = s1
 13702: 49 11 48 20              u64 [sp + 72] = 0x20
 13706: 33 0a 03                 a3 = 0x3
 13709: 78 1a 50                 u8 [sp + 0x50] = a3
 13712: 82 96 20                 s1 = u64 [a2 + 0x20]
 13715: 49 11 28                 u64 [sp + 40] = 0
 13718: 49 11 38                 u64 [sp + 56] = 0
 13721: 7b 17 58                 u64 [sp + 0x58] = a0
 13724: 7b 18 60                 u64 [sp + 0x60] = a1
 13727: 51 06 f7 00              jump @978 if s1 == 0
      :                          @957
 13731: 82 97 28                 a0 = u64 [a2 + 0x28]
 13734: 51 07 5b 01              jump @988 if a0 == 0
      :                          @958
 13738: 82 95                    s0 = u64 [a2]
 13740: 7b 19 08                 u64 [sp + 0x8] = a2
 13743: 82 98 10                 a1 = u64 [a2 + 0x10]
 13746: 7b 18 10                 u64 [sp + 0x10] = a1
 13749: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 13752: 97 88 03                 a1 = a1 << 0x3
 13755: 98 88 03                 a1 = a1 >> 0x3
 13758: 95 88 01                 a1 = a1 + 0x1
 13761: 7b 18                    u64 [sp] = a1
 13763: 95 59 08                 a2 = s0 + 0x8
 13766: 97 78 03                 a1 = a0 << 0x3
 13769: 97 77 06                 a0 = a0 << 0x6
 13772: c9 87 05                 s0 = a0 - a1
 13775: 95 66 18                 s1 = s1 + 0x18
 13778: 01                       fallthrough
      :                          @959
 13779: 7b 19 20                 u64 [sp + 0x20] = a2
 13782: 82 99                    a2 = u64 [a2]
 13784: 51 09 1b                 jump @962 if a2 == 0
      :                          @960
 13787: 82 1a 60                 a3 = u64 [sp + 0x60]
 13790: 82 17 20                 a0 = u64 [sp + 0x20]
 13793: 82 78 f8                 a1 = u64 [a0 + 0xfffffffffffffff8]
 13796: 82 17 58                 a0 = u64 [sp + 0x58]
 13799: 82 aa 18                 a3 = u64 [a3 + 0x18]
 13802: b4 a0 02 9a 01           ra = 410, jump [a3]
      :                          @961 [@dyn 205]
 13807: 52 07 38 01              jump @991 if a0 != 0
      :                          @962
 13811: 7b 15 18                 u64 [sp + 0x18] = s0
 13814: 82 67 10                 a0 = u64 [s1 + 0x10]
 13817: 7b 17 48                 u64 [sp + 0x48] = a0
 13820: 7c 69 18                 a2 = u8 [s1 + 0x18]
 13823: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 13826: 82 67                    a0 = u64 [s1]
 13828: 78 19 50                 u8 [sp + 0x50] = a2
 13831: 51 08 21                 jump @967 if a1 == 0
      :                          @963
 13834: 52 18 01 12              jump @965 if a1 != 1
      :                          @964
 13838: 97 77 04                 a0 = a0 << 0x4
 13841: 82 18 10                 a1 = u64 [sp + 0x10]
 13844: c8 87 07                 a0 = a0 + a1
 13847: 82 78                    a1 = u64 [a0]
 13849: 51 08 07                 jump @966 if a1 == 0
      :                          @965
 13852: 33 08                    a1 = 0
 13854: 28 0e                    jump @968
      :                          @966
 13856: 82 77 08                 a0 = u64 [a0 + 0x8]
 13859: 33 08 01                 a1 = 0x1
 13862: 28 06                    jump @968
      :                          @967
 13864: 33 08 01                 a1 = 0x1
 13867: 01                       fallthrough
      :                          @968
 13868: 82 69 e8                 a2 = u64 [s1 + 0xffffffffffffffe8]
 13871: 7b 18 28                 u64 [sp + 0x28] = a1
 13874: 7b 17 30                 u64 [sp + 0x30] = a0
 13877: 51 19 02 19              jump @971 if a2 == 2
      :                          @969
 13881: 82 68 f0                 a1 = u64 [s1 + 0xfffffffffffffff0]
 13884: 52 19 01 1e              jump @973 if a2 != 1
      :                          @970
 13888: 97 87 04                 a0 = a1 << 0x4
 13891: 82 18 10                 a1 = u64 [sp + 0x10]
 13894: c8 87 07                 a0 = a0 + a1
 13897: 82 78                    a1 = u64 [a0]
 13899: 51 08 07                 jump @972 if a1 == 0
      :                          @971
 13902: 33 09                    a2 = 0
 13904: 28 0e                    jump @974
      :                          @972
 13906: 82 78 08                 a1 = u64 [a0 + 0x8]
 13909: 33 09 01                 a2 = 0x1
 13912: 28 06                    jump @974
      :                          @973
 13914: 33 09 01                 a2 = 0x1
 13917: 01                       fallthrough
      :                          @974
 13918: 82 67 08                 a0 = u64 [s1 + 0x8]
 13921: 97 77 04                 a0 = a0 << 0x4
 13924: 82 1a 10                 a3 = u64 [sp + 0x10]
 13927: c8 7a 0a                 a3 = a3 + a0
 13930: 82 a7                    a0 = u64 [a3]
 13932: 82 aa 08                 a3 = u64 [a3 + 0x8]
 13935: 7b 19 38                 u64 [sp + 0x38] = a2
 13938: 7b 18 40                 u64 [sp + 0x40] = a1
 13941: 95 18 28                 a1 = sp + 0x28
 13944: b4 a0 02 9c 01           ra = 412, jump [a3]
      :                          @975 [@dyn 206]
 13949: 82 15 18                 s0 = u64 [sp + 0x18]
 13952: 52 07 a7 00              jump @991 if a0 != 0
      :                          @976
 13956: 82 19 20                 a2 = u64 [sp + 0x20]
 13959: 95 99 10                 a2 = a2 + 0x10
 13962: 95 55 c8                 s0 = s0 + 0xffffffffffffffc8
 13965: 95 66 38                 s1 = s1 + 0x38
 13968: 52 05 43 ff              jump @959 if s0 != 0
      :                          @977
 13972: 28 60                    jump @986
      :                          @978
 13974: 82 97 18                 a0 = u64 [a2 + 0x18]
 13977: 51 07 68                 jump @988 if a0 == 0
      :                          @979
 13980: 82 95 10                 s0 = u64 [a2 + 0x10]
 13983: 97 78 04                 a1 = a0 << 0x4
 13986: c8 58 08                 a1 = a1 + s0
 13989: 7b 18 20                 u64 [sp + 0x20] = a1
 13992: 7b 19 08                 u64 [sp + 0x8] = a2
 13995: 82 96                    s1 = u64 [a2]
 13997: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 14000: 97 77 04                 a0 = a0 << 0x4
 14003: 98 77 04                 a0 = a0 >> 0x4
 14006: 95 77 01                 a0 = a0 + 0x1
 14009: 7b 17                    u64 [sp] = a0
 14011: 95 66 08                 s1 = s1 + 0x8
 14014: 01                       fallthrough
      :                          @980
 14015: 82 69                    a2 = u64 [s1]
 14017: 51 09 17                 jump @983 if a2 == 0
      :                          @981
 14020: 82 1a 60                 a3 = u64 [sp + 0x60]
 14023: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 14026: 82 17 58                 a0 = u64 [sp + 0x58]
 14029: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14032: b4 a0 02 9e 01           ra = 414, jump [a3]
      :                          @982 [@dyn 207]
 14037: 52 07 52                 jump @991 if a0 != 0
      :                          @983
 14040: 82 57                    a0 = u64 [s0]
 14042: 82 59 08                 a2 = u64 [s0 + 0x8]
 14045: 95 18 28                 a1 = sp + 0x28
 14048: b4 90 02 a0 01           ra = 416, jump [a2]
      :                          @984 [@dyn 208]
 14053: 52 07 42                 jump @991 if a0 != 0
      :                          @985
 14056: 95 55 10                 s0 = s0 + 0x10
 14059: 95 66 10                 s1 = s1 + 0x10
 14062: 82 17 20                 a0 = u64 [sp + 0x20]
 14065: ab 75 ce                 jump @980 if s0 != a0
      :                          @986
 14068: 82 19 08                 a2 = u64 [sp + 0x8]
 14071: 82 1a                    a3 = u64 [sp]
 14073: 82 97 08                 a0 = u64 [a2 + 0x8]
 14076: ac 7a 0d                 jump @989 if a3 <u a0
      :                          @987
 14079: 28 2d                    jump @992
      :                          @988
 14081: 33 0a                    a3 = 0
 14083: 82 97 08                 a0 = u64 [a2 + 0x8]
 14086: 54 07 26                 jump @992 if a0 <=u 0
      :                          @989
 14089: 82 97                    a0 = u64 [a2]
 14091: 97 a8 04                 a1 = a3 << 0x4
 14094: c8 87 09                 a2 = a0 + a1
 14097: 82 1a 60                 a3 = u64 [sp + 0x60]
 14100: 82 17 58                 a0 = u64 [sp + 0x58]
 14103: 82 98                    a1 = u64 [a2]
 14105: 82 99 08                 a2 = u64 [a2 + 0x8]
 14108: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14111: b4 a0 02 a2 01           ra = 418, jump [a3]
      :                          @990 [@dyn 209]
 14116: 51 07 08                 jump @992 if a0 == 0
      :                          @991
 14119: 33 07 01                 a0 = 0x1
 14122: 28 05                    jump @993
      :                          @992
 14124: 33 07                    a0 = 0
 14126: 01                       fallthrough
      :                          @993
 14127: 82 10 78                 ra = u64 [sp + 0x78]
 14130: 82 15 70                 s0 = u64 [sp + 0x70]
 14133: 82 16 68                 s1 = u64 [sp + 0x68]
 14136: 95 11 80 00              sp = sp + 0x80
 14140: 32 00                    ret
      :                          @994
 14142: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 14145: 7b 10 30                 u64 [sp + 0x30] = ra
 14148: 7b 15 28                 u64 [sp + 0x28] = s0
 14151: 7b 16 20                 u64 [sp + 0x20] = s1
 14154: 56 18 27 1a              jump @997 if a1 >u 39
      :                          @995
 14158: 97 8a 02                 a3 = a1 << 0x2
 14161: 33 0b 00 00 01           a4 = 0x10000
 14166: c8 ba 0a                 a3 = a3 + a4
 14169: 81 aa                    a3 = i32 [a3]
 14171: 32 0a                    jump [a3]
      :                          @996 [@dyn 210]
 14173: 33 08 5c 30              a1 = 0x305c
 14177: 28 d2 01                 jump @1021
      :                          @997
 14180: 33 0a 5c                 a3 = 0x5c
 14183: ab a8 0a                 jump @999 if a1 != a3
      :                          @998
 14186: 33 08 5c 5c              a1 = 0x5c5c
 14190: 28 c5 01                 jump @1021
      :                          @999 [@dyn 211]
 14193: 33 0a 00 03              a3 = 0x300
 14197: ac a8 04 01              jump @1012 if a1 <u a3
      :                          @1000
 14201: 84 99 01                 a2 = a2 & 0x1
 14204: 51 09 fd 00              jump @1012 if a2 == 0
      :                          @1001
 14208: 88 8a 2f 18 01           a3 = a1 <u 0x1182f
 14213: 33 09 11                 a2 = 0x11
 14216: 94 a9                    a2 = 0 if a3 != 0
 14218: 95 9c 08                 a5 = a2 + 0x8
 14221: 97 cb 02                 a4 = a5 << 0x2
 14224: 33 0a 24 0e 01           a3 = 0x10e24
 14229: c8 ab 0b                 a4 = a4 + a3
 14232: 81 b6                    s1 = i32 [a4]
 14234: 8a 8b 0b                 i32 a4 = a1 << 0xb
 14237: 8a 66 0b                 i32 s1 = s1 << 0xb
 14240: d8 6b 06                 s1 = a4 <u s1
 14243: da 6c 09                 a2 = a5 if s1 == 0
 14246: 95 96 04                 s1 = a2 + 0x4
 14249: 97 6c 02                 a5 = s1 << 0x2
 14252: c8 ac 0c                 a5 = a5 + a3
 14255: 81 cc                    a5 = i32 [a5]
 14257: 8a cc 0b                 i32 a5 = a5 << 0xb
 14260: d8 cb 0c                 a5 = a4 <u a5
 14263: da c6 09                 a2 = s1 if a5 == 0
 14266: 95 96 02                 s1 = a2 + 0x2
 14269: 97 6c 02                 a5 = s1 << 0x2
 14272: c8 ac 0c                 a5 = a5 + a3
 14275: 81 cc                    a5 = i32 [a5]
 14277: 8a cc 0b                 i32 a5 = a5 << 0xb
 14280: d8 cb 0c                 a5 = a4 <u a5
 14283: da c6 09                 a2 = s1 if a5 == 0
 14286: 95 96 01                 s1 = a2 + 0x1
 14289: 97 6c 02                 a5 = s1 << 0x2
 14292: c8 ac 0c                 a5 = a5 + a3
 14295: 81 cc                    a5 = i32 [a5]
 14297: 8a cc 0b                 i32 a5 = a5 << 0xb
 14300: d8 cb 0c                 a5 = a4 <u a5
 14303: da c6 09                 a2 = s1 if a5 == 0
 14306: 95 96 01                 s1 = a2 + 0x1
 14309: 97 6c 02                 a5 = s1 << 0x2
 14312: c8 ac 0c                 a5 = a5 + a3
 14315: 81 cc                    a5 = i32 [a5]
 14317: 8a cc 0b                 i32 a5 = a5 << 0xb
 14320: d8 cb 0c                 a5 = a4 <u a5
 14323: da c6 09                 a2 = s1 if a5 == 0
 14326: 97 9c 02                 a5 = a2 << 0x2
 14329: c8 ac 0c                 a5 = a5 + a3
 14332: 81 cc                    a5 = i32 [a5]
 14334: 8a cc 0b                 i32 a5 = a5 << 0xb
 14337: d8 bc 06                 s1 = a5 <u a4
 14340: d3 cb 0b                 a4 = a4 ^ a5
 14343: 88 bb 01                 a4 = a4 <u 0x1
 14346: c8 69 09                 a2 = a2 + s1
 14349: c8 b9 09                 a2 = a2 + a4
 14352: 33 0c 21                 a5 = 0x21
 14355: ac 9c e4 02              jump @1045 if a5 <u a2
      :                          @1002
 14359: 97 9b 02                 a4 = a2 << 0x2
 14362: c8 ab 0b                 a4 = a4 + a3
 14365: 80 ba                    a3 = u32 [a4]
 14367: 98 a6 15                 s1 = a3 >> 0x15
 14370: 33 02 ef 02              t0 = 0x2ef
 14374: 51 19 21 0d              jump @1004 if a2 == 33
      :                          @1003
 14378: 80 bc 04                 a5 = u32 [a4 + 0x4]
 14381: 98 c2 15                 t0 = a5 >> 0x15
 14384: 51 09 0c                 jump @1005 if a2 == 0
      :                          @1004
 14387: 80 b9 fc                 a2 = u32 [a4 + 0xfffffffffffffffc]
 14390: 84 99 ff ff 1f           a2 = a2 & 0x1fffff
 14395: 01                       fallthrough
      :                          @1005
 14396: 85 6b ff                 a4 = s1 ^ 0xffffffffffffffff
 14399: c8 2b 0b                 a4 = a4 + t0
 14402: 51 0b 30                 jump @1011 if a4 == 0
      :                          @1006
 14405: 33 0c                    a5 = 0
 14407: bf 98 0b                 i32 a4 = a1 - a2
 14410: 33 09 ef 02              a2 = 0x2ef
 14414: e4 96 09                 a2 = maxu(s1, a2)
 14417: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 14420: 33 03 ac 0e 01           t1 = 0x10eac
 14425: 01                       fallthrough
      :                          @1007
 14426: aa 69 9c 02              jump @1044 if a2 == s1
      :                          @1008
 14430: c8 63 0a                 a3 = t1 + s1
 14433: 7c aa                    a3 = u8 [a3]
 14435: be ac 0c                 i32 a5 = a5 + a3
 14438: ac cb 0c                 jump @1011 if a4 <u a5
      :                          @1009
 14441: 95 66 01                 s1 = s1 + 0x1
 14444: ab 62 ee                 jump @1007 if t0 != s1
      :                          @1010
 14447: 64 26                    s1 = t0
 14449: 01                       fallthrough
      :                          @1011
 14450: 84 66 01                 s1 = s1 & 0x1
 14453: 52 06 0a 01              jump @1026 if s1 != 0
      :                          @1012
 14457: 55 18 20 db 00           jump @1023 if a1 >=u 32
      :                          @1013
 14462: 8b 89 14                 i32 a2 = a1 >> 0x14
 14465: 33 0a 27 02 01           a3 = 0x10227
 14470: c8 a9 09                 a2 = a2 + a3
 14473: 7c 99                    a2 = u8 [a2]
 14475: 86 8b 01                 a4 = a1 | 0x1
 14478: 78 19 17                 u8 [sp + 0x17] = a2
 14481: 97 89 2c                 a2 = a1 << 0x2c
 14484: 98 99 3c                 a2 = a2 >> 0x3c
 14487: c8 a9 09                 a2 = a2 + a3
 14490: 7c 9c                    a5 = u8 [a2]
 14492: 97 89 30                 a2 = a1 << 0x30
 14495: 98 99 3c                 a2 = a2 >> 0x3c
 14498: c8 a9 09                 a2 = a2 + a3
 14501: 7c 96                    s1 = u8 [a2]
 14503: 69 b9                    i32 a2 = clz a4
 14505: 98 99 02                 a2 = a2 >> 0x2
 14508: 78 1c 18                 u8 [sp + 0x18] = a5
 14511: 78 16 19                 u8 [sp + 0x19] = s1
 14514: 97 8b 34                 a4 = a1 << 0x34
 14517: 98 bb 3c                 a4 = a4 >> 0x3c
 14520: c8 ab 0b                 a4 = a4 + a3
 14523: 97 8c 38                 a5 = a1 << 0x38
 14526: 98 cc 3c                 a5 = a5 >> 0x3c
 14529: c8 ac 0c                 a5 = a5 + a3
 14532: 84 88 0f                 a1 = a1 & 0xf
 14535: c8 8a 0a                 a3 = a3 + a1
 14538: 95 98 fe                 a1 = a2 + 0xfffffffffffffffe
 14541: 46 11 16                 u8 [sp + 22] = 0
 14544: 7c bb                    a4 = u8 [a4]
 14546: 7c cc                    a5 = u8 [a5]
 14548: 7c aa                    a3 = u8 [a3]
 14550: 47 11 14                 u16 [sp + 20] = 0
 14553: 78 1b 1a                 u8 [sp + 0x1a] = a4
 14556: 78 1c 1b                 u8 [sp + 0x1b] = a5
 14559: 78 1a 1c                 u8 [sp + 0x1c] = a3
 14562: 46 11 1d 7d              u8 [sp + 29] = 0x7d
 14566: 95 1a 14                 a3 = sp + 0x14
 14569: c8 8a 0b                 a4 = a3 + a1
 14572: 33 0c 5c                 a5 = 0x5c
 14575: 78 bc                    u8 [a4] = a5
 14577: c8 a9 09                 a2 = a2 + a3
 14580: 46 19 ff 75              u8 [a2 + 4294967295] = 0x75
 14584: 46 09 7b                 u8 [a2 + 0] = 0x7b
 14587: 81 19 14                 a2 = i32 [sp + 0x14]
 14590: 81 1a 18                 a3 = i32 [sp + 0x18]
 14593: 7f 1b 1c                 a4 = i16 [sp + 0x1c]
 14596: 28 02 01                 jump @1027
      :                          @1014 [@dyn 212]
 14599: 33 08 5c 6e              a1 = 0x6e5c
 14603: 28 28                    jump @1021
      :                          @1015 [@dyn 213]
 14605: 84 99 00 01              a2 = a2 & 0x100
 14609: 51 09 d9 01              jump @1043 if a2 == 0
      :                          @1016
 14613: 33 08 5c 27              a1 = 0x275c
 14617: 28 1a                    jump @1021
      :                          @1017 [@dyn 214]
 14619: 33 08 5c 72              a1 = 0x725c
 14623: 28 14                    jump @1021
      :                          @1018 [@dyn 215]
 14625: 33 08 5c 74              a1 = 0x745c
 14629: 28 0e                    jump @1021
      :                          @1019 [@dyn 216]
 14631: 97 99 2f                 a2 = a2 << 0x2f
 14634: 59 09 c0 01              jump @1043 if a2 >=s 0
      :                          @1020
 14638: 33 08 5c 22              a1 = 0x225c
 14642: 01                       fallthrough
      :                          @1021
 14643: 7a 78                    u32 [a0] = a1
 14645: 47 17 08                 u16 [a0 + 8] = 0
 14648: 47 17 06                 u16 [a0 + 6] = 0
 14651: 47 17 04                 u16 [a0 + 4] = 0
 14654: 33 08 00 02              a1 = 0x200
 14658: 79 78 0a                 u16 [a0 + 0xa] = a1
 14661: 01                       fallthrough
      :                          @1022
 14662: 82 10 30                 ra = u64 [sp + 0x30]
 14665: 82 15 28                 s0 = u64 [sp + 0x28]
 14668: 82 16 20                 s1 = u64 [sp + 0x20]
 14671: 95 11 38                 sp = sp + 0x38
 14674: 32 00                    ret
      :                          @1023
 14676: 53 18 7f 96 01           jump @1043 if a1 <u 127
      :                          @1024
 14681: 8b 89 10                 i32 a2 = a1 >> 0x10
 14684: 52 09 be 00              jump @1028 if a2 != 0
      :                          @1025
 14688: 33 06 29 01              s1 = 0x129
 14692: 6e 83                    t1 = zext.h a1
 14694: 33 02 86 0b 01           t0 = 0x10b86
 14699: 33 0a d6 0b 01           a3 = 0x10bd6
 14704: 33 0c f8 0c 01           a5 = 0x10cf8
 14709: 33 09 28                 a2 = 0x28
 14712: 33 0b 22 01              a4 = 0x122
 14716: 28 c1 00                 jump @1030
      :                          @1026
 14719: 8b 89 14                 i32 a2 = a1 >> 0x14
 14722: 33 0a 27 02 01           a3 = 0x10227
 14727: c8 a9 09                 a2 = a2 + a3
 14730: 7c 99                    a2 = u8 [a2]
 14732: 86 8b 01                 a4 = a1 | 0x1
 14735: 78 19 0b                 u8 [sp + 0xb] = a2
 14738: 97 89 2c                 a2 = a1 << 0x2c
 14741: 98 99 3c                 a2 = a2 >> 0x3c
 14744: c8 a9 09                 a2 = a2 + a3
 14747: 7c 9c                    a5 = u8 [a2]
 14749: 97 89 30                 a2 = a1 << 0x30
 14752: 98 99 3c                 a2 = a2 >> 0x3c
 14755: c8 a9 09                 a2 = a2 + a3
 14758: 7c 96                    s1 = u8 [a2]
 14760: 69 b9                    i32 a2 = clz a4
 14762: 98 99 02                 a2 = a2 >> 0x2
 14765: 78 1c 0c                 u8 [sp + 0xc] = a5
 14768: 78 16 0d                 u8 [sp + 0xd] = s1
 14771: 97 8b 34                 a4 = a1 << 0x34
 14774: 98 bb 3c                 a4 = a4 >> 0x3c
 14777: c8 ab 0b                 a4 = a4 + a3
 14780: 97 8c 38                 a5 = a1 << 0x38
 14783: 98 cc 3c                 a5 = a5 >> 0x3c
 14786: c8 ac 0c                 a5 = a5 + a3
 14789: 84 88 0f                 a1 = a1 & 0xf
 14792: c8 8a 0a                 a3 = a3 + a1
 14795: 95 98 fe                 a1 = a2 + 0xfffffffffffffffe
 14798: 46 11 0a                 u8 [sp + 10] = 0
 14801: 7c bb                    a4 = u8 [a4]
 14803: 7c cc                    a5 = u8 [a5]
 14805: 7c aa                    a3 = u8 [a3]
 14807: 47 11 08                 u16 [sp + 8] = 0
 14810: 78 1b 0e                 u8 [sp + 0xe] = a4
 14813: 78 1c 0f                 u8 [sp + 0xf] = a5
 14816: 78 1a 10                 u8 [sp + 0x10] = a3
 14819: 46 11 11 7d              u8 [sp + 17] = 0x7d
 14823: 95 1a 08                 a3 = sp + 0x8
 14826: c8 8a 0b                 a4 = a3 + a1
 14829: 33 0c 5c                 a5 = 0x5c
 14832: 78 bc                    u8 [a4] = a5
 14834: c8 a9 09                 a2 = a2 + a3
 14837: 46 19 ff 75              u8 [a2 + 4294967295] = 0x75
 14841: 46 09 7b                 u8 [a2 + 0] = 0x7b
 14844: 81 19 08                 a2 = i32 [sp + 0x8]
 14847: 81 1a 0c                 a3 = i32 [sp + 0xc]
 14850: 7f 1b 10                 a4 = i16 [sp + 0x10]
 14853: 01                       fallthrough
      :                          @1027
 14854: 7a 79                    u32 [a0] = a2
 14856: 7a 7a 04                 u32 [a0 + 0x4] = a3
 14859: 79 7b 08                 u16 [a0 + 0x8] = a4
 14862: 78 78 0a                 u8 [a0 + 0xa] = a1
 14865: 33 08 0a                 a1 = 0xa
 14868: 78 78 0b                 u8 [a0 + 0xb] = a1
 14871: 28 2f ff                 jump @1022
      :                          @1028
 14874: 8b 89 11                 i32 a2 = a1 >> 0x11
 14877: 52 09 60                 jump @1033 if a2 != 0
      :                          @1029
 14880: 33 06 e6 01              s1 = 0x1e6
 14884: 6e 83                    t1 = zext.h a1
 14886: 33 02 78 08 01           t0 = 0x10878
 14891: 33 0a d0 08 01           a3 = 0x108d0
 14896: 33 0c a0 09 01           a5 = 0x109a0
 14901: 33 09 2c                 a2 = 0x2c
 14904: 33 0b d0 00              a4 = 0xd0
 14908: 01                       fallthrough
      :                          @1030
 14909: 7b 16                    u64 [sp] = s1
 14911: 64 75                    s0 = a0
 14913: 64 37                    a0 = t1
 14915: 64 86                    s1 = a1
 14917: 64 28                    a1 = t0
 14919: 33 00 b2 01              ra = 0x1b2
 14923: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 14926: 7b 10 20                 u64 [sp + 0x20] = ra
 14929: 7b 15 18                 u64 [sp + 0x18] = s0
 14932: 7b 16 10                 u64 [sp + 0x10] = s1
 14935: 7b 1c                    u64 [sp] = a5
 14937: 33 03                    t1 = 0
 14939: 82 16 28                 s1 = u64 [sp + 0x28]
 14942: 7b 16 08                 u64 [sp + 0x8] = s1
 14945: 98 70 08                 ra = a0 >> 0x8
 14948: 97 99 01                 a2 = a2 << 0x1
 14951: c8 98 0c                 a5 = a1 + a2
 14954: 84 76 ff 00              s1 = a0 & 0xff
 14958: 28 8a 00                 jump @1046
      :                          @1031 [@dyn 217]
 14961: 64 68                    a1 = s1
 14963: 64 79                    a2 = a0
 14965: 64 57                    a0 = s0
 14967: 51 09 07 fe              jump @1013 if a2 == 0
      :                          @1032
 14971: 28 6f                    jump @1043
      :                          @1033
 14973: 84 8a fe ff 1f           a3 = a1 & 0x1ffffe
 14978: 51 3a 1e b8 02 fc fd     jump @1013 if a3 == 178206
      :                          @1034
 14985: 84 89 e0 ff 1f           a2 = a1 & 0x1fffe0
 14990: 51 39 e0 a6 02 f0 fd     jump @1013 if a2 == 173792
      :                          @1035
 14997: 83 89 c0 48 fd           i32 a2 = a1 + 0xfffffffffffd48c0
 15002: 56 19 f9 e4 fd           jump @1013 if a2 >u 4294967289
      :                          @1036
 15007: 83 89 50 31 fd           i32 a2 = a1 + 0xfffffffffffd3150
 15012: 56 19 f1 da fd           jump @1013 if a2 >u 4294967281
      :                          @1037
 15017: 83 8a 10 14 fd           i32 a3 = a1 + 0xfffffffffffd1410
 15022: 33 0b f0                 a4 = 0xfffffffffffffff0
 15025: ac ab cd fd              jump @1013 if a4 <u a3
      :                          @1038
 15029: 83 89 00 08 fd           i32 a2 = a1 + 0xfffffffffffd0800
 15034: 56 29 5d f6 c4 fd        jump @1013 if a2 >u 4294964829
      :                          @1039
 15040: 83 89 00 00 fd           i32 a2 = a1 + 0xfffffffffffd0000
 15045: 56 29 1d fa b9 fd        jump @1013 if a2 >u 4294965789
      :                          @1040
 15051: 83 89 b0 ec fc           i32 a2 = a1 + 0xfffffffffffcecb0
 15056: 56 19 fa ae fd           jump @1013 if a2 >u 4294967290
      :                          @1041
 15061: 83 89 00 ff f1           i32 a2 = a1 + 0xfffffffffff1ff00
 15066: 33 0a af 22 f5           a3 = 0xfffffffffff522af
 15071: ac 9a 9f fd              jump @1013 if a3 <u a2
      :                          @1042
 15075: 55 38 f0 01 0e 9b fd     jump @1013 if a1 >=u 918000
      :                          @1043
 15082: 33 09 80 00              a2 = 0x80
 15086: 78 79                    u8 [a0] = a2
 15088: 7a 78 04                 u32 [a0 + 0x4] = a1
 15091: 28 53 fe                 jump @1022
      :                          @1044
 15094: 00                       trap
      :                          @1045
 15095: 00                       trap
      :                          @1046
 15096: 7c 84                    t2 = u8 [a1]
 15098: 7c 89 01                 a2 = u8 [a1 + 0x1]
 15101: 95 88 02                 a1 = a1 + 0x2
 15104: c8 93 02                 t0 = t1 + a2
 15107: ab 04 1f                 jump @1053 if t2 != ra
      :                          @1047
 15110: ac 32 7f                 jump @1067 if t0 <u t1
      :                          @1048
 15113: ac 2b 7d                 jump @1068 if a4 <u t0
      :                          @1049
 15116: 64 a4                    t2 = a3
 15118: c8 a3 03                 t1 = t1 + a3
 15121: 01                       fallthrough
      :                          @1050
 15122: 51 09 1a                 jump @1056 if a2 == 0
      :                          @1051
 15125: 7c 35                    s0 = u8 [t1]
 15127: 95 33 01                 t1 = t1 + 0x1
 15130: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 15133: ab 65 f5                 jump @1050 if s0 != s1
      :                          @1052
 15136: 28 51                    jump @1065
      :                          @1053
 15138: ac 40 11                 jump @1057 if ra <u t2
      :                          @1054
 15141: 64 23                    t1 = t0
 15143: ab c8 d1                 jump @1046 if a1 != a5
      :                          @1055
 15146: 28 09                    jump @1057
      :                          @1056
 15148: 64 23                    t1 = t0
 15150: 64 4a                    a3 = t2
 15152: ab c8 c8                 jump @1046 if a1 != a5
      :                          @1057
 15155: 82 14 08                 t2 = u64 [sp + 0x8]
 15158: 82 1c                    a5 = u64 [sp]
 15160: c8 c4 04                 t2 = t2 + a5
 15163: 33 08 01                 a1 = 0x1
 15166: 01                       fallthrough
      :                          @1058
 15167: 7d c9                    a2 = i8 [a5]
 15169: 95 ca 01                 a3 = a5 + 0x1
 15172: 57 09 0d                 jump @1061 if a2 <s 0
      :                          @1059
 15175: 64 ac                    a5 = a3
 15177: bf 97 07                 i32 a0 = a0 - a2
 15180: 59 07 1d                 jump @1063 if a0 >=s 0
      :                          @1060
 15183: 28 25                    jump @1066
      :                          @1061
 15185: aa 4a 36                 jump @1069 if a3 == t2
      :                          @1062
 15188: 7c ca 01                 a3 = u8 [a5 + 0x1]
 15191: 95 cc 02                 a5 = a5 + 0x2
 15194: 84 99 7f                 a2 = a2 & 0x7f
 15197: 97 99 08                 a2 = a2 << 0x8
 15200: d4 a9 09                 a2 = a2 | a3
 15203: bf 97 07                 i32 a0 = a0 - a2
 15206: 57 07 0e                 jump @1066 if a0 <s 0
      :                          @1063
 15209: 85 88 01                 a1 = a1 ^ 0x1
 15212: ab 4c d3                 jump @1058 if a5 != t2
      :                          @1064
 15215: 28 05                    jump @1066
      :                          @1065
 15217: 33 08                    a1 = 0
 15219: 01                       fallthrough
      :                          @1066
 15220: 84 87 01                 a0 = a1 & 0x1
 15223: 82 10 20                 ra = u64 [sp + 0x20]
 15226: 82 15 18                 s0 = u64 [sp + 0x18]
 15229: 82 16 10                 s1 = u64 [sp + 0x10]
 15232: 95 11 28                 sp = sp + 0x28
 15235: 32 00                    ret
      :                          @1067
 15237: 00                       trap
      :                          @1068
 15238: 00                       trap
      :                          @1069
 15239: 00                       trap
      :                          @1070
 15240: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 15244: 7b 10 90 00              u64 [sp + 0x90] = ra
 15248: 7b 15 88 00              u64 [sp + 0x88] = s0
 15252: 7b 16 80 00              u64 [sp + 0x80] = s1
 15256: 64 75                    s0 = a0
 15258: 7c 77 08                 a0 = u8 [a0 + 0x8]
 15261: 7b 1b 18                 u64 [sp + 0x18] = a4
 15264: 7b 1a 10                 u64 [sp + 0x10] = a3
 15267: 33 0a 01                 a3 = 0x1
 15270: 33 06 01                 s1 = 0x1
 15273: 52 07 6a 01              jump @1092 if a0 != 0
      :                          @1071
 15277: 64 92                    t0 = a2
 15279: 64 8c                    a5 = a1
 15281: 82 5b                    a4 = u64 [s0]
 15283: 7c b7 24                 a0 = u8 [a4 + 0x24]
 15286: 7c 59 09                 a2 = u8 [s0 + 0x9]
 15289: 84 77 04                 a0 = a0 & 0x4
 15292: 52 07 89 00              jump @1080 if a0 != 0
      :                          @1072
 15296: 82 b8 38                 a1 = u64 [a4 + 0x38]
 15299: 33 0a 08 07 01           a3 = 0x10708
 15304: 82 b7 30                 a0 = u64 [a4 + 0x30]
 15307: 7b 1b                    u64 [sp] = a4
 15309: 82 8b 18                 a4 = u64 [a1 + 0x18]
 15312: 33 08 0b 07 01           a1 = 0x1070b
 15317: da 9a 08                 a1 = a3 if a2 == 0
 15320: 85 99 03                 a2 = a2 ^ 0x3
 15323: 7b 12 08                 u64 [sp + 0x8] = t0
 15326: 64 c6                    s1 = a5
 15328: b4 b0 02 b4 01           ra = 436, jump [a4]
      :                          @1073 [@dyn 218]
 15333: 64 68                    a1 = s1
 15335: 82 19 08                 a2 = u64 [sp + 0x8]
 15338: 82 1b                    a4 = u64 [sp]
 15340: 33 0a 01                 a3 = 0x1
 15343: 33 06 01                 s1 = 0x1
 15346: 52 07 21 01              jump @1092 if a0 != 0
      :                          @1074
 15350: 82 ba 38                 a3 = u64 [a4 + 0x38]
 15353: 82 b7 30                 a0 = u64 [a4 + 0x30]
 15356: 82 aa 18                 a3 = u64 [a3 + 0x18]
 15359: b4 a0 02 b6 01           ra = 438, jump [a3]
      :                          @1075 [@dyn 219]
 15364: 82 19                    a2 = u64 [sp]
 15366: 33 0a 01                 a3 = 0x1
 15369: 33 06 01                 s1 = 0x1
 15372: 52 07 07 01              jump @1092 if a0 != 0
      :                          @1076
 15376: 82 98 38                 a1 = u64 [a2 + 0x38]
 15379: 82 97 30                 a0 = u64 [a2 + 0x30]
 15382: 82 8a 18                 a3 = u64 [a1 + 0x18]
 15385: 33 08 d2 06 01           a1 = 0x106d2
 15390: 33 09 02                 a2 = 0x2
 15393: b4 a0 02 b8 01           ra = 440, jump [a3]
      :                          @1077 [@dyn 220]
 15398: 82 18                    a1 = u64 [sp]
 15400: 33 0a 01                 a3 = 0x1
 15403: 33 06 01                 s1 = 0x1
 15406: 52 07 e5 00              jump @1092 if a0 != 0
      :                          @1078
 15410: 82 17 10                 a0 = u64 [sp + 0x10]
 15413: 82 19 18                 a2 = u64 [sp + 0x18]
 15416: b4 90 02 ba 01           ra = 442, jump [a2]
      :                          @1079 [@dyn 221]
 15421: 33 0a 01                 a3 = 0x1
 15424: 64 76                    s1 = a0
 15426: 28 d1 00                 jump @1092
      :                          @1080
 15429: 52 09 31                 jump @1083 if a2 != 0
      :                          @1081
 15432: 82 b8 38                 a1 = u64 [a4 + 0x38]
 15435: 82 b7 30                 a0 = u64 [a4 + 0x30]
 15438: 82 8a 18                 a3 = u64 [a1 + 0x18]
 15441: 33 08 0d 07 01           a1 = 0x1070d
 15446: 33 09 03                 a2 = 0x3
 15449: 64 b6                    s1 = a4
 15451: 7b 12 08                 u64 [sp + 0x8] = t0
 15454: 7b 1c                    u64 [sp] = a5
 15456: b4 a0 02 bc 01           ra = 444, jump [a3]
      :                          @1082 [@dyn 222]
 15461: 82 1c                    a5 = u64 [sp]
 15463: 82 12 08                 t0 = u64 [sp + 0x8]
 15466: 64 6b                    a4 = s1
 15468: 33 0a 01                 a3 = 0x1
 15471: 33 06 01                 s1 = 0x1
 15474: 52 07 a1 00              jump @1092 if a0 != 0
      :                          @1083
 15478: 82 b7                    a0 = u64 [a4]
 15480: 7b 17 40                 u64 [sp + 0x40] = a0
 15483: 82 b7 08                 a0 = u64 [a4 + 0x8]
 15486: 7b 17 48                 u64 [sp + 0x48] = a0
 15489: 82 b7 10                 a0 = u64 [a4 + 0x10]
 15492: 7b 17 50                 u64 [sp + 0x50] = a0
 15495: 82 b7 18                 a0 = u64 [a4 + 0x18]
 15498: 82 b8 30                 a1 = u64 [a4 + 0x30]
 15501: 33 06 01                 s1 = 0x1
 15504: 7b 17 58                 u64 [sp + 0x58] = a0
 15507: 82 b7 20                 a0 = u64 [a4 + 0x20]
 15510: 7b 18 20                 u64 [sp + 0x20] = a1
 15513: 82 b8 38                 a1 = u64 [a4 + 0x38]
 15516: 78 16 3f                 u8 [sp + 0x3f] = s1
 15519: 7b 17 60                 u64 [sp + 0x60] = a0
 15522: 82 b7 28                 a0 = u64 [a4 + 0x28]
 15525: 7b 18 28                 u64 [sp + 0x28] = a1
 15528: 95 18 3f                 a1 = sp + 0x3f
 15531: 7b 18 30                 u64 [sp + 0x30] = a1
 15534: 7b 17 68                 u64 [sp + 0x68] = a0
 15537: 95 17 20                 a0 = sp + 0x20
 15540: 7b 17 70                 u64 [sp + 0x70] = a0
 15543: 33 07 d8 06 01           a0 = 0x106d8
 15548: 7b 17 78                 u64 [sp + 0x78] = a0
 15551: 95 17 20                 a0 = sp + 0x20
 15554: 64 c8                    a1 = a5
 15556: 64 29                    a2 = t0
 15558: 50 20 be 01 68           ra = 446, jump @1093
      :                          @1084 [@dyn 223]
 15563: 52 07 44                 jump @1091 if a0 != 0
      :                          @1085
 15566: 33 08 d2 06 01           a1 = 0x106d2
 15571: 95 17 20                 a0 = sp + 0x20
 15574: 33 09 02                 a2 = 0x2
 15577: 50 20 c0 01 55           ra = 448, jump @1093
      :                          @1086 [@dyn 224]
 15582: 52 07 31                 jump @1091 if a0 != 0
      :                          @1087
 15585: 95 18 40                 a1 = sp + 0x40
 15588: 82 17 10                 a0 = u64 [sp + 0x10]
 15591: 82 19 18                 a2 = u64 [sp + 0x18]
 15594: b4 90 02 c2 01           ra = 450, jump [a2]
      :                          @1088 [@dyn 225]
 15599: 52 07 20                 jump @1091 if a0 != 0
      :                          @1089
 15602: 82 18 78                 a1 = u64 [sp + 0x78]
 15605: 82 17 70                 a0 = u64 [sp + 0x70]
 15608: 82 8a 18                 a3 = u64 [a1 + 0x18]
 15611: 33 08 10 07 01           a1 = 0x10710
 15616: 33 09 02                 a2 = 0x2
 15619: b4 a0 02 c4 01           ra = 452, jump [a3]
      :                          @1090 [@dyn 226]
 15624: 64 76                    s1 = a0
 15626: 33 0a 01                 a3 = 0x1
 15629: 28 06                    jump @1092
      :                          @1091
 15631: 33 0a 01                 a3 = 0x1
 15634: 01                       fallthrough
      :                          @1092
 15635: 78 56 08                 u8 [s0 + 0x8] = s1
 15638: 46 15 09 01              u8 [s0 + 9] = 0x1
 15642: 64 57                    a0 = s0
 15644: 82 10 90 00              ra = u64 [sp + 0x90]
 15648: 82 15 88 00              s0 = u64 [sp + 0x88]
 15652: 82 16 80 00              s1 = u64 [sp + 0x80]
 15656: 95 11 98 00              sp = sp + 0x98
 15660: 32 00                    ret
      :                          @1093 [@dyn 227]
 15662: 95 11 80                 sp = sp + 0xffffffffffffff80
 15665: 7b 10 78                 u64 [sp + 0x78] = ra
 15668: 7b 15 70                 u64 [sp + 0x70] = s0
 15671: 7b 16 68                 u64 [sp + 0x68] = s1
 15674: 33 05                    s0 = 0
 15676: 33 04                    t2 = 0
 15678: 49 11 50                 u64 [sp + 80] = 0
 15681: 33 0b 0a 0a 0a 0a        a4 = 0xa0a0a0a
 15687: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
 15697: 14 0a 00 01 01 01 01 01 01 01 a3 = 0x101010101010100
 15707: 7b 1a 28                 u64 [sp + 0x28] = a3
 15710: 82 7a 10                 a3 = u64 [a0 + 0x10]
 15713: 7b 1a 48                 u64 [sp + 0x48] = a3
 15716: 82 7a                    a3 = u64 [a0]
 15718: 7b 1a 38                 u64 [sp + 0x38] = a3
 15721: 82 77 08                 a0 = u64 [a0 + 0x8]
 15724: 7b 17 30                 u64 [sp + 0x30] = a0
 15727: 7b 18 58                 u64 [sp + 0x58] = a1
 15730: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 15733: 7b 18                    u64 [sp] = a1
 15735: 14 07 80 80 80 80 80 80 80 80 a0 = 0x8080808080808080
 15745: 7b 17 60                 u64 [sp + 0x60] = a0
 15748: 9a 97                    a0 = -a2
 15750: 7b 17 08                 u64 [sp + 0x8] = a0
 15753: 33 06 0a                 s1 = 0xa
 15756: 7b 19 20                 u64 [sp + 0x20] = a2
 15759: 7b 10 18                 u64 [sp + 0x18] = ra
 15762: 28 3e                    jump @1097
      :                          @1094
 15764: 82 17                    a0 = u64 [sp]
 15766: c8 57 07                 a0 = a0 + s0
 15769: 7c 77                    a0 = u8 [a0]
 15771: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 15774: 88 77 01                 a0 = a0 <u 0x1
 15777: 01                       fallthrough
      :                          @1095
 15778: 82 18 48                 a1 = u64 [sp + 0x48]
 15781: 78 87                    u8 [a1] = a0
 15783: 82 17 30                 a0 = u64 [sp + 0x30]
 15786: 82 7a 18                 a3 = u64 [a0 + 0x18]
 15789: c9 45 09                 a2 = s0 - t2
 15792: 82 18 58                 a1 = u64 [sp + 0x58]
 15795: c8 48 08                 a1 = a1 + t2
 15798: 82 17 38                 a0 = u64 [sp + 0x38]
 15801: b4 a0 02 c8 01           ra = 456, jump [a3]
      :                          @1096 [@dyn 228]
 15806: 64 64                    t2 = s1
 15808: 82 19 20                 a2 = u64 [sp + 0x20]
 15811: 82 15 40                 s0 = u64 [sp + 0x40]
 15814: 82 10 18                 ra = u64 [sp + 0x18]
 15817: 33 06 0a                 s1 = 0xa
 15820: 52 07 5b 01              jump @1137 if a0 != 0
      :                          @1097
 15824: 82 17 50                 a0 = u64 [sp + 0x50]
 15827: 84 77 01                 a0 = a0 & 0x1
 15830: 52 07 4d 01              jump @1136 if a0 != 0
      :                          @1098
 15834: ac 59 fe 00              jump @1129 if a2 <u s0
      :                          @1099
 15838: 82 17 28                 a0 = u64 [sp + 0x28]
 15841: 28 09                    jump @1101
      :                          @1100
 15843: 82 17 28                 a0 = u64 [sp + 0x28]
 15846: ac 59 f2 00              jump @1129 if a2 <u s0
      :                          @1101
 15850: c9 59 02                 t0 = a2 - s0
 15853: 82 13 58                 t1 = u64 [sp + 0x58]
 15856: c8 53 03                 t1 = t1 + s0
 15859: 33 08 0f                 a1 = 0xf
 15862: ac 28 23                 jump @1107 if a1 <u t0
      :                          @1102
 15865: aa 59 dc 00              jump @1128 if a2 == s0
      :                          @1103
 15869: 33 08                    a1 = 0
 15871: 82 1c 08                 a5 = u64 [sp + 0x8]
 15874: c8 5c 0c                 a5 = a5 + s0
 15877: 64 3a                    a3 = t1
 15879: 01                       fallthrough
      :                          @1104
 15880: 7c ab                    a4 = u8 [a3]
 15882: aa 6b 39                 jump @1113 if a4 == s1
      :                          @1105
 15885: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 15888: 95 aa 01                 a3 = a3 + 0x1
 15891: ab 8c f5                 jump @1104 if a5 != a1
      :                          @1106
 15894: 28 bf 00                 jump @1128
      :                          @1107
 15897: 95 3b 07                 a4 = t1 + 0x7
 15900: 84 bb f8                 a4 = a4 & 0xfffffffffffffff8
 15903: c9 3b 08                 a1 = a4 - t1
 15906: 51 08 2f                 jump @1116 if a1 == 0
      :                          @1108
 15909: 33 0a                    a3 = 0
 15911: 01                       fallthrough
      :                          @1109
 15912: c8 a3 0c                 a5 = t1 + a3
 15915: 7c cc                    a5 = u8 [a5]
 15917: aa 6c 19                 jump @1114 if a5 == s1
      :                          @1110
 15920: 95 aa 01                 a3 = a3 + 0x1
 15923: ab a8 f5                 jump @1109 if a1 != a3
      :                          @1111
 15926: 7b 14 50                 u64 [sp + 0x50] = t2
 15929: 64 54                    t2 = s0
 15931: 95 2a f0                 a3 = t0 + 0xfffffffffffffff0
 15934: ae 8a 20                 jump @1117 if a3 >=u a1
      :                          @1112
 15937: 28 4d                    jump @1120
      :                          @1113
 15939: 9a 8a                    a3 = -a1
 15941: 01                       fallthrough
      :                          @1114
 15942: c8 a5 08                 a1 = s0 + a3
 15945: 95 85 01                 s0 = a1 + 0x1
 15948: ae 98 97                 jump @1100 if a1 >=u a2
      :                          @1115
 15951: 28 74                    jump @1126
      :                          @1116
 15953: 7b 14 50                 u64 [sp + 0x50] = t2
 15956: 64 54                    t2 = s0
 15958: 95 2a f0                 a3 = t0 + 0xfffffffffffffff0
 15961: 95 bb 08                 a4 = a4 + 0x8
 15964: 28 06                    jump @1118
      :                          @1117
 15966: 95 bb 08                 a4 = a4 + 0x8
 15969: 01                       fallthrough
      :                          @1118
 15970: 82 bc f8                 a5 = u64 [a4 + 0xfffffffffffffff8]
 15973: 82 b6                    s1 = u64 [a4]
 15975: d3 0c 05                 s0 = a5 ^ ra
 15978: c9 57 05                 s0 = a0 - s0
 15981: d4 5c 0c                 a5 = a5 | s0
 15984: d3 06 06                 s1 = s1 ^ ra
 15987: c9 67 05                 s0 = a0 - s1
 15990: d4 65 05                 s0 = s0 | s1
 15993: d2 5c 0c                 a5 = a5 & s0
 15996: 82 15 60                 s0 = u64 [sp + 0x60]
 15999: d2 5c 0c                 a5 = a5 & s0
 16002: ab 5c 0c                 jump @1120 if a5 != s0
      :                          @1119
 16005: 95 88 10                 a1 = a1 + 0x10
 16008: 95 bb 10                 a4 = a4 + 0x10
 16011: ae 8a d7                 jump @1118 if a3 >=u a1
      :                          @1120
 16014: aa 28 8e 00              jump @1135 if a1 == t0
      :                          @1121
 16018: 33 0a                    a3 = 0
 16020: c8 83 07                 a0 = t1 + a1
 16023: c9 89 0b                 a4 = a2 - a1
 16026: 64 45                    s0 = t2
 16028: c9 4b 0b                 a4 = a4 - t2
 16031: 82 14 50                 t2 = u64 [sp + 0x50]
 16034: 33 06 0a                 s1 = 0xa
 16037: 01                       fallthrough
      :                          @1122
 16038: c8 a7 0c                 a5 = a0 + a3
 16041: 7c cc                    a5 = u8 [a5]
 16043: aa 6c 0b                 jump @1125 if a5 == s1
      :                          @1123
 16046: 95 aa 01                 a3 = a3 + 0x1
 16049: ab ab f5                 jump @1122 if a4 != a3
      :                          @1124
 16052: 28 21                    jump @1128
      :                          @1125
 16054: c8 8a 0a                 a3 = a3 + a1
 16057: c8 a5 08                 a1 = s0 + a3
 16060: 95 85 01                 s0 = a1 + 0x1
 16063: ae 98 24 ff              jump @1100 if a1 >=u a2
      :                          @1126
 16067: c8 a3 07                 a0 = t1 + a3
 16070: 7c 77                    a0 = u8 [a0]
 16072: ab 67 1b ff              jump @1100 if a0 != s1
      :                          @1127
 16076: 33 07                    a0 = 0
 16078: 64 56                    s1 = s0
 16080: 7b 15 40                 u64 [sp + 0x40] = s0
 16083: 28 12                    jump @1130
      :                          @1128
 16085: 64 95                    s0 = a2
 16087: 01                       fallthrough
      :                          @1129
 16088: 7b 15 40                 u64 [sp + 0x40] = s0
 16091: 33 07 01                 a0 = 0x1
 16094: 64 46                    s1 = t2
 16096: 64 95                    s0 = a2
 16098: aa 94 41                 jump @1136 if t2 == a2
      :                          @1130
 16101: 7b 17 50                 u64 [sp + 0x50] = a0
 16104: 82 17 48                 a0 = u64 [sp + 0x48]
 16107: 7c 77                    a0 = u8 [a0]
 16109: 51 07 26                 jump @1133 if a0 == 0
      :                          @1131
 16112: 82 17 30                 a0 = u64 [sp + 0x30]
 16115: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16118: 33 09 04                 a2 = 0x4
 16121: 82 17 38                 a0 = u64 [sp + 0x38]
 16124: 33 08 d5 00 01           a1 = 0x100d5
 16129: 7b 16 10                 u64 [sp + 0x10] = s1
 16132: 64 46                    s1 = t2
 16134: b4 a0 02 ca 01           ra = 458, jump [a3]
      :                          @1132 [@dyn 229]
 16139: 64 64                    t2 = s1
 16141: 82 16 10                 s1 = u64 [sp + 0x10]
 16144: 52 07 17                 jump @1137 if a0 != 0
      :                          @1133
 16147: ab 45 81 fe              jump @1094 if s0 != t2
      :                          @1134
 16151: 33 07                    a0 = 0
 16153: 28 89 fe                 jump @1095
      :                          @1135
 16156: 64 95                    s0 = a2
 16158: 82 14 50                 t2 = u64 [sp + 0x50]
 16161: 28 b7                    jump @1129
      :                          @1136
 16163: 33 07                    a0 = 0
 16165: 28 06                    jump @1138
      :                          @1137
 16167: 33 07 01                 a0 = 0x1
 16170: 01                       fallthrough
      :                          @1138
 16171: 82 10 78                 ra = u64 [sp + 0x78]
 16174: 82 15 70                 s0 = u64 [sp + 0x70]
 16177: 82 16 68                 s1 = u64 [sp + 0x68]
 16180: 95 11 80 00              sp = sp + 0x80
 16184: 32 00                    ret
      :                          @1139 [@dyn 230]
 16186: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 16189: 7b 10 20                 u64 [sp + 0x20] = ra
 16192: 7b 15 18                 u64 [sp + 0x18] = s0
 16195: 7b 16 10                 u64 [sp + 0x10] = s1
 16198: 82 76 10                 s1 = u64 [a0 + 0x10]
 16201: 7c 69                    a2 = u8 [s1]
 16203: 82 7a                    a3 = u64 [a0]
 16205: 82 75 08                 s0 = u64 [a0 + 0x8]
 16208: 51 09 38                 jump @1143 if a2 == 0
      :                          @1140
 16211: 82 5b 18                 a4 = u64 [s0 + 0x18]
 16214: 33 0c d5 00 01           a5 = 0x100d5
 16219: 33 09 04                 a2 = 0x4
 16222: 64 a7                    a0 = a3
 16224: 7b 18 08                 u64 [sp + 0x8] = a1
 16227: 33 08 d5 00 01           a1 = 0x100d5
 16232: 7b 1a                    u64 [sp] = a3
 16234: b4 b0 02 ce 01           ra = 462, jump [a4]
      :                          @1141 [@dyn 231]
 16239: 82 1a                    a3 = u64 [sp]
 16241: 82 18 08                 a1 = u64 [sp + 0x8]
 16244: 51 07 14                 jump @1143 if a0 == 0
      :                          @1142
 16247: 33 07 01                 a0 = 0x1
 16250: 82 10 20                 ra = u64 [sp + 0x20]
 16253: 82 15 18                 s0 = u64 [sp + 0x18]
 16256: 82 16 10                 s1 = u64 [sp + 0x10]
 16259: 95 11 28                 sp = sp + 0x28
 16262: 32 00                    ret
      :                          @1143
 16264: 95 87 f6                 a0 = a1 + 0xfffffffffffffff6
 16267: 88 77 01                 a0 = a0 <u 0x1
 16270: 78 67                    u8 [s1] = a0
 16272: 82 5c 20                 a5 = u64 [s0 + 0x20]
 16275: 64 a7                    a0 = a3
 16277: 82 10 20                 ra = u64 [sp + 0x20]
 16280: 82 15 18                 s0 = u64 [sp + 0x18]
 16283: 82 16 10                 s1 = u64 [sp + 0x10]
 16286: 95 11 28                 sp = sp + 0x28
 16289: 32 0c                    jump [a5]
      :                          @1144 [@dyn 232]
 16291: 64 8a                    a3 = a1
 16293: 33 08 d8 06 01           a1 = 0x106d8
 16298: 64 a9                    a2 = a3
 16300: 28 ce f5                 jump @956
      :                          @1145
 16303: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 16306: 7b 10 08                 u64 [sp + 0x8] = ra
 16309: 64 83                    t1 = a1
 16311: 6e 7b                    a4 = zext.h a0
 16313: 97 7a 30                 a3 = a0 << 0x30
 16316: 33 02 1c 07 01           t0 = 0x1071c
 16321: 55 2b e8 03 1e           jump @1148 if a4 >=u 1000
      :                          @1146
 16326: 53 1b 0a 72              jump @1151 if a4 <u 10
      :                          @1147
 16330: 98 a8 32                 a1 = a3 >> 0x32
 16333: 96 8b 7b 14              a4 = a1 * 0x147b
 16337: 98 bb 11                 a4 = a4 >> 0x11
 16340: 96 b8 9c                 a1 = a4 * 0xffffffffffffff9c
 16343: c8 87 07                 a0 = a0 + a1
 16346: 33 0c 03                 a5 = 0x3
 16349: 28 42                    jump @1149
      :                          @1148
 16351: 98 ab 34                 a4 = a3 >> 0x34
 16354: 96 bb 47 03              a4 = a4 * 0x347
 16358: 98 bb 13                 a4 = a4 >> 0x13
 16361: 96 bc f0 d8              a5 = a4 * 0xffffffffffffd8f0
 16365: c8 c7 07                 a0 = a0 + a5
 16368: 97 7c 30                 a5 = a0 << 0x30
 16371: 98 cc 32                 a5 = a5 >> 0x32
 16374: 96 c8 7b 14              a1 = a5 * 0x147b
 16378: 98 8c 10                 a5 = a1 >> 0x10
 16381: 98 88 11                 a1 = a1 >> 0x11
 16384: 33 04 9c                 t2 = 0xffffffffffffff9c
 16387: 84 cc fe 07              a5 = a5 & 0x7fe
 16391: c8 2c 0c                 a5 = a5 + t0
 16394: 7c c9                    a2 = u8 [a5]
 16396: 7c cc 01                 a5 = u8 [a5 + 0x1]
 16399: ca 48 08                 a1 = a1 * t2
 16402: c8 87 07                 a0 = a0 + a1
 16405: 78 19 04                 u8 [sp + 0x4] = a2
 16408: 78 1c 05                 u8 [sp + 0x5] = a5
 16411: 33 0c 01                 a5 = 0x1
 16414: 01                       fallthrough
      :                          @1149
 16415: 97 77 31                 a0 = a0 << 0x31
 16418: 98 77 30                 a0 = a0 >> 0x30
 16421: c8 27 07                 a0 = a0 + t0
 16424: 7c 78                    a1 = u8 [a0]
 16426: 7c 77 01                 a0 = u8 [a0 + 0x1]
 16429: 78 18 06                 u8 [sp + 0x6] = a1
 16432: 78 17 07                 u8 [sp + 0x7] = a0
 16435: 52 0a 0d                 jump @1152 if a3 != 0
      :                          @1150
 16438: 28 10                    jump @1153
      :                          @1151
 16440: 33 0c 05                 a5 = 0x5
 16443: 64 7b                    a4 = a0
 16445: 51 0a 09                 jump @1153 if a3 == 0
      :                          @1152
 16448: 97 b7 30                 a0 = a4 << 0x30
 16451: 51 07 1b                 jump @1154 if a0 == 0
      :                          @1153
 16454: 97 bb 01                 a4 = a4 << 0x1
 16457: 84 bb 1e                 a4 = a4 & 0x1e
 16460: c8 2b 0b                 a4 = a4 + t0
 16463: 7c b7 01                 a0 = u8 [a4 + 0x1]
 16466: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 16469: 95 18 03                 a1 = sp + 0x3
 16472: c8 c8 08                 a1 = a1 + a5
 16475: 78 87                    u8 [a1] = a0
 16477: 01                       fallthrough
      :                          @1154
 16478: 9a cb 05                 a4 = 0x5 - a5
 16481: 95 1a 03                 a3 = sp + 0x3
 16484: c8 ca 0a                 a3 = a3 + a5
 16487: 33 08 01                 a1 = 0x1
 16490: 64 37                    a0 = t1
 16492: 33 09                    a2 = 0
 16494: 50 20 d2 01 13 ef        ra = 466, jump @834
      :                          @1155 [@dyn 233]
 16500: 82 10 08                 ra = u64 [sp + 0x8]
 16503: 95 11 10                 sp = sp + 0x10
 16506: 32 00                    ret
      :                          @1156
 16508: 00                       trap
      :                          @1157 [@dyn 234]
 16509: 00                       trap
      :                          @1158
 16510: 33 0c 01 01              a5 = 0x101
 16514: ac c8 36                 jump @1163 if a1 <u a5
      :                          @1159
 16517: 7d 73 00 01              t1 = i8 [a0 + 0x100]
 16521: 33 02 bf                 t0 = 0xffffffffffffffbf
 16524: 33 04 00 01              t2 = 0x100
 16528: ad 32 1e                 jump @1162 if t0 <s t1
      :                          @1160
 16531: 7d 73 ff 00              t1 = i8 [a0 + 0xff]
 16535: 33 04 ff 00              t2 = 0xff
 16539: 5a 13 bf 13              jump @1162 if t1 >s 4294967231
      :                          @1161
 16543: 7d 7c fe 00              a5 = i8 [a0 + 0xfe]
 16547: 89 cc c0                 a5 = a5 <s 0xffffffffffffffc0
 16550: 85 cc 01                 a5 = a5 ^ 0x1
 16553: 95 c4 fd 00              t2 = a5 + 0xfd
 16557: 01                       fallthrough
      :                          @1162
 16558: c8 47 0c                 a5 = a0 + t2
 16561: 7d cc                    a5 = i8 [a5]
 16563: 58 1c bf a9 00           jump @1186 if a5 <=s 4294967231
      :                          @1163
 16568: ac 98 a3 00              jump @1185 if a1 <u a2
      :                          @1164
 16572: ac a8 9f 00              jump @1185 if a1 <u a3
      :                          @1165
 16576: ac 9a 9b 00              jump @1185 if a3 <u a2
      :                          @1166
 16580: 51 09 12                 jump @1169 if a2 == 0
      :                          @1167
 16583: ae 89 0f                 jump @1169 if a2 >=u a1
      :                          @1168
 16586: c8 97 0c                 a5 = a0 + a2
 16589: 7d cc                    a5 = i8 [a5]
 16591: 89 cc c0                 a5 = a5 <s 0xffffffffffffffc0
 16594: db c9 0a                 a3 = a2 if a5 != 0
 16597: 01                       fallthrough
      :                          @1169
 16598: 64 89                    a2 = a1
 16600: ae 8a 2e                 jump @1175 if a3 >=u a1
      :                          @1170
 16603: 33 09 03                 a2 = 0x3
 16606: e4 9a 02                 t0 = maxu(a3, a2)
 16609: 95 22 fd                 t0 = t0 + 0xfffffffffffffffd
 16612: 95 ac 01                 a5 = a3 + 0x1
 16615: ac 2c 95                 jump @1156 if a5 <u t0
      :                          @1171
 16618: c9 2c 0c                 a5 = a5 - t0
 16621: c8 7a 0a                 a3 = a3 + a0
 16624: 33 03 c0                 t1 = 0xffffffffffffffc0
 16627: 01                       fallthrough
      :                          @1172
 16628: 51 0c 0e                 jump @1174 if a5 == 0
      :                          @1173
 16631: 7d a9                    a2 = i8 [a3]
 16633: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 16636: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 16639: ad 39 f5                 jump @1172 if a2 <s t1
      :                          @1174
 16642: c8 2c 09                 a2 = a5 + t0
 16645: 01                       fallthrough
      :                          @1175
 16646: c8 97 0a                 a3 = a0 + a2
 16649: 52 09 07                 jump @1178 if a2 != 0
      :                          @1176
 16652: ab 89 0f                 jump @1181 if a2 != a1
      :                          @1177
 16655: 00                       trap
      :                          @1178
 16656: ae 89 57                 jump @1187 if a2 >=u a1
      :                          @1179
 16659: 7d a2                    t0 = i8 [a3]
 16661: 5a 12 bf f7              jump @1176 if t0 >s 4294967231
      :                          @1180
 16665: 28 51                    jump @1188
      :                          @1181
 16667: 7d a7                    a0 = i8 [a3]
 16669: 59 07 3e                 jump @1185 if a0 >=s 0
      :                          @1182
 16672: 84 77 ff 00              a0 = a0 & 0xff
 16676: 53 27 e0 00 37           jump @1185 if a0 <u 224
      :                          @1183
 16681: 53 27 f0 00 32           jump @1185 if a0 <u 240
      :                          @1184
 16686: 7c a8 01                 a1 = u8 [a3 + 0x1]
 16689: 7c a9 02                 a2 = u8 [a3 + 0x2]
 16692: 84 88 3f                 a1 = a1 & 0x3f
 16695: 84 99 3f                 a2 = a2 & 0x3f
 16698: 7c aa 03                 a3 = u8 [a3 + 0x3]
 16701: 97 77 3d                 a0 = a0 << 0x3d
 16704: 98 77 2b                 a0 = a0 >> 0x2b
 16707: 97 88 0c                 a1 = a1 << 0xc
 16710: 97 99 06                 a2 = a2 << 0x6
 16713: d4 98 08                 a1 = a1 | a2
 16716: 84 a9 3f                 a2 = a3 & 0x3f
 16719: d4 98 08                 a1 = a1 | a2
 16722: d4 87 07                 a0 = a0 | a1
 16725: 51 37 00 00 11 ba        jump @1177 if a0 == 1114112
      :                          @1185
 16731: 00                       trap
      :                          @1186
 16732: 33 09                    a2 = 0
 16734: 64 4a                    a3 = t2
 16736: 33 00 d4 01              ra = 0x1d4
 16740: 28 1a ff                 jump @1158
      :                          @1187
 16743: aa 89 a5                 jump @1176 if a2 == a1
      :                          @1188
 16746: 64 8a                    a3 = a1
 16748: 33 00 d4 01              ra = 0x1d4
 16752: 28 0e ff                 jump @1158
      :                          @1189 [@dyn 235]
 16755: 7b 79 08                 u64 [a0 + 0x8] = a2
 16758: 7b 7a 10                 u64 [a0 + 0x10] = a3
 16761: 49 17 18                 u64 [a0 + 24] = 0
 16764: 33 08 a0 11 01           a1 = 0x111a0
 16769: 7b 78                    u64 [a0] = a1
 16771: 32 00                    ret
      :                          @1190 [@dyn 236]
 16773: 33 07                    a0 = 0
 16775: 32 00                    ret
      :                          @1191 [@dyn 237]
 16777: 32 00                    ret
      :                          @1192
 16779: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 16782: 7b 10 40                 u64 [sp + 0x40] = ra
 16785: 7b 15 38                 u64 [sp + 0x38] = s0
 16788: 7b 16 30                 u64 [sp + 0x30] = s1
 16791: 64 75                    s0 = a0
 16793: 82 7b                    a4 = u64 [a0]
 16795: 95 b7 01                 a0 = a4 + 0x1
 16798: 97 ba 01                 a3 = a4 << 0x1
 16801: e4 a7 07                 a0 = maxu(a0, a3)
 16804: 33 08 04                 a1 = 0x4
 16807: e4 87 06                 s1 = maxu(a0, a1)
 16810: 33 07                    a0 = 0
 16812: 57 06 cf dd              jump @496 if s1 <s 0
      :                          @1193
 16816: 97 69 01                 a2 = s1 << 0x1
 16819: 14 0c fe ff ff ff ff ff ff 7f a5 = 0x7ffffffffffffffe
 16829: ac 9c be dd              jump @496 if a5 <u a2
      :                          @1194
 16833: 52 0b 07                 jump @1196 if a4 != 0
      :                          @1195
 16836: 33 07                    a0 = 0
 16838: 28 0f                    jump @1197
      :                          @1196
 16840: 82 57 08                 a0 = u64 [s0 + 0x8]
 16843: 7b 17 18                 u64 [sp + 0x18] = a0
 16846: 7b 1a 28                 u64 [sp + 0x28] = a3
 16849: 33 07 02                 a0 = 0x2
 16852: 01                       fallthrough
      :                          @1197
 16853: 7b 17 20                 u64 [sp + 0x20] = a0
 16856: 64 17                    a0 = sp
 16858: 33 08 02                 a1 = 0x2
 16861: 95 1a 18                 a3 = sp + 0x18
 16864: 50 20 dc 01 26           ra = 476, jump @1201
      :                          @1198 [@dyn 238]
 16869: 82 17                    a0 = u64 [sp]
 16871: 52 07 19                 jump @1200 if a0 != 0
      :                          @1199
 16874: 82 17 08                 a0 = u64 [sp + 0x8]
 16877: 7b 57 08                 u64 [s0 + 0x8] = a0
 16880: 7b 56                    u64 [s0] = s1
 16882: 82 10 40                 ra = u64 [sp + 0x40]
 16885: 82 15 38                 s0 = u64 [sp + 0x38]
 16888: 82 16 30                 s1 = u64 [sp + 0x30]
 16891: 95 11 48                 sp = sp + 0x48
 16894: 32 00                    ret
      :                          @1200
 16896: 82 17 08                 a0 = u64 [sp + 0x8]
 16899: 28 78 dd                 jump @496
      :                          @1201
 16902: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 16905: 7b 10 38                 u64 [sp + 0x38] = ra
 16908: 7b 15 30                 u64 [sp + 0x30] = s0
 16911: 7b 16 28                 u64 [sp + 0x28] = s1
 16914: 82 ab 08                 a4 = u64 [a3 + 0x8]
 16917: 51 0b b2 00              jump @1217 if a4 == 0
      :                          @1202
 16921: 82 a6 10                 s1 = u64 [a3 + 0x10]
 16924: 51 06 0f 01              jump @1228 if s1 == 0
      :                          @1203
 16928: 66 8b                    a4 = cpop a1
 16930: 33 0c 01                 a5 = 0x1
 16933: ab cb 68 01              jump @1239 if a4 != a5
      :                          @1204
 16937: 7b 16 18                 u64 [sp + 0x18] = s1
 16940: 82 aa                    a3 = u64 [a3]
 16942: 7b 1a 20                 u64 [sp + 0x20] = a3
 16945: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 16948: 33 03 00 00 00 08        t1 = 0x8000000
 16954: 33 04 20 00 03           t2 = 0x30020
 16959: c8 34 04                 t2 = t2 + t1
 16962: 01                       fallthrough
      :                          @1205
 16963: 82 4b                    a4 = u64 [t2]
 16965: c8 9b 0a                 a3 = a4 + a2
 16968: ac ba 45 01              jump @1239 if a3 <u a4
      :                          @1206
 16972: c8 8a 0c                 a5 = a3 + a1
 16975: 33 05                    s0 = 0
 16977: ac ac 43 01              jump @1241 if a5 <u a3
      :                          @1207
 16981: ac c3 3f 01              jump @1241 if t1 <u a5
      :                          @1208
 16985: 33 05 20 00 03           s0 = 0x30020
 16990: c9 a5 05                 s0 = s0 - a3
 16993: c8 35 00                 ra = s0 + t1
 16996: d2 02 0c                 a5 = t0 & ra
 16999: c8 ca 0a                 a3 = a3 + a5
 17002: 01                       fallthrough
      :                          @1209
 17003: 82 46                    s1 = u64 [t2]
 17005: ab b6 d6                 jump @1205 if s1 != a4
      :                          @1210
 17008: 7b 4a                    u64 [t2] = a3
 17010: 7b 18 10                 u64 [sp + 0x10] = a1
 17013: 7b 19 08                 u64 [sp + 0x8] = a2
 17016: c9 c0 05                 s0 = ra - a5
 17019: 7b 17                    u64 [sp] = a0
 17021: 64 57                    a0 = s0
 17023: 82 18 20                 a1 = u64 [sp + 0x20]
 17026: 82 16 18                 s1 = u64 [sp + 0x18]
 17029: 64 69                    a2 = s1
 17031: 50 20 de 01 07 14        ra = 478, jump @1602
      :                          @1211 [@dyn 239]
 17037: 64 62                    t0 = s1
 17039: 82 16 20                 s1 = u64 [sp + 0x20]
 17042: 82 17                    a0 = u64 [sp]
 17044: 33 09 20 00 03           a2 = 0x30020
 17049: 95 98 00 00 00 08        a1 = a2 + 0x8000000
 17055: 01                       fallthrough
      :                          @1212
 17056: 82 89                    a2 = u64 [a1]
 17058: c9 98 0a                 a3 = a1 - a2
 17061: ab 6a 19                 jump @1216 if a3 != s1
      :                          @1213
 17064: c9 29 0a                 a3 = a2 - t0
 17067: 01                       fallthrough
      :                          @1214
 17068: 82 8b                    a4 = u64 [a1]
 17070: ab 9b f2                 jump @1212 if a4 != a2
      :                          @1215
 17073: 7b 8a                    u64 [a1] = a3
 17075: 33 0c                    a5 = 0
 17077: 82 19 08                 a2 = u64 [sp + 0x8]
 17080: 82 18 10                 a1 = u64 [sp + 0x10]
 17083: 28 d9 00                 jump @1241
      :                          @1216
 17086: 82 19 08                 a2 = u64 [sp + 0x8]
 17089: 82 18 10                 a1 = u64 [sp + 0x10]
 17092: 28 d0 00                 jump @1241
      :                          @1217
 17095: 51 09 ca 00              jump @1240 if a2 == 0
      :                          @1218
 17099: 66 8a                    a3 = cpop a1
 17101: 33 0b 01                 a4 = 0x1
 17104: ab ba bd 00              jump @1239 if a3 != a4
      :                          @1219
 17108: 95 83 ff                 t1 = a1 + 0xffffffffffffffff
 17111: 33 04 00 00 00 08        t2 = 0x8000000
 17117: 33 02 20 00 03           t0 = 0x30020
 17122: c8 42 00                 ra = t0 + t2
 17125: 01                       fallthrough
      :                          @1220
 17126: 82 0a                    a3 = u64 [ra]
 17128: c8 9a 0c                 a5 = a3 + a2
 17131: ac ac a2 00              jump @1239 if a5 <u a3
      :                          @1221
 17135: c8 8c 06                 s1 = a5 + a1
 17138: 33 05                    s0 = 0
 17140: ac c6 a0 00              jump @1241 if s1 <u a5
      :                          @1222
 17144: 56 46 00 00 00 08 9c 00  jump @1241 if s1 >u 134217728
      :                          @1223
 17152: c9 c2 06                 s1 = t0 - a5
 17155: 95 66 00 00 00 08        s1 = s1 + 0x8000000
 17161: d2 63 05                 s0 = t1 & s1
 17164: c8 5c 0c                 a5 = a5 + s0
 17167: 64 34                    t2 = t1
 17169: 64 23                    t1 = t0
 17171: 01                       fallthrough
      :                          @1224
 17172: 82 0b                    a4 = u64 [ra]
 17174: ab ab 06                 jump @1226 if a4 != a3
      :                          @1225
 17177: 7b 0c                    u64 [ra] = a5
 17179: 01                       fallthrough
      :                          @1226
 17180: 64 32                    t0 = t1
 17182: 64 43                    t1 = t2
 17184: 33 04 00 00 00 08        t2 = 0x8000000
 17190: ab ab c0                 jump @1220 if a4 != a3
      :                          @1227
 17193: 28 5f                    jump @1238
      :                          @1228
 17195: 51 09 66                 jump @1240 if a2 == 0
      :                          @1229
 17198: 66 8a                    a3 = cpop a1
 17200: 33 0b 01                 a4 = 0x1
 17203: ab ba 5a                 jump @1239 if a3 != a4
      :                          @1230
 17206: 95 83 ff                 t1 = a1 + 0xffffffffffffffff
 17209: 33 04 00 00 00 08        t2 = 0x8000000
 17215: 33 02 20 00 03           t0 = 0x30020
 17220: c8 42 00                 ra = t0 + t2
 17223: 01                       fallthrough
      :                          @1231
 17224: 82 0a                    a3 = u64 [ra]
 17226: c8 9a 0c                 a5 = a3 + a2
 17229: ac ac 40                 jump @1239 if a5 <u a3
      :                          @1232
 17232: c8 8c 06                 s1 = a5 + a1
 17235: 33 05                    s0 = 0
 17237: ac c6 3f                 jump @1241 if s1 <u a5
      :                          @1233
 17240: 56 46 00 00 00 08 3c     jump @1241 if s1 >u 134217728
      :                          @1234
 17247: c9 c2 06                 s1 = t0 - a5
 17250: 95 66 00 00 00 08        s1 = s1 + 0x8000000
 17256: d2 63 05                 s0 = t1 & s1
 17259: c8 5c 0c                 a5 = a5 + s0
 17262: 64 34                    t2 = t1
 17264: 64 23                    t1 = t0
 17266: 01                       fallthrough
      :                          @1235
 17267: 82 0b                    a4 = u64 [ra]
 17269: ab ab 06                 jump @1237 if a4 != a3
      :                          @1236
 17272: 7b 0c                    u64 [ra] = a5
 17274: 01                       fallthrough
      :                          @1237
 17275: 64 32                    t0 = t1
 17277: 64 43                    t1 = t2
 17279: 33 04 00 00 00 08        t2 = 0x8000000
 17285: ab ab c3                 jump @1231 if a4 != a3
      :                          @1238
 17288: c9 56 05                 s0 = s1 - s0
 17291: 28 09                    jump @1241
      :                          @1239
 17293: 33 05                    s0 = 0
 17295: 28 05                    jump @1241
      :                          @1240
 17297: 64 85                    s0 = a1
 17299: 01                       fallthrough
      :                          @1241
 17300: 88 5a 01                 a3 = s0 <u 0x1
 17303: db 55 08                 a1 = s0 if s0 != 0
 17306: 7b 78 08                 u64 [a0 + 0x8] = a1
 17309: 7b 79 10                 u64 [a0 + 0x10] = a2
 17312: 7b 7a                    u64 [a0] = a3
 17314: 82 10 38                 ra = u64 [sp + 0x38]
 17317: 82 15 30                 s0 = u64 [sp + 0x30]
 17320: 82 16 28                 s1 = u64 [sp + 0x28]
 17323: 95 11 40                 sp = sp + 0x40
 17326: 32 00                    ret
      :                          @1242
 17328: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 17331: 7b 10 40                 u64 [sp + 0x40] = ra
 17334: 7b 15 38                 u64 [sp + 0x38] = s0
 17337: 7b 16 30                 u64 [sp + 0x30] = s1
 17340: 64 75                    s0 = a0
 17342: 82 7a                    a3 = u64 [a0]
 17344: 95 a7 01                 a0 = a3 + 0x1
 17347: 97 a8 01                 a1 = a3 << 0x1
 17350: e4 87 08                 a1 = maxu(a0, a1)
 17353: 98 89 3d                 a2 = a1 >> 0x3d
 17356: 33 07                    a0 = 0
 17358: 52 09 ad db              jump @496 if a2 != 0
      :                          @1243
 17362: 33 09 04                 a2 = 0x4
 17365: e4 98 06                 s1 = maxu(a1, a2)
 17368: 97 69 03                 a2 = s1 << 0x3
 17371: 14 0b f8 ff ff ff ff ff ff 7f a4 = 0x7ffffffffffffff8
 17381: ac 9b 96 db              jump @496 if a4 <u a2
      :                          @1244
 17385: 52 0a 07                 jump @1246 if a3 != 0
      :                          @1245
 17388: 33 07                    a0 = 0
 17390: 28 12                    jump @1247
      :                          @1246
 17392: 82 57 08                 a0 = u64 [s0 + 0x8]
 17395: 97 aa 03                 a3 = a3 << 0x3
 17398: 7b 17 18                 u64 [sp + 0x18] = a0
 17401: 7b 1a 28                 u64 [sp + 0x28] = a3
 17404: 33 07 08                 a0 = 0x8
 17407: 01                       fallthrough
      :                          @1247
 17408: 7b 17 20                 u64 [sp + 0x20] = a0
 17411: 64 17                    a0 = sp
 17413: 33 08 08                 a1 = 0x8
 17416: 95 1a 18                 a3 = sp + 0x18
 17419: 50 20 e0 01 fb fd        ra = 480, jump @1201
      :                          @1248 [@dyn 240]
 17425: 82 17                    a0 = u64 [sp]
 17427: 52 07 19                 jump @1250 if a0 != 0
      :                          @1249
 17430: 82 17 08                 a0 = u64 [sp + 0x8]
 17433: 7b 57 08                 u64 [s0 + 0x8] = a0
 17436: 7b 56                    u64 [s0] = s1
 17438: 82 10 40                 ra = u64 [sp + 0x40]
 17441: 82 15 38                 s0 = u64 [sp + 0x38]
 17444: 82 16 30                 s1 = u64 [sp + 0x30]
 17447: 95 11 48                 sp = sp + 0x48
 17450: 32 00                    ret
      :                          @1250
 17452: 82 17 08                 a0 = u64 [sp + 0x8]
 17455: 28 4c db                 jump @496
      :                          @1251
 17458: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 17461: 7b 10 40                 u64 [sp + 0x40] = ra
 17464: 7b 15 38                 u64 [sp + 0x38] = s0
 17467: 7b 16 30                 u64 [sp + 0x30] = s1
 17470: 64 75                    s0 = a0
 17472: 82 7a                    a3 = u64 [a0]
 17474: 95 a7 01                 a0 = a3 + 0x1
 17477: 97 a8 01                 a1 = a3 << 0x1
 17480: e4 87 08                 a1 = maxu(a0, a1)
 17483: 98 89 3b                 a2 = a1 >> 0x3b
 17486: 33 07                    a0 = 0
 17488: 52 09 2b db              jump @496 if a2 != 0
      :                          @1252
 17492: 33 09 04                 a2 = 0x4
 17495: e4 98 06                 s1 = maxu(a1, a2)
 17498: 97 69 05                 a2 = s1 << 0x5
 17501: 14 0b f8 ff ff ff ff ff ff 7f a4 = 0x7ffffffffffffff8
 17511: ac 9b 14 db              jump @496 if a4 <u a2
      :                          @1253
 17515: 52 0a 07                 jump @1255 if a3 != 0
      :                          @1254
 17518: 33 07                    a0 = 0
 17520: 28 12                    jump @1256
      :                          @1255
 17522: 82 57 08                 a0 = u64 [s0 + 0x8]
 17525: 97 aa 05                 a3 = a3 << 0x5
 17528: 7b 17 18                 u64 [sp + 0x18] = a0
 17531: 7b 1a 28                 u64 [sp + 0x28] = a3
 17534: 33 07 08                 a0 = 0x8
 17537: 01                       fallthrough
      :                          @1256
 17538: 7b 17 20                 u64 [sp + 0x20] = a0
 17541: 64 17                    a0 = sp
 17543: 33 08 08                 a1 = 0x8
 17546: 95 1a 18                 a3 = sp + 0x18
 17549: 50 20 e2 01 79 fd        ra = 482, jump @1201
      :                          @1257 [@dyn 241]
 17555: 82 17                    a0 = u64 [sp]
 17557: 52 07 19                 jump @1259 if a0 != 0
      :                          @1258
 17560: 82 17 08                 a0 = u64 [sp + 0x8]
 17563: 7b 57 08                 u64 [s0 + 0x8] = a0
 17566: 7b 56                    u64 [s0] = s1
 17568: 82 10 40                 ra = u64 [sp + 0x40]
 17571: 82 15 38                 s0 = u64 [sp + 0x38]
 17574: 82 16 30                 s1 = u64 [sp + 0x30]
 17577: 95 11 48                 sp = sp + 0x48
 17580: 32 00                    ret
      :                          @1259
 17582: 82 17 08                 a0 = u64 [sp + 0x8]
 17585: 28 ca da                 jump @496
      :                          @1260
 17588: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 17591: 7b 10 40                 u64 [sp + 0x40] = ra
 17594: 7b 15 38                 u64 [sp + 0x38] = s0
 17597: 7b 16 30                 u64 [sp + 0x30] = s1
 17600: 64 75                    s0 = a0
 17602: 82 7a                    a3 = u64 [a0]
 17604: 95 a7 01                 a0 = a3 + 0x1
 17607: 97 a8 01                 a1 = a3 << 0x1
 17610: e4 87 08                 a1 = maxu(a0, a1)
 17613: 98 89 3e                 a2 = a1 >> 0x3e
 17616: 33 07                    a0 = 0
 17618: 52 09 a9 da              jump @496 if a2 != 0
      :                          @1261
 17622: 33 09 04                 a2 = 0x4
 17625: e4 98 06                 s1 = maxu(a1, a2)
 17628: 97 69 02                 a2 = s1 << 0x2
 17631: 14 0b fe ff ff ff ff ff ff 7f a4 = 0x7ffffffffffffffe
 17641: ac 9b 92 da              jump @496 if a4 <u a2
      :                          @1262
 17645: 52 0a 07                 jump @1264 if a3 != 0
      :                          @1263
 17648: 33 07                    a0 = 0
 17650: 28 12                    jump @1265
      :                          @1264
 17652: 82 57 08                 a0 = u64 [s0 + 0x8]
 17655: 97 aa 02                 a3 = a3 << 0x2
 17658: 7b 17 18                 u64 [sp + 0x18] = a0
 17661: 7b 1a 28                 u64 [sp + 0x28] = a3
 17664: 33 07 02                 a0 = 0x2
 17667: 01                       fallthrough
      :                          @1265
 17668: 7b 17 20                 u64 [sp + 0x20] = a0
 17671: 64 17                    a0 = sp
 17673: 33 08 02                 a1 = 0x2
 17676: 95 1a 18                 a3 = sp + 0x18
 17679: 50 20 e4 01 f7 fc        ra = 484, jump @1201
      :                          @1266 [@dyn 242]
 17685: 82 17                    a0 = u64 [sp]
 17687: 52 07 19                 jump @1268 if a0 != 0
      :                          @1267
 17690: 82 17 08                 a0 = u64 [sp + 0x8]
 17693: 7b 57 08                 u64 [s0 + 0x8] = a0
 17696: 7b 56                    u64 [s0] = s1
 17698: 82 10 40                 ra = u64 [sp + 0x40]
 17701: 82 15 38                 s0 = u64 [sp + 0x38]
 17704: 82 16 30                 s1 = u64 [sp + 0x30]
 17707: 95 11 48                 sp = sp + 0x48
 17710: 32 00                    ret
      :                          @1268
 17712: 82 17 08                 a0 = u64 [sp + 0x8]
 17715: 28 48 da                 jump @496
      :                          @1269
 17718: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 17721: 7b 10 38                 u64 [sp + 0x38] = ra
 17724: 7b 15 30                 u64 [sp + 0x30] = s0
 17727: 7b 16 28                 u64 [sp + 0x28] = s1
 17730: ac 9a 62                 jump @1276 if a3 <u a2
      :                          @1270
 17733: 64 a6                    s1 = a3
 17735: 82 8a 10                 a3 = u64 [a1 + 0x10]
 17738: ac 6a 5a                 jump @1276 if a3 <u s1
      :                          @1271
 17741: 64 75                    s0 = a0
 17743: ab 96 16                 jump @1273 if s1 != a2
      :                          @1272
 17746: 49 15 08 01              u64 [s0 + 8] = 0x1
 17750: 49 15 10                 u64 [s0 + 16] = 0
 17753: 49 15 18                 u64 [s0 + 24] = 0
 17756: 33 07 a0 11 01           a0 = 0x111a0
 17761: 7b 57                    u64 [s0] = a0
 17763: 28 33                    jump @1275
      :                          @1273
 17765: 82 87                    a0 = u64 [a1]
 17767: 82 7b                    a4 = u64 [a0]
 17769: 7b 19                    u64 [sp] = a2
 17771: 82 89 08                 a2 = u64 [a1 + 0x8]
 17774: 95 88 18                 a1 = a1 + 0x18
 17777: 95 17 08                 a0 = sp + 0x8
 17780: b4 b0 02 e6 01           ra = 486, jump [a4]
      :                          @1274 [@dyn 243]
 17785: 82 17 10                 a0 = u64 [sp + 0x10]
 17788: 82 1b                    a4 = u64 [sp]
 17790: c9 b6 08                 a1 = s1 - a4
 17793: 82 19 08                 a2 = u64 [sp + 0x8]
 17796: 82 1a 20                 a3 = u64 [sp + 0x20]
 17799: c8 b7 07                 a0 = a0 + a4
 17802: 7b 58 10                 u64 [s0 + 0x10] = a1
 17805: 7b 59                    u64 [s0] = a2
 17807: 7b 5a 18                 u64 [s0 + 0x18] = a3
 17810: 7b 57 08                 u64 [s0 + 0x8] = a0
 17813: 01                       fallthrough
      :                          @1275
 17814: 82 10 38                 ra = u64 [sp + 0x38]
 17817: 82 15 30                 s0 = u64 [sp + 0x30]
 17820: 82 16 28                 s1 = u64 [sp + 0x28]
 17823: 95 11 40                 sp = sp + 0x40
 17826: 32 00                    ret
      :                          @1276
 17828: 00                       trap
      :                          @1277
 17829: 95 11 a8 fd              sp = sp + 0xfffffffffffffda8
 17833: 7b 10 50 02              u64 [sp + 0x250] = ra
 17837: 7b 15 48 02              u64 [sp + 0x248] = s0
 17841: 7b 16 40 02              u64 [sp + 0x240] = s1
 17845: 82 89 10                 a2 = u64 [a1 + 0x10]
 17848: 82 8a 08                 a3 = u64 [a1 + 0x8]
 17851: 55 19 02 08              jump @1279 if a2 >=u 2
      :                          @1278
 17855: 33 0b                    a4 = 0
 17857: 28 52                    jump @1286
      :                          @1279
 17859: 7c ab 01                 a4 = u8 [a3 + 0x1]
 17862: 7c ac                    a5 = u8 [a3]
 17864: 97 bb 08                 a4 = a4 << 0x8
 17867: d4 bc 0c                 a5 = a5 | a4
 17870: 33 0b 05                 a4 = 0x5
 17873: 52 2c ef 00 42           jump @1286 if a5 != 239
      :                          @1280
 17878: 51 19 02 e9              jump @1278 if a2 == 2
      :                          @1281
 17882: 7c ac 02                 a5 = u8 [a3 + 0x2]
 17885: 33 0b 06                 a4 = 0x6
 17888: 52 1c 01 33              jump @1286 if a5 != 1
      :                          @1282
 17892: 51 19 03 db              jump @1278 if a2 == 3
      :                          @1283
 17896: 7c ac 03                 a5 = u8 [a3 + 0x3]
 17899: 33 0b 07                 a4 = 0x7
 17902: 52 1c 01 25              jump @1286 if a5 != 1
      :                          @1284
 17906: 84 9b fe                 a4 = a2 & 0xfffffffffffffffe
 17909: 51 1b 04 ca              jump @1278 if a4 == 4
      :                          @1285
 17913: 7c ab 05                 a4 = u8 [a3 + 0x5]
 17916: 7c ac 04                 a5 = u8 [a3 + 0x4]
 17919: 97 bb 08                 a4 = a4 << 0x8
 17922: d4 cb 0b                 a4 = a4 | a5
 17925: 6f b6                    s1 = reverse a4
 17927: 98 66 30                 s1 = s1 >> 0x30
 17930: 84 6c 03                 a5 = s1 & 0x3
 17933: 33 0b 03                 a4 = 0x3
 17936: 51 0c 2f                 jump @1288 if a5 == 0
      :                          @1286
 17939: 78 7b 08                 u8 [a0 + 0x8] = a4
 17942: 14 0b 00 00 00 00 00 00 00 80 a4 = 0x8000000000000000
 17952: 7b 7b                    u64 [a0] = a4
 17954: 01                       fallthrough
      :                          @1287
 17955: 82 87                    a0 = u64 [a1]
 17957: 82 7c 20                 a5 = u64 [a0 + 0x20]
 17960: 95 87 18                 a0 = a1 + 0x18
 17963: 64 a8                    a1 = a3
 17965: 82 10 50 02              ra = u64 [sp + 0x250]
 17969: 82 15 48 02              s0 = u64 [sp + 0x248]
 17973: 82 16 40 02              s1 = u64 [sp + 0x240]
 17977: 95 11 58 02              sp = sp + 0x258
 17981: 32 0c                    jump [a5]
      :                          @1288
 17983: 51 19 06 80              jump @1278 if a2 == 6
      :                          @1289
 17987: 7c ac 06                 a5 = u8 [a3 + 0x6]
 17990: 33 05 02                 s0 = 0x2
 17993: 33 0b 08                 a4 = 0x8
 17996: ab 5c c7                 jump @1286 if a5 != s0
      :                          @1290
 17999: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 18003: 7b 18 c0 00              u64 [sp + 0xc0] = a1
 18007: 7b 19 a8 00              u64 [sp + 0xa8] = a2
 18011: 95 99 f9                 a2 = a2 + 0xfffffffffffffff9
 18014: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 18018: 95 a8 07                 a1 = a3 + 0x7
 18021: 95 17 58 01              a0 = sp + 0x158
 18025: 50 20 e8 01 13 09        ra = 488, jump @1433
      :                          @1291 [@dyn 244]
 18031: 82 1c 58 01              a5 = u64 [sp + 0x158]
 18035: 7c 1b 60 01              a4 = u8 [sp + 0x160]
 18039: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 18049: aa 7c 64 04              jump @1361 if a5 == a0
      :                          @1292
 18053: 7c 17 62 01              a0 = u8 [sp + 0x162]
 18057: 7c 18 61 01              a1 = u8 [sp + 0x161]
 18061: 7c 19 63 01              a2 = u8 [sp + 0x163]
 18065: 7c 1a 64 01              a3 = u8 [sp + 0x164]
 18069: 97 77 08                 a0 = a0 << 0x8
 18072: d4 87 07                 a0 = a0 | a1
 18075: 97 99 10                 a2 = a2 << 0x10
 18078: 97 aa 18                 a3 = a3 << 0x18
 18081: d4 a9 09                 a2 = a2 | a3
 18084: 7c 18 65 01              a1 = u8 [sp + 0x165]
 18088: 7c 1a 66 01              a3 = u8 [sp + 0x166]
 18092: d4 97 07                 a0 = a0 | a2
 18095: 7c 19 67 01              a2 = u8 [sp + 0x167]
 18099: 97 88 20                 a1 = a1 << 0x20
 18102: 97 aa 28                 a3 = a3 << 0x28
 18105: d4 a8 08                 a1 = a1 | a3
 18108: 97 99 30                 a2 = a2 << 0x30
 18111: d4 98 08                 a1 = a1 | a2
 18114: d4 87 07                 a0 = a0 | a1
 18117: 82 18 68 01              a1 = u64 [sp + 0x168]
 18121: 97 77 08                 a0 = a0 << 0x8
 18124: d4 b7 05                 s0 = a0 | a4
 18127: 33 0b 10                 a4 = 0x10
 18130: 56 28 00 04 81 00        jump @1302 if a1 >u 1024
      :                          @1293
 18136: 51 08 77                 jump @1301 if a1 == 0
      :                          @1294
 18139: 98 67 02                 a0 = s1 >> 0x2
 18142: 33 0b 0c                 a4 = 0xc
 18145: 7b 17 88 00              u64 [sp + 0x88] = a0
 18149: ab 78 6e                 jump @1302 if a1 != a0
      :                          @1295
 18152: 7b 18 70                 u64 [sp + 0x70] = a1
 18155: 7b 1c 90 00              u64 [sp + 0x90] = a5
 18159: 7b 15 98 00              u64 [sp + 0x98] = s0
 18163: 82 19 78 01              a2 = u64 [sp + 0x178]
 18167: 51 09 94 00              jump @1311 if a2 == 0
      :                          @1296
 18171: 82 1a 70 01              a3 = u64 [sp + 0x170]
 18175: 49 11 78                 u64 [sp + 120] = 0
 18178: 82 17 80 01              a0 = u64 [sp + 0x180]
 18182: 7b 17 68                 u64 [sp + 0x68] = a0
 18185: 7c a7                    a0 = u8 [a3]
 18187: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 18190: 95 aa 01                 a3 = a3 + 0x1
 18193: 49 21 80 00 02           u64 [sp + 128] = 0x2
 18198: 51 17 04 83 00           jump @1312 if a0 == 4
      :                          @1297
 18203: 33 0b 0b                 a4 = 0xb
 18206: 52 17 03 8f 00           jump @1314 if a0 != 3
      :                          @1298
 18211: 95 17 58 01              a0 = sp + 0x158
 18215: 64 a8                    a1 = a3
 18217: 50 20 ea 01 53 08        ra = 490, jump @1433
      :                          @1299 [@dyn 245]
 18223: 82 18 58 01              a1 = u64 [sp + 0x158]
 18227: 7c 1b 60 01              a4 = u8 [sp + 0x160]
 18231: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 18241: 7b 18 a0 00              u64 [sp + 0xa0] = a1
 18245: ab 78 72                 jump @1315 if a1 != a0
      :                          @1300
 18248: 49 21 a0 00              u64 [sp + 160] = 0
 18252: 28 25 03                 jump @1347
      :                          @1301
 18255: 33 0b 11                 a4 = 0x11
 18258: 01                       fallthrough
      :                          @1302
 18259: 51 0c 92 03              jump @1361 if a5 == 0
      :                          @1303
 18263: 56 4c 00 00 00 04 8e 03  jump @1361 if a5 >u 67108864
      :                          @1304
 18271: 97 c7 01                 a0 = a5 << 0x1
 18274: 33 08 20 00 03           a1 = 0x30020
 18279: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 18285: 01                       fallthrough
      :                          @1305
 18286: 82 89                    a2 = u64 [a1]
 18288: c9 98 0a                 a3 = a1 - a2
 18291: ab 5a 72 03              jump @1361 if a3 != s0
      :                          @1306
 18295: c9 79 0a                 a3 = a2 - a0
 18298: 01                       fallthrough
      :                          @1307
 18299: 82 8c                    a5 = u64 [a1]
 18301: ab 9c f1                 jump @1305 if a5 != a2
      :                          @1308
 18304: 7b 8a                    u64 [a1] = a3
 18306: 33 06                    s1 = 0
 18308: 01                       fallthrough
      :                          @1309
 18309: ab 9c e9                 jump @1305 if a5 != a2
      :                          @1310
 18312: 28 5d 03                 jump @1361
      :                          @1311
 18315: 33 0b                    a4 = 0
 18317: 49 21 a0 00              u64 [sp + 160] = 0
 18321: 49 21 80 00 02           u64 [sp + 128] = 0x2
 18326: 28 db 02                 jump @1347
      :                          @1312
 18329: 82 17 78                 a0 = u64 [sp + 0x78]
 18332: 7b 17 60                 u64 [sp + 0x60] = a0
 18335: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 18339: 55 19 03 d6 00           jump @1328 if a2 >=u 3
      :                          @1313
 18344: 33 0b                    a4 = 0
 18346: 28 c7 02                 jump @1347
      :                          @1314
 18349: 82 17 78                 a0 = u64 [sp + 0x78]
 18352: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 18356: 28 bd 02                 jump @1347
      :                          @1315
 18359: 7c 17 62 01              a0 = u8 [sp + 0x162]
 18363: 7c 18 61 01              a1 = u8 [sp + 0x161]
 18367: 7c 19 63 01              a2 = u8 [sp + 0x163]
 18371: 7c 1a 64 01              a3 = u8 [sp + 0x164]
 18375: 97 77 08                 a0 = a0 << 0x8
 18378: d4 87 07                 a0 = a0 | a1
 18381: 97 99 10                 a2 = a2 << 0x10
 18384: 97 aa 18                 a3 = a3 << 0x18
 18387: d4 a9 09                 a2 = a2 | a3
 18390: 7c 18 65 01              a1 = u8 [sp + 0x165]
 18394: 7c 1a 66 01              a3 = u8 [sp + 0x166]
 18398: d4 97 07                 a0 = a0 | a2
 18401: 7c 19 67 01              a2 = u8 [sp + 0x167]
 18405: 97 88 20                 a1 = a1 << 0x20
 18408: 97 aa 28                 a3 = a3 << 0x28
 18411: d4 a8 08                 a1 = a1 | a3
 18414: 97 99 30                 a2 = a2 << 0x30
 18417: d4 98 08                 a1 = a1 | a2
 18420: 82 19 68 01              a2 = u64 [sp + 0x168]
 18424: d4 87 07                 a0 = a0 | a1
 18427: 97 77 08                 a0 = a0 << 0x8
 18430: d4 b7 02                 t0 = a0 | a4
 18433: 7b 19 60                 u64 [sp + 0x60] = a2
 18436: 54 29 00 01 4c           jump @1325 if a2 <=u 256
      :                          @1316
 18441: 33 0b 12                 a4 = 0x12
 18444: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 18448: 51 07 38 ff              jump @1300 if a0 == 0
      :                          @1317
 18452: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 18456: 56 47 00 00 00 04 30 ff  jump @1300 if a0 >u 67108864
      :                          @1318
 18464: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 18468: 97 88 01                 a1 = a1 << 0x1
 18471: 33 09 20 00 03           a2 = 0x30020
 18476: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 18482: 01                       fallthrough
      :                          @1319
 18483: 82 9a                    a3 = u64 [a2]
 18485: c9 a9 0c                 a5 = a2 - a3
 18488: ab 2c 10 ff              jump @1300 if a5 != t0
      :                          @1320
 18492: c9 8a 0c                 a5 = a3 - a1
 18495: 01                       fallthrough
      :                          @1321
 18496: 82 96                    s1 = u64 [a2]
 18498: ab a6 f1                 jump @1319 if s1 != a3
      :                          @1322
 18501: 7b 9c                    u64 [a2] = a5
 18503: 33 07                    a0 = 0
 18505: 01                       fallthrough
      :                          @1323
 18506: ab a6 e9                 jump @1319 if s1 != a3
      :                          @1324
 18509: 28 fb fe                 jump @1300
      :                          @1325
 18512: 82 19 78 01              a2 = u64 [sp + 0x178]
 18516: 51 09 0d 02              jump @1345 if a2 == 0
      :                          @1326
 18520: 82 1a 70 01              a3 = u64 [sp + 0x170]
 18524: 7c a7                    a0 = u8 [a3]
 18526: 52 17 04 0b 02           jump @1346 if a0 != 4
      :                          @1327
 18531: 82 17 80 01              a0 = u64 [sp + 0x180]
 18535: 7b 17 78                 u64 [sp + 0x78] = a0
 18538: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 18541: 95 aa 01                 a3 = a3 + 0x1
 18544: 7b 12 80 00              u64 [sp + 0x80] = t0
 18548: 53 19 03 34 ff           jump @1313 if a2 <u 3
      :                          @1328
 18553: 7c a7 02                 a0 = u8 [a3 + 0x2]
 18556: 33 0b 09                 a4 = 0x9
 18559: 52 07 f2 01              jump @1347 if a0 != 0
      :                          @1329
 18563: 82 18 60                 a1 = u64 [sp + 0x60]
 18566: 97 87 01                 a0 = a1 << 0x1
 18569: 7b 17 50                 u64 [sp + 0x50] = a0
 18572: 95 77 03                 a0 = a0 + 0x3
 18575: 93 87                    a0 = 0 if a1 == 0
 18577: 82 18 70                 a1 = u64 [sp + 0x70]
 18580: 97 88 01                 a1 = a1 << 0x1
 18583: 7b 18 30                 u64 [sp + 0x30] = a1
 18586: c8 78 08                 a1 = a1 + a0
 18589: 95 8c 0d                 a5 = a1 + 0xd
 18592: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 18596: 82 88 10                 a1 = u64 [a1 + 0x10]
 18599: 82 19 68                 a2 = u64 [sp + 0x68]
 18602: 82 1b 78                 a4 = u64 [sp + 0x78]
 18605: c8 b9 09                 a2 = a2 + a4
 18608: 7b 1c 38                 u64 [sp + 0x38] = a5
 18611: c8 c9 09                 a2 = a2 + a5
 18614: c8 69 09                 a2 = a2 + s1
 18617: 33 0b 01                 a4 = 0x1
 18620: 7b 1b a8 00              u64 [sp + 0xa8] = a4
 18624: ac 98 8b 05              jump @1415 if a1 <u a2
      :                          @1330
 18628: 7c ab 01                 a4 = u8 [a3 + 0x1]
 18631: 7c aa                    a3 = u8 [a3]
 18633: 97 bb 08                 a4 = a4 << 0x8
 18636: d4 ba 0a                 a3 = a3 | a4
 18639: 6f aa                    a3 = reverse a3
 18641: 98 aa 30                 a3 = a3 >> 0x30
 18644: 7b 1a 08                 u64 [sp + 0x8] = a3
 18647: c8 a9 09                 a2 = a2 + a3
 18650: 49 21 a8 00 02           u64 [sp + 168] = 0x2
 18655: ac 89 6c 05              jump @1415 if a2 <u a1
      :                          @1331
 18659: 49 21 58 01              u64 [sp + 344] = 0
 18663: 49 21 60 01 02           u64 [sp + 352] = 0x2
 18668: 49 21 68 01              u64 [sp + 360] = 0
 18672: 49 21 70 01              u64 [sp + 368] = 0
 18676: 49 21 78 01 08           u64 [sp + 376] = 0x8
 18681: 49 21 80 01              u64 [sp + 384] = 0
 18685: 33 0b a0 11 01           a4 = 0x111a0
 18690: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
 18694: 33 0a 01                 a3 = 0x1
 18697: 7b 1a a8 01              u64 [sp + 0x1a8] = a3
 18701: 49 21 e0 01              u64 [sp + 480] = 0
 18705: 49 21 88 01              u64 [sp + 392] = 0
 18709: 49 21 b0 01              u64 [sp + 432] = 0
 18713: 49 21 b8 01              u64 [sp + 440] = 0
 18717: 49 21 90 01 08           u64 [sp + 400] = 0x8
 18722: 49 21 98 01              u64 [sp + 408] = 0
 18726: 7b 1b                    u64 [sp] = a4
 18728: 7b 1b c0 01              u64 [sp + 0x1c0] = a4
 18732: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
 18736: 46 21 e8 01              u8 [sp + 488] = 0
 18740: 49 21 d0 01              u64 [sp + 464] = 0
 18744: 49 21 d8 01              u64 [sp + 472] = 0
 18748: 82 19 38                 a2 = u64 [sp + 0x38]
 18751: ac 98 3d f7              jump @1156 if a1 <u a2
      :                          @1332
 18755: 82 19 88 00              a2 = u64 [sp + 0x88]
 18759: 51 09 c0 02              jump @1391 if a2 == 0
      :                          @1333
 18763: 82 19 c0 00              a2 = u64 [sp + 0xc0]
 18767: 82 99 08                 a2 = u64 [a2 + 0x8]
 18770: 49 21 b0 00              u64 [sp + 176] = 0
 18774: 82 1a 38                 a3 = u64 [sp + 0x38]
 18777: c8 a9 09                 a2 = a2 + a3
 18780: 7b 19 18                 u64 [sp + 0x18] = a2
 18783: c9 a8 09                 a2 = a1 - a3
 18786: 7b 19 58                 u64 [sp + 0x58] = a2
 18789: 82 19 88 00              a2 = u64 [sp + 0x88]
 18793: 97 99 02                 a2 = a2 << 0x2
 18796: 7b 19 10                 u64 [sp + 0x10] = a2
 18799: c9 78 08                 a1 = a1 - a0
 18802: 82 17 30                 a0 = u64 [sp + 0x30]
 18805: c9 78 07                 a0 = a1 - a0
 18808: 95 78 f2                 a1 = a0 + 0xfffffffffffffff2
 18811: 7b 18 20                 u64 [sp + 0x20] = a1
 18814: 95 77 f3                 a0 = a0 + 0xfffffffffffffff3
 18817: 7b 17 28                 u64 [sp + 0x28] = a0
 18820: 49 21 88 00 01           u64 [sp + 136] = 0x1
 18825: 28 59                    jump @1335
      :                          @1334
 18827: 82 17 40                 a0 = u64 [sp + 0x40]
 18830: 97 77 18                 a0 = a0 << 0x18
 18833: 82 18 48                 a1 = u64 [sp + 0x48]
 18836: 97 88 10                 a1 = a1 << 0x10
 18839: 82 19 60 01              a2 = u64 [sp + 0x160]
 18843: d4 87 07                 a0 = a0 | a1
 18846: d4 57 07                 a0 = a0 | s0
 18849: 8b 77 08                 i32 a0 = a0 >> 0x8
 18852: 82 1a b0 00              a3 = u64 [sp + 0xb0]
 18856: c8 a9 09                 a2 = a2 + a3
 18859: 78 95                    u8 [a2] = s0
 18861: 98 78 08                 a1 = a0 >> 0x8
 18864: 78 98 02                 u8 [a2 + 0x2] = a1
 18867: 78 97 01                 u8 [a2 + 0x1] = a0
 18870: 98 77 10                 a0 = a0 >> 0x10
 18873: 78 97 03                 u8 [a2 + 0x3] = a0
 18876: 82 17 88 00              a0 = u64 [sp + 0x88]
 18880: 7b 17 68 01              u64 [sp + 0x168] = a0
 18884: 95 aa 04                 a3 = a3 + 0x4
 18887: 95 77 01                 a0 = a0 + 0x1
 18890: 7b 17 88 00              u64 [sp + 0x88] = a0
 18894: 82 17 58                 a0 = u64 [sp + 0x58]
 18897: 95 77 fc                 a0 = a0 + 0xfffffffffffffffc
 18900: 7b 17 58                 u64 [sp + 0x58] = a0
 18903: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 18907: 82 17 10                 a0 = u64 [sp + 0x10]
 18910: aa a7 b3 02              jump @1397 if a0 == a3
      :                          @1335
 18914: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 18918: 82 18 28                 a1 = u64 [sp + 0x28]
 18921: aa 78 0f 01              jump @1362 if a1 == a0
      :                          @1336
 18925: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 18929: 82 18 20                 a1 = u64 [sp + 0x20]
 18932: aa 78 04 01              jump @1362 if a1 == a0
      :                          @1337
 18936: 82 17 58                 a0 = u64 [sp + 0x58]
 18939: 84 77 fe                 a0 = a0 & 0xfffffffffffffffe
 18942: 51 17 02 fa 00           jump @1362 if a0 == 2
      :                          @1338
 18947: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 18951: 82 18 18                 a1 = u64 [sp + 0x18]
 18954: c8 87 07                 a0 = a0 + a1
 18957: 7d 79                    a2 = i8 [a0]
 18959: 49 21 a8 00 03           u64 [sp + 168] = 0x3
 18964: 7b 19 48                 u64 [sp + 0x48] = a2
 18967: 57 09 e6 00              jump @1363 if a2 <s 0
      :                          @1339
 18971: 7c 79 01                 a2 = u8 [a0 + 0x1]
 18974: 7b 19 40                 u64 [sp + 0x40] = a2
 18977: 56 29 80 00 dc 00        jump @1363 if a2 >u 128
      :                          @1340
 18983: 7c 78 03                 a1 = u8 [a0 + 0x3]
 18986: 7c 77 02                 a0 = u8 [a0 + 0x2]
 18989: 97 88 08                 a1 = a1 << 0x8
 18992: d4 87 07                 a0 = a0 | a1
 18995: 6f 75                    s0 = reverse a0
 18997: 98 55 30                 s0 = s0 >> 0x30
 19000: 56 25 ff 03 c5 00        jump @1363 if s0 >u 1023
      :                          @1341
 19006: 7e 17 48                 a0 = u16 [sp + 0x48]
 19009: ac 75 bc 00              jump @1363 if s0 <u a0
      :                          @1342
 19013: 82 17 58 01              a0 = u64 [sp + 0x158]
 19017: 82 18 88 00              a1 = u64 [sp + 0x88]
 19021: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 19024: ab 78 3b ff              jump @1334 if a1 != a0
      :                          @1343
 19028: 95 17 58 01              a0 = sp + 0x158
 19032: 50 20 ec 01 5c fa        ra = 492, jump @1260
      :                          @1344 [@dyn 246]
 19038: 28 2d ff                 jump @1334
      :                          @1345
 19041: 33 0b                    a4 = 0
 19043: 7b 12 80 00              u64 [sp + 0x80] = t0
 19047: 28 0a                    jump @1347
      :                          @1346
 19049: 33 0b 0a                 a4 = 0xa
 19052: 7b 12 80 00              u64 [sp + 0x80] = t0
 19056: 01                       fallthrough
      :                          @1347
 19057: 82 15 98 00              s0 = u64 [sp + 0x98]
 19061: 82 18 90 00              a1 = u64 [sp + 0x90]
 19065: 51 08 2f                 jump @1354 if a1 == 0
      :                          @1348
 19068: 56 48 00 00 00 04 2c     jump @1354 if a1 >u 67108864
      :                          @1349
 19075: 97 87 01                 a0 = a1 << 0x1
 19078: 33 08 20 00 03           a1 = 0x30020
 19083: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 19089: 01                       fallthrough
      :                          @1350
 19090: 82 89                    a2 = u64 [a1]
 19092: c9 98 0a                 a3 = a1 - a2
 19095: ab 5a 11                 jump @1354 if a3 != s0
      :                          @1351
 19098: c9 79 0a                 a3 = a2 - a0
 19101: 01                       fallthrough
      :                          @1352
 19102: 82 8c                    a5 = u64 [a1]
 19104: ab 9c f2                 jump @1350 if a5 != a2
      :                          @1353
 19107: 7b 8a                    u64 [a1] = a3
 19109: 33 06                    s1 = 0
 19111: 01                       fallthrough
      :                          @1354
 19112: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 19116: 51 07 39                 jump @1361 if a0 == 0
      :                          @1355
 19119: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 19123: 56 48 00 00 00 04 32     jump @1361 if a1 >u 67108864
      :                          @1356
 19130: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 19134: 97 77 01                 a0 = a0 << 0x1
 19137: 33 08 20 00 03           a1 = 0x30020
 19142: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 19148: 82 15 80 00              s0 = u64 [sp + 0x80]
 19152: 01                       fallthrough
      :                          @1357
 19153: 82 89                    a2 = u64 [a1]
 19155: c9 98 0a                 a3 = a1 - a2
 19158: ab 5a 0f                 jump @1361 if a3 != s0
      :                          @1358
 19161: c9 79 0a                 a3 = a2 - a0
 19164: 01                       fallthrough
      :                          @1359
 19165: 82 8c                    a5 = u64 [a1]
 19167: ab 9c f2                 jump @1357 if a5 != a2
      :                          @1360
 19170: 7b 8a                    u64 [a1] = a3
 19172: 01                       fallthrough
      :                          @1361
 19173: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 19177: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 19181: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 19185: 82 1a b0 00              a3 = u64 [sp + 0xb0]
 19189: 28 1e fb                 jump @1286
      :                          @1362
 19192: 49 21 a8 00              u64 [sp + 168] = 0
 19196: 01                       fallthrough
      :                          @1363
 19197: 82 17 58 01              a0 = u64 [sp + 0x158]
 19201: 51 07 33                 jump @1370 if a0 == 0
      :                          @1364
 19204: 56 47 00 00 00 02 30     jump @1370 if a0 >u 33554432
      :                          @1365
 19211: 97 77 02                 a0 = a0 << 0x2
 19214: 82 18 60 01              a1 = u64 [sp + 0x160]
 19218: 33 09 20 00 03           a2 = 0x30020
 19223: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 19229: 01                       fallthrough
      :                          @1366
 19230: 82 9a                    a3 = u64 [a2]
 19232: c9 a9 0b                 a4 = a2 - a3
 19235: ab 8b 11                 jump @1370 if a4 != a1
      :                          @1367
 19238: c9 7a 0b                 a4 = a3 - a0
 19241: 01                       fallthrough
      :                          @1368
 19242: 82 9c                    a5 = u64 [a2]
 19244: ab ac f2                 jump @1366 if a5 != a3
      :                          @1369
 19247: 7b 9b                    u64 [a2] = a4
 19249: 33 06                    s1 = 0
 19251: 01                       fallthrough
      :                          @1370
 19252: 82 17 70 01              a0 = u64 [sp + 0x170]
 19256: 51 07 33                 jump @1377 if a0 == 0
      :                          @1371
 19259: 56 47 00 00 00 01 30     jump @1377 if a0 >u 16777216
      :                          @1372
 19266: 97 77 03                 a0 = a0 << 0x3
 19269: 82 18 78 01              a1 = u64 [sp + 0x178]
 19273: 33 09 20 00 03           a2 = 0x30020
 19278: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 19284: 01                       fallthrough
      :                          @1373
 19285: 82 9a                    a3 = u64 [a2]
 19287: c9 a9 0b                 a4 = a2 - a3
 19290: ab 8b 11                 jump @1377 if a4 != a1
      :                          @1374
 19293: c9 7a 0b                 a4 = a3 - a0
 19296: 01                       fallthrough
      :                          @1375
 19297: 82 9c                    a5 = u64 [a2]
 19299: ab ac f2                 jump @1373 if a5 != a3
      :                          @1376
 19302: 7b 9b                    u64 [a2] = a4
 19304: 33 06                    s1 = 0
 19306: 01                       fallthrough
      :                          @1377
 19307: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
 19311: 82 7a 20                 a3 = u64 [a0 + 0x20]
 19314: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
 19318: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 19322: 95 17 b8 01              a0 = sp + 0x1b8
 19326: b4 a0 02 ee 01           ra = 494, jump [a3]
      :                          @1378 [@dyn 247]
 19331: 82 16 98 01              s1 = u64 [sp + 0x198]
 19335: 82 17 90 01              a0 = u64 [sp + 0x190]
 19339: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 19343: 51 06 27                 jump @1382 if s1 == 0
      :                          @1379
 19346: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 19350: 95 55 18                 s0 = s0 + 0x18
 19353: 01                       fallthrough
      :                          @1380
 19354: 82 57 e8                 a0 = u64 [s0 + 0xffffffffffffffe8]
 19357: 82 7a 20                 a3 = u64 [a0 + 0x20]
 19360: 82 58 f0                 a1 = u64 [s0 + 0xfffffffffffffff0]
 19363: 82 59 f8                 a2 = u64 [s0 + 0xfffffffffffffff8]
 19366: 64 57                    a0 = s0
 19368: b4 a0 02 f0 01           ra = 496, jump [a3]
      :                          @1381 [@dyn 248]
 19373: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 19376: 95 55 20                 s0 = s0 + 0x20
 19379: 52 06 e7                 jump @1380 if s1 != 0
      :                          @1382
 19382: 82 17 88 01              a0 = u64 [sp + 0x188]
 19386: 51 07 32                 jump @1389 if a0 == 0
      :                          @1383
 19389: 56 37 00 00 40 2f        jump @1389 if a0 >u 4194304
      :                          @1384
 19395: 97 77 05                 a0 = a0 << 0x5
 19398: 33 08 20 00 03           a1 = 0x30020
 19403: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 19409: 01                       fallthrough
      :                          @1385
 19410: 82 89                    a2 = u64 [a1]
 19412: c9 98 0a                 a3 = a1 - a2
 19415: 82 1b b0 00              a4 = u64 [sp + 0xb0]
 19419: ab ba 11                 jump @1389 if a3 != a4
      :                          @1386
 19422: c9 79 0a                 a3 = a2 - a0
 19425: 01                       fallthrough
      :                          @1387
 19426: 82 8b                    a4 = u64 [a1]
 19428: ab 9b ee                 jump @1385 if a4 != a2
      :                          @1388
 19431: 7b 8a                    u64 [a1] = a3
 19433: 33 0c                    a5 = 0
 19435: 01                       fallthrough
      :                          @1389
 19436: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 19440: 82 7a 20                 a3 = u64 [a0 + 0x20]
 19443: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
 19447: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 19451: 95 17 d8 01              a0 = sp + 0x1d8
 19455: b4 a0 02 f2 01           ra = 498, jump [a3]
      :                          @1390 [@dyn 249]
 19460: 28 47 02                 jump @1415
      :                          @1391
 19463: 82 17 38                 a0 = u64 [sp + 0x38]
 19466: c8 67 07                 a0 = a0 + s1
 19469: 7b 17 40                 u64 [sp + 0x40] = a0
 19472: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
 19476: 01                       fallthrough
      :                          @1392
 19477: 82 17 98 00              a0 = u64 [sp + 0x98]
 19481: 82 18 30                 a1 = u64 [sp + 0x30]
 19484: c8 87 07                 a0 = a0 + a1
 19487: 7b 17 48                 u64 [sp + 0x48] = a0
 19490: 82 17 80 01              a0 = u64 [sp + 0x180]
 19494: 49 21 a8 00              u64 [sp + 168] = 0
 19498: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 19502: 97 77 03                 a0 = a0 << 0x3
 19505: 7b 17 88 00              u64 [sp + 0x88] = a0
 19509: 82 15 98 00              s0 = u64 [sp + 0x98]
 19513: 28 3c                    jump @1394
      :                          @1393
 19515: 82 17 78 01              a0 = u64 [sp + 0x178]
 19519: 82 18 a8 00              a1 = u64 [sp + 0xa8]
 19523: 82 19 58                 a2 = u64 [sp + 0x58]
 19526: c8 98 08                 a1 = a1 + a2
 19529: 95 55 02                 s0 = s0 + 0x2
 19532: 82 19 88 00              a2 = u64 [sp + 0x88]
 19536: c8 97 07                 a0 = a0 + a2
 19539: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 19543: 7b 78                    u64 [a0] = a1
 19545: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 19549: 95 77 01                 a0 = a0 + 0x1
 19552: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 19556: 7b 17 80 01              u64 [sp + 0x180] = a0
 19560: 95 99 08                 a2 = a2 + 0x8
 19563: 7b 19 88 00              u64 [sp + 0x88] = a2
 19567: 82 17 48                 a0 = u64 [sp + 0x48]
 19570: aa 75 33                 jump @1398 if s0 == a0
      :                          @1394
 19573: 82 17 70 01              a0 = u64 [sp + 0x170]
 19577: 7e 58                    a1 = u16 [s0 ]
 19579: 7b 18 58                 u64 [sp + 0x58] = a1
 19582: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 19586: ab 78 b9                 jump @1393 if a1 != a0
      :                          @1395
 19589: 95 17 70 01              a0 = sp + 0x170
 19593: 50 20 f4 01 27 f7        ra = 500, jump @1242
      :                          @1396 [@dyn 250]
 19599: 28 ac                    jump @1393
      :                          @1397
 19601: 82 17 38                 a0 = u64 [sp + 0x38]
 19604: c8 67 07                 a0 = a0 + s1
 19607: 7b 17 40                 u64 [sp + 0x40] = a0
 19610: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
 19614: 82 17 70                 a0 = u64 [sp + 0x70]
 19617: 52 07 74 ff              jump @1392 if a0 != 0
      :                          @1398
 19621: 95 15 a0 01              s0 = sp + 0x1a0
 19625: 82 17 68                 a0 = u64 [sp + 0x68]
 19628: 82 19 40                 a2 = u64 [sp + 0x40]
 19631: c8 79 0a                 a3 = a2 + a0
 19634: 95 17 20 02              a0 = sp + 0x220
 19638: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 19642: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 19646: 50 20 f6 01 78 f8        ra = 502, jump @1269
      :                          @1399 [@dyn 251]
 19652: 82 17 a0 01              a0 = u64 [sp + 0x1a0]
 19656: 82 7a 20                 a3 = u64 [a0 + 0x20]
 19659: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
 19663: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
 19667: 95 17 b8 01              a0 = sp + 0x1b8
 19671: b4 a0 02 f8 01           ra = 504, jump [a3]
      :                          @1400 [@dyn 252]
 19676: 82 17 38 02              a0 = u64 [sp + 0x238]
 19680: 82 18 30 02              a1 = u64 [sp + 0x230]
 19684: 82 19 28 02              a2 = u64 [sp + 0x228]
 19688: 82 1a 20 02              a3 = u64 [sp + 0x220]
 19692: 7b 57 18                 u64 [s0 + 0x18] = a0
 19695: 7b 58 10                 u64 [s0 + 0x10] = a1
 19698: 7b 59 08                 u64 [s0 + 0x8] = a2
 19701: 7b 5a                    u64 [s0] = a3
 19703: 82 17 60                 a0 = u64 [sp + 0x60]
 19706: 51 07 7e                 jump @1407 if a0 == 0
      :                          @1401
 19709: 82 15 80 00              s0 = u64 [sp + 0x80]
 19713: 28 41                    jump @1403
      :                          @1402
 19715: 82 17 90 01              a0 = u64 [sp + 0x190]
 19719: 82 1b a8 00              a4 = u64 [sp + 0xa8]
 19723: 97 b8 05                 a1 = a4 << 0x5
 19726: 82 19 08 02              a2 = u64 [sp + 0x208]
 19730: c8 87 07                 a0 = a0 + a1
 19733: 82 18 00 02              a1 = u64 [sp + 0x200]
 19737: 82 1a f8 01              a3 = u64 [sp + 0x1f8]
 19741: 7b 79 18                 u64 [a0 + 0x18] = a2
 19744: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
 19748: 7b 78 10                 u64 [a0 + 0x10] = a1
 19751: 7b 7a 08                 u64 [a0 + 0x8] = a3
 19754: 95 55 02                 s0 = s0 + 0x2
 19757: 7b 79                    u64 [a0] = a2
 19759: 95 b7 01                 a0 = a4 + 0x1
 19762: 82 18 50                 a1 = u64 [sp + 0x50]
 19765: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 19768: 7b 17 98 01              u64 [sp + 0x198] = a0
 19772: 7b 18 50                 u64 [sp + 0x50] = a1
 19775: 51 08 39                 jump @1407 if a1 == 0
      :                          @1403
 19778: 7e 57                    a0 = u16 [s0 ]
 19780: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 19784: c8 79 0a                 a3 = a2 + a0
 19787: 95 17 f0 01              a0 = sp + 0x1f0
 19791: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 19795: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 19799: 50 20 fa 01 df f7        ra = 506, jump @1269
      :                          @1404 [@dyn 253]
 19805: 82 18 98 01              a1 = u64 [sp + 0x198]
 19809: 82 17 88 01              a0 = u64 [sp + 0x188]
 19813: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 19817: ab 78 9a                 jump @1402 if a1 != a0
      :                          @1405
 19820: 95 17 88 01              a0 = sp + 0x188
 19824: 50 20 fc 01 c2 f6        ra = 508, jump @1251
      :                          @1406 [@dyn 254]
 19830: 28 8d                    jump @1402
      :                          @1407
 19832: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 19836: 82 78 10                 a1 = u64 [a0 + 0x10]
 19839: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 19843: ac 78 f8 01              jump @1432 if a1 <u a0
      :                          @1408
 19847: 64 85                    s0 = a1
 19849: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 19853: ab 78 10                 jump @1410 if a1 != a0
      :                          @1409
 19856: 49 21 18 02              u64 [sp + 536] = 0
 19860: 49 21 10 02              u64 [sp + 528] = 0
 19864: 33 05 01                 s0 = 0x1
 19867: 28 3c                    jump @1412
      :                          @1410
 19869: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 19873: 82 87                    a0 = u64 [a1]
 19875: 82 7b                    a4 = u64 [a0]
 19877: 82 89 08                 a2 = u64 [a1 + 0x8]
 19880: 95 88 18                 a1 = a1 + 0x18
 19883: 95 17 20 02              a0 = sp + 0x220
 19887: 64 5a                    a3 = s0
 19889: b4 b0 02 fe 01           ra = 510, jump [a4]
      :                          @1411 [@dyn 255]
 19894: 82 1b 28 02              a4 = u64 [sp + 0x228]
 19898: 82 1a b0 00              a3 = u64 [sp + 0xb0]
 19902: c9 a5 07                 a0 = s0 - a3
 19905: 82 18 38 02              a1 = u64 [sp + 0x238]
 19909: 82 19 20 02              a2 = u64 [sp + 0x220]
 19913: 7b 19                    u64 [sp] = a2
 19915: c8 ab 05                 s0 = a4 + a3
 19918: 7b 17 10 02              u64 [sp + 0x210] = a0
 19922: 7b 18 18 02              u64 [sp + 0x218] = a1
 19926: 01                       fallthrough
      :                          @1412
 19927: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 19931: 82 7a 20                 a3 = u64 [a0 + 0x20]
 19934: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
 19938: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
 19942: 95 17 d8 01              a0 = sp + 0x1d8
 19946: b4 a0 02 00 02           ra = 512, jump [a3]
      :                          @1413 [@dyn 256]
 19951: 82 17 10 02              a0 = u64 [sp + 0x210]
 19955: 82 18 18 02              a1 = u64 [sp + 0x218]
 19959: 95 19 d0 01              a2 = sp + 0x1d0
 19963: 7b 97                    u64 [a2] = a0
 19965: 7b 98 08                 u64 [a2 + 0x8] = a1
 19968: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
 19972: 82 18                    a1 = u64 [sp]
 19974: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
 19978: 7b 15 c8 01              u64 [sp + 0x1c8] = s0
 19982: 82 18 08                 a1 = u64 [sp + 0x8]
 19985: d3 87 07                 a0 = a0 ^ a1
 19988: 82 15 58 01              s0 = u64 [sp + 0x158]
 19992: 7c 18 60 01              a1 = u8 [sp + 0x160]
 19996: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 20000: 88 77 01                 a0 = a0 <u 0x1
 20003: 78 17 e8 01              u8 [sp + 0x1e8] = a0
 20007: 95 18 61 01              a1 = sp + 0x161
 20011: 95 17 c9 00              a0 = sp + 0xc9
 20015: 33 09 8f 00              a2 = 0x8f
 20019: 50 20 02 02 5b 08        ra = 514, jump @1602
      :                          @1414 [@dyn 257]
 20025: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 20035: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 20039: ab 75 a4 00              jump @1430 if s0 != a0
      :                          @1415
 20043: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 20047: 82 18 a8 00              a1 = u64 [sp + 0xa8]
 20051: 78 78 08                 u8 [a0 + 0x8] = a1
 20054: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20064: 7b 78                    u64 [a0] = a1
 20066: 82 17 90 00              a0 = u64 [sp + 0x90]
 20070: 51 07 3b                 jump @1422 if a0 == 0
      :                          @1416
 20073: 82 18 90 00              a1 = u64 [sp + 0x90]
 20077: 56 48 00 00 00 04 34     jump @1422 if a1 >u 67108864
      :                          @1417
 20084: 82 17 90 00              a0 = u64 [sp + 0x90]
 20088: 97 77 01                 a0 = a0 << 0x1
 20091: 33 08 20 00 03           a1 = 0x30020
 20096: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 20102: 01                       fallthrough
      :                          @1418
 20103: 82 89                    a2 = u64 [a1]
 20105: c9 98 0a                 a3 = a1 - a2
 20108: 82 1b 98 00              a4 = u64 [sp + 0x98]
 20112: ab ba 11                 jump @1422 if a3 != a4
      :                          @1419
 20115: c9 79 0a                 a3 = a2 - a0
 20118: 01                       fallthrough
      :                          @1420
 20119: 82 8b                    a4 = u64 [a1]
 20121: ab 9b ee                 jump @1418 if a4 != a2
      :                          @1421
 20124: 7b 8a                    u64 [a1] = a3
 20126: 33 0c                    a5 = 0
 20128: 01                       fallthrough
      :                          @1422
 20129: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 20133: 51 07 39                 jump @1429 if a0 == 0
      :                          @1423
 20136: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 20140: 56 48 00 00 00 04 32     jump @1429 if a1 >u 67108864
      :                          @1424
 20147: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 20151: 97 77 01                 a0 = a0 << 0x1
 20154: 33 08 20 00 03           a1 = 0x30020
 20159: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 20165: 01                       fallthrough
      :                          @1425
 20166: 82 89                    a2 = u64 [a1]
 20168: c9 98 0a                 a3 = a1 - a2
 20171: 82 1b 80 00              a4 = u64 [sp + 0x80]
 20175: ab ba 0f                 jump @1429 if a3 != a4
      :                          @1426
 20178: c9 79 0a                 a3 = a2 - a0
 20181: 01                       fallthrough
      :                          @1427
 20182: 82 8b                    a4 = u64 [a1]
 20184: ab 9b ee                 jump @1425 if a4 != a2
      :                          @1428
 20187: 7b 8a                    u64 [a1] = a3
 20189: 01                       fallthrough
      :                          @1429
 20190: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 20194: 82 8a 08                 a3 = u64 [a1 + 0x8]
 20197: 82 89 10                 a2 = u64 [a1 + 0x10]
 20200: 28 3b f7                 jump @1287
      :                          @1430
 20203: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 20207: 95 57 51                 a0 = s0 + 0x51
 20210: 95 18 c9 00              a1 = sp + 0xc9
 20214: 33 09 8f 00              a2 = 0x8f
 20218: 50 20 04 02 94 07        ra = 516, jump @1602
      :                          @1431 [@dyn 258]
 20224: 82 17 90 00              a0 = u64 [sp + 0x90]
 20228: 7b 57                    u64 [s0] = a0
 20230: 82 17 98 00              a0 = u64 [sp + 0x98]
 20234: 7b 57 08                 u64 [s0 + 0x8] = a0
 20237: 82 17 70                 a0 = u64 [sp + 0x70]
 20240: 7b 57 10                 u64 [s0 + 0x10] = a0
 20243: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 20247: 7b 57 18                 u64 [s0 + 0x18] = a0
 20250: 82 17 80 00              a0 = u64 [sp + 0x80]
 20254: 7b 57 20                 u64 [s0 + 0x20] = a0
 20257: 82 17 60                 a0 = u64 [sp + 0x60]
 20260: 7b 57 28                 u64 [s0 + 0x28] = a0
 20263: 82 17 68                 a0 = u64 [sp + 0x68]
 20266: 7b 57 30                 u64 [s0 + 0x30] = a0
 20269: 82 17 78                 a0 = u64 [sp + 0x78]
 20272: 7b 57 38                 u64 [s0 + 0x38] = a0
 20275: 79 56 40                 u16 [s0 + 0x40] = s1
 20278: 82 17 08                 a0 = u64 [sp + 0x8]
 20281: 79 57 42                 u16 [s0 + 0x42] = a0
 20284: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 20288: 82 78                    a1 = u64 [a0]
 20290: 82 79 08                 a2 = u64 [a0 + 0x8]
 20293: 82 7a 10                 a3 = u64 [a0 + 0x10]
 20296: 82 77 18                 a0 = u64 [a0 + 0x18]
 20299: 7b 58 e0 00              u64 [s0 + 0xe0] = a1
 20303: 7b 59 e8 00              u64 [s0 + 0xe8] = a2
 20307: 7b 5a f0 00              u64 [s0 + 0xf0] = a3
 20311: 7b 57 f8 00              u64 [s0 + 0xf8] = a0
 20315: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 20319: 7b 57 48                 u64 [s0 + 0x48] = a0
 20322: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 20326: 78 57 50                 u8 [s0 + 0x50] = a0
 20329: 82 10 50 02              ra = u64 [sp + 0x250]
 20333: 82 15 48 02              s0 = u64 [sp + 0x248]
 20337: 82 16 40 02              s1 = u64 [sp + 0x240]
 20341: 95 11 58 02              sp = sp + 0x258
 20345: 32 00                    ret
      :                          @1432
 20347: 00                       trap
      :                          @1433
 20348: 95 11 90                 sp = sp + 0xffffffffffffff90
 20351: 7b 10 68                 u64 [sp + 0x68] = ra
 20354: 7b 15 60                 u64 [sp + 0x60] = s0
 20357: 7b 16 58                 u64 [sp + 0x58] = s1
 20360: 33 0a 02                 a3 = 0x2
 20363: ae a9 14                 jump @1435 if a2 >=u a3
      :                          @1434
 20366: 46 17 08                 u8 [a0 + 8] = 0
 20369: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20379: 7b 78                    u64 [a0] = a1
 20381: 28 44                    jump @1439
      :                          @1435
 20383: 7c 8a 01                 a3 = u8 [a1 + 0x1]
 20386: 7c 8b                    a4 = u8 [a1]
 20388: 97 aa 08                 a3 = a3 << 0x8
 20391: d4 ba 0a                 a3 = a3 | a4
 20394: 97 ab 30                 a4 = a3 << 0x30
 20397: 51 0b 23                 jump @1438 if a4 == 0
      :                          @1436
 20400: 95 9b fe                 a4 = a2 + 0xfffffffffffffffe
 20403: 6f a9                    a2 = reverse a3
 20405: 98 93 30                 t1 = a2 >> 0x30
 20408: 97 3a 01                 a3 = t1 << 0x1
 20411: ae ab 34                 jump @1440 if a4 >=u a3
      :                          @1437
 20414: 46 17 08 0e              u8 [a0 + 8] = 0xe
 20418: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20428: 7b 78                    u64 [a0] = a1
 20430: 28 13                    jump @1439
      :                          @1438
 20432: 46 17 08 0d              u8 [a0 + 8] = 0xd
 20436: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20446: 7b 78                    u64 [a0] = a1
 20448: 01                       fallthrough
      :                          @1439
 20449: 82 10 68                 ra = u64 [sp + 0x68]
 20452: 82 15 60                 s0 = u64 [sp + 0x60]
 20455: 82 16 58                 s1 = u64 [sp + 0x58]
 20458: 95 11 70                 sp = sp + 0x70
 20461: 32 00                    ret
      :                          @1440
 20463: 7b 1b 28                 u64 [sp + 0x28] = a4
 20466: 95 89 02                 a2 = a1 + 0x2
 20469: 7b 19 30                 u64 [sp + 0x30] = a2
 20472: 33 02 00 00 00 08        t0 = 0x8000000
 20478: 33 0c 20 00 03           a5 = 0x30020
 20483: c8 2c 0c                 a5 = a5 + t0
 20486: 33 04 fe ff ff 07        t2 = 0x7fffffe
 20492: 01                       fallthrough
      :                          @1441
 20493: 82 c9                    a2 = u64 [a5]
 20495: c8 a9 05                 s0 = a2 + a3
 20498: ac 95 6a f0              jump @1156 if s0 <u a2
      :                          @1442
 20502: ac 54 66 f0              jump @1156 if t2 <u s0
      :                          @1443
 20506: 7b 1a 38                 u64 [sp + 0x38] = a3
 20509: 33 0a 20 00 03           a3 = 0x30020
 20514: c9 5a 0a                 a3 = a3 - s0
 20517: c8 2a 00                 ra = a3 + t0
 20520: 84 0b 01                 a4 = ra & 0x1
 20523: c8 b5 05                 s0 = s0 + a4
 20526: 01                       fallthrough
      :                          @1444
 20527: 82 c6                    s1 = u64 [a5]
 20529: ab 96 06                 jump @1446 if s1 != a2
      :                          @1445
 20532: 7b c5                    u64 [a5] = s0
 20534: 01                       fallthrough
      :                          @1446
 20535: 82 1a 38                 a3 = u64 [sp + 0x38]
 20538: ab 96 d3                 jump @1441 if s1 != a2
      :                          @1447
 20541: 33 0c                    a5 = 0
 20543: 33 06                    s1 = 0
 20545: c9 b0 04                 t2 = ra - a4
 20548: 7b 13 40                 u64 [sp + 0x40] = t1
 20551: 7b 14 48                 u64 [sp + 0x48] = t2
 20554: 49 11 50                 u64 [sp + 80] = 0
 20557: 33 09 01                 a2 = 0x1
 20560: e4 93 0a                 a3 = maxu(t1, a2)
 20563: 33 05 03                 s0 = 0x3
 20566: 82 12 30                 t0 = u64 [sp + 0x30]
 20569: 7b 17 10                 u64 [sp + 0x10] = a0
 20572: 7b 18 08                 u64 [sp + 0x8] = a1
 20575: 7b 1a                    u64 [sp] = a3
 20577: 28 1d                    jump @1449
      :                          @1448
 20579: 95 66 01                 s1 = s1 + 0x1
 20582: 6f b9                    a2 = reverse a4
 20584: 98 99 30                 a2 = a2 >> 0x30
 20587: c8 9c 0c                 a5 = a5 + a2
 20590: c8 54 0b                 a4 = t2 + s0
 20593: 79 b9 fd                 u16 [a4 + 0xfffffffffffffffd] = a2
 20596: 7b 16 50                 u64 [sp + 0x50] = s1
 20599: 95 55 02                 s0 = s0 + 0x2
 20602: aa 6a 96 00              jump @1462 if a3 == s1
      :                          @1449
 20606: c8 52 09                 a2 = t0 + s0
 20609: c8 58 0b                 a4 = a1 + s0
 20612: 7c bb                    a4 = u8 [a4]
 20614: 7c 99 fd                 a2 = u8 [a2 + 0xfffffffffffffffd]
 20617: 97 bb 08                 a4 = a4 << 0x8
 20620: d4 9b 0b                 a4 = a4 | a2
 20623: 97 b9 30                 a2 = a4 << 0x30
 20626: 51 09 2e                 jump @1453 if a2 == 0
      :                          @1450
 20629: 82 19 40                 a2 = u64 [sp + 0x40]
 20632: ab 96 cb                 jump @1448 if s1 != a2
      :                          @1451
 20635: 95 17 40                 a0 = sp + 0x40
 20638: 7b 1c 20                 u64 [sp + 0x20] = a5
 20641: 7b 1b 18                 u64 [sp + 0x18] = a4
 20644: 50 20 06 02 e7 f0        ra = 518, jump @1192
      :                          @1452 [@dyn 259]
 20650: 82 1b 18                 a4 = u64 [sp + 0x18]
 20653: 82 1a                    a3 = u64 [sp]
 20655: 82 1c 20                 a5 = u64 [sp + 0x20]
 20658: 82 12 30                 t0 = u64 [sp + 0x30]
 20661: 82 18 08                 a1 = u64 [sp + 0x8]
 20664: 82 17 10                 a0 = u64 [sp + 0x10]
 20667: 82 14 48                 t2 = u64 [sp + 0x48]
 20670: 28 a5                    jump @1448
      :                          @1453
 20672: 82 18 40                 a1 = u64 [sp + 0x40]
 20675: 46 17 08 0f              u8 [a0 + 8] = 0xf
 20679: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 20689: 7b 79                    u64 [a0] = a2
 20691: 51 08 0e ff              jump @1439 if a1 == 0
      :                          @1454
 20695: 33 07 00 00 00 04        a0 = 0x4000000
 20701: ac 87 04 ff              jump @1439 if a0 <u a1
      :                          @1455
 20705: 82 17 48                 a0 = u64 [sp + 0x48]
 20708: 97 88 01                 a1 = a1 << 0x1
 20711: 33 0a 20 00 03           a3 = 0x30020
 20716: 95 a9 00 00 00 08        a2 = a3 + 0x8000000
 20722: 01                       fallthrough
      :                          @1456
 20723: 82 9a                    a3 = u64 [a2]
 20725: c9 a9 0b                 a4 = a2 - a3
 20728: ab 7b e9 fe              jump @1439 if a4 != a0
      :                          @1457
 20732: c9 8a 0b                 a4 = a3 - a1
 20735: 01                       fallthrough
      :                          @1458
 20736: 82 9c                    a5 = u64 [a2]
 20738: ab ac f1                 jump @1456 if a5 != a3
      :                          @1459
 20741: 7b 9b                    u64 [a2] = a4
 20743: 33 06                    s1 = 0
 20745: 01                       fallthrough
      :                          @1460
 20746: ab ac e9                 jump @1456 if a5 != a3
      :                          @1461
 20749: 28 d4 fe                 jump @1439
      :                          @1462
 20752: 82 16 38                 s1 = u64 [sp + 0x38]
 20755: 82 18 28                 a1 = u64 [sp + 0x28]
 20758: c9 68 08                 a1 = a1 - s1
 20761: 82 19 50                 a2 = u64 [sp + 0x50]
 20764: 82 1a 48                 a3 = u64 [sp + 0x48]
 20767: 82 1b 40                 a4 = u64 [sp + 0x40]
 20770: c8 62 02                 t0 = t0 + s1
 20773: 7b 79 10                 u64 [a0 + 0x10] = a2
 20776: 7b 7a 08                 u64 [a0 + 0x8] = a3
 20779: 7b 7b                    u64 [a0] = a4
 20781: 7b 72 18                 u64 [a0 + 0x18] = t0
 20784: 7b 78 20                 u64 [a0 + 0x20] = a1
 20787: 7b 7c 28                 u64 [a0 + 0x28] = a5
 20790: 28 ab fe                 jump @1439
      :                          @1463 [@dyn 260]
 20793: 95 11 90                 sp = sp + 0xffffffffffffff90
 20796: 7b 10 68                 u64 [sp + 0x68] = ra
 20799: 7b 15 60                 u64 [sp + 0x60] = s0
 20802: 7b 16 58                 u64 [sp + 0x58] = s1
 20805: 82 8a 38                 a3 = u64 [a1 + 0x38]
 20808: 82 79 08                 a2 = u64 [a0 + 0x8]
 20811: 7b 19 40                 u64 [sp + 0x40] = a2
 20814: 82 76 10                 s1 = u64 [a0 + 0x10]
 20817: 82 85 30                 s0 = u64 [a1 + 0x30]
 20820: 7b 1a 28                 u64 [sp + 0x28] = a3
 20823: 82 a9 20                 a2 = u64 [a3 + 0x20]
 20826: 33 08 22                 a1 = 0x22
 20829: 64 57                    a0 = s0
 20831: 7b 19 18                 u64 [sp + 0x18] = a2
 20834: b4 90 02 0a 02           ra = 522, jump [a2]
      :                          @1464 [@dyn 261]
 20839: 33 08 01                 a1 = 0x1
 20842: 52 07 63 02              jump @1532 if a0 != 0
      :                          @1465
 20846: 51 06 1a 02              jump @1522 if s1 == 0
      :                          @1466
 20850: 7b 15 08                 u64 [sp + 0x8] = s0
 20853: 49 01                    u64 [sp + 0] = 0
 20855: 33 0a                    a3 = 0
 20857: 33 02 a1                 t0 = 0xffffffffffffffa1
 20860: 49 11 10 01 00 01        u64 [sp + 16] = 0x10001
 20866: 33 04 22                 t2 = 0x22
 20869: 33 03 5c                 t1 = 0x5c
 20872: 82 15 40                 s0 = u64 [sp + 0x40]
 20875: 64 68                    a1 = s1
 20877: 7b 16 20                 u64 [sp + 0x20] = s1
 20880: 28 0f                    jump @1468
      :                          @1467
 20882: c9 58 08                 a1 = a1 - s0
 20885: c8 9a 0a                 a3 = a3 + a2
 20888: 82 16 20                 s1 = u64 [sp + 0x20]
 20891: 51 08 b4 01              jump @1514 if a1 == 0
      :                          @1468
 20895: 33 07                    a0 = 0
 20897: c8 85 09                 a2 = s0 + a1
 20900: 7b 19 38                 u64 [sp + 0x38] = a2
 20903: 01                       fallthrough
      :                          @1469
 20904: c8 75 09                 a2 = s0 + a0
 20907: 7c 9b                    a4 = u8 [a2]
 20909: 95 bc 81                 a5 = a4 + 0xffffffffffffff81
 20912: ac 2c 12                 jump @1474 if a5 <u t0
      :                          @1470
 20915: aa 4b 0f                 jump @1474 if a4 == t2
      :                          @1471
 20918: aa 3b 0c                 jump @1474 if a4 == t1
      :                          @1472
 20921: 95 77 01                 a0 = a0 + 0x1
 20924: ab 78 ec                 jump @1469 if a1 != a0
      :                          @1473
 20927: 28 8c 01                 jump @1513
      :                          @1474
 20930: 7d 98                    a1 = i8 [a2]
 20932: 84 86 ff 00              s1 = a1 & 0xff
 20936: 57 08 0b                 jump @1476 if a1 <s 0
      :                          @1475
 20939: 95 99 01                 a2 = a2 + 0x1
 20942: 7b 19 30                 u64 [sp + 0x30] = a2
 20945: 28 5d                    jump @1481
      :                          @1476
 20947: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 20950: 84 68 1f                 a1 = s1 & 0x1f
 20953: 84 bb 3f                 a4 = a4 & 0x3f
 20956: 33 0c df 00              a5 = 0xdf
 20960: ae 6c 33                 jump @1479 if a5 >=u s1
      :                          @1477
 20963: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 20966: 97 bb 06                 a4 = a4 << 0x6
 20969: 84 cc 3f                 a5 = a5 & 0x3f
 20972: d4 cb 0b                 a4 = a4 | a5
 20975: 33 0c f0 00              a5 = 0xf0
 20979: ac c6 2e                 jump @1480 if s1 <u a5
      :                          @1478
 20982: 95 9c 04                 a5 = a2 + 0x4
 20985: 7b 1c 30                 u64 [sp + 0x30] = a5
 20988: 7c 99 03                 a2 = u8 [a2 + 0x3]
 20991: 97 88 3d                 a1 = a1 << 0x3d
 20994: 98 88 2b                 a1 = a1 >> 0x2b
 20997: 97 bb 06                 a4 = a4 << 0x6
 21000: 84 99 3f                 a2 = a2 & 0x3f
 21003: d4 b9 09                 a2 = a2 | a4
 21006: d4 89 06                 s1 = a2 | a1
 21009: 28 1d                    jump @1481
      :                          @1479
 21011: 95 99 02                 a2 = a2 + 0x2
 21014: 7b 19 30                 u64 [sp + 0x30] = a2
 21017: 97 88 06                 a1 = a1 << 0x6
 21020: d4 b8 06                 s1 = a1 | a4
 21023: 28 0f                    jump @1481
      :                          @1480
 21025: 95 99 03                 a2 = a2 + 0x3
 21028: 7b 19 30                 u64 [sp + 0x30] = a2
 21031: 97 88 0c                 a1 = a1 << 0xc
 21034: d4 8b 06                 s1 = a4 | a1
 21037: 01                       fallthrough
      :                          @1481
 21038: c8 a7 05                 s0 = a0 + a3
 21041: 95 17 4c                 a0 = sp + 0x4c
 21044: 64 68                    a1 = s1
 21046: 82 19 10                 a2 = u64 [sp + 0x10]
 21049: 50 20 0c 02 05 e5        ra = 524, jump @994
      :                          @1482 [@dyn 262]
 21055: 7c 17 4c                 a0 = u8 [sp + 0x4c]
 21058: 52 27 80 00 0a           jump @1484 if a0 != 128
      :                          @1483
 21063: 64 59                    a2 = s0
 21065: 28 d2 00                 jump @1509
      :                          @1484
 21068: 7c 17 57                 a0 = u8 [sp + 0x57]
 21071: 7c 18 56                 a1 = u8 [sp + 0x56]
 21074: bf 87 07                 i32 a0 = a0 - a1
 21077: 84 77 ff 00              a0 = a0 & 0xff
 21081: 33 03 5c                 t1 = 0x5c
 21084: 52 17 01 0f              jump @1486 if a0 != 1
      :                          @1485
 21088: 64 59                    a2 = s0
 21090: 33 02 a1                 t0 = 0xffffffffffffffa1
 21093: 33 04 22                 t2 = 0x22
 21096: 28 bd 00                 jump @1510
      :                          @1486
 21099: 82 1a                    a3 = u64 [sp]
 21101: ac a5 86 01              jump @1535 if s0 <u a3
      :                          @1487
 21105: 82 18 40                 a1 = u64 [sp + 0x40]
 21108: c8 a8 08                 a1 = a1 + a3
 21111: 51 0a 16                 jump @1492 if a3 == 0
      :                          @1488
 21114: 82 17 20                 a0 = u64 [sp + 0x20]
 21117: ae 7a 0c                 jump @1491 if a3 >=u a0
      :                          @1489
 21120: 7d 87                    a0 = i8 [a1]
 21122: 5a 17 bf 0b              jump @1492 if a0 >s 4294967231
      :                          @1490
 21126: 28 6d 01                 jump @1535
      :                          @1491
 21129: ab 7a 6a 01              jump @1535 if a3 != a0
      :                          @1492
 21133: 51 05 1c                 jump @1497 if s0 == 0
      :                          @1493
 21136: 82 17 20                 a0 = u64 [sp + 0x20]
 21139: ae 75 12                 jump @1496 if s0 >=u a0
      :                          @1494
 21142: 82 17 40                 a0 = u64 [sp + 0x40]
 21145: c8 57 07                 a0 = a0 + s0
 21148: 7d 77                    a0 = i8 [a0]
 21150: 5a 17 bf 0b              jump @1497 if a0 >s 4294967231
      :                          @1495
 21154: 28 51 01                 jump @1535
      :                          @1496
 21157: ab 75 4e 01              jump @1535 if s0 != a0
      :                          @1497
 21161: 82 17 28                 a0 = u64 [sp + 0x28]
 21164: 82 7b 18                 a4 = u64 [a0 + 0x18]
 21167: c9 a5 09                 a2 = s0 - a3
 21170: 82 17 08                 a0 = u64 [sp + 0x8]
 21173: 7b 1b                    u64 [sp] = a4
 21175: b4 b0 02 0e 02           ra = 526, jump [a4]
      :                          @1498 [@dyn 263]
 21180: 52 07 21 01              jump @1533 if a0 != 0
      :                          @1499
 21184: 7c 17 4c                 a0 = u8 [sp + 0x4c]
 21187: 52 27 80 00 19           jump @1503 if a0 != 128
      :                          @1500
 21192: 81 18 50                 a1 = i32 [sp + 0x50]
 21195: 82 17 08                 a0 = u64 [sp + 0x8]
 21198: 82 19 18                 a2 = u64 [sp + 0x18]
 21201: b4 90 02 10 02           ra = 528, jump [a2]
      :                          @1501 [@dyn 264]
 21206: 51 07 23                 jump @1505 if a0 == 0
      :                          @1502
 21209: 28 04 01                 jump @1533
      :                          @1503
 21212: 7c 18 56                 a1 = u8 [sp + 0x56]
 21215: 7c 19 57                 a2 = u8 [sp + 0x57]
 21218: c9 89 09                 a2 = a2 - a1
 21221: 95 17 4c                 a0 = sp + 0x4c
 21224: c8 78 08                 a1 = a1 + a0
 21227: 82 17 08                 a0 = u64 [sp + 0x8]
 21230: 82 1a                    a3 = u64 [sp]
 21232: b4 a0 02 12 02           ra = 530, jump [a3]
      :                          @1504 [@dyn 265]
 21237: 52 07 e8 00              jump @1533 if a0 != 0
      :                          @1505
 21241: 33 07 01                 a0 = 0x1
 21244: 53 26 80 00 17           jump @1508 if s1 <u 128
      :                          @1506
 21249: 98 68 0b                 a1 = s1 >> 0xb
 21252: 33 07 02                 a0 = 0x2
 21255: 51 08 0c                 jump @1508 if a1 == 0
      :                          @1507
 21258: 98 67 10                 a0 = s1 >> 0x10
 21261: 8e 77                    a0 = a0 >u 0
 21263: 95 77 03                 a0 = a0 + 0x3
 21266: 01                       fallthrough
      :                          @1508
 21267: 64 59                    a2 = s0
 21269: c8 57 07                 a0 = a0 + s0
 21272: 7b 17                    u64 [sp] = a0
 21274: 01                       fallthrough
      :                          @1509
 21275: 33 02 a1                 t0 = 0xffffffffffffffa1
 21278: 33 04 22                 t2 = 0x22
 21281: 33 03 5c                 t1 = 0x5c
 21284: 01                       fallthrough
      :                          @1510
 21285: 82 18 38                 a1 = u64 [sp + 0x38]
 21288: 82 15 30                 s0 = u64 [sp + 0x30]
 21291: 33 0a 01                 a3 = 0x1
 21294: 33 07 80 00              a0 = 0x80
 21298: ac 76 60 fe              jump @1467 if s1 <u a0
      :                          @1511
 21302: 98 67 0b                 a0 = s1 >> 0xb
 21305: 33 0a 02                 a3 = 0x2
 21308: 51 07 56 fe              jump @1467 if a0 == 0
      :                          @1512
 21312: 98 66 10                 s1 = s1 >> 0x10
 21315: 8e 6a                    a3 = s1 >u 0
 21317: 95 aa 03                 a3 = a3 + 0x3
 21320: 28 4a fe                 jump @1467
      :                          @1513
 21323: c8 8a 0a                 a3 = a3 + a1
 21326: 01                       fallthrough
      :                          @1514
 21327: 82 19                    a2 = u64 [sp]
 21329: ac 9a 91 00              jump @1534 if a3 <u a2
      :                          @1515
 21333: 82 15 08                 s0 = u64 [sp + 0x8]
 21336: 51 09 34                 jump @1523 if a2 == 0
      :                          @1516
 21339: ae 69 3a                 jump @1525 if a2 >=u s1
      :                          @1517
 21342: 82 17 40                 a0 = u64 [sp + 0x40]
 21345: c8 97 07                 a0 = a0 + a2
 21348: 7d 77                    a0 = i8 [a0]
 21350: 33 0b bf                 a4 = 0xffffffffffffffbf
 21353: 64 98                    a1 = a2
 21355: af 7b 77                 jump @1534 if a4 >=s a0
      :                          @1518
 21358: 51 0a 23                 jump @1524 if a3 == 0
      :                          @1519
 21361: ae 6a 2b                 jump @1527 if a3 >=u s1
      :                          @1520
 21364: 82 17 40                 a0 = u64 [sp + 0x40]
 21367: c8 a7 07                 a0 = a0 + a3
 21370: 7d 77                    a0 = i8 [a0]
 21372: 33 0b bf                 a4 = 0xffffffffffffffbf
 21375: 64 89                    a2 = a1
 21377: af 7b 61                 jump @1534 if a4 >=s a0
      :                          @1521
 21380: 64 a6                    s1 = a3
 21382: 28 1b                    jump @1528
      :                          @1522
 21384: 33 08                    a1 = 0
 21386: 28 17                    jump @1528
      :                          @1523
 21388: 33 08                    a1 = 0
 21390: 52 0a e3                 jump @1519 if a3 != 0
      :                          @1524
 21393: 33 06                    s1 = 0
 21395: 28 0e                    jump @1528
      :                          @1525
 21397: 64 68                    a1 = s1
 21399: aa 69 d7                 jump @1518 if a2 == s1
      :                          @1526
 21402: 28 48                    jump @1534
      :                          @1527
 21404: 64 89                    a2 = a1
 21406: ab 6a 44                 jump @1534 if a3 != s1
      :                          @1528
 21409: 82 17 28                 a0 = u64 [sp + 0x28]
 21412: 82 7a 18                 a3 = u64 [a0 + 0x18]
 21415: c9 86 09                 a2 = s1 - a1
 21418: 82 17 40                 a0 = u64 [sp + 0x40]
 21421: c8 78 08                 a1 = a1 + a0
 21424: 64 57                    a0 = s0
 21426: b4 a0 02 14 02           ra = 532, jump [a3]
      :                          @1529 [@dyn 266]
 21431: 33 08 01                 a1 = 0x1
 21434: 52 07 13                 jump @1532 if a0 != 0
      :                          @1530
 21437: 33 08 22                 a1 = 0x22
 21440: 64 57                    a0 = s0
 21442: 82 19 18                 a2 = u64 [sp + 0x18]
 21445: b4 90 02 16 02           ra = 534, jump [a2]
      :                          @1531 [@dyn 267]
 21450: 64 78                    a1 = a0
 21452: 01                       fallthrough
      :                          @1532
 21453: 64 87                    a0 = a1
 21455: 82 10 68                 ra = u64 [sp + 0x68]
 21458: 82 15 60                 s0 = u64 [sp + 0x60]
 21461: 82 16 58                 s1 = u64 [sp + 0x58]
 21464: 95 11 70                 sp = sp + 0x70
 21467: 32 00                    ret
      :                          @1533
 21469: 33 08 01                 a1 = 0x1
 21472: 28 ed                    jump @1532
      :                          @1534
 21474: 33 0b 60 08 01           a4 = 0x10860
 21479: 82 17 40                 a0 = u64 [sp + 0x40]
 21482: 64 68                    a1 = s1
 21484: 33 00 d4 01              ra = 0x1d4
 21488: 28 8e ec                 jump @1158
      :                          @1535
 21491: 33 0b 48 08 01           a4 = 0x10848
 21496: 82 17 40                 a0 = u64 [sp + 0x40]
 21499: 82 18 20                 a1 = u64 [sp + 0x20]
 21502: 64 a9                    a2 = a3
 21504: 64 5a                    a3 = s0
 21506: 33 00 d4 01              ra = 0x1d4
 21510: 28 78 ec                 jump @1158
      :                          @1536
 21513: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 21516: 7b 10 20                 u64 [sp + 0x20] = ra
 21519: 7b 15 18                 u64 [sp + 0x18] = s0
 21522: 7b 16 10                 u64 [sp + 0x10] = s1
 21525: 64 75                    s0 = a0
 21527: 82 77 10                 a0 = u64 [a0 + 0x10]
 21530: 51 07 32                 jump @1543 if a0 == 0
      :                          @1537
 21533: 56 47 00 00 00 04 2f     jump @1543 if a0 >u 67108864
      :                          @1538
 21540: 97 77 01                 a0 = a0 << 0x1
 21543: 82 58 18                 a1 = u64 [s0 + 0x18]
 21546: 33 09 20 00 03           a2 = 0x30020
 21551: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 21557: 01                       fallthrough
      :                          @1539
 21558: 82 9a                    a3 = u64 [a2]
 21560: c9 a9 0b                 a4 = a2 - a3
 21563: ab 8b 11                 jump @1543 if a4 != a1
      :                          @1540
 21566: c9 7a 0b                 a4 = a3 - a0
 21569: 01                       fallthrough
      :                          @1541
 21570: 82 9c                    a5 = u64 [a2]
 21572: ab ac f2                 jump @1539 if a5 != a3
      :                          @1542
 21575: 7b 9b                    u64 [a2] = a4
 21577: 33 06                    s1 = 0
 21579: 01                       fallthrough
      :                          @1543
 21580: 82 57 28                 a0 = u64 [s0 + 0x28]
 21583: 51 07 32                 jump @1550 if a0 == 0
      :                          @1544
 21586: 56 47 00 00 00 04 2f     jump @1550 if a0 >u 67108864
      :                          @1545
 21593: 97 77 01                 a0 = a0 << 0x1
 21596: 82 58 30                 a1 = u64 [s0 + 0x30]
 21599: 33 09 20 00 03           a2 = 0x30020
 21604: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 21610: 01                       fallthrough
      :                          @1546
 21611: 82 9a                    a3 = u64 [a2]
 21613: c9 a9 0b                 a4 = a2 - a3
 21616: ab 8b 11                 jump @1550 if a4 != a1
      :                          @1547
 21619: c9 7a 0b                 a4 = a3 - a0
 21622: 01                       fallthrough
      :                          @1548
 21623: 82 9c                    a5 = u64 [a2]
 21625: ab ac f2                 jump @1546 if a5 != a3
      :                          @1549
 21628: 7b 9b                    u64 [a2] = a4
 21630: 33 06                    s1 = 0
 21632: 01                       fallthrough
      :                          @1550
 21633: 82 57 58                 a0 = u64 [s0 + 0x58]
 21636: 51 07 32                 jump @1557 if a0 == 0
      :                          @1551
 21639: 56 47 00 00 00 02 2f     jump @1557 if a0 >u 33554432
      :                          @1552
 21646: 97 77 02                 a0 = a0 << 0x2
 21649: 82 58 60                 a1 = u64 [s0 + 0x60]
 21652: 33 09 20 00 03           a2 = 0x30020
 21657: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 21663: 01                       fallthrough
      :                          @1553
 21664: 82 9a                    a3 = u64 [a2]
 21666: c9 a9 0b                 a4 = a2 - a3
 21669: ab 8b 11                 jump @1557 if a4 != a1
      :                          @1554
 21672: c9 7a 0b                 a4 = a3 - a0
 21675: 01                       fallthrough
      :                          @1555
 21676: 82 9c                    a5 = u64 [a2]
 21678: ab ac f2                 jump @1553 if a5 != a3
      :                          @1556
 21681: 7b 9b                    u64 [a2] = a4
 21683: 33 06                    s1 = 0
 21685: 01                       fallthrough
      :                          @1557
 21686: 82 57 70                 a0 = u64 [s0 + 0x70]
 21689: 51 07 32                 jump @1564 if a0 == 0
      :                          @1558
 21692: 56 47 00 00 00 01 2f     jump @1564 if a0 >u 16777216
      :                          @1559
 21699: 97 77 03                 a0 = a0 << 0x3
 21702: 82 58 78                 a1 = u64 [s0 + 0x78]
 21705: 33 09 20 00 03           a2 = 0x30020
 21710: 95 99 00 00 00 08        a2 = a2 + 0x8000000
 21716: 01                       fallthrough
      :                          @1560
 21717: 82 9a                    a3 = u64 [a2]
 21719: c9 a9 0b                 a4 = a2 - a3
 21722: ab 8b 11                 jump @1564 if a4 != a1
      :                          @1561
 21725: c9 7a 0b                 a4 = a3 - a0
 21728: 01                       fallthrough
      :                          @1562
 21729: 82 9c                    a5 = u64 [a2]
 21731: ab ac f2                 jump @1560 if a5 != a3
      :                          @1563
 21734: 7b 9b                    u64 [a2] = a4
 21736: 33 06                    s1 = 0
 21738: 01                       fallthrough
      :                          @1564
 21739: 82 57 a0 00              a0 = u64 [s0 + 0xa0]
 21743: 82 7a 20                 a3 = u64 [a0 + 0x20]
 21746: 82 58 a8 00              a1 = u64 [s0 + 0xa8]
 21750: 82 59 b0 00              a2 = u64 [s0 + 0xb0]
 21754: 95 57 b8 00              a0 = s0 + 0xb8
 21758: b4 a0 02 18 02           ra = 536, jump [a3]
      :                          @1565 [@dyn 268]
 21763: 64 57                    a0 = s0
 21765: 82 55 98 00              s0 = u64 [s0 + 0x98]
 21769: 7b 17                    u64 [sp] = a0
 21771: 82 77 90 00              a0 = u64 [a0 + 0x90]
 21775: 7b 17 08                 u64 [sp + 0x8] = a0
 21778: 51 05 26                 jump @1569 if s0 == 0
      :                          @1566
 21781: 82 16 08                 s1 = u64 [sp + 0x8]
 21784: 95 66 18                 s1 = s1 + 0x18
 21787: 01                       fallthrough
      :                          @1567
 21788: 82 67 e8                 a0 = u64 [s1 + 0xffffffffffffffe8]
 21791: 82 7a 20                 a3 = u64 [a0 + 0x20]
 21794: 82 68 f0                 a1 = u64 [s1 + 0xfffffffffffffff0]
 21797: 82 69 f8                 a2 = u64 [s1 + 0xfffffffffffffff8]
 21800: 64 67                    a0 = s1
 21802: b4 a0 02 1a 02           ra = 538, jump [a3]
      :                          @1568 [@dyn 269]
 21807: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 21810: 95 66 20                 s1 = s1 + 0x20
 21813: 52 05 e7                 jump @1567 if s0 != 0
      :                          @1569
 21816: 82 15                    s0 = u64 [sp]
 21818: 82 57 88 00              a0 = u64 [s0 + 0x88]
 21822: 82 16 08                 s1 = u64 [sp + 0x8]
 21825: 51 07 2e                 jump @1576 if a0 == 0
      :                          @1570
 21828: 56 37 00 00 40 2b        jump @1576 if a0 >u 4194304
      :                          @1571
 21834: 97 77 05                 a0 = a0 << 0x5
 21837: 33 08 20 00 03           a1 = 0x30020
 21842: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 21848: 01                       fallthrough
      :                          @1572
 21849: 82 89                    a2 = u64 [a1]
 21851: c9 98 0a                 a3 = a1 - a2
 21854: ab 6a 11                 jump @1576 if a3 != s1
      :                          @1573
 21857: c9 79 0a                 a3 = a2 - a0
 21860: 01                       fallthrough
      :                          @1574
 21861: 82 8b                    a4 = u64 [a1]
 21863: ab 9b f2                 jump @1572 if a4 != a2
      :                          @1575
 21866: 7b 8a                    u64 [a1] = a3
 21868: 33 0c                    a5 = 0
 21870: 01                       fallthrough
      :                          @1576
 21871: 82 57 c0 00              a0 = u64 [s0 + 0xc0]
 21875: 82 7a 20                 a3 = u64 [a0 + 0x20]
 21878: 82 58 c8 00              a1 = u64 [s0 + 0xc8]
 21882: 82 59 d0 00              a2 = u64 [s0 + 0xd0]
 21886: 95 57 d8 00              a0 = s0 + 0xd8
 21890: b4 a0 02 1c 02           ra = 540, jump [a3]
      :                          @1577 [@dyn 270]
 21895: 82 57 f0 00              a0 = u64 [s0 + 0xf0]
 21899: 82 7a 20                 a3 = u64 [a0 + 0x20]
 21902: 82 58 f8 00              a1 = u64 [s0 + 0xf8]
 21906: 82 59 00 01              a2 = u64 [s0 + 0x100]
 21910: 95 57 08 01              a0 = s0 + 0x108
 21914: b4 a0 02 1e 02           ra = 542, jump [a3]
      :                          @1578 [@dyn 271]
 21919: 33 07 ff                 a0 = 0xffffffffffffffff
 21922: aa 75 4c                 jump @1585 if s0 == a0
      :                          @1579
 21925: 95 58 08                 a1 = s0 + 0x8
 21928: 3e 02 00 00 03           u64 [0x30000] = t0
 21933: 3e 04 08 00 03           u64 [0x30008] = t2
 21938: 82 82                    t0 = u64 [a1]
 21940: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 21943: 7b 84                    u64 [a1] = t2
 21945: 64 27                    a0 = t0
 21947: 3a 02 00 00 03           t0 = u64 [0x30000]
 21952: 3a 04 08 00 03           t2 = u64 [0x30008]
 21957: 33 08 01                 a1 = 0x1
 21960: ab 87 26                 jump @1585 if a0 != a1
      :                          @1580
 21963: 33 07 20 00 03           a0 = 0x30020
 21968: 95 77 00 00 00 08        a0 = a0 + 0x8000000
 21974: 01                       fallthrough
      :                          @1581
 21975: 82 78                    a1 = u64 [a0]
 21977: c9 87 09                 a2 = a0 - a1
 21980: ab 59 12                 jump @1585 if a2 != s0
      :                          @1582
 21983: 95 89 f0 fe              a2 = a1 + 0xfffffffffffffef0
 21987: 01                       fallthrough
      :                          @1583
 21988: 82 7a                    a3 = u64 [a0]
 21990: ab 8a f1                 jump @1581 if a3 != a1
      :                          @1584
 21993: 7b 79                    u64 [a0] = a2
 21995: 33 0b                    a4 = 0
 21997: 01                       fallthrough
      :                          @1585
 21998: 82 10 20                 ra = u64 [sp + 0x20]
 22001: 82 15 18                 s0 = u64 [sp + 0x18]
 22004: 82 16 10                 s1 = u64 [sp + 0x10]
 22007: 95 11 28                 sp = sp + 0x28
 22010: 32 00                    ret
      :                          @1586
 22012: 82 73 10                 t1 = u64 [a0 + 0x10]
 22015: 33 09 01                 a2 = 0x1
 22018: ab 93 09                 jump @1588 if t1 != a2
      :                          @1587
 22021: 82 79 18                 a2 = u64 [a0 + 0x18]
 22024: 51 09 35                 jump @1594 if a2 == 0
      :                          @1588
 22027: 82 72 20                 t0 = u64 [a0 + 0x20]
 22030: 33 0a 00 00 00 f8        a3 = 0xfffffffff8000000
 22036: 95 2b ff ff ff f7        a4 = t0 + 0xfffffffff7ffffff
 22042: ac ab 23                 jump @1594 if a4 <u a3
      :                          @1589
 22045: 33 0a 20 00 03           a3 = 0x30020
 22050: 95 aa 00 00 00 08        a3 = a3 + 0x8000000
 22056: 01                       fallthrough
      :                          @1590
 22057: 82 ab                    a4 = u64 [a3]
 22059: c9 ba 0c                 a5 = a3 - a4
 22062: ab 3c 0f                 jump @1594 if a5 != t1
      :                          @1591
 22065: c9 2b 0c                 a5 = a4 - t0
 22068: 01                       fallthrough
      :                          @1592
 22069: 82 a9                    a2 = u64 [a3]
 22071: ab b9 f2                 jump @1590 if a2 != a4
      :                          @1593
 22074: 7b ac                    u64 [a3] = a5
 22076: 01                       fallthrough
      :                          @1594
 22077: 33 08 ff                 a1 = 0xffffffffffffffff
 22080: aa 87 4c                 jump @1601 if a0 == a1
      :                          @1595
 22083: 95 79 08                 a2 = a0 + 0x8
 22086: 3e 02 00 00 03           u64 [0x30000] = t0
 22091: 3e 04 08 00 03           u64 [0x30008] = t2
 22096: 82 92                    t0 = u64 [a2]
 22098: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 22101: 7b 94                    u64 [a2] = t2
 22103: 64 28                    a1 = t0
 22105: 3a 02 00 00 03           t0 = u64 [0x30000]
 22110: 3a 04 08 00 03           t2 = u64 [0x30008]
 22115: 33 09 01                 a2 = 0x1
 22118: ab 98 26                 jump @1601 if a1 != a2
      :                          @1596
 22121: 33 08 20 00 03           a1 = 0x30020
 22126: 95 88 00 00 00 08        a1 = a1 + 0x8000000
 22132: 01                       fallthrough
      :                          @1597
 22133: 82 89                    a2 = u64 [a1]
 22135: c9 98 0a                 a3 = a1 - a2
 22138: ab 7a 12                 jump @1601 if a3 != a0
      :                          @1598
 22141: 95 9a d8                 a3 = a2 + 0xffffffffffffffd8
 22144: 01                       fallthrough
      :                          @1599
 22145: 82 8b                    a4 = u64 [a1]
 22147: ab 9b f2                 jump @1597 if a4 != a2
      :                          @1600
 22150: 7b 8a                    u64 [a1] = a3
 22152: 33 0c                    a5 = 0
 22154: 32 00                    ret
      :                          @1601
 22156: 32 00                    ret
      :                          @1602
 22158: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 22161: 7b 10 10                 u64 [sp + 0x10] = ra
 22164: 7b 15 08                 u64 [sp + 0x8] = s0
 22167: 7b 16                    u64 [sp] = s1
 22169: 53 19 10 59              jump @1612 if a2 <u 16
      :                          @1603
 22173: 8d 7a                    i32 a3 = -a0
 22175: 84 a2 07                 t0 = a3 & 0x7
 22178: c8 27 06                 s1 = a0 + t0
 22181: ae 67 1a                 jump @1606 if a0 >=u s1
      :                          @1604
 22184: 64 2c                    a5 = t0
 22186: 64 7a                    a3 = a0
 22188: 64 8b                    a4 = a1
 22190: 01                       fallthrough
      :                          @1605
 22191: 7c b5                    s0 = u8 [a4]
 22193: 78 a5                    u8 [a3] = s0
 22195: 95 aa 01                 a3 = a3 + 0x1
 22198: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 22201: 95 bb 01                 a4 = a4 + 0x1
 22204: 52 0c f3                 jump @1605 if a5 != 0
      :                          @1606
 22207: c8 28 08                 a1 = a1 + t0
 22210: c9 29 09                 a2 = a2 - t0
 22213: 84 9c f8                 a5 = a2 & 0xfffffffffffffff8
 22216: 84 8b 07                 a4 = a1 & 0x7
 22219: c8 c6 0a                 a3 = s1 + a5
 22222: 52 0b 49                 jump @1615 if a4 != 0
      :                          @1607
 22225: ae a6 13                 jump @1610 if s1 >=u a3
      :                          @1608
 22228: 64 8b                    a4 = a1
 22230: 01                       fallthrough
      :                          @1609
 22231: 82 b5                    s0 = u64 [a4]
 22233: 7b 65                    u64 [s1] = s0
 22235: 95 66 08                 s1 = s1 + 0x8
 22238: 95 bb 08                 a4 = a4 + 0x8
 22241: ac a6 f6                 jump @1609 if s1 <u a3
      :                          @1610
 22244: c8 c8 08                 a1 = a1 + a5
 22247: 84 99 07                 a2 = a2 & 0x7
 22250: c8 9a 0b                 a4 = a3 + a2
 22253: ac ba 0d                 jump @1613 if a3 <u a4
      :                          @1611
 22256: 28 1a                    jump @1614
      :                          @1612
 22258: 64 7a                    a3 = a0
 22260: c8 97 0b                 a4 = a0 + a2
 22263: ae b7 13                 jump @1614 if a0 >=u a4
      :                          @1613
 22266: 7c 8b                    a4 = u8 [a1]
 22268: 78 ab                    u8 [a3] = a4
 22270: 95 aa 01                 a3 = a3 + 0x1
 22273: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 22276: 95 88 01                 a1 = a1 + 0x1
 22279: 52 09 f3                 jump @1613 if a2 != 0
      :                          @1614
 22282: 82 10 10                 ra = u64 [sp + 0x10]
 22285: 82 15 08                 s0 = u64 [sp + 0x8]
 22288: 82 16                    s1 = u64 [sp]
 22290: 95 11 18                 sp = sp + 0x18
 22293: 32 00                    ret
      :                          @1615
 22295: ae a6 cd                 jump @1610 if s1 >=u a3
      :                          @1616
 22298: 97 85 03                 s0 = a1 << 0x3
 22301: 84 52 38                 t0 = s0 & 0x38
 22304: 84 84 f8                 t2 = a1 & 0xfffffffffffffff8
 22307: 82 4b                    a4 = u64 [t2]
 22309: 8d 55                    i32 s0 = -s0
 22311: 84 53 38                 t1 = s0 & 0x38
 22314: 95 44 08                 t2 = t2 + 0x8
 22317: 01                       fallthrough
      :                          @1617
 22318: 82 45                    s0 = u64 [t2]
 22320: d0 2b 00                 ra = a4 >> t0
 22323: cf 35 0b                 a4 = s0 << t1
 22326: d4 0b 0b                 a4 = a4 | ra
 22329: 7b 6b                    u64 [s1] = a4
 22331: 95 66 08                 s1 = s1 + 0x8
 22334: 95 44 08                 t2 = t2 + 0x8
 22337: 64 5b                    a4 = s0
 22339: ac a6 eb                 jump @1617 if s1 <u a3
      :                          @1618
 22342: 28 9e                    jump @1610
      :                          @1619
 22344: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 22347: 7b 10 20                 u64 [sp + 0x20] = ra
 22350: 7b 15 18                 u64 [sp + 0x18] = s0
 22353: 7b 16 10                 u64 [sp + 0x10] = s1
 22356: c9 87 0a                 a3 = a0 - a1
 22359: ae 9a 8a 00              jump @1633 if a3 >=u a2
      :                          @1620
 22363: c8 97 0c                 a5 = a0 + a2
 22366: 33 0a 10                 a3 = 0x10
 22369: c8 98 04                 t2 = a1 + a2
 22372: ac a9 60                 jump @1629 if a2 <u a3
      :                          @1621
 22375: 84 c3 07                 t1 = a5 & 0x7
 22378: 84 c6 f8                 s1 = a5 & 0xfffffffffffffff8
 22381: 9a 32                    t0 = -t1
 22383: ae c6 1a                 jump @1624 if s1 >=u a5
      :                          @1622
 22386: c8 98 05                 s0 = a1 + a2
 22389: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 22392: 01                       fallthrough
      :                          @1623
 22393: 7c 5a                    a3 = u8 [s0]
 22395: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 22398: 78 ca ff                 u8 [a5 + 0xffffffffffffffff] = a3
 22401: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 22404: 64 bc                    a5 = a4
 22406: ac b6 f3                 jump @1623 if s1 <u a4
      :                          @1624
 22409: c8 42 02                 t0 = t0 + t2
 22412: c9 39 09                 a2 = a2 - t1
 22415: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 22418: 84 25 07                 s0 = t0 & 0x7
 22421: 9a a0                    ra = -a3
 22423: c9 a6 0c                 a5 = s1 - a3
 22426: 52 05 c7 00              jump @1646 if s0 != 0
      :                          @1625
 22430: ae 6c 1c                 jump @1628 if a5 >=u s1
      :                          @1626
 22433: c8 98 08                 a1 = a1 + a2
 22436: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 22439: 64 6a                    a3 = s1
 22441: 01                       fallthrough
      :                          @1627
 22442: 82 85                    s0 = u64 [a1]
 22444: 95 ab f8                 a4 = a3 + 0xfffffffffffffff8
 22447: 7b a5 f8                 u64 [a3 + 0xfffffffffffffff8] = s0
 22450: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 22453: 64 ba                    a3 = a4
 22455: ac bc f3                 jump @1627 if a5 <u a4
      :                          @1628
 22458: c8 06 0c                 a5 = s1 + ra
 22461: c8 02 04                 t2 = t0 + ra
 22464: 84 99 07                 a2 = a2 & 0x7
 22467: 01                       fallthrough
      :                          @1629
 22468: c9 9c 08                 a1 = a5 - a2
 22471: ae c8 8c 00              jump @1645 if a1 >=u a5
      :                          @1630
 22475: 95 4b ff                 a4 = t2 + 0xffffffffffffffff
 22478: 01                       fallthrough
      :                          @1631
 22479: 7c b9                    a2 = u8 [a4]
 22481: 95 ca ff                 a3 = a5 + 0xffffffffffffffff
 22484: 78 c9 ff                 u8 [a5 + 0xffffffffffffffff] = a2
 22487: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 22490: 64 ac                    a5 = a3
 22492: ac a8 f3                 jump @1631 if a1 <u a3
      :                          @1632
 22495: 28 74                    jump @1645
      :                          @1633
 22497: 53 19 10 5a              jump @1643 if a2 <u 16
      :                          @1634
 22501: 8d 7a                    i32 a3 = -a0
 22503: 84 a2 07                 t0 = a3 & 0x7
 22506: c8 27 05                 s0 = a0 + t0
 22509: ae 57 1a                 jump @1637 if a0 >=u s0
      :                          @1635
 22512: 64 2c                    a5 = t0
 22514: 64 7a                    a3 = a0
 22516: 64 8b                    a4 = a1
 22518: 01                       fallthrough
      :                          @1636
 22519: 7c b6                    s1 = u8 [a4]
 22521: 78 a6                    u8 [a3] = s1
 22523: 95 aa 01                 a3 = a3 + 0x1
 22526: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 22529: 95 bb 01                 a4 = a4 + 0x1
 22532: 52 0c f3                 jump @1636 if a5 != 0
      :                          @1637
 22535: c8 28 08                 a1 = a1 + t0
 22538: c9 29 09                 a2 = a2 - t0
 22541: 84 9c f8                 a5 = a2 & 0xfffffffffffffff8
 22544: 84 8b 07                 a4 = a1 & 0x7
 22547: c8 c5 0a                 a3 = s0 + a5
 22550: 52 0b 8d 00              jump @1650 if a4 != 0
      :                          @1638
 22554: ae a5 13                 jump @1641 if s0 >=u a3
      :                          @1639
 22557: 64 8b                    a4 = a1
 22559: 01                       fallthrough
      :                          @1640
 22560: 82 b6                    s1 = u64 [a4]
 22562: 7b 56                    u64 [s0] = s1
 22564: 95 55 08                 s0 = s0 + 0x8
 22567: 95 bb 08                 a4 = a4 + 0x8
 22570: ac a5 f6                 jump @1640 if s0 <u a3
      :                          @1641
 22573: c8 c8 08                 a1 = a1 + a5
 22576: 84 99 07                 a2 = a2 & 0x7
 22579: c8 9a 0b                 a4 = a3 + a2
 22582: ac ba 0d                 jump @1644 if a3 <u a4
      :                          @1642
 22585: 28 1a                    jump @1645
      :                          @1643
 22587: 64 7a                    a3 = a0
 22589: c8 97 0b                 a4 = a0 + a2
 22592: ae b7 13                 jump @1645 if a0 >=u a4
      :                          @1644
 22595: 7c 8b                    a4 = u8 [a1]
 22597: 78 ab                    u8 [a3] = a4
 22599: 95 aa 01                 a3 = a3 + 0x1
 22602: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 22605: 95 88 01                 a1 = a1 + 0x1
 22608: 52 09 f3                 jump @1644 if a2 != 0
      :                          @1645
 22611: 82 10 20                 ra = u64 [sp + 0x20]
 22614: 82 15 18                 s0 = u64 [sp + 0x18]
 22617: 82 16 10                 s1 = u64 [sp + 0x10]
 22620: 95 11 28                 sp = sp + 0x28
 22623: 32 00                    ret
      :                          @1646
 22625: ae 6c 59 ff              jump @1628 if a5 >=u s1
      :                          @1647
 22629: 97 28 03                 a1 = t0 << 0x3
 22632: 84 8a 38                 a3 = a1 & 0x38
 22635: 7b 1a 08                 u64 [sp + 0x8] = a3
 22638: 84 2a f8                 a3 = t0 & 0xfffffffffffffff8
 22641: 82 a5                    s0 = u64 [a3]
 22643: 8d 88                    i32 a1 = -a1
 22645: 84 88 38                 a1 = a1 & 0x38
 22648: 7b 18                    u64 [sp] = a1
 22650: 95 a8 f8                 a1 = a3 + 0xfffffffffffffff8
 22653: 64 6a                    a3 = s1
 22655: 01                       fallthrough
      :                          @1648
 22656: 82 84                    t2 = u64 [a1]
 22658: 82 1b                    a4 = u64 [sp]
 22660: cf b5 0b                 a4 = s0 << a4
 22663: 82 15 08                 s0 = u64 [sp + 0x8]
 22666: d0 54 03                 t1 = t2 >> s0
 22669: d4 b3 05                 s0 = t1 | a4
 22672: 95 a3 f8                 t1 = a3 + 0xfffffffffffffff8
 22675: 7b a5 f8                 u64 [a3 + 0xfffffffffffffff8] = s0
 22678: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 22681: 64 3a                    a3 = t1
 22683: 64 45                    s0 = t2
 22685: ac 3c e3                 jump @1648 if a5 <u t1
      :                          @1649
 22688: 28 1a ff                 jump @1628
      :                          @1650
 22691: ae a5 8a                 jump @1641 if s0 >=u a3
      :                          @1651
 22694: 97 86 03                 s1 = a1 << 0x3
 22697: 84 62 38                 t0 = s1 & 0x38
 22700: 84 84 f8                 t2 = a1 & 0xfffffffffffffff8
 22703: 82 4b                    a4 = u64 [t2]
 22705: 8d 66                    i32 s1 = -s1
 22707: 84 63 38                 t1 = s1 & 0x38
 22710: 95 44 08                 t2 = t2 + 0x8
 22713: 01                       fallthrough
      :                          @1652
 22714: 82 46                    s1 = u64 [t2]
 22716: d0 2b 00                 ra = a4 >> t0
 22719: cf 36 0b                 a4 = s1 << t1
 22722: d4 0b 0b                 a4 = a4 | ra
 22725: 7b 5b                    u64 [s0] = a4
 22727: 95 55 08                 s0 = s0 + 0x8
 22730: 95 44 08                 t2 = t2 + 0x8
 22733: 64 6b                    a4 = s1
 22735: ac a5 eb                 jump @1652 if s0 <u a3
      :                          @1653
 22738: 28 5b ff                 jump @1641
      :                          @1654
 22741: 53 19 10 60              jump @1664 if a2 <u 16
      :                          @1655
 22745: 8d 7a                    i32 a3 = -a0
 22747: 84 a2 07                 t0 = a3 & 0x7
 22750: c8 27 0b                 a4 = a0 + t0
 22753: ae b7 13                 jump @1658 if a0 >=u a4
      :                          @1656
 22756: 64 2c                    a5 = t0
 22758: 64 7a                    a3 = a0
 22760: 01                       fallthrough
      :                          @1657
 22761: 78 a8                    u8 [a3] = a1
 22763: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 22766: 95 aa 01                 a3 = a3 + 0x1
 22769: 52 0c f8                 jump @1657 if a5 != 0
      :                          @1658
 22772: c9 29 09                 a2 = a2 - t0
 22775: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 22778: c8 ba 0a                 a3 = a3 + a4
 22781: ae ab 22                 jump @1661 if a4 >=u a3
      :                          @1659
 22784: 97 82 38                 t0 = a1 << 0x38
 22787: 14 0c 00 01 01 01 01 00 00 00 a5 = 0x101010100
 22797: d6 c2 02                 t0 = t0 mulhu a5
 22800: 97 2c 20                 a5 = t0 << 0x20
 22803: d4 2c 0c                 a5 = a5 | t0
 22806: 01                       fallthrough
      :                          @1660
 22807: 7b bc                    u64 [a4] = a5
 22809: 95 bb 08                 a4 = a4 + 0x8
 22812: ac ab fb                 jump @1660 if a4 <u a3
      :                          @1661
 22815: 84 99 07                 a2 = a2 & 0x7
 22818: c8 9a 0b                 a4 = a3 + a2
 22821: ae ba 0e                 jump @1663 if a3 >=u a4
      :                          @1662
 22824: 78 a8                    u8 [a3] = a1
 22826: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 22829: 95 aa 01                 a3 = a3 + 0x1
 22832: 52 09 f8                 jump @1662 if a2 != 0
      :                          @1663
 22835: 32 00                    ret
      :                          @1664
 22837: 64 7a                    a3 = a0
 22839: c8 97 0b                 a4 = a0 + a2
 22842: ac b7 ee                 jump @1662 if a0 <u a4
      :                          @1665
 22845: 28 f6                    jump @1663
