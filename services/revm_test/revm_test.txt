// RO data = 1332/1332 bytes
// RW data = 16/4240 bytes
// Stack size = 409600 bytes
// RO data = [105, 110, 105, 116, 101, 100, 32, 112, 114, 101, 99, 111, 109, 112, 105, 108, 101, 115, 0, 0, 0, 0, 0, 0, 83, 69, 81, 85, 69, 78, 67, 69, 32, 1, 0, 0, 0, 0, 0, 0, 78, 111, 116, 70, 111, 117, 110, 100, 84, 105, 109, 101, 100, 79, 117, 116, 79, 118, 101, 114, 102, 108, 111, 119, 0, 1, 0, 0, 0, 0, 0, 0, 241, 9, 105, 74, 180, 146, 233, 68, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 2, 0, 0, 0, 0, 0, 0, 128, 1, 0, 0, 0, 0, 0, 0, 112, 111, 115, 105, 116, 105, 111, 110, 68, 97, 116, 101, 84, 105, 109, 101, 160, 0, 0, 0, 0, 0, 0, 0, 101, 120, 112, 101, 99, 116, 101, 100, 128, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 210, 180, 0, 0, 0, 0, 0, 0, 0, 182, 0, 0, 0, 0, 0, 0, 0, 186, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0, 0, 0, 0, 142, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 174, 0, 0, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 215, 40, 173, 80, 169, 202, 23, 122, 185, 33, 85, 225, 122, 193, 106, 31, 132, 210, 107, 105, 78, 234, 75, 51, 142, 157, 23, 206, 68, 103, 31, 42, 195, 228, 191, 10, 169, 127, 84, 111, 40, 136, 14, 1, 214, 126, 67, 228, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 49, 176, 219, 69, 154, 32, 147, 232, 127, 202, 232, 113, 20, 138, 170, 61, 21, 235, 132, 146, 228, 144, 108, 232, 205, 107, 212, 167, 33, 210, 134, 48, 44, 86, 177, 61, 168, 205, 101, 215, 109, 52, 116, 7, 197, 10, 40, 138, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 115, 101, 114, 105, 97, 108, 105, 122, 101, 32, 120, 32, 99, 111, 111, 114, 100, 105, 110, 97, 116, 101, 170, 239, 237, 18, 137, 72, 195, 104, 79, 191, 170, 114, 104, 127, 8, 141, 49, 18, 8, 9, 71, 162, 225, 81, 250, 192, 41, 71, 177, 214, 89, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 113, 127, 196, 138, 174, 180, 113, 21, 198, 6, 245, 157, 172, 8, 18, 34, 196, 228, 191, 10, 169, 127, 84, 111, 40, 136, 14, 1, 214, 126, 67, 228, 32, 116, 111, 112, 32, 98, 121, 116, 101, 115, 32, 111, 102, 32, 105, 110, 112, 117, 116, 32, 97, 114, 101, 32, 110, 111, 116, 32, 122, 101, 114, 111, 157, 13, 143, 197, 141, 67, 93, 211, 61, 11, 199, 245, 40, 235, 120, 10, 44, 70, 121, 120, 111, 163, 110, 102, 47, 223, 7, 154, 193, 119, 10, 14, 207, 131, 18, 181, 16, 200, 207, 224, 194, 57, 199, 142, 252, 185, 128, 168, 164, 155, 237, 119, 253, 227, 217, 90, 31, 207, 163, 63, 179, 82, 156, 172, 24, 1, 0, 0, 0, 0, 0, 0, 182, 0, 0, 0, 0, 0, 0, 0, 186, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 99, 45, 107, 122, 103, 32, 102, 101, 97, 116, 117, 114, 101, 32, 105, 115, 32, 110, 111, 116, 32, 101, 110, 97, 98, 108, 101, 100, 253, 7, 245, 7, 237, 7, 229, 7, 221, 7, 213, 7, 206, 7, 198, 7, 191, 7, 183, 7, 176, 7, 168, 7, 161, 7, 154, 7, 146, 7, 139, 7, 132, 7, 125, 7, 118, 7, 111, 7, 104, 7, 97, 7, 91, 7, 84, 7, 77, 7, 71, 7, 64, 7, 57, 7, 51, 7, 44, 7, 38, 7, 32, 7, 25, 7, 19, 7, 13, 7, 7, 7, 0, 7, 250, 6, 244, 6, 238, 6, 232, 6, 226, 6, 220, 6, 214, 6, 209, 6, 203, 6, 197, 6, 191, 6, 186, 6, 180, 6, 174, 6, 169, 6, 163, 6, 158, 6, 152, 6, 147, 6, 141, 6, 136, 6, 131, 6, 125, 6, 120, 6, 115, 6, 110, 6, 105, 6, 100, 6, 94, 6, 89, 6, 84, 6, 79, 6, 74, 6, 69, 6, 64, 6, 60, 6, 55, 6, 50, 6, 45, 6, 40, 6, 36, 6, 31, 6, 26, 6, 22, 6, 17, 6, 12, 6, 8, 6, 3, 6, 255, 5, 250, 5, 246, 5, 241, 5, 237, 5, 233, 5, 228, 5, 224, 5, 220, 5, 215, 5, 211, 5, 207, 5, 203, 5, 198, 5, 194, 5, 190, 5, 186, 5, 182, 5, 178, 5, 174, 5, 170, 5, 166, 5, 162, 5, 158, 5, 154, 5, 150, 5, 146, 5, 142, 5, 138, 5, 134, 5, 131, 5, 127, 5, 123, 5, 119, 5, 116, 5, 112, 5, 108, 5, 104, 5, 101, 5, 97, 5, 94, 5, 90, 5, 86, 5, 83, 5, 79, 5, 76, 5, 72, 5, 69, 5, 65, 5, 62, 5, 58, 5, 55, 5, 52, 5, 48, 5, 45, 5, 42, 5, 38, 5, 35, 5, 32, 5, 28, 5, 25, 5, 22, 5, 19, 5, 15, 5, 12, 5, 9, 5, 6, 5, 3, 5, 0, 5, 252, 4, 249, 4, 246, 4, 243, 4, 240, 4, 237, 4, 234, 4, 231, 4, 228, 4, 225, 4, 222, 4, 219, 4, 216, 4, 213, 4, 210, 4, 207, 4, 204, 4, 202, 4, 199, 4, 196, 4, 193, 4, 190, 4, 187, 4, 185, 4, 182, 4, 179, 4, 176, 4, 173, 4, 171, 4, 168, 4, 165, 4, 163, 4, 160, 4, 157, 4, 155, 4, 152, 4, 149, 4, 147, 4, 144, 4, 141, 4, 139, 4, 136, 4, 134, 4, 131, 4, 129, 4, 126, 4, 124, 4, 121, 4, 119, 4, 116, 4, 114, 4, 111, 4, 109, 4, 106, 4, 104, 4, 101, 4, 99, 4, 97, 4, 94, 4, 92, 4, 89, 4, 87, 4, 85, 4, 82, 4, 80, 4, 78, 4, 75, 4, 73, 4, 71, 4, 68, 4, 66, 4, 64, 4, 62, 4, 59, 4, 57, 4, 55, 4, 53, 4, 50, 4, 48, 4, 46, 4, 44, 4, 42, 4, 40, 4, 37, 4, 35, 4, 33, 4, 31, 4, 29, 4, 27, 4, 25, 4, 23, 4, 20, 4, 18, 4, 16, 4, 14, 4, 12, 4, 10, 4, 8, 4, 6, 4, 4, 4, 2, 4, 0, 4]
// RW data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
// Instructions = 11954
// Code size = 36099 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 a9 00 00 00           jump @19
      :                          @2
    10: 28 ad 00                 jump @20
      :                          @3 [export #0: 'refine']
    13: 95 11 e8                 sp = sp + 0xffffffffffffffe8
    16: 7b 10 10                 u64 [sp + 0x10] = ra
    19: 7b 15 08                 u64 [sp + 0x8] = s0
    22: 7b 16                    u64 [sp] = s1
    24: 3a 07 40 00 03           a0 = u64 [0x30040]
    29: 51 07 89 00              jump @17 if a0 == 0
      :                          @4
    33: 33 06 80 00 03           s1 = 0x30080
    38: 95 67 00 10              a0 = s1 + 0x1000
    42: 33 08 f6 07              a1 = 0x7f6
    46: 01                       fallthrough
      :                          @5
    47: 82 79                    a2 = u64 [a0]
    49: 98 9a 01                 a3 = a2 >> 0x1
    52: ac a8 71                 jump @16 if a1 <u a3
      :                          @6
    55: 95 9a 12                 a3 = a2 + 0x12
    58: 01                       fallthrough
      :                          @7
    59: 82 7b                    a4 = u64 [a0]
    61: ab 9b f2                 jump @5 if a4 != a2
      :                          @8
    64: 7b 7a                    u64 [a0] = a3
    66: 33 0c                    a5 = 0
    68: c9 96 07                 a0 = s1 - a2
    71: 95 77 ff 07              a0 = a0 + 0x7ff
    75: 95 75 ef 07              s0 = a0 + 0x7ef
    79: 33 08 00 00 01           a1 = 0x10000
    84: 33 09 12                 a2 = 0x12
    87: 64 57                    a0 = s0
    89: 50 10 02 da 89 00        ra = 2, jump @1890
      :                          @9 [@dyn 1]
    95: 33 07 02                 a0 = 0x2
    98: 33 0b 12                 a4 = 0x12
   101: 33 08                    a1 = 0
   103: 33 09                    a2 = 0
   105: 64 5a                    a3 = s0
   107: 33 00 04                 ra = 0x4
   110: 0a 64                    ecalli 100 // 'log'
   112: 95 66 00 10              s1 = s1 + 0x1000
   116: 28 07                    jump @11
      :                          @10 [@dyn 2]
   118: 95 66 00 10              s1 = s1 + 0x1000
   122: 01                       fallthrough
      :                          @11
   123: 82 67                    a0 = u64 [s1]
   125: c9 76 08                 a1 = s1 - a0
   128: ab 58 11                 jump @15 if a1 != s0
      :                          @12
   131: 95 78 ee                 a1 = a0 + 0xffffffffffffffee
   134: 01                       fallthrough
      :                          @13
   135: 82 69                    a2 = u64 [s1]
   137: ab 79 f2                 jump @11 if a2 != a0
      :                          @14
   140: 7b 68                    u64 [s1] = a1
   142: 33 0a                    a3 = 0
   144: 01                       fallthrough
      :                          @15
   145: 33 07 00 00 01           a0 = 0x10000
   150: 33 08                    a1 = 0
   152: 82 10 10                 ra = u64 [sp + 0x10]
   155: 82 15 08                 s0 = u64 [sp + 0x8]
   158: 82 16                    s1 = u64 [sp]
   160: 95 11 18                 sp = sp + 0x18
   163: 32 00                    ret
      :                          @16
   165: 00                       trap
      :                          @17
   166: 50 10 06 53 68           ra = 6, jump @1551
      :                          @18 [@dyn 3]
   171: 28 76 ff                 jump @4
      :                          @19 [export #1: 'accumulate']
   174: 33 07 00 00 01           a0 = 0x10000
   179: 33 08                    a1 = 0
   181: 32 00                    ret
      :                          @20 [export #2: 'on_transfer']
   183: 33 07 00 00 01           a0 = 0x10000
   188: 33 08                    a1 = 0
   190: 32 00                    ret
      :                          @21
   192: 52 07 04                 jump @23 if a0 != 0
      :                          @22
   195: 00                       trap
      :                          @23
   196: 00                       trap
      :                          @24
   197: 00                       trap
      :                          @25 [@dyn 4]
   198: 95 17 e0 00              a0 = sp + 0xe0
   202: 82 18 b8 00              a1 = u64 [sp + 0xb8]
   206: 82 19 c0 00              a2 = u64 [sp + 0xc0]
   210: 50 10 0a 2c 12           ra = 10, jump @420
      :                          @26 [@dyn 5]
   215: 82 1c f0 00              a5 = u64 [sp + 0xf0]
   219: 52 1c 01 0e              jump @28 if a5 != 1
      :                          @27
   223: 82 17 e8 00              a0 = u64 [sp + 0xe8]
   227: 82 78                    a1 = u64 [a0]
   229: 51 08 55 03              jump @103 if a1 == 0
      :                          @28
   233: 51 06 15                 jump @32 if s1 == 0
      :                          @29
   236: 33 07                    a0 = 0
   238: 01                       fallthrough
      :                          @30
   239: c8 75 04                 t2 = s0 + a0
   242: 7c 48                    a1 = u8 [t2]
   244: 52 08 9a 00              jump @45 if a1 != 0
      :                          @31
   248: 95 77 01                 a0 = a0 + 0x1
   251: ab 76 f4                 jump @30 if s1 != a0
      :                          @32
   254: 52 1c 01 46              jump @39 if a5 != 1
      :                          @33
   258: 82 18 e8 00              a1 = u64 [sp + 0xe8]
   262: 82 88                    a1 = u64 [a1]
   264: 52 18 01 3c              jump @39 if a1 != 1
      :                          @34
   268: 33 02 80 00 03           t0 = 0x30080
   273: 33 0a 00 10              a3 = 0x1000
   277: c8 a2 08                 a1 = t0 + a3
   280: 33 09 f0 0f              a2 = 0xff0
   284: 33 03 f8 0f              t1 = 0xff8
   288: 01                       fallthrough
      :                          @35
   289: 82 85                    s0 = u64 [a1]
   291: ac 59 a2                 jump @24 if a2 <u s0
      :                          @36
   294: c9 53 07                 a0 = t1 - s0
   297: c8 27 07                 a0 = a0 + t0
   300: 84 7c 07                 a5 = a0 & 0x7
   303: c8 c5 0b                 a4 = s0 + a5
   306: 95 bb 08                 a4 = a4 + 0x8
   309: 01                       fallthrough
      :                          @37
   310: 82 86                    s1 = u64 [a1]
   312: ab 56 e9                 jump @35 if s1 != s0
      :                          @38
   315: 7b 8b                    u64 [a1] = a4
   317: c9 c7 07                 a0 = a0 - a5
   320: 49 07                    u64 [a0 + 0] = 0
   322: 28 3b                    jump @44
      :                          @39
   324: 33 02 80 00 03           t0 = 0x30080
   329: 33 0a 00 10              a3 = 0x1000
   333: c8 a2 08                 a1 = t0 + a3
   336: 33 09 f0 0f              a2 = 0xff0
   340: 33 03 f8 0f              t1 = 0xff8
   344: 01                       fallthrough
      :                          @40
   345: 82 85                    s0 = u64 [a1]
   347: ac 59 6a ff              jump @24 if a2 <u s0
      :                          @41
   351: c9 53 07                 a0 = t1 - s0
   354: c8 27 07                 a0 = a0 + t0
   357: 84 7c 07                 a5 = a0 & 0x7
   360: c8 c5 0b                 a4 = s0 + a5
   363: 95 bb 08                 a4 = a4 + 0x8
   366: 01                       fallthrough
      :                          @42
   367: 82 86                    s1 = u64 [a1]
   369: ab 56 e8                 jump @40 if s1 != s0
      :                          @43
   372: 7b 8b                    u64 [a1] = a4
   374: c9 c7 07                 a0 = a0 - a5
   377: 49 07 01                 u64 [a0 + 0] = 0x1
   380: 01                       fallthrough
      :                          @44
   381: 49 21 f8 00 01           u64 [sp + 248] = 0x1
   386: 7b 17 00 01              u64 [sp + 0x100] = a0
   390: 49 21 08 01 01           u64 [sp + 264] = 0x1
   395: 28 63 03                 jump @125
      :                          @45
   398: c9 76 0a                 a3 = s1 - a0
   401: 56 1a 08 e8 00           jump @68 if a3 >u 8
      :                          @46
   406: 33 07                    a0 = 0
   408: 64 a8                    a1 = a3
   410: 64 49                    a2 = t2
   412: 01                       fallthrough
      :                          @47
   413: 7c 9b                    a4 = u8 [a2]
   415: 95 99 01                 a2 = a2 + 0x1
   418: 97 77 08                 a0 = a0 << 0x8
   421: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   424: d4 b7 07                 a0 = a0 | a4
   427: 52 08 f2                 jump @47 if a1 != 0
      :                          @48
   430: 82 19 d8 00              a2 = u64 [sp + 0xd8]
   434: d6 79 08                 a1 = a2 mulhu a0
   437: 52 08 c4 00              jump @68 if a1 != 0
      :                          @49
   441: ca 79 07                 a0 = a2 * a0
   444: ae c7 bd 00              jump @68 if a0 >=u a5
      :                          @50
   448: 7b 19 a8 00              u64 [sp + 0xa8] = a2
   452: 51 07 91 0b              jump @287 if a0 == 0
      :                          @51
   456: 7b 17 a0 00              u64 [sp + 0xa0] = a0
   460: 97 77 03                 a0 = a0 << 0x3
   463: 33 02 00 10              t0 = 0x1000
   467: 33 06 80 00 03           s1 = 0x30080
   472: c8 26 00                 ra = s1 + t0
   475: 33 03 f8 0f              t1 = 0xff8
   479: 01                       fallthrough
      :                          @52
   480: 82 0b                    a4 = u64 [ra]
   482: c8 7b 0c                 a5 = a4 + a0
   485: ac bc e0 fe              jump @24 if a5 <u a4
      :                          @53
   489: ac c3 dc fe              jump @24 if t1 <u a5
      :                          @54
   493: c9 c6 05                 s0 = s1 - a5
   496: c8 25 05                 s0 = s0 + t0
   499: 84 58 07                 a1 = s0 & 0x7
   502: c8 8c 0c                 a5 = a5 + a1
   505: 01                       fallthrough
      :                          @55
   506: 82 09                    a2 = u64 [ra]
   508: ab b9 06                 jump @57 if a2 != a4
      :                          @56
   511: 7b 0c                    u64 [ra] = a5
   513: 01                       fallthrough
      :                          @57
   514: 33 06 80 00 03           s1 = 0x30080
   519: ab b9 d9                 jump @52 if a2 != a4
      :                          @58
   522: c9 85 05                 s0 = s0 - a1
   525: 7b 17 98 00              u64 [sp + 0x98] = a0
   529: 64 57                    a0 = s0
   531: 33 08                    a1 = 0
   533: 82 19 98 00              a2 = u64 [sp + 0x98]
   537: 7b 14 b8 00              u64 [sp + 0xb8] = t2
   541: 7b 1a c0 00              u64 [sp + 0xc0] = a3
   545: 50 10 0c 59 8a 00        ra = 12, jump @1942
      :                          @59 [@dyn 6]
   551: 82 18 d0 00              a1 = u64 [sp + 0xd0]
   555: 95 17 f8 00              a0 = sp + 0xf8
   559: 82 16 a0 00              s1 = u64 [sp + 0xa0]
   563: 7b 16                    u64 [sp] = s1
   565: 82 19 a8 00              a2 = u64 [sp + 0xa8]
   569: 82 1a b8 00              a3 = u64 [sp + 0xb8]
   573: 82 1b c0 00              a4 = u64 [sp + 0xc0]
   577: 64 5c                    a5 = s0
   579: 50 10 0e d7 12           ra = 14, jump @463
      :                          @60 [@dyn 7]
   584: 82 17 98 00              a0 = u64 [sp + 0x98]
   588: 56 26 00 02 a2 02        jump @125 if s1 >u 512
      :                          @61
   594: 33 09 80 00 03           a2 = 0x30080
   599: 95 98 00 10              a1 = a2 + 0x1000
   603: 01                       fallthrough
      :                          @62
   604: 82 89                    a2 = u64 [a1]
   606: c9 98 0a                 a3 = a1 - a2
   609: ab 5a 8d 02              jump @125 if a3 != s0
      :                          @63
   613: c9 79 0a                 a3 = a2 - a0
   616: 01                       fallthrough
      :                          @64
   617: 82 8b                    a4 = u64 [a1]
   619: ab 9b f1                 jump @62 if a4 != a2
      :                          @65
   622: 7b 8a                    u64 [a1] = a3
   624: 33 0c                    a5 = 0
   626: 01                       fallthrough
      :                          @66
   627: ab 9b e9                 jump @62 if a4 != a2
      :                          @67
   630: 28 78 02                 jump @125
      :                          @68
   633: 51 0c db 0a              jump @286 if a5 == 0
      :                          @69
   637: 82 1b e8 00              a4 = u64 [sp + 0xe8]
   641: 97 c5 03                 s0 = a5 << 0x3
   644: c8 5b 02                 t0 = a4 + s0
   647: 95 59 f8                 a2 = s0 + 0xfffffffffffffff8
   650: 95 b8 08                 a1 = a4 + 0x8
   653: 33 03 01                 t1 = 0x1
   656: 01                       fallthrough
      :                          @70
   657: 82 87 f8                 a0 = u64 [a1 + 0xfffffffffffffff8]
   660: 66 76                    s1 = cpop a0
   662: aa 36 22 02              jump @119 if s1 == t1
      :                          @71
   666: 52 07 0e                 jump @73 if a0 != 0
      :                          @72
   669: 64 97                    a0 = a2
   671: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
   674: 95 88 08                 a1 = a1 + 0x8
   677: 52 07 ec                 jump @70 if a0 != 0
      :                          @73
   680: 7c b8                    a1 = u8 [a4]
   682: 84 88 01                 a1 = a1 & 0x1
   685: 52 08 2e 02              jump @124 if a1 != 0
      :                          @74
   689: 33 07                    a0 = 0
   691: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
   694: 97 88 03                 a1 = a1 << 0x3
   697: 98 88 03                 a1 = a1 >> 0x3
   700: 95 88 01                 a1 = a1 + 0x1
   703: 64 b9                    a2 = a4
   705: 01                       fallthrough
      :                          @75
   706: 82 96                    s1 = u64 [a2]
   708: 52 06 12                 jump @78 if s1 != 0
      :                          @76
   711: 95 99 08                 a2 = a2 + 0x8
   714: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
   717: 95 77 01                 a0 = a0 + 0x1
   720: 52 05 f2                 jump @75 if s0 != 0
      :                          @77
   723: 64 87                    a0 = a1
   725: 01                       fallthrough
      :                          @78
   726: 7b 1a c0 00              u64 [sp + 0xc0] = a3
   730: 7b 14 b8 00              u64 [sp + 0xb8] = t2
   734: ae c7 78 0a              jump @288 if a0 >=u a5
      :                          @79
   738: 97 78 03                 a1 = a0 << 0x3
   741: 7b 1b 88 00              u64 [sp + 0x88] = a4
   745: 7b 18 a0 00              u64 [sp + 0xa0] = a1
   749: c8 8b 0b                 a4 = a4 + a1
   752: 7b 1b 98 00              u64 [sp + 0x98] = a4
   756: 82 b8                    a1 = u64 [a4]
   758: 6a 88                    a1 = ctz a1
   760: 7b 18 a8 00              u64 [sp + 0xa8] = a1
   764: 95 74 01                 t2 = a0 + 0x1
   767: 7b 14 90 00              u64 [sp + 0x90] = t2
   771: 97 44 03                 t2 = t2 << 0x3
   774: 33 02 00 10              t0 = 0x1000
   778: 33 06 80 00 03           s1 = 0x30080
   783: c8 26 00                 ra = s1 + t0
   786: 33 03 f8 0f              t1 = 0xff8
   790: 01                       fallthrough
      :                          @80
   791: 82 0a                    a3 = u64 [ra]
   793: c8 4a 0b                 a4 = a3 + t2
   796: ac ab a9 fd              jump @24 if a4 <u a3
      :                          @81
   800: ac b3 a5 fd              jump @24 if t1 <u a4
      :                          @82
   804: c9 b6 09                 a2 = s1 - a4
   807: c8 29 08                 a1 = a2 + t0
   810: 84 89 07                 a2 = a1 & 0x7
   813: c8 9b 0b                 a4 = a4 + a2
   816: 01                       fallthrough
      :                          @83
   817: 82 05                    s0 = u64 [ra]
   819: ab a5 06                 jump @85 if s0 != a3
      :                          @84
   822: 7b 0b                    u64 [ra] = a4
   824: 01                       fallthrough
      :                          @85
   825: 33 06 80 00 03           s1 = 0x30080
   830: ab a5 d9                 jump @80 if s0 != a3
      :                          @86
   833: 7b 1c 70                 u64 [sp + 0x70] = a5
   836: 7b 17 80 00              u64 [sp + 0x80] = a0
   840: c9 98 05                 s0 = a1 - a2
   843: 64 57                    a0 = s0
   845: 33 08                    a1 = 0
   847: 64 49                    a2 = t2
   849: 7b 14 78                 u64 [sp + 0x78] = t2
   852: 50 10 10 26 89 00        ra = 16, jump @1942
      :                          @87 [@dyn 8]
   858: 82 18 a0 00              a1 = u64 [sp + 0xa0]
   862: c8 58 08                 a1 = a1 + s0
   865: 82 14 a8 00              t2 = u64 [sp + 0xa8]
   869: 9b 47 01                 a0 = 0x1 << t2
   872: 82 19 78                 a2 = u64 [sp + 0x78]
   875: 7b 15 60                 u64 [sp + 0x60] = s0
   878: c8 59 09                 a2 = a2 + s0
   881: 7b 87                    u64 [a1] = a0
   883: 51 19 08 07 32           jump @1067 if a2 == 8
      :                          @88
   888: 82 18 80 00              a1 = u64 [sp + 0x80]
   892: 82 19 70                 a2 = u64 [sp + 0x70]
   895: c9 89 09                 a2 = a2 - a1
   898: 98 98 3d                 a1 = a2 >> 0x3d
   901: 52 08 06 0b              jump @319 if a1 != 0
      :                          @89
   905: 97 95 03                 s0 = a2 << 0x3
   908: 14 08 f9 ff ff ff ff ff ff 7f a1 = 0x7ffffffffffffff9
   918: ae 85 f5 0a              jump @319 if s0 >=u a1
      :                          @90
   922: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   925: 7b 17 58                 u64 [sp + 0x58] = a0
   928: 51 09 22 02              jump @146 if a2 == 0
      :                          @91
   932: 84 47 3f                 a0 = t2 & 0x3f
   935: 7b 17 38                 u64 [sp + 0x38] = a0
   938: 33 02 00 10              t0 = 0x1000
   942: c8 26 08                 a1 = s1 + t0
   945: 33 07 f8 0f              a0 = 0xff8
   949: 01                       fallthrough
      :                          @92
   950: 82 80                    ra = u64 [a1]
   952: c8 50 0a                 a3 = ra + s0
   955: ac 0a 0a fd              jump @24 if a3 <u ra
      :                          @93
   959: ac a7 06 fd              jump @24 if a0 <u a3
      :                          @94
   963: c9 a6 0b                 a4 = s1 - a3
   966: c8 2b 0b                 a4 = a4 + t0
   969: 84 b3 07                 t1 = a4 & 0x7
   972: c8 3a 0a                 a3 = a3 + t1
   975: 01                       fallthrough
      :                          @95
   976: 82 8c                    a5 = u64 [a1]
   978: ab 0c 06                 jump @97 if a5 != ra
      :                          @96
   981: 7b 8a                    u64 [a1] = a3
   983: 01                       fallthrough
      :                          @97
   984: 33 06 80 00 03           s1 = 0x30080
   989: ab 0c d9                 jump @92 if a5 != ra
      :                          @98
   992: 7b 10 30                 u64 [sp + 0x30] = ra
   995: 82 16 38                 s1 = u64 [sp + 0x38]
   998: 7b 19 48                 u64 [sp + 0x48] = a2
  1001: 7b 13 28                 u64 [sp + 0x28] = t1
  1004: c9 3b 07                 a0 = a4 - t1
  1007: 7b 17 68                 u64 [sp + 0x68] = a0
  1010: 33 08                    a1 = 0
  1012: 7b 15 50                 u64 [sp + 0x50] = s0
  1015: 64 59                    a2 = s0
  1017: 64 45                    s0 = t2
  1019: 50 10 12 7f 88 00        ra = 18, jump @1942
      :                          @99 [@dyn 9]
  1025: 51 05 b9 05              jump @227 if s0 == 0
      :                          @100
  1029: 82 17 98 00              a0 = u64 [sp + 0x98]
  1033: 82 77                    a0 = u64 [a0]
  1035: d0 67 05                 s0 = a0 >> s1
  1038: 33 09 01                 a2 = 0x1
  1041: 82 17 68                 a0 = u64 [sp + 0x68]
  1044: 7b 75                    u64 [a0] = s0
  1046: 82 17 48                 a0 = u64 [sp + 0x48]
  1049: 7b 19 40                 u64 [sp + 0x40] = a2
  1052: ab 97 b2 05              jump @228 if a0 != a2
      :                          @101
  1056: 33 06 80 00 03           s1 = 0x30080
  1061: 82 1c 48                 a5 = u64 [sp + 0x48]
  1064: 52 0c c1 01              jump @150 if a5 != 0
      :                          @102
  1068: 64 cb                    a4 = a5
  1070: 82 10 50                 ra = u64 [sp + 0x50]
  1073: 82 12 40                 t0 = u64 [sp + 0x40]
  1076: 82 15 68                 s0 = u64 [sp + 0x68]
  1079: 28 04 02                 jump @159
      :                          @103
  1082: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  1086: 82 1a b0 00              a3 = u64 [sp + 0xb0]
  1090: 49 0a                    u64 [a3 + 0] = 0
  1092: 33 09 01                 a2 = 0x1
  1095: 7b a9 08                 u64 [a3 + 0x8] = a2
  1098: 49 1a 10                 u64 [a3 + 16] = 0
  1101: 51 08 2d                 jump @110 if a1 == 0
      :                          @104
  1104: 33 09 00 02              a2 = 0x200
  1108: ac 89 26                 jump @110 if a2 <u a1
      :                          @105
  1111: 97 88 03                 a1 = a1 << 0x3
  1114: 33 09 80 00 03           a2 = 0x30080
  1119: 95 99 00 10              a2 = a2 + 0x1000
  1123: 01                       fallthrough
      :                          @106
  1124: 82 9a                    a3 = u64 [a2]
  1126: c9 a9 0b                 a4 = a2 - a3
  1129: ab 7b 11                 jump @110 if a4 != a0
      :                          @107
  1132: c9 8a 0b                 a4 = a3 - a1
  1135: 01                       fallthrough
      :                          @108
  1136: 82 9c                    a5 = u64 [a2]
  1138: ab ac f2                 jump @106 if a5 != a3
      :                          @109
  1141: 7b 9b                    u64 [a2] = a4
  1143: 33 06                    s1 = 0
  1145: 01                       fallthrough
      :                          @110
  1146: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  1150: 51 07 28 05              jump @224 if a0 == 0
      :                          @111
  1154: 33 08 00 02              a1 = 0x200
  1158: ac 78 20 05              jump @224 if a1 <u a0
      :                          @112
  1162: 97 77 03                 a0 = a0 << 0x3
  1165: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  1169: 33 09 80 00 03           a2 = 0x30080
  1174: 95 99 00 10              a2 = a2 + 0x1000
  1178: 01                       fallthrough
      :                          @113
  1179: 82 9a                    a3 = u64 [a2]
  1181: c9 a9 0b                 a4 = a2 - a3
  1184: ab 8b 06 05              jump @224 if a4 != a1
      :                          @114
  1188: c9 7a 0b                 a4 = a3 - a0
  1191: 01                       fallthrough
      :                          @115
  1192: 82 9c                    a5 = u64 [a2]
  1194: ab ac f1                 jump @113 if a5 != a3
      :                          @116
  1197: 7b 9b                    u64 [a2] = a4
  1199: 33 06                    s1 = 0
  1201: 01                       fallthrough
      :                          @117
  1202: ab ac e9                 jump @113 if a5 != a3
      :                          @118
  1205: 28 f1 04                 jump @224
      :                          @119
  1208: aa 28 12                 jump @122 if a1 == t0
      :                          @120
  1211: 82 87                    a0 = u64 [a1]
  1213: 52 07 eb fd              jump @73 if a0 != 0
      :                          @121
  1217: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
  1220: 95 88 08                 a1 = a1 + 0x8
  1223: 52 09 f4                 jump @120 if a2 != 0
      :                          @122
  1226: 95 17 f8 00              a0 = sp + 0xf8
  1230: 95 18 c8 00              a1 = sp + 0xc8
  1234: 64 49                    a2 = t2
  1236: 50 10 14 8f 12           ra = 20, jump @508
      :                          @123 [@dyn 10]
  1241: 28 15                    jump @125
      :                          @124
  1243: 95 17 f8 00              a0 = sp + 0xf8
  1247: 95 18 c8 00              a1 = sp + 0xc8
  1251: 95 1b e0 00              a4 = sp + 0xe0
  1255: 64 49                    a2 = t2
  1257: 50 10 16 5e 14           ra = 22, jump @538
      :                          @125 [@dyn 11]
  1262: 82 10 08 01              ra = u64 [sp + 0x108]
  1266: 82 12 00 01              t0 = u64 [sp + 0x100]
  1270: 97 08 03                 a1 = ra << 0x3
  1273: c8 82 07                 a0 = t0 + a1
  1276: 64 29                    a2 = t0
  1278: 01                       fallthrough
      :                          @126
  1279: 51 08 32                 jump @132 if a1 == 0
      :                          @127
  1282: 82 9a                    a3 = u64 [a2]
  1284: 95 99 08                 a2 = a2 + 0x8
  1287: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  1290: 51 0a f5                 jump @126 if a3 == 0
      :                          @128
  1293: 51 00 6d 30              jump @1067 if ra == 0
      :                          @129
  1297: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  1300: 51 07 66 30              jump @1067 if a0 == 0
      :                          @130
  1304: 82 77                    a0 = u64 [a0]
  1306: 6f 77                    a0 = reverse a0
  1308: 84 78 ff 00              a1 = a0 & 0xff
  1312: 7b 17 70 01              u64 [sp + 0x170] = a0
  1316: 51 08 4c                 jump @138 if a1 == 0
      :                          @131
  1319: 95 14 70 01              t2 = sp + 0x170
  1323: 33 03 08                 t1 = 0x8
  1326: 28 d4 02                 jump @188
      :                          @132
  1329: 33 07 80 00 03           a0 = 0x30080
  1334: 95 79 00 10              a2 = a0 + 0x1000
  1338: 33 0a fe 0f              a3 = 0xffe
  1342: 01                       fallthrough
      :                          @133
  1343: 82 98                    a1 = u64 [a2]
  1345: ac 8a 2e                 jump @137 if a3 <u a1
      :                          @134
  1348: 95 8b 01                 a4 = a1 + 0x1
  1351: 01                       fallthrough
      :                          @135
  1352: 82 9c                    a5 = u64 [a2]
  1354: ab 8c f5                 jump @133 if a5 != a1
      :                          @136
  1357: 7b 9b                    u64 [a2] = a4
  1359: 33 06                    s1 = 0
  1361: 95 77 f8 0f              a0 = a0 + 0xff8
  1365: c9 87 07                 a0 = a0 - a1
  1368: 95 78 07                 a1 = a0 + 0x7
  1371: 46 17 07                 u8 [a0 + 7] = 0
  1374: 82 19 b0 00              a2 = u64 [sp + 0xb0]
  1378: 49 09 01                 u64 [a2 + 0] = 0x1
  1381: 7b 98 08                 u64 [a2 + 0x8] = a1
  1384: 49 19 10 01              u64 [a2 + 16] = 0x1
  1388: 28 a1 03                 jump @203
      :                          @137
  1391: 00                       trap
      :                          @138
  1392: 84 78 00 ff 00           a1 = a0 & 0xff00
  1397: 51 08 0d                 jump @140 if a1 == 0
      :                          @139
  1400: 95 14 71 01              t2 = sp + 0x171
  1404: 33 03 07                 t1 = 0x7
  1407: 28 83 02                 jump @188
      :                          @140
  1410: 84 78 00 00 ff 00        a1 = a0 & 0xff0000
  1416: 51 08 0d                 jump @142 if a1 == 0
      :                          @141
  1419: 95 14 72 01              t2 = sp + 0x172
  1423: 33 03 06                 t1 = 0x6
  1426: 28 70 02                 jump @188
      :                          @142
  1429: 8b 78 18                 i32 a1 = a0 >> 0x18
  1432: 97 88 18                 a1 = a1 << 0x18
  1435: 51 08 0d                 jump @144 if a1 == 0
      :                          @143
  1438: 95 14 73 01              t2 = sp + 0x173
  1442: 33 03 05                 t1 = 0x5
  1445: 28 5d 02                 jump @188
      :                          @144
  1448: 14 09 00 00 00 00 ff 00 00 00 a2 = 0xff00000000
  1458: d2 79 09                 a2 = a2 & a0
  1461: 51 09 68                 jump @156 if a2 == 0
      :                          @145
  1464: 95 14 74 01              t2 = sp + 0x174
  1468: 33 03 04                 t1 = 0x4
  1471: 28 43 02                 jump @188
      :                          @146
  1474: 52 04 92 07              jump @286 if t2 != 0
      :                          @147
  1478: 7b 19 48                 u64 [sp + 0x48] = a2
  1481: 49 11 40                 u64 [sp + 64] = 0
  1484: 33 07 08                 a0 = 0x8
  1487: 01                       fallthrough
      :                          @148
  1488: 7b 17 68                 u64 [sp + 0x68] = a0
  1491: 82 18 98 00              a1 = u64 [sp + 0x98]
  1495: 7b 15 50                 u64 [sp + 0x50] = s0
  1498: 64 59                    a2 = s0
  1500: 50 10 18 57 84 00        ra = 24, jump @1890
      :                          @149 [@dyn 12]
  1506: 82 1c 48                 a5 = u64 [sp + 0x48]
  1509: 51 0c 47 fe              jump @102 if a5 == 0
      :                          @150
  1513: 82 15 68                 s0 = u64 [sp + 0x68]
  1516: 95 57 f8                 a0 = s0 + 0xfffffffffffffff8
  1519: 82 10 50                 ra = u64 [sp + 0x50]
  1522: c8 07 0a                 a3 = a0 + ra
  1525: 82 12 40                 t0 = u64 [sp + 0x40]
  1528: 51 0a 40                 jump @158 if a3 == 0
      :                          @151
  1531: 33 08 01                 a1 = 0x1
  1534: 33 09 02                 a2 = 0x2
  1537: 01                       fallthrough
      :                          @152
  1538: 82 aa                    a3 = u64 [a3]
  1540: 52 0a 34                 jump @158 if a3 != 0
      :                          @153
  1543: e4 8c 0a                 a3 = maxu(a5, a1)
  1546: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
  1549: ac 9c 2e                 jump @159 if a5 <u a2
      :                          @154
  1552: 97 ba 03                 a3 = a4 << 0x3
  1555: c8 7a 0a                 a3 = a3 + a0
  1558: 64 bc                    a5 = a4
  1560: 52 0a ea                 jump @152 if a3 != 0
      :                          @155
  1563: 28 20                    jump @159
      :                          @156
  1565: 14 08 00 00 00 00 00 ff 00 00 a1 = 0xff0000000000
  1575: d2 78 08                 a1 = a1 & a0
  1578: 51 08 af 01              jump @185 if a1 == 0
      :                          @157
  1582: 95 14 75 01              t2 = sp + 0x175
  1586: 33 03 03                 t1 = 0x3
  1589: 28 cd 01                 jump @188
      :                          @158
  1592: 64 cb                    a4 = a5
  1594: 01                       fallthrough
      :                          @159
  1595: 82 18 d8 00              a1 = u64 [sp + 0xd8]
  1599: 7b 12 10 01              u64 [sp + 0x110] = t0
  1603: 7b 15 68                 u64 [sp + 0x68] = s0
  1606: 7b 15 18 01              u64 [sp + 0x118] = s0
  1610: 98 87 3d                 a0 = a1 >> 0x3d
  1613: 7b 1b 20 01              u64 [sp + 0x120] = a4
  1617: 52 07 3a 08              jump @319 if a0 != 0
      :                          @160
  1621: 97 85 03                 s0 = a1 << 0x3
  1624: 14 07 f9 ff ff ff ff ff ff 7f a0 = 0x7ffffffffffffff9
  1634: ae 75 29 08              jump @319 if s0 >=u a0
      :                          @161
  1638: 7b 18 a0 00              u64 [sp + 0xa0] = a1
  1642: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  1646: 7b 1b 98 00              u64 [sp + 0x98] = a4
  1650: 51 05 4a                 jump @168 if s0 == 0
      :                          @162
  1653: 33 02 00 10              t0 = 0x1000
  1657: c8 26 04                 t2 = s1 + t0
  1660: 33 03 f8 0f              t1 = 0xff8
  1664: 01                       fallthrough
      :                          @163
  1665: 82 4c                    a5 = u64 [t2]
  1667: c8 5c 09                 a2 = a5 + s0
  1670: ac c9 3f fa              jump @24 if a2 <u a5
      :                          @164
  1674: ac 93 3b fa              jump @24 if t1 <u a2
      :                          @165
  1678: 33 0b 80 00 03           a4 = 0x30080
  1683: c9 9b 0b                 a4 = a4 - a2
  1686: c8 2b 0b                 a4 = a4 + t0
  1689: 84 b7 07                 a0 = a4 & 0x7
  1692: c8 79 09                 a2 = a2 + a0
  1695: 01                       fallthrough
      :                          @166
  1696: 82 46                    s1 = u64 [t2]
  1698: ab c6 df                 jump @163 if s1 != a5
      :                          @167
  1701: 7b 49                    u64 [t2] = a2
  1703: 7b 10 50                 u64 [sp + 0x50] = ra
  1706: c9 7b 0b                 a4 = a4 - a0
  1709: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  1713: 7b 17 88 00              u64 [sp + 0x88] = a0
  1717: 33 06 80 00 03           s1 = 0x30080
  1722: 28 0d                    jump @169
      :                          @168
  1724: 7b 10 50                 u64 [sp + 0x50] = ra
  1727: 49 21 88 00              u64 [sp + 136] = 0
  1731: 33 0b 08                 a4 = 0x8
  1734: 01                       fallthrough
      :                          @169
  1735: 64 b7                    a0 = a4
  1737: 7b 1b 48                 u64 [sp + 0x48] = a4
  1740: 64 59                    a2 = s0
  1742: 50 10 1a 65 83 00        ra = 26, jump @1890
      :                          @170 [@dyn 13]
  1748: 82 17 88 00              a0 = u64 [sp + 0x88]
  1752: 7b 17 28 01              u64 [sp + 0x128] = a0
  1756: 82 17 48                 a0 = u64 [sp + 0x48]
  1759: 7b 17 30 01              u64 [sp + 0x130] = a0
  1763: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  1767: 7b 17 38 01              u64 [sp + 0x138] = a0
  1771: 95 17 40 01              a0 = sp + 0x140
  1775: 95 18 28 01              a1 = sp + 0x128
  1779: 95 1b 10 01              a4 = sp + 0x110
  1783: 82 15 b8 00              s0 = u64 [sp + 0xb8]
  1787: 64 59                    a2 = s0
  1789: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  1793: 50 10 1c 46 12           ra = 28, jump @538
      :                          @171 [@dyn 14]
  1798: 95 17 58 01              a0 = sp + 0x158
  1802: 95 18 c8 00              a1 = sp + 0xc8
  1806: 64 59                    a2 = s0
  1808: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  1812: 82 1b 60                 a4 = u64 [sp + 0x60]
  1815: 82 1c 90 00              a5 = u64 [sp + 0x90]
  1819: 50 10 1e 48 10           ra = 30, jump @508
      :                          @172 [@dyn 15]
  1824: 82 17 80 00              a0 = u64 [sp + 0x80]
  1828: 97 77 06                 a0 = a0 << 0x6
  1831: 82 14 a8 00              t2 = u64 [sp + 0xa8]
  1835: c8 74 04                 t2 = t2 + a0
  1838: 98 40 06                 ra = t2 >> 0x6
  1841: 95 09 01                 a2 = ra + 0x1
  1844: 7b 19 c0 00              u64 [sp + 0xc0] = a2
  1848: 97 99 03                 a2 = a2 << 0x3
  1851: 33 02 00 10              t0 = 0x1000
  1855: c8 26 08                 a1 = s1 + t0
  1858: 33 03 f8 0f              t1 = 0xff8
  1862: 01                       fallthrough
      :                          @173
  1863: 82 8a                    a3 = u64 [a1]
  1865: c8 9a 0b                 a4 = a3 + a2
  1868: ac ab 79 f9              jump @24 if a4 <u a3
      :                          @174
  1872: ac b3 75 f9              jump @24 if t1 <u a4
      :                          @175
  1876: 33 07 80 00 03           a0 = 0x30080
  1881: c9 b7 07                 a0 = a0 - a4
  1884: c8 27 07                 a0 = a0 + t0
  1887: 84 7c 07                 a5 = a0 & 0x7
  1890: c8 cb 0b                 a4 = a4 + a5
  1893: 01                       fallthrough
      :                          @176
  1894: 82 86                    s1 = u64 [a1]
  1896: ab a6 df                 jump @173 if s1 != a3
      :                          @177
  1899: 7b 8b                    u64 [a1] = a4
  1901: 7b 10 a8 00              u64 [sp + 0xa8] = ra
  1905: 7b 14 88 00              u64 [sp + 0x88] = t2
  1909: c9 c7 05                 s0 = a0 - a5
  1912: 64 57                    a0 = s0
  1914: 33 08                    a1 = 0
  1916: 7b 19 b8 00              u64 [sp + 0xb8] = a2
  1920: 50 10 20 fa 84 00        ra = 32, jump @1942
      :                          @178 [@dyn 16]
  1926: 7b 15 a0 00              u64 [sp + 0xa0] = s0
  1930: 49 05 01                 u64 [s0 + 0] = 0x1
  1933: 82 17 98 00              a0 = u64 [sp + 0x98]
  1937: 97 79 03                 a2 = a0 << 0x3
  1940: 51 07 b4 02              jump @233 if a0 == 0
      :                          @179
  1944: 33 02 00 10              t0 = 0x1000
  1948: 33 08 80 00 03           a1 = 0x30080
  1953: c8 28 08                 a1 = a1 + t0
  1956: 33 03 f8 0f              t1 = 0xff8
  1960: 01                       fallthrough
      :                          @180
  1961: 82 8b                    a4 = u64 [a1]
  1963: c8 9b 0c                 a5 = a4 + a2
  1966: ac bc 17 f9              jump @24 if a5 <u a4
      :                          @181
  1970: ac c3 13 f9              jump @24 if t1 <u a5
      :                          @182
  1974: 33 05 80 00 03           s0 = 0x30080
  1979: c9 c5 05                 s0 = s0 - a5
  1982: c8 25 05                 s0 = s0 + t0
  1985: 84 57 07                 a0 = s0 & 0x7
  1988: c8 7c 0c                 a5 = a5 + a0
  1991: 01                       fallthrough
      :                          @183
  1992: 82 86                    s1 = u64 [a1]
  1994: ab b6 df                 jump @180 if s1 != a4
      :                          @184
  1997: 7b 8c                    u64 [a1] = a5
  1999: c9 75 06                 s1 = s0 - a0
  2002: 82 15 98 00              s0 = u64 [sp + 0x98]
  2006: 28 78 02                 jump @234
      :                          @185
  2009: 14 08 00 00 00 00 00 00 ff 00 a1 = 0xff000000000000
  2019: d2 78 08                 a1 = a1 & a0
  2022: 51 08 0c                 jump @187 if a1 == 0
      :                          @186
  2025: 95 14 76 01              t2 = sp + 0x176
  2029: 33 03 02                 t1 = 0x2
  2032: 28 12                    jump @188
      :                          @187
  2034: 98 77 38                 a0 = a0 >> 0x38
  2037: 8e 73                    t1 = a0 >u 0
  2039: 95 17 70 01              a0 = sp + 0x170
  2043: c9 37 07                 a0 = a0 - t1
  2046: 95 74 08                 t2 = a0 + 0x8
  2049: 01                       fallthrough
      :                          @188
  2050: 97 06 03                 s1 = ra << 0x3
  2053: 95 65 f8                 s0 = s1 + 0xfffffffffffffff8
  2056: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  2060: c8 35 05                 s0 = s0 + t1
  2063: 51 05 57                 jump @195 if s0 == 0
      :                          @189
  2066: 33 07 80 00 03           a0 = 0x30080
  2071: 95 78 00 10              a1 = a0 + 0x1000
  2075: 01                       fallthrough
      :                          @190
  2076: 82 8a                    a3 = u64 [a1]
  2078: c8 5a 09                 a2 = a3 + s0
  2081: ac a9 a4 f8              jump @24 if a2 <u a3
      :                          @191
  2085: 98 9b 0c                 a4 = a2 >> 0xc
  2088: 52 0b 9d f8              jump @24 if a4 != 0
      :                          @192
  2092: 82 8b                    a4 = u64 [a1]
  2094: ab ab ee                 jump @190 if a4 != a3
      :                          @193
  2097: 7b 89                    u64 [a1] = a2
  2099: 33 0c                    a5 = 0
  2101: 7b 16 98 00              u64 [sp + 0x98] = s1
  2105: 7b 10 a8 00              u64 [sp + 0xa8] = ra
  2109: 7b 12 b8 00              u64 [sp + 0xb8] = t0
  2113: c9 97 07                 a0 = a0 - a2
  2116: 95 76 00 10              s1 = a0 + 0x1000
  2120: 64 67                    a0 = s1
  2122: 33 08                    a1 = 0
  2124: 64 59                    a2 = s0
  2126: 7b 13 a0 00              u64 [sp + 0xa0] = t1
  2130: 7b 14 90 00              u64 [sp + 0x90] = t2
  2134: 50 10 22 24 84 00        ra = 34, jump @1942
      :                          @194 [@dyn 17]
  2140: 82 14 90 00              t2 = u64 [sp + 0x90]
  2144: 82 13 a0 00              t1 = u64 [sp + 0xa0]
  2148: 28 12                    jump @196
      :                          @195
  2150: 7b 16 98 00              u64 [sp + 0x98] = s1
  2154: 7b 10 a8 00              u64 [sp + 0xa8] = ra
  2158: 7b 12 b8 00              u64 [sp + 0xb8] = t0
  2162: 33 06 01                 s1 = 0x1
  2165: 01                       fallthrough
      :                          @196
  2166: 7b 13 a0 00              u64 [sp + 0xa0] = t1
  2170: 64 67                    a0 = s1
  2172: 64 48                    a1 = t2
  2174: 64 39                    a2 = t1
  2176: 50 10 24 b3 81 00        ra = 36, jump @1890
      :                          @197 [@dyn 18]
  2182: 82 12 b8 00              t0 = u64 [sp + 0xb8]
  2186: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  2190: 53 18 02 72              jump @202 if a1 <u 2
      :                          @198
  2194: 33 09                    a2 = 0
  2196: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  2200: 98 77 03                 a0 = a0 >> 0x3
  2203: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  2206: e6 87 0a                 a3 = minu(a0, a1)
  2209: 95 aa 01                 a3 = a3 + 0x1
  2212: 82 17 98 00              a0 = u64 [sp + 0x98]
  2216: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  2220: c8 87 07                 a0 = a0 + a1
  2223: 95 77 f0                 a0 = a0 + 0xfffffffffffffff0
  2226: 01                       fallthrough
      :                          @199
  2227: 95 78 08                 a1 = a0 + 0x8
  2230: ac 78 02 01              jump @225 if a1 <u a0
      :                          @200
  2234: ac 95 ff 00              jump @226 if s0 <u a2
      :                          @201
  2238: c8 92 08                 a1 = t0 + a2
  2241: 82 88                    a1 = u64 [a1]
  2243: 6f 88                    a1 = reverse a1
  2245: c8 76 0b                 a4 = s1 + a0
  2248: 98 8c 38                 a5 = a1 >> 0x38
  2251: 78 bc 07                 u8 [a4 + 0x7] = a5
  2254: 98 8c 30                 a5 = a1 >> 0x30
  2257: 78 bc 06                 u8 [a4 + 0x6] = a5
  2260: 98 8c 28                 a5 = a1 >> 0x28
  2263: 78 bc 05                 u8 [a4 + 0x5] = a5
  2266: 98 8c 20                 a5 = a1 >> 0x20
  2269: 78 bc 04                 u8 [a4 + 0x4] = a5
  2272: 98 8c 18                 a5 = a1 >> 0x18
  2275: 78 bc 03                 u8 [a4 + 0x3] = a5
  2278: 98 8c 10                 a5 = a1 >> 0x10
  2281: 78 bc 02                 u8 [a4 + 0x2] = a5
  2284: 98 8c 08                 a5 = a1 >> 0x8
  2287: 78 bc 01                 u8 [a4 + 0x1] = a5
  2290: 78 b8                    u8 [a4] = a1
  2292: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2295: 95 99 08                 a2 = a2 + 0x8
  2298: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  2301: 52 0a b6                 jump @199 if a3 != 0
      :                          @202
  2304: 82 17 b0 00              a0 = u64 [sp + 0xb0]
  2308: 7b 75                    u64 [a0] = s0
  2310: 7b 76 08                 u64 [a0 + 0x8] = s1
  2313: 7b 75 10                 u64 [a0 + 0x10] = s0
  2316: 01                       fallthrough
      :                          @203
  2317: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  2321: 51 07 2d                 jump @210 if a0 == 0
      :                          @204
  2324: 33 08 00 02              a1 = 0x200
  2328: ac 78 26                 jump @210 if a1 <u a0
      :                          @205
  2331: 97 77 03                 a0 = a0 << 0x3
  2334: 33 08 80 00 03           a1 = 0x30080
  2339: 95 88 00 10              a1 = a1 + 0x1000
  2343: 01                       fallthrough
      :                          @206
  2344: 82 89                    a2 = u64 [a1]
  2346: c9 98 0a                 a3 = a1 - a2
  2349: ab 2a 11                 jump @210 if a3 != t0
      :                          @207
  2352: c9 79 0a                 a3 = a2 - a0
  2355: 01                       fallthrough
      :                          @208
  2356: 82 8b                    a4 = u64 [a1]
  2358: ab 9b f2                 jump @206 if a4 != a2
      :                          @209
  2361: 7b 8a                    u64 [a1] = a3
  2363: 33 0c                    a5 = 0
  2365: 01                       fallthrough
      :                          @210
  2366: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  2370: 51 07 31                 jump @217 if a0 == 0
      :                          @211
  2373: 33 08 00 02              a1 = 0x200
  2377: ac 78 2a                 jump @217 if a1 <u a0
      :                          @212
  2380: 97 77 03                 a0 = a0 << 0x3
  2383: 82 18 e8 00              a1 = u64 [sp + 0xe8]
  2387: 33 09 80 00 03           a2 = 0x30080
  2392: 95 99 00 10              a2 = a2 + 0x1000
  2396: 01                       fallthrough
      :                          @213
  2397: 82 9a                    a3 = u64 [a2]
  2399: c9 a9 0b                 a4 = a2 - a3
  2402: ab 8b 11                 jump @217 if a4 != a1
      :                          @214
  2405: c9 7a 0b                 a4 = a3 - a0
  2408: 01                       fallthrough
      :                          @215
  2409: 82 9c                    a5 = u64 [a2]
  2411: ab ac f2                 jump @213 if a5 != a3
      :                          @216
  2414: 7b 9b                    u64 [a2] = a4
  2416: 33 06                    s1 = 0
  2418: 01                       fallthrough
      :                          @217
  2419: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  2423: 51 07 2f                 jump @224 if a0 == 0
      :                          @218
  2426: 33 08 00 02              a1 = 0x200
  2430: ac 78 28                 jump @224 if a1 <u a0
      :                          @219
  2433: 97 77 03                 a0 = a0 << 0x3
  2436: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  2440: 33 09 80 00 03           a2 = 0x30080
  2445: 95 99 00 10              a2 = a2 + 0x1000
  2449: 01                       fallthrough
      :                          @220
  2450: 82 9a                    a3 = u64 [a2]
  2452: c9 a9 0b                 a4 = a2 - a3
  2455: ab 8b 0f                 jump @224 if a4 != a1
      :                          @221
  2458: c9 7a 0b                 a4 = a3 - a0
  2461: 01                       fallthrough
      :                          @222
  2462: 82 9c                    a5 = u64 [a2]
  2464: ab ac f2                 jump @220 if a5 != a3
      :                          @223
  2467: 7b 9b                    u64 [a2] = a4
  2469: 01                       fallthrough
      :                          @224
  2470: 82 10 98 01              ra = u64 [sp + 0x198]
  2474: 82 15 90 01              s0 = u64 [sp + 0x190]
  2478: 82 16 88 01              s1 = u64 [sp + 0x188]
  2482: 95 11 a0 01              sp = sp + 0x1a0
  2486: 32 00                    ret
      :                          @225
  2488: 00                       trap
      :                          @226
  2489: 00                       trap
      :                          @227
  2490: 82 17 48                 a0 = u64 [sp + 0x48]
  2493: 7b 17 40                 u64 [sp + 0x40] = a0
  2496: 33 06 80 00 03           s1 = 0x30080
  2501: 82 15 50                 s0 = u64 [sp + 0x50]
  2504: 82 17 68                 a0 = u64 [sp + 0x68]
  2507: 28 05 fc                 jump @148
      :                          @228
  2510: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  2514: 8d 77                    i32 a0 = -a0
  2516: 84 72 3f                 t0 = a0 & 0x3f
  2519: 82 18 70                 a1 = u64 [sp + 0x70]
  2522: 97 87 03                 a0 = a1 << 0x3
  2525: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  2529: c9 97 07                 a0 = a0 - a2
  2532: 82 19 30                 a2 = u64 [sp + 0x30]
  2535: c8 97 07                 a0 = a0 + a2
  2538: 33 0a 80 00 03           a3 = 0x30080
  2543: c9 7a 07                 a0 = a3 - a0
  2546: 95 77 08 10              a0 = a0 + 0x1008
  2550: 82 19 28                 a2 = u64 [sp + 0x28]
  2553: c9 97 0a                 a3 = a0 - a2
  2556: 82 1b 78                 a4 = u64 [sp + 0x78]
  2559: 82 17 88 00              a0 = u64 [sp + 0x88]
  2563: c8 7b 0b                 a4 = a4 + a0
  2566: 82 17 90 00              a0 = u64 [sp + 0x90]
  2570: 82 13 58                 t1 = u64 [sp + 0x58]
  2573: 64 69                    a2 = s1
  2575: 01                       fallthrough
      :                          @229
  2576: aa 78 a2 05              jump @341 if a1 == a0
      :                          @230
  2580: 82 bc                    a5 = u64 [a4]
  2582: d2 3c 06                 s1 = a5 & t1
  2585: cf 26 06                 s1 = s1 << t0
  2588: c8 65 05                 s0 = s0 + s1
  2591: 7b a5 f8                 u64 [a3 + 0xfffffffffffffff8] = s0
  2594: d0 9c 05                 s0 = a5 >> a2
  2597: 7b a5                    u64 [a3] = s0
  2599: 95 77 01                 a0 = a0 + 0x1
  2602: 95 aa 08                 a3 = a3 + 0x8
  2605: 95 bb 08                 a4 = a4 + 0x8
  2608: ab 78 e0                 jump @229 if a1 != a0
      :                          @231
  2611: 82 17 48                 a0 = u64 [sp + 0x48]
  2614: 7b 17 40                 u64 [sp + 0x40] = a0
  2617: 33 06 80 00 03           s1 = 0x30080
  2622: 82 1c 48                 a5 = u64 [sp + 0x48]
  2625: 52 0c a8 fb              jump @150 if a5 != 0
      :                          @232
  2629: 28 e7 f9                 jump @102
      :                          @233
  2632: 33 05                    s0 = 0
  2634: 33 06 08                 s1 = 0x8
  2637: 01                       fallthrough
      :                          @234
  2638: 64 67                    a0 = s1
  2640: 82 18 68                 a1 = u64 [sp + 0x68]
  2643: 50 10 26 e0 7f           ra = 38, jump @1890
      :                          @235 [@dyn 19]
  2648: 7b 15 70 01              u64 [sp + 0x170] = s0
  2652: 7b 16 78 01              u64 [sp + 0x178] = s1
  2656: 82 19 98 00              a2 = u64 [sp + 0x98]
  2660: 7b 19 80 01              u64 [sp + 0x180] = a2
  2664: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  2668: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  2672: ac 98 5c                 jump @241 if a1 <u a2
      :                          @236
  2675: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  2679: 82 18 98 00              a1 = u64 [sp + 0x98]
  2683: c9 87 09                 a2 = a0 - a1
  2686: c9 85 07                 a0 = s0 - a1
  2689: 64 85                    s0 = a1
  2691: 7b 19 68                 u64 [sp + 0x68] = a2
  2694: ac 97 11 05              jump @339 if a0 <u a2
      :                          @237
  2698: 97 57 03                 a0 = s0 << 0x3
  2701: c8 67 07                 a0 = a0 + s1
  2704: 82 19 68                 a2 = u64 [sp + 0x68]
  2707: 53 19 02 33              jump @240 if a2 <u 2
      :                          @238
  2711: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  2715: 82 19 98 00              a2 = u64 [sp + 0x98]
  2719: c9 98 09                 a2 = a1 - a2
  2722: 97 99 03                 a2 = a2 << 0x3
  2725: 33 08                    a1 = 0
  2727: 50 10 28 d3 81 00        ra = 40, jump @1942
      :                          @239 [@dyn 20]
  2733: 82 17 68                 a0 = u64 [sp + 0x68]
  2736: c8 75 05                 s0 = s0 + a0
  2739: 97 57 03                 a0 = s0 << 0x3
  2742: c8 67 07                 a0 = a0 + s1
  2745: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  2748: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2751: 49 07                    u64 [a0 + 0] = 0
  2753: 95 57 01                 a0 = s0 + 0x1
  2756: 28 08                    jump @241
      :                          @240
  2758: 49 07                    u64 [a0 + 0] = 0
  2760: 95 57 01                 a0 = s0 + 0x1
  2763: 01                       fallthrough
      :                          @241
  2764: 7b 17 80 01              u64 [sp + 0x180] = a0
  2768: 33 02 00 10              t0 = 0x1000
  2772: 33 08 80 00 03           a1 = 0x30080
  2777: c8 28 08                 a1 = a1 + t0
  2780: 33 09 f8 0f              a2 = 0xff8
  2784: 01                       fallthrough
      :                          @242
  2785: 82 8a                    a3 = u64 [a1]
  2787: 82 1b b8 00              a4 = u64 [sp + 0xb8]
  2791: c8 ab 0b                 a4 = a4 + a3
  2794: ac ab db f5              jump @24 if a4 <u a3
      :                          @243
  2798: ac b9 d7 f5              jump @24 if a2 <u a4
      :                          @244
  2802: 33 07 80 00 03           a0 = 0x30080
  2807: c9 b7 07                 a0 = a0 - a4
  2810: c8 27 07                 a0 = a0 + t0
  2813: 84 7c 07                 a5 = a0 & 0x7
  2816: c8 cb 0b                 a4 = a4 + a5
  2819: 01                       fallthrough
      :                          @245
  2820: 82 86                    s1 = u64 [a1]
  2822: ab a6 db                 jump @242 if s1 != a3
      :                          @246
  2825: 7b 8b                    u64 [a1] = a4
  2827: 33 05                    s0 = 0
  2829: c9 c7 07                 a0 = a0 - a5
  2832: 7b 17 28                 u64 [sp + 0x28] = a0
  2835: 33 08                    a1 = 0
  2837: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  2841: 50 10 2a 61 81 00        ra = 42, jump @1942
      :                          @247 [@dyn 21]
  2847: 82 17 88 00              a0 = u64 [sp + 0x88]
  2851: 51 07 34 02              jump @289 if a0 == 0
      :                          @248
  2855: 33 07                    a0 = 0
  2857: 49 21 98 00              u64 [sp + 152] = 0
  2861: 33 05                    s0 = 0
  2863: 49 11 40                 u64 [sp + 64] = 0
  2866: 14 08 f9 ff ff ff ff ff ff 7f a1 = 0x7ffffffffffffff9
  2876: 7b 18 18                 u64 [sp + 0x18] = a1
  2879: 33 08 80 00 03           a1 = 0x30080
  2884: 95 88 00 10              a1 = a1 + 0x1000
  2888: 7b 18 30                 u64 [sp + 0x30] = a1
  2891: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  2895: 7b 18 20                 u64 [sp + 0x20] = a1
  2898: 7b 18 68                 u64 [sp + 0x68] = a1
  2901: 01                       fallthrough
      :                          @249
  2902: 82 18 68                 a1 = u64 [sp + 0x68]
  2905: 51 08 a2 07              jump @417 if a1 == 0
      :                          @250
  2909: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  2913: 82 88                    a1 = u64 [a1]
  2915: 84 88 01                 a1 = a1 & 0x1
  2918: 7b 18 38                 u64 [sp + 0x38] = a1
  2921: 51 08 65 01              jump @279 if a1 == 0
      :                          @251
  2925: 82 18 78 01              a1 = u64 [sp + 0x178]
  2929: 82 19 80 01              a2 = u64 [sp + 0x180]
  2933: 7b 19 48                 u64 [sp + 0x48] = a2
  2936: 84 77 01                 a0 = a0 & 0x1
  2939: 51 07 47                 jump @256 if a0 == 0
      :                          @252
  2942: 82 17 48                 a0 = u64 [sp + 0x48]
  2945: 51 07 9f 00              jump @264 if a0 == 0
      :                          @253
  2949: 33 06                    s1 = 0
  2951: 82 17 68                 a0 = u64 [sp + 0x68]
  2954: 82 19 48                 a2 = u64 [sp + 0x48]
  2957: e6 79 07                 a0 = minu(a2, a0)
  2960: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  2964: 01                       fallthrough
      :                          @254
  2965: 82 9b                    a4 = u64 [a2]
  2967: 82 8c                    a5 = u64 [a1]
  2969: c8 bc 0c                 a5 = a5 + a4
  2972: d8 bc 0b                 a4 = a5 <u a4
  2975: 84 6a 01                 a3 = s1 & 0x1
  2978: c8 ca 0a                 a3 = a3 + a5
  2981: d8 ca 06                 s1 = a3 <u a5
  2984: d4 b6 06                 s1 = s1 | a4
  2987: 7b 9a                    u64 [a2] = a3
  2989: 95 88 08                 a1 = a1 + 0x8
  2992: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2995: 95 99 08                 a2 = a2 + 0x8
  2998: 52 07 df                 jump @254 if a0 != 0
      :                          @255
  3001: 82 17 68                 a0 = u64 [sp + 0x68]
  3004: 7b 17 48                 u64 [sp + 0x48] = a0
  3007: 28 fe 00                 jump @277
      :                          @256
  3010: 82 17 48                 a0 = u64 [sp + 0x48]
  3013: 98 77 3d                 a0 = a0 >> 0x3d
  3016: 52 07 c3 02              jump @319 if a0 != 0
      :                          @257
  3020: 82 19 48                 a2 = u64 [sp + 0x48]
  3023: 97 99 03                 a2 = a2 << 0x3
  3026: 82 17 18                 a0 = u64 [sp + 0x18]
  3029: ae 79 b6 02              jump @319 if a2 >=u a0
      :                          @258
  3033: 51 09 4d                 jump @265 if a2 == 0
      :                          @259
  3036: 82 17 30                 a0 = u64 [sp + 0x30]
  3039: 82 77                    a0 = u64 [a0]
  3041: c8 97 0a                 a3 = a0 + a2
  3044: ac 7a e1 f4              jump @24 if a3 <u a0
      :                          @260
  3048: 56 2a f8 0f dd f4        jump @24 if a3 >u 4088
      :                          @261
  3054: 33 0b 80 00 03           a4 = 0x30080
  3059: c9 ab 0b                 a4 = a4 - a3
  3062: 95 b2 00 10              t0 = a4 + 0x1000
  3066: 84 23 07                 t1 = t0 & 0x7
  3069: c8 3a 0a                 a3 = a3 + t1
  3072: 82 1c 30                 a5 = u64 [sp + 0x30]
  3075: 01                       fallthrough
      :                          @262
  3076: 82 c6                    s1 = u64 [a5]
  3078: ab 76 d6                 jump @259 if s1 != a0
      :                          @263
  3081: 7b ca                    u64 [a5] = a3
  3083: c9 32 07                 a0 = t0 - t1
  3086: 7b 17 10                 u64 [sp + 0x10] = a0
  3089: 82 17 48                 a0 = u64 [sp + 0x48]
  3092: 7b 17 08                 u64 [sp + 0x8] = a0
  3095: 82 17 10                 a0 = u64 [sp + 0x10]
  3098: 33 00 2c                 ra = 0x2c
  3101: 28 16 7e                 jump @1890
      :                          @264
  3104: 33 07 01                 a0 = 0x1
  3107: 28 ab 00                 jump @279
      :                          @265
  3110: 49 11 08                 u64 [sp + 8] = 0
  3113: 49 11 10 08              u64 [sp + 16] = 0x8
  3117: 82 17 10                 a0 = u64 [sp + 0x10]
  3120: 50 10 2c 03 7e           ra = 44, jump @1890
      :                          @266 [@dyn 22]
  3125: 82 17 48                 a0 = u64 [sp + 0x48]
  3128: 51 07 44                 jump @269 if a0 == 0
      :                          @267
  3131: 82 17 68                 a0 = u64 [sp + 0x68]
  3134: 82 18 48                 a1 = u64 [sp + 0x48]
  3137: e6 87 07                 a0 = minu(a0, a1)
  3140: 33 0a ff                 a3 = 0xffffffffffffffff
  3143: 82 18 10                 a1 = u64 [sp + 0x10]
  3146: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  3150: 01                       fallthrough
      :                          @268
  3151: 82 8b                    a4 = u64 [a1]
  3153: 82 9c                    a5 = u64 [a2]
  3155: c8 ab 0b                 a4 = a4 + a3
  3158: d8 ab 0a                 a3 = a4 <u a3
  3161: d8 cb 06                 s1 = a4 <u a5
  3164: c9 6a 0a                 a3 = a3 - s1
  3167: c9 cb 0b                 a4 = a4 - a5
  3170: 95 bb 01                 a4 = a4 + 0x1
  3173: 88 bc 01                 a5 = a4 <u 0x1
  3176: c8 ca 0a                 a3 = a3 + a5
  3179: 95 aa fe                 a3 = a3 + 0xfffffffffffffffe
  3182: 7b 8b                    u64 [a1] = a4
  3184: 95 99 08                 a2 = a2 + 0x8
  3187: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3190: 95 88 08                 a1 = a1 + 0x8
  3193: 52 07 d6                 jump @268 if a0 != 0
      :                          @269
  3196: 82 17 20                 a0 = u64 [sp + 0x20]
  3199: 51 07 30                 jump @276 if a0 == 0
      :                          @270
  3202: 82 17 20                 a0 = u64 [sp + 0x20]
  3205: 56 27 00 02 2a           jump @276 if a0 >u 512
      :                          @271
  3210: 82 17 20                 a0 = u64 [sp + 0x20]
  3213: 97 77 03                 a0 = a0 << 0x3
  3216: 01                       fallthrough
      :                          @272
  3217: 82 19 30                 a2 = u64 [sp + 0x30]
  3220: 82 98                    a1 = u64 [a2]
  3222: c9 89 09                 a2 = a2 - a1
  3225: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  3229: ab a9 12                 jump @276 if a2 != a3
      :                          @273
  3232: c9 78 09                 a2 = a1 - a0
  3235: 82 1c 30                 a5 = u64 [sp + 0x30]
  3238: 01                       fallthrough
      :                          @274
  3239: 82 ca                    a3 = u64 [a5]
  3241: ab 8a e8                 jump @272 if a3 != a1
      :                          @275
  3244: 7b c9                    u64 [a5] = a2
  3246: 01                       fallthrough
      :                          @276
  3247: 82 17 10                 a0 = u64 [sp + 0x10]
  3250: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  3254: 82 17 08                 a0 = u64 [sp + 0x8]
  3257: 7b 17 20                 u64 [sp + 0x20] = a0
  3260: 01                       fallthrough
      :                          @277
  3261: 33 07 01                 a0 = 0x1
  3264: 82 18 48                 a1 = u64 [sp + 0x48]
  3267: 51 08 82 00              jump @284 if a1 == 0
      :                          @278
  3271: 82 18 48                 a1 = u64 [sp + 0x48]
  3274: 7b 18 68                 u64 [sp + 0x68] = a1
  3277: 01                       fallthrough
      :                          @279
  3278: 33 0a                    a3 = 0
  3280: 82 19 68                 a2 = u64 [sp + 0x68]
  3283: 97 99 03                 a2 = a2 << 0x3
  3286: 9a 98                    a1 = -a2
  3288: 82 1b a0 00              a4 = u64 [sp + 0xa0]
  3292: c8 b9 09                 a2 = a2 + a4
  3295: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
  3298: 01                       fallthrough
      :                          @280
  3299: 82 9b                    a4 = u64 [a2]
  3301: 98 bc 01                 a5 = a4 >> 0x1
  3304: d4 ca 0a                 a3 = a3 | a5
  3307: 97 bb 3f                 a4 = a4 << 0x3f
  3310: 7b 9a                    u64 [a2] = a3
  3312: 95 88 08                 a1 = a1 + 0x8
  3315: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
  3318: 64 ba                    a3 = a4
  3320: 52 08 eb                 jump @280 if a1 != 0
      :                          @281
  3323: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  3327: 82 19 98 00              a2 = u64 [sp + 0x98]
  3331: ac 98 50                 jump @285 if a1 <u a2
      :                          @282
  3334: 82 1b 98 00              a4 = u64 [sp + 0x98]
  3338: 97 b8 03                 a1 = a4 << 0x3
  3341: 82 19 28                 a2 = u64 [sp + 0x28]
  3344: c8 98 08                 a1 = a1 + a2
  3347: 82 89                    a2 = u64 [a1]
  3349: 82 1c 40                 a5 = u64 [sp + 0x40]
  3352: 95 cc 01                 a5 = a5 + 0x1
  3355: 82 1a 38                 a3 = u64 [sp + 0x38]
  3358: cf 5a 0a                 a3 = a3 << s0
  3361: d4 a9 09                 a2 = a2 | a3
  3364: 7b 89                    u64 [a1] = a2
  3366: 95 55 01                 s0 = s0 + 0x1
  3369: 95 58 c0                 a1 = s0 + 0xffffffffffffffc0
  3372: 88 89 01                 a2 = a1 <u 0x1
  3375: 93 85                    s0 = 0 if a1 == 0
  3377: c8 9b 0b                 a4 = a4 + a2
  3380: 7b 1b 98 00              u64 [sp + 0x98] = a4
  3384: 82 18 88 00              a1 = u64 [sp + 0x88]
  3388: 7b 1c 40                 u64 [sp + 0x40] = a5
  3391: ab 8c 17 fe              jump @249 if a5 != a1
      :                          @283
  3395: 28 1c                    jump @290
      :                          @284
  3397: 49 11 68                 u64 [sp + 104] = 0
  3400: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  3404: 82 19 98 00              a2 = u64 [sp + 0x98]
  3408: ae 98 b6                 jump @282 if a1 >=u a2
      :                          @285
  3411: 00                       trap
      :                          @286
  3412: 00                       trap
      :                          @287
  3413: 00                       trap
      :                          @288
  3414: 00                       trap
      :                          @289
  3415: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  3419: 7b 17 20                 u64 [sp + 0x20] = a0
  3422: 01                       fallthrough
      :                          @290
  3423: 82 18 70 01              a1 = u64 [sp + 0x170]
  3427: 51 08 2f                 jump @297 if a1 == 0
      :                          @291
  3430: 56 28 00 02 2c           jump @297 if a1 >u 512
      :                          @292
  3435: 82 17 78 01              a0 = u64 [sp + 0x178]
  3439: 97 88 03                 a1 = a1 << 0x3
  3442: 33 0a 80 00 03           a3 = 0x30080
  3447: 95 a9 00 10              a2 = a3 + 0x1000
  3451: 01                       fallthrough
      :                          @293
  3452: 82 9a                    a3 = u64 [a2]
  3454: c9 a9 0b                 a4 = a2 - a3
  3457: ab 7b 11                 jump @297 if a4 != a0
      :                          @294
  3460: c9 8a 0b                 a4 = a3 - a1
  3463: 01                       fallthrough
      :                          @295
  3464: 82 9c                    a5 = u64 [a2]
  3466: ab ac f2                 jump @293 if a5 != a3
      :                          @296
  3469: 7b 9b                    u64 [a2] = a4
  3471: 33 06                    s1 = 0
  3473: 01                       fallthrough
      :                          @297
  3474: 82 17 20                 a0 = u64 [sp + 0x20]
  3477: 51 07 33                 jump @304 if a0 == 0
      :                          @298
  3480: 82 18 20                 a1 = u64 [sp + 0x20]
  3483: 56 28 00 02 2d           jump @304 if a1 >u 512
      :                          @299
  3488: 82 17 20                 a0 = u64 [sp + 0x20]
  3491: 97 77 03                 a0 = a0 << 0x3
  3494: 33 09 80 00 03           a2 = 0x30080
  3499: 95 98 00 10              a1 = a2 + 0x1000
  3503: 01                       fallthrough
      :                          @300
  3504: 82 89                    a2 = u64 [a1]
  3506: c9 98 0a                 a3 = a1 - a2
  3509: 82 1b a0 00              a4 = u64 [sp + 0xa0]
  3513: ab ba 0f                 jump @304 if a3 != a4
      :                          @301
  3516: c9 79 0a                 a3 = a2 - a0
  3519: 01                       fallthrough
      :                          @302
  3520: 82 8b                    a4 = u64 [a1]
  3522: ab 9b ee                 jump @300 if a4 != a2
      :                          @303
  3525: 7b 8a                    u64 [a1] = a3
  3527: 01                       fallthrough
      :                          @304
  3528: 33 02 00 10              t0 = 0x1000
  3532: 33 08 80 00 03           a1 = 0x30080
  3537: c8 28 08                 a1 = a1 + t0
  3540: 33 09 f8 0f              a2 = 0xff8
  3544: 01                       fallthrough
      :                          @305
  3545: 82 8a                    a3 = u64 [a1]
  3547: 82 1b 78                 a4 = u64 [sp + 0x78]
  3550: c8 ab 0b                 a4 = a4 + a3
  3553: ac ab e4 f2              jump @24 if a4 <u a3
      :                          @306
  3557: ac b9 e0 f2              jump @24 if a2 <u a4
      :                          @307
  3561: 33 07 80 00 03           a0 = 0x30080
  3566: c9 b7 07                 a0 = a0 - a4
  3569: c8 27 07                 a0 = a0 + t0
  3572: 84 7c 07                 a5 = a0 & 0x7
  3575: c8 cb 0b                 a4 = a4 + a5
  3578: 01                       fallthrough
      :                          @308
  3579: 82 86                    s1 = u64 [a1]
  3581: ab a6 dc                 jump @305 if s1 != a3
      :                          @309
  3584: 7b 8b                    u64 [a1] = a4
  3586: c9 c7 06                 s1 = a0 - a5
  3589: 64 67                    a0 = s1
  3591: 33 08                    a1 = 0
  3593: 82 15 78                 s0 = u64 [sp + 0x78]
  3596: 64 59                    a2 = s0
  3598: 50 10 2e 6c 7e           ra = 46, jump @1942
      :                          @310 [@dyn 23]
  3603: 82 17 68 01              a0 = u64 [sp + 0x168]
  3607: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  3611: 82 1b 60 01              a4 = u64 [sp + 0x160]
  3615: 82 1c 48 01              a5 = u64 [sp + 0x148]
  3619: 82 17 50 01              a0 = u64 [sp + 0x150]
  3623: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  3627: 33 04                    t2 = 0
  3629: 33 08                    a1 = 0
  3631: 82 13 80 00              t1 = u64 [sp + 0x80]
  3635: 95 33 01                 t1 = t1 + 0x1
  3638: 64 5a                    a3 = s0
  3640: 7b 1b 38                 u64 [sp + 0x38] = a4
  3643: 7b 1c 40                 u64 [sp + 0x40] = a5
  3646: 7b 16 98 00              u64 [sp + 0x98] = s1
  3650: 64 67                    a0 = s1
  3652: 28 2b                    jump @313
      :                          @311
  3654: 82 c5                    s0 = u64 [a5]
  3656: 01                       fallthrough
      :                          @312
  3657: c9 50 02                 t0 = ra - s0
  3660: 84 49 01                 a2 = t2 & 0x1
  3663: c9 92 06                 s1 = t0 - a2
  3666: 7b 76                    u64 [a0] = s1
  3668: 95 77 08                 a0 = a0 + 0x8
  3671: 95 88 01                 a1 = a1 + 0x1
  3674: d8 50 06                 s1 = ra <u s0
  3677: d8 92 09                 a2 = t0 <u a2
  3680: d4 96 04                 t2 = s1 | a2
  3683: 95 cc 08                 a5 = a5 + 0x8
  3686: 95 bb 08                 a4 = a4 + 0x8
  3689: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  3692: aa 83 20                 jump @320 if t1 == a1
      :                          @313
  3695: 51 0a 1d                 jump @320 if a3 == 0
      :                          @314
  3698: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  3702: ae 98 07                 jump @316 if a1 >=u a2
      :                          @315
  3705: 82 b0                    ra = u64 [a4]
  3707: 28 05                    jump @317
      :                          @316
  3709: 33 00                    ra = 0
  3711: 01                       fallthrough
      :                          @317
  3712: 82 19 c0 00              a2 = u64 [sp + 0xc0]
  3716: ac 98 c2                 jump @311 if a1 <u a2
      :                          @318
  3719: 33 05                    s0 = 0
  3721: 28 c0                    jump @312
      :                          @319
  3723: 00                       trap
      :                          @320
  3724: 33 02 00 10              t0 = 0x1000
  3728: 33 08 80 00 03           a1 = 0x30080
  3733: c8 28 08                 a1 = a1 + t0
  3736: 33 09 f8 0f              a2 = 0xff8
  3740: 01                       fallthrough
      :                          @321
  3741: 82 8a                    a3 = u64 [a1]
  3743: 82 1b 78                 a4 = u64 [sp + 0x78]
  3746: c8 ab 0b                 a4 = a4 + a3
  3749: ac ab 20 f2              jump @24 if a4 <u a3
      :                          @322
  3753: ac b9 1c f2              jump @24 if a2 <u a4
      :                          @323
  3757: 33 07 80 00 03           a0 = 0x30080
  3762: c9 b7 07                 a0 = a0 - a4
  3765: c8 27 07                 a0 = a0 + t0
  3768: 84 7c 07                 a5 = a0 & 0x7
  3771: c8 cb 0b                 a4 = a4 + a5
  3774: 01                       fallthrough
      :                          @324
  3775: 82 86                    s1 = u64 [a1]
  3777: ab a6 dc                 jump @321 if s1 != a3
      :                          @325
  3780: 7b 8b                    u64 [a1] = a4
  3782: c9 c7 05                 s0 = a0 - a5
  3785: 64 57                    a0 = s0
  3787: 33 08                    a1 = 0
  3789: 82 19 78                 a2 = u64 [sp + 0x78]
  3792: 50 10 30 aa 7d           ra = 48, jump @1942
      :                          @326 [@dyn 24]
  3797: 49 11 48                 u64 [sp + 72] = 0
  3800: 33 07                    a0 = 0
  3802: 7b 15 30                 u64 [sp + 0x30] = s0
  3805: 7b 15 a0 00              u64 [sp + 0xa0] = s0
  3809: 82 1a 90 00              a3 = u64 [sp + 0x90]
  3813: 28 27                    jump @328
      :                          @327
  3815: 82 19 68                 a2 = u64 [sp + 0x68]
  3818: 95 97 01                 a0 = a2 + 0x1
  3821: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3824: 82 18 48                 a1 = u64 [sp + 0x48]
  3827: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  3830: 7b 18 48                 u64 [sp + 0x48] = a1
  3833: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  3837: 95 88 08                 a1 = a1 + 0x8
  3840: 7b 18 a0 00              u64 [sp + 0xa0] = a1
  3844: 82 18 80 00              a1 = u64 [sp + 0x80]
  3848: aa 89 ab 00              jump @342 if a2 == a1
      :                          @328
  3852: 64 78                    a1 = a0
  3854: 33 07 01                 a0 = 0x1
  3857: e4 7a 0c                 a5 = maxu(a3, a0)
  3860: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  3864: 7b 18 68                 u64 [sp + 0x68] = a1
  3867: ae 87 25                 jump @333 if a0 >=u a1
      :                          @329
  3870: 33 06                    s1 = 0
  3872: 33 07                    a0 = 0
  3874: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  3878: 01                       fallthrough
      :                          @330
  3879: aa 7a d5 03              jump @418 if a3 == a0
      :                          @331
  3883: 82 9b                    a4 = u64 [a2]
  3885: 95 77 01                 a0 = a0 + 0x1
  3888: c8 6b 08                 a1 = a4 + s1
  3891: d8 b8 06                 s1 = a1 <u a4
  3894: 7b 98                    u64 [a2] = a1
  3896: 95 99 08                 a2 = a2 + 0x8
  3899: ab 7c ec                 jump @330 if a5 != a0
      :                          @332
  3902: 28 a9                    jump @327
      :                          @333
  3904: 33 0b                    a4 = 0
  3906: 33 07                    a0 = 0
  3908: 82 18 68                 a1 = u64 [sp + 0x68]
  3911: 97 88 03                 a1 = a1 << 0x3
  3914: 82 10 28                 ra = u64 [sp + 0x28]
  3917: c8 80 00                 ra = ra + a1
  3920: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  3924: 82 15 98 00              s0 = u64 [sp + 0x98]
  3928: 28 30                    jump @336
      :                          @334
  3930: 82 52                    t0 = u64 [s0]
  3932: 01                       fallthrough
      :                          @335
  3933: 82 06                    s1 = u64 [ra]
  3935: 82 93                    t1 = u64 [a2]
  3937: 95 77 01                 a0 = a0 + 0x1
  3940: ca 26 04                 t2 = s1 * t0
  3943: d6 26 06                 s1 = s1 mulhu t0
  3946: c8 3b 0b                 a4 = a4 + t1
  3949: d8 3b 08                 a1 = a4 <u t1
  3952: c8 68 08                 a1 = a1 + s1
  3955: c8 b4 04                 t2 = t2 + a4
  3958: d8 b4 0b                 a4 = t2 <u a4
  3961: c8 8b 0b                 a4 = a4 + a1
  3964: 7b 94                    u64 [a2] = t2
  3966: 95 55 08                 s0 = s0 + 0x8
  3969: 95 99 08                 a2 = a2 + 0x8
  3972: aa 7c 63 ff              jump @327 if a5 == a0
      :                          @336
  3976: aa 7a 74 03              jump @418 if a3 == a0
      :                          @337
  3980: 82 18 80 00              a1 = u64 [sp + 0x80]
  3984: ae 78 ca                 jump @334 if a1 >=u a0
      :                          @338
  3987: 33 02                    t0 = 0
  3989: 28 c8                    jump @335
      :                          @339
  3991: 95 17 70 01              a0 = sp + 0x170
  3995: 82 18 98 00              a1 = u64 [sp + 0x98]
  3999: 82 19 68                 a2 = u64 [sp + 0x68]
  4002: 50 10 32 ad 12           ra = 50, jump @667
      :                          @340 [@dyn 25]
  4007: 82 15 80 01              s0 = u64 [sp + 0x180]
  4011: 82 16 78 01              s1 = u64 [sp + 0x178]
  4015: 28 db fa                 jump @237
      :                          @341
  4018: 00                       trap
      :                          @342
  4019: 82 17 90 00              a0 = u64 [sp + 0x90]
  4023: 97 77 03                 a0 = a0 << 0x3
  4026: 82 18 30                 a1 = u64 [sp + 0x30]
  4029: c8 87 07                 a0 = a0 + a1
  4032: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  4035: 51 07 b7 25              jump @1067 if a0 == 0
      :                          @343
  4039: 82 78                    a1 = u64 [a0]
  4041: 82 19 58                 a2 = u64 [sp + 0x58]
  4044: d2 98 08                 a1 = a1 & a2
  4047: 7b 78                    u64 [a0] = a1
  4049: 82 15 90 00              s0 = u64 [sp + 0x90]
  4053: 7b 15 70 01              u64 [sp + 0x170] = s0
  4057: 82 17 98 00              a0 = u64 [sp + 0x98]
  4061: 7b 17 78 01              u64 [sp + 0x178] = a0
  4065: 7b 15 80 01              u64 [sp + 0x180] = s0
  4069: 33 08                    a1 = 0
  4071: 82 19 78                 a2 = u64 [sp + 0x78]
  4074: 50 10 34 90 7c           ra = 52, jump @1942
      :                          @344 [@dyn 26]
  4079: 82 17 70                 a0 = u64 [sp + 0x70]
  4082: ac 75 a2 02              jump @412 if s0 <u a0
      :                          @345
  4086: 82 17 18 01              a0 = u64 [sp + 0x118]
  4090: 7b 17 68                 u64 [sp + 0x68] = a0
  4093: 82 17 70                 a0 = u64 [sp + 0x70]
  4096: 7b 17 80 01              u64 [sp + 0x180] = a0
  4100: 51 07 18 01              jump @364 if a0 == 0
      :                          @346
  4104: 82 18 20 01              a1 = u64 [sp + 0x120]
  4108: 49 21 90 00              u64 [sp + 144] = 0
  4112: 49 21 a8 00              u64 [sp + 168] = 0
  4116: 82 17 98 00              a0 = u64 [sp + 0x98]
  4120: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  4124: 82 15 70                 s0 = u64 [sp + 0x70]
  4127: 28 2d                    jump @348
      :                          @347
  4129: 82 19 a8 00              a2 = u64 [sp + 0xa8]
  4133: 95 99 01                 a2 = a2 + 0x1
  4136: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4139: 82 17 90 00              a0 = u64 [sp + 0x90]
  4143: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  4146: 7b 17 90 00              u64 [sp + 0x90] = a0
  4150: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  4154: 95 77 08                 a0 = a0 + 0x8
  4157: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  4161: 82 17 70                 a0 = u64 [sp + 0x70]
  4164: 7b 19 a8 00              u64 [sp + 0xa8] = a2
  4168: aa 79 8a 00              jump @359 if a2 == a0
      :                          @348
  4172: 33 07 01                 a0 = 0x1
  4175: e4 75 0b                 a4 = maxu(s0, a0)
  4178: 82 17 80 00              a0 = u64 [sp + 0x80]
  4182: 82 19 a8 00              a2 = u64 [sp + 0xa8]
  4186: ae 97 25                 jump @353 if a0 >=u a2
      :                          @349
  4189: 33 0a                    a3 = 0
  4191: 33 07                    a0 = 0
  4193: 82 1c a0 00              a5 = u64 [sp + 0xa0]
  4197: 01                       fallthrough
      :                          @350
  4198: aa 75 97 02              jump @419 if s0 == a0
      :                          @351
  4202: 82 c6                    s1 = u64 [a5]
  4204: 95 77 01                 a0 = a0 + 0x1
  4207: c8 a6 09                 a2 = s1 + a3
  4210: d8 69 0a                 a3 = a2 <u s1
  4213: 7b c9                    u64 [a5] = a2
  4215: 95 cc 08                 a5 = a5 + 0x8
  4218: ab 7b ec                 jump @350 if a4 != a0
      :                          @352
  4221: 28 a4                    jump @347
      :                          @353
  4223: 33 03                    t1 = 0
  4225: 33 07                    a0 = 0
  4227: 82 19 a8 00              a2 = u64 [sp + 0xa8]
  4231: 97 99 03                 a2 = a2 << 0x3
  4234: 82 1a 30                 a3 = u64 [sp + 0x30]
  4237: c8 a9 09                 a2 = a2 + a3
  4240: 82 1c a0 00              a5 = u64 [sp + 0xa0]
  4244: 82 12 68                 t0 = u64 [sp + 0x68]
  4247: 28 30                    jump @356
      :                          @354
  4249: 82 24                    t2 = u64 [t0]
  4251: 01                       fallthrough
      :                          @355
  4252: 82 9a                    a3 = u64 [a2]
  4254: 82 c6                    s1 = u64 [a5]
  4256: 95 77 01                 a0 = a0 + 0x1
  4259: ca 4a 00                 ra = a3 * t2
  4262: d6 4a 0a                 a3 = a3 mulhu t2
  4265: c8 63 03                 t1 = t1 + s1
  4268: d8 63 06                 s1 = t1 <u s1
  4271: c8 6a 0a                 a3 = a3 + s1
  4274: c8 30 00                 ra = ra + t1
  4277: d8 30 03                 t1 = ra <u t1
  4280: c8 a3 03                 t1 = t1 + a3
  4283: 7b c0                    u64 [a5] = ra
  4285: 95 22 08                 t0 = t0 + 0x8
  4288: 95 cc 08                 a5 = a5 + 0x8
  4291: aa 7b 5e ff              jump @347 if a4 == a0
      :                          @356
  4295: aa 75 36 02              jump @419 if s0 == a0
      :                          @357
  4299: ac 87 ce                 jump @354 if a0 <u a1
      :                          @358
  4302: 33 04                    t2 = 0
  4304: 28 cc                    jump @355
      :                          @359
  4306: 33 0a                    a3 = 0
  4308: 33 07                    a0 = 0
  4310: 82 18 70                 a1 = u64 [sp + 0x70]
  4313: 97 88 03                 a1 = a1 << 0x3
  4316: 82 19 40                 a2 = u64 [sp + 0x40]
  4319: 28 32                    jump @362
      :                          @360
  4321: 82 9b                    a4 = u64 [a2]
  4323: 01                       fallthrough
      :                          @361
  4324: 82 16 98 00              s1 = u64 [sp + 0x98]
  4328: 82 6c                    a5 = u64 [s1]
  4330: c8 bc 0c                 a5 = a5 + a4
  4333: 84 aa 01                 a3 = a3 & 0x1
  4336: c8 ca 0a                 a3 = a3 + a5
  4339: 7b 6a                    u64 [s1] = a3
  4341: 95 66 08                 s1 = s1 + 0x8
  4344: d8 bc 0b                 a4 = a5 <u a4
  4347: d8 ca 0a                 a3 = a3 <u a5
  4350: d4 ba 0a                 a3 = a3 | a4
  4353: 95 99 08                 a2 = a2 + 0x8
  4356: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  4359: 95 77 01                 a0 = a0 + 0x1
  4362: 7b 16 98 00              u64 [sp + 0x98] = s1
  4366: 51 08 0e                 jump @364 if a1 == 0
      :                          @362
  4369: 82 1b c0 00              a4 = u64 [sp + 0xc0]
  4373: ac b7 cc                 jump @360 if a0 <u a4
      :                          @363
  4376: 33 0b                    a4 = 0
  4378: 28 ca                    jump @361
      :                          @364
  4380: 82 17 80 01              a0 = u64 [sp + 0x180]
  4384: 82 18 78 01              a1 = u64 [sp + 0x178]
  4388: 82 19 70 01              a2 = u64 [sp + 0x170]
  4392: 7b 17 08 01              u64 [sp + 0x108] = a0
  4396: 7b 18 00 01              u64 [sp + 0x100] = a1
  4400: 7b 19 f8 00              u64 [sp + 0xf8] = a2
  4404: 82 18 80 00              a1 = u64 [sp + 0x80]
  4408: 56 28 ff 01 2b           jump @370 if a1 >u 511
      :                          @365
  4413: 33 08 80 00 03           a1 = 0x30080
  4418: 95 87 00 10              a0 = a1 + 0x1000
  4422: 01                       fallthrough
      :                          @366
  4423: 82 78                    a1 = u64 [a0]
  4425: c9 87 09                 a2 = a0 - a1
  4428: 82 1a 30                 a3 = u64 [sp + 0x30]
  4431: ab a9 14                 jump @370 if a2 != a3
      :                          @367
  4434: 82 19 78                 a2 = u64 [sp + 0x78]
  4437: c9 98 09                 a2 = a1 - a2
  4440: 01                       fallthrough
      :                          @368
  4441: 82 7a                    a3 = u64 [a0]
  4443: ab 8a ec                 jump @366 if a3 != a1
      :                          @369
  4446: 7b 79                    u64 [a0] = a2
  4448: 33 0b                    a4 = 0
  4450: 01                       fallthrough
      :                          @370
  4451: 82 17 88 00              a0 = u64 [sp + 0x88]
  4455: 98 77 0f                 a0 = a0 >> 0xf
  4458: 52 07 2a                 jump @376 if a0 != 0
      :                          @371
  4461: 33 08 80 00 03           a1 = 0x30080
  4466: 95 87 00 10              a0 = a1 + 0x1000
  4470: 01                       fallthrough
      :                          @372
  4471: 82 78                    a1 = u64 [a0]
  4473: c9 87 09                 a2 = a0 - a1
  4476: 82 1a 28                 a3 = u64 [sp + 0x28]
  4479: ab a9 15                 jump @376 if a2 != a3
      :                          @373
  4482: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  4486: c9 98 09                 a2 = a1 - a2
  4489: 01                       fallthrough
      :                          @374
  4490: 82 7a                    a3 = u64 [a0]
  4492: ab 8a eb                 jump @372 if a3 != a1
      :                          @375
  4495: 7b 79                    u64 [a0] = a2
  4497: 33 0b                    a4 = 0
  4499: 01                       fallthrough
      :                          @376
  4500: 82 17 58 01              a0 = u64 [sp + 0x158]
  4504: 51 07 2e                 jump @383 if a0 == 0
      :                          @377
  4507: 56 27 00 02 2b           jump @383 if a0 >u 512
      :                          @378
  4512: 97 77 03                 a0 = a0 << 0x3
  4515: 33 09 80 00 03           a2 = 0x30080
  4520: 95 98 00 10              a1 = a2 + 0x1000
  4524: 01                       fallthrough
      :                          @379
  4525: 82 89                    a2 = u64 [a1]
  4527: c9 98 0a                 a3 = a1 - a2
  4530: 82 1b 38                 a4 = u64 [sp + 0x38]
  4533: ab ba 11                 jump @383 if a3 != a4
      :                          @380
  4536: c9 79 0a                 a3 = a2 - a0
  4539: 01                       fallthrough
      :                          @381
  4540: 82 8b                    a4 = u64 [a1]
  4542: ab 9b ef                 jump @379 if a4 != a2
      :                          @382
  4545: 7b 8a                    u64 [a1] = a3
  4547: 33 0c                    a5 = 0
  4549: 01                       fallthrough
      :                          @383
  4550: 82 17 40 01              a0 = u64 [sp + 0x140]
  4554: 51 07 2e                 jump @390 if a0 == 0
      :                          @384
  4557: 56 27 00 02 2b           jump @390 if a0 >u 512
      :                          @385
  4562: 97 77 03                 a0 = a0 << 0x3
  4565: 33 09 80 00 03           a2 = 0x30080
  4570: 95 98 00 10              a1 = a2 + 0x1000
  4574: 01                       fallthrough
      :                          @386
  4575: 82 89                    a2 = u64 [a1]
  4577: c9 98 0a                 a3 = a1 - a2
  4580: 82 1b 40                 a4 = u64 [sp + 0x40]
  4583: ab ba 11                 jump @390 if a3 != a4
      :                          @387
  4586: c9 79 0a                 a3 = a2 - a0
  4589: 01                       fallthrough
      :                          @388
  4590: 82 8b                    a4 = u64 [a1]
  4592: ab 9b ef                 jump @386 if a4 != a2
      :                          @389
  4595: 7b 8a                    u64 [a1] = a3
  4597: 33 0c                    a5 = 0
  4599: 01                       fallthrough
      :                          @390
  4600: 82 18 28 01              a1 = u64 [sp + 0x128]
  4604: 51 08 2f                 jump @397 if a1 == 0
      :                          @391
  4607: 56 28 00 02 2c           jump @397 if a1 >u 512
      :                          @392
  4612: 82 17 30 01              a0 = u64 [sp + 0x130]
  4616: 97 88 03                 a1 = a1 << 0x3
  4619: 33 0a 80 00 03           a3 = 0x30080
  4624: 95 a9 00 10              a2 = a3 + 0x1000
  4628: 01                       fallthrough
      :                          @393
  4629: 82 9a                    a3 = u64 [a2]
  4631: c9 a9 0b                 a4 = a2 - a3
  4634: ab 7b 11                 jump @397 if a4 != a0
      :                          @394
  4637: c9 8a 0b                 a4 = a3 - a1
  4640: 01                       fallthrough
      :                          @395
  4641: 82 9c                    a5 = u64 [a2]
  4643: ab ac f2                 jump @393 if a5 != a3
      :                          @396
  4646: 7b 9b                    u64 [a2] = a4
  4648: 33 06                    s1 = 0
  4650: 01                       fallthrough
      :                          @397
  4651: 82 17 10 01              a0 = u64 [sp + 0x110]
  4655: 51 07 2e                 jump @404 if a0 == 0
      :                          @398
  4658: 56 27 00 02 2b           jump @404 if a0 >u 512
      :                          @399
  4663: 97 77 03                 a0 = a0 << 0x3
  4666: 33 09 80 00 03           a2 = 0x30080
  4671: 95 98 00 10              a1 = a2 + 0x1000
  4675: 01                       fallthrough
      :                          @400
  4676: 82 89                    a2 = u64 [a1]
  4678: c9 98 0a                 a3 = a1 - a2
  4681: 82 1b 68                 a4 = u64 [sp + 0x68]
  4684: ab ba 11                 jump @404 if a3 != a4
      :                          @401
  4687: c9 79 0a                 a3 = a2 - a0
  4690: 01                       fallthrough
      :                          @402
  4691: 82 8b                    a4 = u64 [a1]
  4693: ab 9b ef                 jump @400 if a4 != a2
      :                          @403
  4696: 7b 8a                    u64 [a1] = a3
  4698: 33 0c                    a5 = 0
  4700: 01                       fallthrough
      :                          @404
  4701: 82 18 80 00              a1 = u64 [sp + 0x80]
  4705: 56 28 ff 01 8d f2        jump @125 if a1 >u 511
      :                          @405
  4711: 33 08 80 00 03           a1 = 0x30080
  4716: 95 87 00 10              a0 = a1 + 0x1000
  4720: 01                       fallthrough
      :                          @406
  4721: 82 78                    a1 = u64 [a0]
  4723: c9 87 09                 a2 = a0 - a1
  4726: 82 1a 60                 a3 = u64 [sp + 0x60]
  4729: ab a9 75 f2              jump @125 if a2 != a3
      :                          @407
  4733: 82 19 78                 a2 = u64 [sp + 0x78]
  4736: c9 98 09                 a2 = a1 - a2
  4739: 01                       fallthrough
      :                          @408
  4740: 82 7a                    a3 = u64 [a0]
  4742: ab 8a eb                 jump @406 if a3 != a1
      :                          @409
  4745: 7b 79                    u64 [a0] = a2
  4747: 33 0b                    a4 = 0
  4749: 01                       fallthrough
      :                          @410
  4750: ab 8a e3                 jump @406 if a3 != a1
      :                          @411
  4753: 28 5d f2                 jump @125
      :                          @412
  4756: 82 17 70                 a0 = u64 [sp + 0x70]
  4759: 82 18 90 00              a1 = u64 [sp + 0x90]
  4763: c9 87 06                 s1 = a0 - a1
  4766: 95 17 70 01              a0 = sp + 0x170
  4770: 64 69                    a2 = s1
  4772: 50 10 36 ab 0f           ra = 54, jump @667
      :                          @413 [@dyn 27]
  4777: 82 15 80 01              s0 = u64 [sp + 0x180]
  4781: 82 19 78 01              a2 = u64 [sp + 0x178]
  4785: 97 57 03                 a0 = s0 << 0x3
  4788: 7b 19 98 00              u64 [sp + 0x98] = a2
  4792: c8 97 07                 a0 = a0 + a2
  4795: 53 16 02 35              jump @416 if s1 <u 2
      :                          @414
  4799: 82 19 50                 a2 = u64 [sp + 0x50]
  4802: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
  4805: 33 08                    a1 = 0
  4807: 50 10 38 b3 79           ra = 56, jump @1942
      :                          @415 [@dyn 28]
  4812: 82 17 80 00              a0 = u64 [sp + 0x80]
  4816: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
  4819: 82 18 70                 a1 = u64 [sp + 0x70]
  4822: c8 87 07                 a0 = a0 + a1
  4825: c8 57 07                 a0 = a0 + s0
  4828: 97 77 03                 a0 = a0 << 0x3
  4831: 82 18 98 00              a1 = u64 [sp + 0x98]
  4835: c8 87 07                 a0 = a0 + a1
  4838: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  4841: c8 65 05                 s0 = s0 + s1
  4844: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4847: 01                       fallthrough
      :                          @416
  4848: 49 07                    u64 [a0 + 0] = 0
  4850: 95 55 01                 s0 = s0 + 0x1
  4853: 7b 15 70                 u64 [sp + 0x70] = s0
  4856: 28 fe fc                 jump @345
      :                          @417
  4859: 00                       trap
      :                          @418
  4860: 00                       trap
      :                          @419
  4861: 00                       trap
      :                          @420
  4862: 95 11 98                 sp = sp + 0xffffffffffffff98
  4865: 7b 10 60                 u64 [sp + 0x60] = ra
  4868: 7b 15 58                 u64 [sp + 0x58] = s0
  4871: 7b 16 50                 u64 [sp + 0x50] = s1
  4874: 7b 18 40                 u64 [sp + 0x40] = a1
  4877: 7b 17 38                 u64 [sp + 0x38] = a0
  4880: 51 09 98 00              jump @433 if a2 == 0
      :                          @421
  4884: 84 98 07                 a1 = a2 & 0x7
  4887: 98 9c 03                 a5 = a2 >> 0x3
  4890: 95 cb 01                 a4 = a5 + 0x1
  4893: 64 c6                    s1 = a5
  4895: db 8b 06                 s1 = a4 if a1 != 0
  4898: 98 6a 3d                 a3 = s1 >> 0x3d
  4901: 52 0a f3 01              jump @461 if a3 != 0
      :                          @422
  4905: 97 67 03                 a0 = s1 << 0x3
  4908: 14 0a f9 ff ff ff ff ff ff 7f a3 = 0x7ffffffffffffff9
  4918: ae a7 e2 01              jump @461 if a0 >=u a3
      :                          @423
  4922: 7b 1b 20                 u64 [sp + 0x20] = a4
  4925: 7b 17 30                 u64 [sp + 0x30] = a0
  4928: 51 07 b3 00              jump @438 if a0 == 0
      :                          @424
  4932: 7b 1c 28                 u64 [sp + 0x28] = a5
  4935: 33 03 00 10              t1 = 0x1000
  4939: 33 00 80 00 03           ra = 0x30080
  4944: c8 30 00                 ra = ra + t1
  4947: 33 04 f8 0f              t2 = 0xff8
  4951: 01                       fallthrough
      :                          @425
  4952: 82 05                    s0 = u64 [ra]
  4954: c8 75 0b                 a4 = s0 + a0
  4957: ac 5b 68 ed              jump @24 if a4 <u s0
      :                          @426
  4961: ac b4 64 ed              jump @24 if t2 <u a4
      :                          @427
  4965: 33 0c 80 00 03           a5 = 0x30080
  4970: c9 bc 0c                 a5 = a5 - a4
  4973: c8 3c 0c                 a5 = a5 + t1
  4976: 84 ca 07                 a3 = a5 & 0x7
  4979: c8 ab 0b                 a4 = a4 + a3
  4982: 01                       fallthrough
      :                          @428
  4983: 82 02                    t0 = u64 [ra]
  4985: ab 52 06                 jump @430 if t0 != s0
      :                          @429
  4988: 7b 0b                    u64 [ra] = a4
  4990: 01                       fallthrough
      :                          @430
  4991: 82 17 30                 a0 = u64 [sp + 0x30]
  4994: ab 52 d6                 jump @425 if t0 != s0
      :                          @431
  4997: c9 ac 05                 s0 = a5 - a3
  5000: 64 57                    a0 = s0
  5002: 7b 18                    u64 [sp] = a1
  5004: 33 08                    a1 = 0
  5006: 7b 19 08                 u64 [sp + 0x8] = a2
  5009: 82 19 30                 a2 = u64 [sp + 0x30]
  5012: 50 10 3a e6 78           ra = 58, jump @1942
      :                          @432 [@dyn 29]
  5017: 64 5b                    a4 = s0
  5019: 82 18                    a1 = u64 [sp]
  5021: 82 19 08                 a2 = u64 [sp + 0x8]
  5024: 7b 16 10                 u64 [sp + 0x10] = s1
  5027: 82 1c 28                 a5 = u64 [sp + 0x28]
  5030: 28 54                    jump @439
      :                          @433
  5032: 33 02 80 00 03           t0 = 0x30080
  5037: 33 0a 00 10              a3 = 0x1000
  5041: c8 a2 09                 a2 = t0 + a3
  5044: 33 03 f0 0f              t1 = 0xff0
  5048: 01                       fallthrough
      :                          @434
  5049: 82 95                    s0 = u64 [a2]
  5051: ac 53 0a ed              jump @24 if t1 <u s0
      :                          @435
  5055: c9 52 0c                 a5 = t0 - s0
  5058: 95 cc ff 07              a5 = a5 + 0x7ff
  5062: 95 c6 f9 07              s1 = a5 + 0x7f9
  5066: 84 6c 07                 a5 = s1 & 0x7
  5069: c8 c5 0b                 a4 = s0 + a5
  5072: 95 bb 08                 a4 = a4 + 0x8
  5075: 01                       fallthrough
      :                          @436
  5076: 82 98                    a1 = u64 [a2]
  5078: ab 58 e3                 jump @434 if a1 != s0
      :                          @437
  5081: 7b 9b                    u64 [a2] = a4
  5083: 33 0a                    a3 = 0
  5085: c9 c6 06                 s1 = s1 - a5
  5088: 49 06                    u64 [s1 + 0] = 0
  5090: 33 07 01                 a0 = 0x1
  5093: 82 18 38                 a1 = u64 [sp + 0x38]
  5096: 7b 87                    u64 [a1] = a0
  5098: 7b 86 08                 u64 [a1 + 0x8] = s1
  5101: 7b 87 10                 u64 [a1 + 0x10] = a0
  5104: 28 18 01                 jump @458
      :                          @438
  5107: 49 11 10                 u64 [sp + 16] = 0
  5110: 33 0b 08                 a4 = 0x8
  5113: 01                       fallthrough
      :                          @439
  5114: 49 11 48                 u64 [sp + 72] = 0
  5117: 95 65 ff                 s0 = s1 + 0xffffffffffffffff
  5120: 7b 1b 18                 u64 [sp + 0x18] = a4
  5123: 51 08 49                 jump @444 if a1 == 0
      :                          @440
  5126: 7b 19 08                 u64 [sp + 0x8] = a2
  5129: 95 17 48                 a0 = sp + 0x48
  5132: c9 87 07                 a0 = a0 - a1
  5135: 95 77 08                 a0 = a0 + 0x8
  5138: 64 89                    a2 = a1
  5140: 82 18 40                 a1 = u64 [sp + 0x40]
  5143: 7b 19                    u64 [sp] = a2
  5145: 7b 1c 28                 u64 [sp + 0x28] = a5
  5148: 50 10 3c 17 76           ra = 60, jump @1890
      :                          @441 [@dyn 30]
  5153: 82 1a 28                 a3 = u64 [sp + 0x28]
  5156: ac 5a f5 00              jump @462 if a3 <u s0
      :                          @442
  5160: 82 17 48                 a0 = u64 [sp + 0x48]
  5163: 6f 77                    a0 = reverse a0
  5165: 97 58 03                 a1 = s0 << 0x3
  5168: 82 1b 18                 a4 = u64 [sp + 0x18]
  5171: c8 b8 08                 a1 = a1 + a4
  5174: 7b 87                    u64 [a1] = a0
  5176: 82 19 08                 a2 = u64 [sp + 0x8]
  5179: 51 05 a8 00              jump @455 if s0 == 0
      :                          @443
  5183: 95 a5 ff                 s0 = a3 + 0xffffffffffffffff
  5186: 82 18                    a1 = u64 [sp]
  5188: 97 5a 03                 a3 = s0 << 0x3
  5191: c8 ba 0a                 a3 = a3 + a4
  5194: 28 09                    jump @445
      :                          @444
  5196: 97 5a 03                 a3 = s0 << 0x3
  5199: c8 ba 0a                 a3 = a3 + a4
  5202: 01                       fallthrough
      :                          @445
  5203: 64 80                    ra = a1
  5205: 95 88 08                 a1 = a1 + 0x8
  5208: ac 89 be 00              jump @459 if a2 <u a1
      :                          @446
  5212: 64 62                    t0 = s1
  5214: ae 65 b9 00              jump @460 if s0 >=u s1
      :                          @447
  5218: 82 17 40                 a0 = u64 [sp + 0x40]
  5221: c8 07 07                 a0 = a0 + ra
  5224: 7c 73 01                 t1 = u8 [a0 + 0x1]
  5227: 7c 74                    t2 = u8 [a0]
  5229: 7c 7b 02                 a4 = u8 [a0 + 0x2]
  5232: 7c 76 03                 s1 = u8 [a0 + 0x3]
  5235: 97 33 08                 t1 = t1 << 0x8
  5238: d4 43 0c                 a5 = t1 | t2
  5241: 97 bb 10                 a4 = a4 << 0x10
  5244: 97 66 18                 s1 = s1 << 0x18
  5247: d4 6b 0b                 a4 = a4 | s1
  5250: d4 cb 03                 t1 = a4 | a5
  5253: 7c 7c 05                 a5 = u8 [a0 + 0x5]
  5256: 7c 76 04                 s1 = u8 [a0 + 0x4]
  5259: 7c 7b 06                 a4 = u8 [a0 + 0x6]
  5262: 7c 77 07                 a0 = u8 [a0 + 0x7]
  5265: 97 cc 08                 a5 = a5 << 0x8
  5268: d4 6c 0c                 a5 = a5 | s1
  5271: 97 bb 10                 a4 = a4 << 0x10
  5274: 97 77 18                 a0 = a0 << 0x18
  5277: d4 b7 07                 a0 = a0 | a4
  5280: d4 c7 07                 a0 = a0 | a5
  5283: 97 77 20                 a0 = a0 << 0x20
  5286: d4 37 07                 a0 = a0 | t1
  5289: 6f 77                    a0 = reverse a0
  5291: 7b a7                    u64 [a3] = a0
  5293: 51 05 10                 jump @450 if s0 == 0
      :                          @448
  5296: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5299: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  5302: 64 26                    s1 = t0
  5304: 54 18 f7 9b              jump @445 if a1 <=u 4294967287
      :                          @449
  5308: 00                       trap
      :                          @450
  5309: 33 09 01                 a2 = 0x1
  5312: 82 18 30                 a1 = u64 [sp + 0x30]
  5315: 82 1b 18                 a4 = u64 [sp + 0x18]
  5318: ae 29 33                 jump @457 if a2 >=u t0
      :                          @451
  5321: c8 b8 08                 a1 = a1 + a4
  5324: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  5327: 33 09 01                 a2 = 0x1
  5330: 01                       fallthrough
      :                          @452
  5331: 82 87                    a0 = u64 [a1]
  5333: 52 07 21                 jump @456 if a0 != 0
      :                          @453
  5336: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  5339: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  5342: ac 29 f5                 jump @452 if a2 <u t0
      :                          @454
  5345: 28 18                    jump @457
      :                          @455
  5347: 82 17 38                 a0 = u64 [sp + 0x38]
  5350: 82 18 10                 a1 = u64 [sp + 0x10]
  5353: 7b 78                    u64 [a0] = a1
  5355: 7b 7b 08                 u64 [a0 + 0x8] = a4
  5358: 82 18 20                 a1 = u64 [sp + 0x20]
  5361: 7b 78 10                 u64 [a0 + 0x10] = a1
  5364: 28 14                    jump @458
      :                          @456
  5366: 64 29                    a2 = t0
  5368: 01                       fallthrough
      :                          @457
  5369: 82 17 38                 a0 = u64 [sp + 0x38]
  5372: 82 18 10                 a1 = u64 [sp + 0x10]
  5375: 7b 78                    u64 [a0] = a1
  5377: 7b 7b 08                 u64 [a0 + 0x8] = a4
  5380: 7b 79 10                 u64 [a0 + 0x10] = a2
  5383: 01                       fallthrough
      :                          @458
  5384: 82 10 60                 ra = u64 [sp + 0x60]
  5387: 82 15 58                 s0 = u64 [sp + 0x58]
  5390: 82 16 50                 s1 = u64 [sp + 0x50]
  5393: 95 11 68                 sp = sp + 0x68
  5396: 32 00                    ret
      :                          @459
  5398: 00                       trap
      :                          @460
  5399: 00                       trap
      :                          @461
  5400: 00                       trap
      :                          @462
  5401: 00                       trap
      :                          @463
  5402: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5406: 7b 10 80 00              u64 [sp + 0x80] = ra
  5410: 7b 15 78                 u64 [sp + 0x78] = s0
  5413: 7b 16 70                 u64 [sp + 0x70] = s1
  5416: 82 16 88 00              s1 = u64 [sp + 0x88]
  5420: 7b 1c 20                 u64 [sp + 0x20] = a5
  5423: 7b 1b 60                 u64 [sp + 0x60] = a4
  5426: 7b 1a 10                 u64 [sp + 0x10] = a3
  5429: 7b 19 40                 u64 [sp + 0x40] = a2
  5432: 51 06 2a 02              jump @507 if s1 == 0
      :                          @464
  5436: 7b 16 68                 u64 [sp + 0x68] = s1
  5439: 97 65 03                 s0 = s1 << 0x3
  5442: 33 03 00 10              t1 = 0x1000
  5446: 33 02 80 00 03           t0 = 0x30080
  5451: c8 32 00                 ra = t0 + t1
  5454: 33 04 f8 0f              t2 = 0xff8
  5458: 01                       fallthrough
      :                          @465
  5459: 82 0b                    a4 = u64 [ra]
  5461: c8 5b 0c                 a5 = a4 + s0
  5464: ac bc 6d eb              jump @24 if a5 <u a4
      :                          @466
  5468: ac c4 69 eb              jump @24 if t2 <u a5
      :                          @467
  5472: c9 c2 06                 s1 = t0 - a5
  5475: c8 36 0a                 a3 = s1 + t1
  5478: 84 a6 07                 s1 = a3 & 0x7
  5481: c8 6c 0c                 a5 = a5 + s1
  5484: 7b 15 28                 u64 [sp + 0x28] = s0
  5487: 01                       fallthrough
      :                          @468
  5488: 82 09                    a2 = u64 [ra]
  5490: ab b9 06                 jump @470 if a2 != a4
      :                          @469
  5493: 7b 0c                    u64 [ra] = a5
  5495: 01                       fallthrough
      :                          @470
  5496: 82 15 28                 s0 = u64 [sp + 0x28]
  5499: ab b9 d8                 jump @465 if a2 != a4
      :                          @471
  5502: 7b 18 38                 u64 [sp + 0x38] = a1
  5505: 7b 17                    u64 [sp] = a0
  5507: c9 6a 06                 s1 = a3 - s1
  5510: 64 67                    a0 = s1
  5512: 33 08                    a1 = 0
  5514: 64 59                    a2 = s0
  5516: 50 10 3e ee 76           ra = 62, jump @1942
      :                          @472 [@dyn 31]
  5521: 7b 16 58                 u64 [sp + 0x58] = s1
  5524: 49 06 01                 u64 [s1 + 0] = 0x1
  5527: 82 18 68                 a1 = u64 [sp + 0x68]
  5530: 82 15 20                 s0 = u64 [sp + 0x20]
  5533: 82 17 10                 a0 = u64 [sp + 0x10]
  5536: 82 19 60                 a2 = u64 [sp + 0x60]
  5539: 51 09 9f 01              jump @503 if a2 == 0
      :                          @473
  5543: c8 79 09                 a2 = a2 + a0
  5546: 7b 19 08                 u64 [sp + 0x8] = a2
  5549: 28 0c                    jump @475
      :                          @474
  5551: 82 17 10                 a0 = u64 [sp + 0x10]
  5554: 82 19 08                 a2 = u64 [sp + 0x8]
  5557: aa 97 8d 01              jump @503 if a0 == a2
      :                          @475
  5561: 7c 79                    a2 = u8 [a0]
  5563: 7b 19 18                 u64 [sp + 0x18] = a2
  5566: 95 77 01                 a0 = a0 + 0x1
  5569: 7b 17 10                 u64 [sp + 0x10] = a0
  5572: 49 11 30 80 00           u64 [sp + 48] = 0x80
  5577: 28 2e                    jump @479
      :                          @476
  5579: 82 17 58                 a0 = u64 [sp + 0x58]
  5582: 82 15 20                 s0 = u64 [sp + 0x20]
  5585: 64 58                    a1 = s0
  5587: 82 16 28                 s1 = u64 [sp + 0x28]
  5590: 64 69                    a2 = s1
  5592: 50 10 40 5b 74           ra = 64, jump @1890
      :                          @477 [@dyn 32]
  5597: 64 57                    a0 = s0
  5599: 33 08                    a1 = 0
  5601: 64 69                    a2 = s1
  5603: 50 10 42 97 76           ra = 66, jump @1942
      :                          @478 [@dyn 33]
  5608: 82 17 30                 a0 = u64 [sp + 0x30]
  5611: 98 77 01                 a0 = a0 >> 0x1
  5614: 82 18 68                 a1 = u64 [sp + 0x68]
  5617: 7b 17 30                 u64 [sp + 0x30] = a0
  5620: 51 07 bb                 jump @474 if a0 == 0
      :                          @479
  5623: 33 07                    a0 = 0
  5625: 64 54                    t2 = s0
  5627: 64 80                    ra = a1
  5629: 28 0e                    jump @481
      :                          @480
  5631: 95 00 ff                 ra = ra + 0xffffffffffffffff
  5634: 95 44 08                 t2 = t2 + 0x8
  5637: 82 17 60                 a0 = u64 [sp + 0x60]
  5640: aa 87 60                 jump @487 if a0 == a1
      :                          @481
  5643: 33 06                    s1 = 0
  5645: 33 0a                    a3 = 0
  5647: 64 79                    a2 = a0
  5649: 33 07 01                 a0 = 0x1
  5652: e4 70 0c                 a5 = maxu(ra, a0)
  5655: c8 79 07                 a0 = a2 + a0
  5658: 7b 17 60                 u64 [sp + 0x60] = a0
  5661: 7b 19 50                 u64 [sp + 0x50] = a2
  5664: 97 99 03                 a2 = a2 << 0x3
  5667: 82 1b 58                 a4 = u64 [sp + 0x58]
  5670: c8 b9 09                 a2 = a2 + a4
  5673: 64 47                    a0 = t2
  5675: 28 32                    jump @484
      :                          @482
  5677: 82 b5                    s0 = u64 [a4]
  5679: 01                       fallthrough
      :                          @483
  5680: 82 98                    a1 = u64 [a2]
  5682: 82 72                    t0 = u64 [a0]
  5684: 95 aa 01                 a3 = a3 + 0x1
  5687: ca 58 03                 t1 = a1 * s0
  5690: d6 58 08                 a1 = a1 mulhu s0
  5693: c8 26 06                 s1 = s1 + t0
  5696: d8 26 05                 s0 = s1 <u t0
  5699: c8 58 08                 a1 = a1 + s0
  5702: c8 63 03                 t1 = t1 + s1
  5705: d8 63 06                 s1 = t1 <u s1
  5708: c8 86 06                 s1 = s1 + a1
  5711: 7b 73                    u64 [a0] = t1
  5713: 95 bb 08                 a4 = a4 + 0x8
  5716: 95 77 08                 a0 = a0 + 0x8
  5719: 82 18 68                 a1 = u64 [sp + 0x68]
  5722: aa ac a5                 jump @480 if a5 == a3
      :                          @484
  5725: aa a0 02 01              jump @504 if ra == a3
      :                          @485
  5729: ac 8a cc                 jump @482 if a3 <u a1
      :                          @486
  5732: 33 05                    s0 = 0
  5734: 28 ca                    jump @483
      :                          @487
  5736: 82 17 58                 a0 = u64 [sp + 0x58]
  5739: 82 15 20                 s0 = u64 [sp + 0x20]
  5742: 64 58                    a1 = s0
  5744: 82 16 28                 s1 = u64 [sp + 0x28]
  5747: 64 69                    a2 = s1
  5749: 50 10 44 be 73           ra = 68, jump @1890
      :                          @488 [@dyn 34]
  5754: 64 57                    a0 = s0
  5756: 33 08                    a1 = 0
  5758: 64 69                    a2 = s1
  5760: 50 10 46 fa 75           ra = 70, jump @1942
      :                          @489 [@dyn 35]
  5765: 82 17 18                 a0 = u64 [sp + 0x18]
  5768: 82 18 30                 a1 = u64 [sp + 0x30]
  5771: d2 87 07                 a0 = a0 & a1
  5774: 51 07 5a ff              jump @478 if a0 == 0
      :                          @490
  5778: 33 07                    a0 = 0
  5780: 33 06                    s1 = 0
  5782: 64 5c                    a5 = s0
  5784: 82 18 68                 a1 = u64 [sp + 0x68]
  5787: 64 8a                    a3 = a1
  5789: 28 1b                    jump @492
      :                          @491
  5791: 82 16 50                 s1 = u64 [sp + 0x50]
  5794: 95 66 01                 s1 = s1 + 0x1
  5797: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5800: 82 17 60                 a0 = u64 [sp + 0x60]
  5803: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5806: 82 1c 48                 a5 = u64 [sp + 0x48]
  5809: 95 cc 08                 a5 = a5 + 0x8
  5812: aa 86 17 ff              jump @476 if s1 == a1
      :                          @492
  5816: 7b 17 60                 u64 [sp + 0x60] = a0
  5819: 82 15 38                 s0 = u64 [sp + 0x38]
  5822: 8e 57                    a0 = s0 >u 0
  5824: 82 19 40                 a2 = u64 [sp + 0x40]
  5827: d8 96 09                 a2 = s1 <u a2
  5830: d2 97 07                 a0 = a0 & a2
  5833: 33 09 01                 a2 = 0x1
  5836: e4 9a 0b                 a4 = maxu(a3, a2)
  5839: 7b 16 50                 u64 [sp + 0x50] = s1
  5842: 7b 1c 48                 u64 [sp + 0x48] = a5
  5845: 52 07 21                 jump @497 if a0 != 0
      :                          @493
  5848: 33 06                    s1 = 0
  5850: 64 c9                    a2 = a5
  5852: 01                       fallthrough
      :                          @494
  5853: aa 7a 84 00              jump @506 if a3 == a0
      :                          @495
  5857: 82 9c                    a5 = u64 [a2]
  5859: 95 77 01                 a0 = a0 + 0x1
  5862: c8 6c 05                 s0 = a5 + s1
  5865: d8 c5 06                 s1 = s0 <u a5
  5868: 7b 95                    u64 [a2] = s0
  5870: 95 99 08                 a2 = a2 + 0x8
  5873: ab 7b ec                 jump @494 if a4 != a0
      :                          @496
  5876: 28 ab                    jump @491
      :                          @497
  5878: 33 04                    t2 = 0
  5880: 64 c9                    a2 = a5
  5882: 33 0c                    a5 = 0
  5884: 97 66 03                 s1 = s1 << 0x3
  5887: c8 65 00                 ra = s0 + s1
  5890: 82 17 58                 a0 = u64 [sp + 0x58]
  5893: 28 33                    jump @500
      :                          @498
  5895: 82 75                    s0 = u64 [a0]
  5897: 01                       fallthrough
      :                          @499
  5898: 82 06                    s1 = u64 [ra]
  5900: 82 92                    t0 = u64 [a2]
  5902: 95 cc 01                 a5 = a5 + 0x1
  5905: ca 56 03                 t1 = s1 * s0
  5908: d6 56 05                 s0 = s1 mulhu s0
  5911: c8 42 08                 a1 = t0 + t2
  5914: d8 28 06                 s1 = a1 <u t0
  5917: c8 65 05                 s0 = s0 + s1
  5920: c8 83 03                 t1 = t1 + a1
  5923: d8 83 08                 a1 = t1 <u a1
  5926: c8 85 04                 t2 = s0 + a1
  5929: 7b 93                    u64 [a2] = t1
  5931: 95 77 08                 a0 = a0 + 0x8
  5934: 95 99 08                 a2 = a2 + 0x8
  5937: 82 18 68                 a1 = u64 [sp + 0x68]
  5940: aa cb 6b ff              jump @491 if a4 == a5
      :                          @500
  5944: aa ca 28                 jump @505 if a3 == a5
      :                          @501
  5947: ac 8c cc                 jump @498 if a5 <u a1
      :                          @502
  5950: 33 05                    s0 = 0
  5952: 28 ca                    jump @499
      :                          @503
  5954: 82 17                    a0 = u64 [sp]
  5956: 7b 78                    u64 [a0] = a1
  5958: 82 19 58                 a2 = u64 [sp + 0x58]
  5961: 7b 79 08                 u64 [a0 + 0x8] = a2
  5964: 7b 78 10                 u64 [a0 + 0x10] = a1
  5967: 82 10 80 00              ra = u64 [sp + 0x80]
  5971: 82 15 78                 s0 = u64 [sp + 0x78]
  5974: 82 16 70                 s1 = u64 [sp + 0x70]
  5977: 95 11 88 00              sp = sp + 0x88
  5981: 32 00                    ret
      :                          @504
  5983: 00                       trap
      :                          @505
  5984: 00                       trap
      :                          @506
  5985: 00                       trap
      :                          @507
  5986: 00                       trap
      :                          @508
  5987: 95 11 88                 sp = sp + 0xffffffffffffff88
  5990: 7b 10 70                 u64 [sp + 0x70] = ra
  5993: 7b 15 68                 u64 [sp + 0x68] = s0
  5996: 7b 16 60                 u64 [sp + 0x60] = s1
  5999: 82 86 10                 s1 = u64 [a1 + 0x10]
  6002: 7b 1a 38                 u64 [sp + 0x38] = a3
  6005: 7b 19 40                 u64 [sp + 0x40] = a2
  6008: ae c6 76                 jump @515 if s1 >=u a5
      :                          @509
  6011: 82 85                    s0 = u64 [a1]
  6013: c9 6c 03                 t1 = a5 - s1
  6016: c9 65 05                 s0 = s0 - s1
  6019: 64 6a                    a3 = s1
  6021: ac 35 95 01              jump @536 if s0 <u t1
      :                          @510
  6025: 82 89 08                 a2 = u64 [a1 + 0x8]
  6028: 97 a5 03                 s0 = a3 << 0x3
  6031: c8 95 05                 s0 = s0 + a2
  6034: 53 13 02 4e              jump @513 if t1 <u 2
      :                          @511
  6038: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
  6041: c8 c6 02                 t0 = s1 + a5
  6044: 97 22 03                 t0 = t0 << 0x3
  6047: 7b 17 08                 u64 [sp + 0x8] = a0
  6050: 64 57                    a0 = s0
  6052: 7b 18 30                 u64 [sp + 0x30] = a1
  6055: 33 08                    a1 = 0
  6057: 64 95                    s0 = a2
  6059: 64 29                    a2 = t0
  6061: 7b 1c 10                 u64 [sp + 0x10] = a5
  6064: 64 b6                    s1 = a4
  6066: 7b 1a 20                 u64 [sp + 0x20] = a3
  6069: 7b 13 28                 u64 [sp + 0x28] = t1
  6072: 50 10 48 c2 74           ra = 72, jump @1942
      :                          @512 [@dyn 36]
  6077: 64 59                    a2 = s0
  6079: 82 18 30                 a1 = u64 [sp + 0x30]
  6082: 64 6b                    a4 = s1
  6084: 82 17 08                 a0 = u64 [sp + 0x8]
  6087: 82 1c 10                 a5 = u64 [sp + 0x10]
  6090: 82 12 28                 t0 = u64 [sp + 0x28]
  6093: 82 1a 20                 a3 = u64 [sp + 0x20]
  6096: c8 a2 02                 t0 = t0 + a3
  6099: 97 26 03                 s1 = t0 << 0x3
  6102: c8 65 05                 s0 = s0 + s1
  6105: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
  6108: 95 2a ff                 a3 = t0 + 0xffffffffffffffff
  6111: 01                       fallthrough
      :                          @513
  6112: 49 05                    u64 [s0 + 0] = 0
  6114: 95 aa 01                 a3 = a3 + 0x1
  6117: 7b 8a 10                 u64 [a1 + 0x10] = a3
  6120: 52 0a 13                 jump @517 if a3 != 0
      :                          @514
  6123: 28 2c 01                 jump @535
      :                          @515
  6126: 7b 8c 10                 u64 [a1 + 0x10] = a5
  6129: 51 0c 89 1d              jump @1067 if a5 == 0
      :                          @516
  6133: 82 89 08                 a2 = u64 [a1 + 0x8]
  6136: 64 ca                    a3 = a5
  6138: 01                       fallthrough
      :                          @517
  6139: 97 c4 03                 t2 = a5 << 0x3
  6142: c8 4b 0b                 a4 = a4 + t2
  6145: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
  6148: 7b 1a 20                 u64 [sp + 0x20] = a3
  6151: 97 ab 03                 a4 = a3 << 0x3
  6154: c8 9b 0b                 a4 = a4 + a2
  6157: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
  6160: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6163: 7b 18 28                 u64 [sp + 0x28] = a1
  6166: d2 68 08                 a1 = a1 & s1
  6169: 7b b8 f8                 u64 [a4 + 0xfffffffffffffff8] = a1
  6172: 7b 19 30                 u64 [sp + 0x30] = a2
  6175: 82 98                    a1 = u64 [a2]
  6177: 7b 18 18                 u64 [sp + 0x18] = a1
  6180: 33 09 00 10              a2 = 0x1000
  6184: 33 0a 80 00 03           a3 = 0x30080
  6189: c8 9a 00                 ra = a3 + a2
  6192: 33 03 f8 0f              t1 = 0xff8
  6196: 01                       fallthrough
      :                          @518
  6197: 82 06                    s1 = u64 [ra]
  6199: c8 46 08                 a1 = s1 + t2
  6202: ac 68 8b e8              jump @24 if a1 <u s1
      :                          @519
  6206: ac 83 87 e8              jump @24 if t1 <u a1
      :                          @520
  6210: c9 8a 0b                 a4 = a3 - a1
  6213: c8 9b 0b                 a4 = a4 + a2
  6216: 84 b5 07                 s0 = a4 & 0x7
  6219: c8 58 08                 a1 = a1 + s0
  6222: 01                       fallthrough
      :                          @521
  6223: 82 02                    t0 = u64 [ra]
  6225: ab 62 06                 jump @523 if t0 != s1
      :                          @522
  6228: 7b 08                    u64 [ra] = a1
  6230: 01                       fallthrough
      :                          @523
  6231: 33 0a 80 00 03           a3 = 0x30080
  6236: ab 62 d9                 jump @518 if t0 != s1
      :                          @524
  6239: 7b 17 08                 u64 [sp + 0x8] = a0
  6242: c9 5b 06                 s1 = a4 - s0
  6245: 64 45                    s0 = t2
  6247: 64 67                    a0 = s1
  6249: 33 08                    a1 = 0
  6251: 64 49                    a2 = t2
  6253: 7b 1c 10                 u64 [sp + 0x10] = a5
  6256: 50 10 4a 0a 74           ra = 74, jump @1942
      :                          @525 [@dyn 37]
  6261: 82 1b 38                 a4 = u64 [sp + 0x38]
  6264: d8 b5 07                 a0 = s0 <u a4
  6267: 82 18 18                 a1 = u64 [sp + 0x18]
  6270: d2 87 07                 a0 = a0 & a1
  6273: c9 5b 08                 a1 = a4 - s0
  6276: 93 78                    a1 = 0 if a0 == 0
  6278: 82 1a 40                 a3 = u64 [sp + 0x40]
  6281: c8 8a 0a                 a3 = a3 + a1
  6284: 7b 15 40                 u64 [sp + 0x40] = s0
  6287: db 75 0b                 a4 = s0 if a0 != 0
  6290: 95 17 48                 a0 = sp + 0x48
  6293: 82 18 10                 a1 = u64 [sp + 0x10]
  6296: 7b 18                    u64 [sp] = a1
  6298: 82 18 30                 a1 = u64 [sp + 0x30]
  6301: 82 19 20                 a2 = u64 [sp + 0x20]
  6304: 64 6c                    a5 = s1
  6306: 50 10 4c 78 fc           ra = 76, jump @463
      :                          @526 [@dyn 38]
  6311: 82 17 58                 a0 = u64 [sp + 0x58]
  6314: 51 07 d0 1c              jump @1067 if a0 == 0
      :                          @527
  6318: 82 18 50                 a1 = u64 [sp + 0x50]
  6321: 97 77 03                 a0 = a0 << 0x3
  6324: c8 87 07                 a0 = a0 + a1
  6327: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  6330: 51 07 c0 1c              jump @1067 if a0 == 0
      :                          @528
  6334: 82 78                    a1 = u64 [a0]
  6336: 82 19 28                 a2 = u64 [sp + 0x28]
  6339: d2 98 08                 a1 = a1 & a2
  6342: 82 19 48                 a2 = u64 [sp + 0x48]
  6345: 82 1a 50                 a3 = u64 [sp + 0x50]
  6348: 7b 78                    u64 [a0] = a1
  6350: 82 17 58                 a0 = u64 [sp + 0x58]
  6353: 82 18 08                 a1 = u64 [sp + 0x8]
  6356: 7b 89                    u64 [a1] = a2
  6358: 7b 8a 08                 u64 [a1 + 0x8] = a3
  6361: 33 09 00 02              a2 = 0x200
  6365: 7b 87 10                 u64 [a1 + 0x10] = a0
  6368: 82 17 40                 a0 = u64 [sp + 0x40]
  6371: 82 18 10                 a1 = u64 [sp + 0x10]
  6374: ac 89 23                 jump @534 if a2 <u a1
      :                          @529
  6377: 33 09 80 00 03           a2 = 0x30080
  6382: 95 98 00 10              a1 = a2 + 0x1000
  6386: 01                       fallthrough
      :                          @530
  6387: 82 89                    a2 = u64 [a1]
  6389: c9 98 0a                 a3 = a1 - a2
  6392: ab 6a 11                 jump @534 if a3 != s1
      :                          @531
  6395: c9 79 0a                 a3 = a2 - a0
  6398: 01                       fallthrough
      :                          @532
  6399: 82 8b                    a4 = u64 [a1]
  6401: ab 9b f2                 jump @530 if a4 != a2
      :                          @533
  6404: 7b 8a                    u64 [a1] = a3
  6406: 33 0c                    a5 = 0
  6408: 01                       fallthrough
      :                          @534
  6409: 82 10 70                 ra = u64 [sp + 0x70]
  6412: 82 15 68                 s0 = u64 [sp + 0x68]
  6415: 82 16 60                 s1 = u64 [sp + 0x60]
  6418: 95 11 78                 sp = sp + 0x78
  6421: 32 00                    ret
      :                          @535
  6423: 28 63 1c                 jump @1067
      :                          @536
  6426: 7b 17 08                 u64 [sp + 0x8] = a0
  6429: 64 87                    a0 = a1
  6431: 7b 18 30                 u64 [sp + 0x30] = a1
  6434: 64 68                    a1 = s1
  6436: 64 39                    a2 = t1
  6438: 7b 1c 10                 u64 [sp + 0x10] = a5
  6441: 7b 1b 28                 u64 [sp + 0x28] = a4
  6444: 64 35                    s0 = t1
  6446: 50 10 4e 21 09           ra = 78, jump @667
      :                          @537 [@dyn 39]
  6451: 64 53                    t1 = s0
  6453: 82 18 30                 a1 = u64 [sp + 0x30]
  6456: 82 1b 28                 a4 = u64 [sp + 0x28]
  6459: 82 17 08                 a0 = u64 [sp + 0x8]
  6462: 82 1c 10                 a5 = u64 [sp + 0x10]
  6465: 82 8a 10                 a3 = u64 [a1 + 0x10]
  6468: 28 45 fe                 jump @510
      :                          @538
  6471: 95 11 78 fe              sp = sp + 0xfffffffffffffe78
  6475: 7b 10 80 01              u64 [sp + 0x180] = ra
  6479: 7b 15 78 01              u64 [sp + 0x178] = s0
  6483: 7b 16 70 01              u64 [sp + 0x170] = s1
  6487: 82 b0 10                 ra = u64 [a4 + 0x10]
  6490: 7b 1a 50 01              u64 [sp + 0x150] = a3
  6494: 7b 19 18 01              u64 [sp + 0x118] = a2
  6498: 7b 17 10 01              u64 [sp + 0x110] = a0
  6502: 51 00 df 08              jump @657 if ra == 0
      :                          @539
  6506: 64 87                    a0 = a1
  6508: 82 b9 08                 a2 = u64 [a4 + 0x8]
  6511: 7b 19 28 01              u64 [sp + 0x128] = a2
  6515: 82 99                    a2 = u64 [a2]
  6517: 33 0c 02                 a5 = 0x2
  6520: 33 02 01                 t0 = 0x1
  6523: 33 03 ff                 t1 = 0xffffffffffffffff
  6526: 33 04 40                 t2 = 0x40
  6529: 33 0a 01                 a3 = 0x1
  6532: 01                       fallthrough
      :                          @540
  6533: cf c3 05                 s0 = t1 << a5
  6536: ca 9a 06                 s1 = a3 * a2
  6539: e0 56 05                 s0 = s1 & ~s0
  6542: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
  6545: cf 62 06                 s1 = t0 << s1
  6548: d8 65 05                 s0 = s0 <u s1
  6551: 94 56                    s1 = 0 if s0 != 0
  6553: 95 cc 01                 a5 = a5 + 0x1
  6556: c8 6a 0a                 a3 = a3 + s1
  6559: ab 4c e6                 jump @540 if a5 != t2
      :                          @541
  6562: ca 9a 09                 a2 = a3 * a2
  6565: 98 99 3f                 a2 = a2 >> 0x3f
  6568: 97 99 3f                 a2 = a2 << 0x3f
  6571: d3 a9 09                 a2 = a2 ^ a3
  6574: 9a 99                    a2 = -a2
  6576: 7b 19 20 01              u64 [sp + 0x120] = a2
  6580: 7b 10 30 01              u64 [sp + 0x130] = ra
  6584: 97 04 03                 t2 = ra << 0x3
  6587: 33 08 00 10              a1 = 0x1000
  6591: 33 0c 80 00 03           a5 = 0x30080
  6596: c8 8c 0c                 a5 = a5 + a1
  6599: 33 03 f8 0f              t1 = 0xff8
  6603: 01                       fallthrough
      :                          @542
  6604: 82 c0                    ra = u64 [a5]
  6606: c8 40 09                 a2 = ra + t2
  6609: ac 09 f4 e6              jump @24 if a2 <u ra
      :                          @543
  6613: ac 93 f0 e6              jump @24 if t1 <u a2
      :                          @544
  6617: 33 06 80 00 03           s1 = 0x30080
  6622: c9 96 06                 s1 = s1 - a2
  6625: c8 86 06                 s1 = s1 + a1
  6628: 84 65 07                 s0 = s1 & 0x7
  6631: 64 52                    t0 = s0
  6633: c8 59 09                 a2 = a2 + s0
  6636: 01                       fallthrough
      :                          @545
  6637: 82 ca                    a3 = u64 [a5]
  6639: ab 0a dd                 jump @542 if a3 != ra
      :                          @546
  6642: 7b c9                    u64 [a5] = a2
  6644: 7b 10 f0 00              u64 [sp + 0xf0] = ra
  6648: 7b 17 48 01              u64 [sp + 0x148] = a0
  6652: 7b 1b 40 01              u64 [sp + 0x140] = a4
  6656: 64 25                    s0 = t0
  6658: c9 26 07                 a0 = s1 - t0
  6661: 7b 17 08 01              u64 [sp + 0x108] = a0
  6665: 33 08                    a1 = 0
  6667: 7b 14 a0 00              u64 [sp + 0xa0] = t2
  6671: 64 49                    a2 = t2
  6673: 50 10 50 69 72           ra = 80, jump @1942
      :                          @547 [@dyn 40]
  6678: 82 18 30 01              a1 = u64 [sp + 0x130]
  6682: 7b 15 e8 00              u64 [sp + 0xe8] = s0
  6686: 52 18 01 25              jump @551 if a1 != 1
      :                          @548
  6690: 82 17 28 01              a0 = u64 [sp + 0x128]
  6694: 82 79                    a2 = u64 [a0]
  6696: 51 09 24 08              jump @664 if a2 == 0
      :                          @549
  6700: 33 08 01                 a1 = 0x1
  6703: 33 07                    a0 = 0
  6705: 50 10 52 cf 6f           ra = 82, jump @1888
      :                          @550 [@dyn 41]
  6710: 82 18 08 01              a1 = u64 [sp + 0x108]
  6714: 7b 87                    u64 [a1] = a0
  6716: 82 18 48 01              a1 = u64 [sp + 0x148]
  6720: 28 8c 00                 jump @558
      :                          @551
  6723: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  6727: 82 18 28 01              a1 = u64 [sp + 0x128]
  6731: c8 87 07                 a0 = a0 + a1
  6734: 82 79 f0                 a2 = u64 [a0 + 0xfffffffffffffff0]
  6737: 82 7a f8                 a3 = u64 [a0 + 0xfffffffffffffff8]
  6740: d4 a9 07                 a0 = a2 | a3
  6743: 51 07 f5 07              jump @664 if a0 == 0
      :                          @552
  6747: 33 07 ff                 a0 = 0xffffffffffffffff
  6750: 33 08 ff                 a1 = 0xffffffffffffffff
  6753: 50 10 54 6d 6f           ra = 84, jump @1886
      :                          @553 [@dyn 42]
  6758: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  6762: c8 58 08                 a1 = a1 + s0
  6765: 33 0a 80 00 03           a3 = 0x30080
  6770: 95 a9 00 10              a2 = a3 + 0x1000
  6774: c9 89 04                 t2 = a2 - a1
  6777: 33 03 01                 t1 = 0x1
  6780: 82 18 48 01              a1 = u64 [sp + 0x148]
  6784: 01                       fallthrough
      :                          @554
  6785: 33 0a                    a3 = 0
  6787: 33 00                    ra = 0
  6789: 82 1b 28 01              a4 = u64 [sp + 0x128]
  6793: 82 16 08 01              s1 = u64 [sp + 0x108]
  6797: 01                       fallthrough
      :                          @555
  6798: 82 b5                    s0 = u64 [a4]
  6800: d6 75 09                 a2 = s0 mulhu a0
  6803: ca 75 05                 s0 = s0 * a0
  6806: c8 a5 0c                 a5 = s0 + a3
  6809: d8 5c 0a                 a3 = a5 <u s0
  6812: c8 9a 0a                 a3 = a3 + a2
  6815: 9a c9                    a2 = -a5
  6817: 8e cc                    a5 = a5 >u 0
  6819: 84 05 01                 s0 = ra & 0x1
  6822: c9 59 02                 t0 = a2 - s0
  6825: d8 59 09                 a2 = a2 <u s0
  6828: d4 9c 00                 ra = a5 | a2
  6831: 7b 62                    u64 [s1] = t0
  6833: 95 66 08                 s1 = s1 + 0x8
  6836: 95 bb 08                 a4 = a4 + 0x8
  6839: ab 46 d7                 jump @555 if s1 != t2
      :                          @556
  6842: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6845: ac a3 c4                 jump @554 if t1 <u a3
      :                          @557
  6848: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6851: 88 a9 01                 a2 = a3 <u 0x1
  6854: d2 90 09                 a2 = ra & a2
  6857: 52 09 b8                 jump @554 if a2 != 0
      :                          @558
  6860: 64 87                    a0 = a1
  6862: 82 18 40 01              a1 = u64 [sp + 0x140]
  6866: 50 10 56 03 08           ra = 86, jump @678
      :                          @559 [@dyn 43]
  6871: 82 18 30 01              a1 = u64 [sp + 0x130]
  6875: 98 87 3b                 a0 = a1 >> 0x3b
  6878: 52 07 6f 07              jump @665 if a0 != 0
      :                          @560
  6882: 97 83 01                 t1 = a1 << 0x1
  6885: 97 89 04                 a2 = a1 << 0x4
  6888: 33 02 00 10              t0 = 0x1000
  6892: 33 08 80 00 03           a1 = 0x30080
  6897: c8 28 08                 a1 = a1 + t0
  6900: 33 04 f8 0f              t2 = 0xff8
  6904: 01                       fallthrough
      :                          @561
  6905: 82 8a                    a3 = u64 [a1]
  6907: c8 9a 0b                 a4 = a3 + a2
  6910: ac ab 5f                 jump @567 if a4 <u a3
      :                          @562
  6913: ac b4 5c                 jump @567 if t2 <u a4
      :                          @563
  6916: 33 07 80 00 03           a0 = 0x30080
  6921: c9 b7 07                 a0 = a0 - a4
  6924: c8 27 07                 a0 = a0 + t0
  6927: 84 7c 07                 a5 = a0 & 0x7
  6930: c8 cb 0b                 a4 = a4 + a5
  6933: 01                       fallthrough
      :                          @564
  6934: 82 85                    s0 = u64 [a1]
  6936: ab a5 e1                 jump @561 if s0 != a3
      :                          @565
  6939: 7b 8b                    u64 [a1] = a4
  6941: c9 c7 06                 s1 = a0 - a5
  6944: 64 67                    a0 = s1
  6946: 33 08                    a1 = 0
  6948: 7b 19 c8 00              u64 [sp + 0xc8] = a2
  6952: 7b 13 d8 00              u64 [sp + 0xd8] = t1
  6956: 50 10 58 4e 71           ra = 88, jump @1942
      :                          @566 [@dyn 44]
  6961: 82 1c d8 00              a5 = u64 [sp + 0xd8]
  6965: 82 1b 30 01              a4 = u64 [sp + 0x130]
  6969: 33 08                    a1 = 0
  6971: 33 09                    a2 = 0
  6973: 7b 1c 58 01              u64 [sp + 0x158] = a5
  6977: 82 17 48 01              a0 = u64 [sp + 0x148]
  6981: 82 7a 08                 a3 = u64 [a0 + 0x8]
  6984: 7b 1a e0 00              u64 [sp + 0xe0] = a3
  6988: 82 77 10                 a0 = u64 [a0 + 0x10]
  6991: 7b 17 48 01              u64 [sp + 0x148] = a0
  6995: 7b 16 60 01              u64 [sp + 0x160] = s1
  6999: 7b 1c 68 01              u64 [sp + 0x168] = a5
  7003: 28 23                    jump @569
      :                          @567
  7005: 00                       trap
      :                          @568
  7006: 82 19 f8 00              a2 = u64 [sp + 0xf8]
  7010: 95 99 01                 a2 = a2 + 0x1
  7013: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  7016: 82 18 38 01              a1 = u64 [sp + 0x138]
  7020: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7023: 82 16 00 01              s1 = u64 [sp + 0x100]
  7027: 95 66 08                 s1 = s1 + 0x8
  7030: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  7034: aa 79 90 00              jump @580 if a2 == a0
      :                          @569
  7038: 7b 18 38 01              u64 [sp + 0x138] = a1
  7042: 33 07 01                 a0 = 0x1
  7045: e4 7c 0a                 a3 = maxu(a5, a0)
  7048: 7b 16 00 01              u64 [sp + 0x100] = s1
  7052: 7b 19 f8 00              u64 [sp + 0xf8] = a2
  7056: ae b9 59                 jump @576 if a2 >=u a4
      :                          @570
  7059: 33 08                    a1 = 0
  7061: 33 07                    a0 = 0
  7063: 97 99 03                 a2 = a2 << 0x3
  7066: 82 1b 08 01              a4 = u64 [sp + 0x108]
  7070: c8 b9 09                 a2 = a2 + a4
  7073: 64 62                    t0 = s1
  7075: 82 13 e0 00              t1 = u64 [sp + 0xe0]
  7079: 28 33                    jump @573
      :                          @571
  7081: 82 36                    s1 = u64 [t1]
  7083: 01                       fallthrough
      :                          @572
  7084: 82 95                    s0 = u64 [a2]
  7086: 82 24                    t2 = u64 [t0]
  7088: 95 77 01                 a0 = a0 + 0x1
  7091: ca 65 00                 ra = s0 * s1
  7094: d6 65 05                 s0 = s0 mulhu s1
  7097: c8 48 08                 a1 = a1 + t2
  7100: d8 48 06                 s1 = a1 <u t2
  7103: c8 65 05                 s0 = s0 + s1
  7106: c8 80 00                 ra = ra + a1
  7109: d8 80 08                 a1 = ra <u a1
  7112: c8 58 08                 a1 = a1 + s0
  7115: 7b 20                    u64 [t0] = ra
  7117: 95 33 08                 t1 = t1 + 0x8
  7120: 95 22 08                 t0 = t0 + 0x8
  7123: 82 1b 30 01              a4 = u64 [sp + 0x130]
  7127: aa 7a 87                 jump @568 if a3 == a0
      :                          @573
  7130: aa 7c 6c 06              jump @658 if a5 == a0
      :                          @574
  7134: 82 1b 48 01              a4 = u64 [sp + 0x148]
  7138: ac b7 c7                 jump @571 if a0 <u a4
      :                          @575
  7141: 33 06                    s1 = 0
  7143: 28 c5                    jump @572
      :                          @576
  7145: 33 05                    s0 = 0
  7147: 33 07                    a0 = 0
  7149: 64 69                    a2 = s1
  7151: 01                       fallthrough
      :                          @577
  7152: aa 7c 56 06              jump @658 if a5 == a0
      :                          @578
  7156: 82 96                    s1 = u64 [a2]
  7158: 95 77 01                 a0 = a0 + 0x1
  7161: c8 56 08                 a1 = s1 + s0
  7164: d8 68 05                 s0 = a1 <u s1
  7167: 7b 98                    u64 [a2] = a1
  7169: 95 99 08                 a2 = a2 + 0x8
  7172: ab 7a ec                 jump @577 if a3 != a0
      :                          @579
  7175: 28 57 ff                 jump @568
      :                          @580
  7178: 95 17 58 01              a0 = sp + 0x158
  7182: 82 18 40 01              a1 = u64 [sp + 0x140]
  7186: 50 10 5a c3 06           ra = 90, jump @678
      :                          @581 [@dyn 45]
  7191: 82 12 58 01              t0 = u64 [sp + 0x158]
  7195: 82 17 60 01              a0 = u64 [sp + 0x160]
  7199: 7b 17 48                 u64 [sp + 0x48] = a0
  7202: 82 17 68 01              a0 = u64 [sp + 0x168]
  7206: 7b 17 40                 u64 [sp + 0x40] = a0
  7209: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  7213: 95 73 01                 t1 = a0 + 0x1
  7216: 97 37 03                 a0 = t1 << 0x3
  7219: 33 04 00 10              t2 = 0x1000
  7223: 33 08 80 00 03           a1 = 0x30080
  7228: c8 48 09                 a2 = a1 + t2
  7231: 33 00 f8 0f              ra = 0xff8
  7235: 01                       fallthrough
      :                          @582
  7236: 82 95                    s0 = u64 [a2]
  7238: c8 75 0a                 a3 = s0 + a0
  7241: ac 5a 7c e4              jump @24 if a3 <u s0
      :                          @583
  7245: ac a0 78 e4              jump @24 if ra <u a3
      :                          @584
  7249: 33 0b 80 00 03           a4 = 0x30080
  7254: c9 ab 0b                 a4 = a4 - a3
  7257: c8 4b 08                 a1 = a4 + t2
  7260: 84 8b 07                 a4 = a1 & 0x7
  7263: c8 ba 0a                 a3 = a3 + a4
  7266: 7b 17 90 00              u64 [sp + 0x90] = a0
  7270: 01                       fallthrough
      :                          @585
  7271: 82 9c                    a5 = u64 [a2]
  7273: ab 5c 08                 jump @587 if a5 != s0
      :                          @586
  7276: 7b 9a                    u64 [a2] = a3
  7278: 33 06                    s1 = 0
  7280: 01                       fallthrough
      :                          @587
  7281: 82 17 90 00              a0 = u64 [sp + 0x90]
  7285: ab 5c cf                 jump @582 if a5 != s0
      :                          @588
  7288: 7b 15 48 01              u64 [sp + 0x148] = s0
  7292: 7b 12 18                 u64 [sp + 0x18] = t0
  7295: 64 79                    a2 = a0
  7297: 64 b5                    s0 = a4
  7299: c9 b8 06                 s1 = a1 - a4
  7302: 64 67                    a0 = s1
  7304: 33 08                    a1 = 0
  7306: 7b 13 40 01              u64 [sp + 0x140] = t1
  7310: 50 10 5c ec 6f           ra = 92, jump @1942
      :                          @589 [@dyn 46]
  7315: 82 1c 40 01              a5 = u64 [sp + 0x140]
  7319: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  7323: 82 10 30 01              ra = u64 [sp + 0x130]
  7327: 95 07 02                 a0 = ra + 0x2
  7330: 7b 17 28                 u64 [sp + 0x28] = a0
  7333: 82 17 18 01              a0 = u64 [sp + 0x118]
  7337: 7b 16 d0 00              u64 [sp + 0xd0] = s1
  7341: 82 18 50 01              a1 = u64 [sp + 0x150]
  7345: 51 08 ba 04              jump @639 if a1 == 0
      :                          @590
  7349: 64 63                    t1 = s1
  7351: 82 18 50 01              a1 = u64 [sp + 0x150]
  7355: c8 87 07                 a0 = a0 + a1
  7358: 7b 17 20                 u64 [sp + 0x20] = a0
  7361: e4 0c 07                 a0 = maxu(a5, ra)
  7364: c9 07 07                 a0 = a0 - ra
  7367: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  7371: 95 08 01                 a1 = ra + 0x1
  7374: c9 8c 07                 a0 = a5 - a1
  7377: 7b 18 70                 u64 [sp + 0x70] = a1
  7380: 97 88 03                 a1 = a1 << 0x3
  7383: c8 68 08                 a1 = a1 + s1
  7386: 7b 18 60                 u64 [sp + 0x60] = a1
  7389: 97 77 03                 a0 = a0 << 0x3
  7392: 7b 17 58                 u64 [sp + 0x58] = a0
  7395: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  7399: 82 18 e8 00              a1 = u64 [sp + 0xe8]
  7403: c8 87 07                 a0 = a0 + a1
  7406: 82 14 a0 00              t2 = u64 [sp + 0xa0]
  7410: 33 06 80 00 03           s1 = 0x30080
  7415: c9 46 09                 a2 = s1 - t2
  7418: c9 79 07                 a0 = a2 - a0
  7421: 95 77 08 10              a0 = a0 + 0x1008
  7425: 7b 17 80 00              u64 [sp + 0x80] = a0
  7429: e4 02 07                 a0 = maxu(t0, ra)
  7432: c9 07 07                 a0 = a0 - ra
  7435: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  7439: 82 18 48 01              a1 = u64 [sp + 0x148]
  7443: c8 58 08                 a1 = a1 + s0
  7446: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  7450: c9 76 0b                 a4 = s1 - a0
  7453: 95 bb 00 10              a4 = a4 + 0x1000
  7457: 95 99 00 10              a2 = a2 + 0x1000
  7461: 82 15 08 01              s0 = u64 [sp + 0x108]
  7465: 95 0a ff                 a3 = ra + 0xffffffffffffffff
  7468: c9 8b 0b                 a4 = a4 - a1
  7471: 7b 1b 78                 u64 [sp + 0x78] = a4
  7474: c9 89 09                 a2 = a2 - a1
  7477: 7b 19 68                 u64 [sp + 0x68] = a2
  7480: 95 77 08                 a0 = a0 + 0x8
  7483: 7b 17 38                 u64 [sp + 0x38] = a0
  7486: 98 77 03                 a0 = a0 >> 0x3
  7489: 7b 1a c8 00              u64 [sp + 0xc8] = a3
  7493: e6 a7 07                 a0 = minu(a0, a3)
  7496: 97 77 03                 a0 = a0 << 0x3
  7499: 82 19 28 01              a2 = u64 [sp + 0x128]
  7503: c8 97 07                 a0 = a0 + a2
  7506: 95 77 08                 a0 = a0 + 0x8
  7509: 7b 17 50                 u64 [sp + 0x50] = a0
  7512: 82 17 18 01              a0 = u64 [sp + 0x118]
  7516: c8 43 08                 a1 = t1 + t2
  7519: 7b 18 30                 u64 [sp + 0x30] = a1
  7522: 28 0d                    jump @592
      :                          @591
  7524: 82 17 18 01              a0 = u64 [sp + 0x118]
  7528: 82 18 20                 a1 = u64 [sp + 0x20]
  7531: aa 87 00 04              jump @639 if a0 == a1
      :                          @592
  7535: 7c 78                    a1 = u8 [a0]
  7537: 7b 18 88 00              u64 [sp + 0x88] = a1
  7541: 95 77 01                 a0 = a0 + 0x1
  7544: 7b 17 18 01              u64 [sp + 0x118] = a0
  7548: 49 21 98 00 80 00        u64 [sp + 152] = 0x80
  7554: 28 20                    jump @594
      :                          @593
  7556: 82 17 98 00              a0 = u64 [sp + 0x98]
  7560: 98 77 01                 a0 = a0 >> 0x1
  7563: 82 10 30 01              ra = u64 [sp + 0x130]
  7567: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  7571: 82 1c 40 01              a5 = u64 [sp + 0x140]
  7575: 82 13 d0 00              t1 = u64 [sp + 0xd0]
  7579: 7b 17 98 00              u64 [sp + 0x98] = a0
  7583: 51 07 c5                 jump @591 if a0 == 0
      :                          @594
  7586: 33 0a                    a3 = 0
  7588: 33 0b 01                 a4 = 0x1
  7591: 82 16 78                 s1 = u64 [sp + 0x78]
  7594: 64 24                    t2 = t0
  7596: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  7600: 7b 17 00 01              u64 [sp + 0x100] = a0
  7604: 82 17 80 00              a0 = u64 [sp + 0x80]
  7608: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  7612: 01                       fallthrough
      :                          @595
  7613: 7b 1b f0 00              u64 [sp + 0xf0] = a4
  7617: 97 a7 01                 a0 = a3 << 0x1
  7620: ac 72 83 04              jump @659 if t0 <u a0
      :                          @596
  7624: 64 2b                    a4 = t0
  7626: 97 77 03                 a0 = a0 << 0x3
  7629: 97 a8 03                 a1 = a3 << 0x3
  7632: c8 58 08                 a1 = a1 + s0
  7635: 82 82                    t0 = u64 [a1]
  7637: c8 37 07                 a0 = a0 + t1
  7640: 82 79                    a2 = u64 [a0]
  7642: 7b 1a e8 00              u64 [sp + 0xe8] = a3
  7646: 95 a8 01                 a1 = a3 + 0x1
  7649: d6 22 05                 s0 = t0 mulhu t0
  7652: 7b 12 38 01              u64 [sp + 0x138] = t0
  7656: ca 22 0a                 a3 = t0 * t0
  7659: c8 a9 09                 a2 = a2 + a3
  7662: d8 a9 0a                 a3 = a2 <u a3
  7665: c8 a5 05                 s0 = s0 + a3
  7668: 7b 79                    u64 [a0] = a2
  7670: 7b 18 e0 00              u64 [sp + 0xe0] = a1
  7674: ae 08 c2 00              jump @601 if a1 >=u ra
      :                          @597
  7678: 7b 15 48 01              u64 [sp + 0x148] = s0
  7682: 49 21 50 01              u64 [sp + 336] = 0
  7686: 7b 16 b0 00              u64 [sp + 0xb0] = s1
  7690: 64 6a                    a3 = s1
  7692: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  7696: 7b 14 a8 00              u64 [sp + 0xa8] = t2
  7700: 64 40                    ra = t2
  7702: 82 14 00 01              t2 = u64 [sp + 0x100]
  7706: 82 1c f8 00              a5 = u64 [sp + 0xf8]
  7710: 01                       fallthrough
      :                          @598
  7711: 51 00 25 04              jump @656 if ra == 0
      :                          @599
  7715: 82 c2                    t0 = u64 [a5]
  7717: 82 18 38 01              a1 = u64 [sp + 0x138]
  7721: d6 82 03                 t1 = t0 mulhu a1
  7724: ca 82 06                 s1 = t0 * a1
  7727: c8 66 08                 a1 = s1 + s1
  7730: d8 68 06                 s1 = a1 <u s1
  7733: c8 33 09                 a2 = t1 + t1
  7736: c8 69 09                 a2 = a2 + s1
  7739: 82 a5                    s0 = u64 [a3]
  7741: d3 39 02                 t0 = a2 ^ t1
  7744: d8 39 0b                 a4 = a2 <u t1
  7747: da 26 0b                 a4 = s1 if t0 == 0
  7750: c8 58 08                 a1 = a1 + s0
  7753: d8 58 05                 s0 = a1 <u s0
  7756: c8 59 06                 s1 = a2 + s0
  7759: 82 12 48 01              t0 = u64 [sp + 0x148]
  7763: c8 82 02                 t0 = t0 + a1
  7766: d8 82 08                 a1 = t0 <u a1
  7769: 82 19 50 01              a2 = u64 [sp + 0x150]
  7773: c8 69 09                 a2 = a2 + s1
  7776: c8 89 09                 a2 = a2 + a1
  7779: d3 69 03                 t1 = a2 ^ s1
  7782: 7b 19 48 01              u64 [sp + 0x148] = a2
  7786: d8 69 09                 a2 = a2 <u s1
  7789: da 38 09                 a2 = a1 if t1 == 0
  7792: 94 65                    s0 = 0 if s1 != 0
  7794: 33 08 01                 a1 = 0x1
  7797: 93 58                    a1 = 0 if s0 == 0
  7799: c8 b8 08                 a1 = a1 + a4
  7802: 33 0b 01                 a4 = 0x1
  7805: 93 9b                    a4 = 0 if a2 == 0
  7807: c8 b8 08                 a1 = a1 + a4
  7810: 7b 18 50 01              u64 [sp + 0x150] = a1
  7814: 7b a2                    u64 [a3] = t0
  7816: 95 cc 08                 a5 = a5 + 0x8
  7819: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
  7822: 95 00 ff                 ra = ra + 0xffffffffffffffff
  7825: 95 77 01                 a0 = a0 + 0x1
  7828: 95 aa 08                 a3 = a3 + 0x8
  7831: 52 04 88                 jump @598 if t2 != 0
      :                          @600
  7834: 82 10 30 01              ra = u64 [sp + 0x130]
  7838: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  7842: 82 1c 40 01              a5 = u64 [sp + 0x140]
  7846: 82 13 d0 00              t1 = u64 [sp + 0xd0]
  7850: 82 1b f0 00              a4 = u64 [sp + 0xf0]
  7854: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  7858: 82 14 a8 00              t2 = u64 [sp + 0xa8]
  7862: 82 15 48 01              s0 = u64 [sp + 0x148]
  7866: 28 0d                    jump @602
      :                          @601
  7868: 49 21 50 01              u64 [sp + 336] = 0
  7872: 64 b2                    t0 = a4
  7874: 82 1b f0 00              a4 = u64 [sp + 0xf0]
  7878: 01                       fallthrough
      :                          @602
  7879: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  7883: c8 07 09                 a2 = a0 + ra
  7886: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  7890: aa 87 77 03              jump @661 if a0 == a1
      :                          @603
  7894: 97 98 03                 a1 = a2 << 0x3
  7897: c8 83 0a                 a3 = t1 + a1
  7900: 82 a8                    a1 = u64 [a3]
  7902: c8 85 05                 s0 = s0 + a1
  7905: 7b a5                    u64 [a3] = s0
  7907: 95 9a 01                 a3 = a2 + 0x1
  7910: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  7914: aa 97 5e 03              jump @660 if a0 == a2
      :                          @604
  7918: d8 85 08                 a1 = s0 <u a1
  7921: 97 a7 03                 a0 = a3 << 0x3
  7924: c8 37 07                 a0 = a0 + t1
  7927: 82 19 50 01              a2 = u64 [sp + 0x150]
  7931: c8 98 08                 a1 = a1 + a2
  7934: 7b 78                    u64 [a0] = a1
  7936: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  7940: 95 77 08                 a0 = a0 + 0x8
  7943: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  7947: 82 17 00 01              a0 = u64 [sp + 0x100]
  7951: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7954: 7b 17 00 01              u64 [sp + 0x100] = a0
  7958: 95 44 fe                 t2 = t2 + 0xfffffffffffffffe
  7961: 95 bb 02                 a4 = a4 + 0x2
  7964: 95 66 10                 s1 = s1 + 0x10
  7967: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  7971: 64 7a                    a3 = a0
  7973: 82 15 08 01              s0 = u64 [sp + 0x108]
  7977: ab 07 94 fe              jump @595 if a0 != ra
      :                          @605
  7981: 33 07                    a0 = 0
  7983: 82 14 68                 t2 = u64 [sp + 0x68]
  7986: 82 16 70                 s1 = u64 [sp + 0x70]
  7989: 64 09                    a2 = ra
  7991: 64 3b                    a4 = t1
  7993: 28 1e                    jump @607
      :                          @606
  7995: 82 1b 00 01              a4 = u64 [sp + 0x100]
  7999: 95 bb 08                 a4 = a4 + 0x8
  8002: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  8005: 95 66 01                 s1 = s1 + 0x1
  8008: 95 44 08                 t2 = t2 + 0x8
  8011: 82 1a 30 01              a3 = u64 [sp + 0x130]
  8015: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  8019: aa a7 cc 00              jump @617 if a0 == a3
      :                          @607
  8023: 7b 19 38 01              u64 [sp + 0x138] = a2
  8027: 7b 16 48 01              u64 [sp + 0x148] = s1
  8031: 7b 14 50 01              u64 [sp + 0x150] = t2
  8035: aa c7 e7 02              jump @662 if a0 == a5
      :                          @608
  8039: 64 70                    ra = a0
  8041: 33 05                    s0 = 0
  8043: c9 7c 07                 a0 = a5 - a0
  8046: 97 08 03                 a1 = ra << 0x3
  8049: c8 38 08                 a1 = a1 + t1
  8052: 82 88                    a1 = u64 [a1]
  8054: 82 19 c8 00              a2 = u64 [sp + 0xc8]
  8058: e6 97 06                 s1 = minu(a0, a2)
  8061: 95 07 01                 a0 = ra + 0x1
  8064: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  8068: c8 76 06                 s1 = s1 + a0
  8071: 82 17 20 01              a0 = u64 [sp + 0x120]
  8075: ca 78 08                 a1 = a1 * a0
  8078: 7b 1b 00 01              u64 [sp + 0x100] = a4
  8082: 64 07                    a0 = ra
  8084: 82 1a 28 01              a3 = u64 [sp + 0x128]
  8088: 01                       fallthrough
      :                          @609
  8089: aa 7c ab 02              jump @656 if a5 == a0
      :                          @610
  8093: 82 a2                    t0 = u64 [a3]
  8095: 82 b3                    t1 = u64 [a4]
  8097: d6 82 04                 t2 = t0 mulhu a1
  8100: ca 82 09                 a2 = t0 * a1
  8103: c8 35 05                 s0 = s0 + t1
  8106: d8 35 0c                 a5 = s0 <u t1
  8109: c8 59 09                 a2 = a2 + s0
  8112: d8 59 05                 s0 = a2 <u s0
  8115: c8 4c 0c                 a5 = a5 + t2
  8118: c8 c5 05                 s0 = s0 + a5
  8121: 7b b9                    u64 [a4] = a2
  8123: 95 aa 08                 a3 = a3 + 0x8
  8126: 95 77 01                 a0 = a0 + 0x1
  8129: 95 bb 08                 a4 = a4 + 0x8
  8132: 82 1c 40 01              a5 = u64 [sp + 0x140]
  8136: ab 67 d1                 jump @609 if a0 != s1
      :                          @611
  8139: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  8143: 82 13 d0 00              t1 = u64 [sp + 0xd0]
  8147: 82 14 50 01              t2 = u64 [sp + 0x150]
  8151: 82 16 48 01              s1 = u64 [sp + 0x148]
  8155: 82 19 38 01              a2 = u64 [sp + 0x138]
  8159: 51 05 5c ff              jump @606 if s0 == 0
      :                          @612
  8163: 82 17 30 01              a0 = u64 [sp + 0x130]
  8167: c8 07 07                 a0 = a0 + ra
  8170: ac 72 5a 02              jump @656 if t0 <u a0
      :                          @613
  8174: 97 77 03                 a0 = a0 << 0x3
  8177: c8 37 07                 a0 = a0 + t1
  8180: 82 7b                    a4 = u64 [a0]
  8182: c8 b5 05                 s0 = s0 + a4
  8185: 7b 75                    u64 [a0] = s0
  8187: 64 48                    a1 = t2
  8189: 64 67                    a0 = s1
  8191: 64 9a                    a3 = a2
  8193: ae b5 3a ff              jump @606 if s0 >=u a4
      :                          @614
  8197: 51 0a 3f 02              jump @656 if a3 == 0
      :                          @615
  8201: 82 8b                    a4 = u64 [a1]
  8203: 95 bb 01                 a4 = a4 + 0x1
  8206: 7b 8b                    u64 [a1] = a4
  8208: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  8211: 95 77 01                 a0 = a0 + 0x1
  8214: 95 88 08                 a1 = a1 + 0x8
  8217: 51 0b ec                 jump @614 if a4 == 0
      :                          @616
  8220: 28 1f ff                 jump @606
      :                          @617
  8223: 33 07                    a0 = 0
  8225: 01                       fallthrough
      :                          @618
  8226: c8 a7 08                 a1 = a0 + a3
  8229: ac 82 26 02              jump @663 if t0 <u a1
      :                          @619
  8233: ac 72 1e 02              jump @659 if t0 <u a0
      :                          @620
  8237: 97 88 03                 a1 = a1 << 0x3
  8240: c8 38 08                 a1 = a1 + t1
  8243: 82 88                    a1 = u64 [a1]
  8245: 97 79 03                 a2 = a0 << 0x3
  8248: c8 39 09                 a2 = a2 + t1
  8251: 7b 98                    u64 [a2] = a1
  8253: ae a7 0c                 jump @622 if a0 >=u a3
      :                          @621
  8256: d8 a7 08                 a1 = a0 <u a3
  8259: c8 87 07                 a0 = a0 + a1
  8262: ae 7a dc                 jump @618 if a3 >=u a0
      :                          @622
  8265: 82 17 60                 a0 = u64 [sp + 0x60]
  8268: 33 08                    a1 = 0
  8270: 82 19 58                 a2 = u64 [sp + 0x58]
  8273: 50 10 5e 29 6c           ra = 94, jump @1942
      :                          @623 [@dyn 47]
  8278: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  8282: 82 16 d8 00              s1 = u64 [sp + 0xd8]
  8286: 82 1c 30 01              a5 = u64 [sp + 0x130]
  8290: 33 0b                    a4 = 0
  8292: 64 c7                    a0 = a5
  8294: 82 13 50                 t1 = u64 [sp + 0x50]
  8297: 33 02 01                 t0 = 0x1
  8300: 33 04 50 00 01           t2 = 0x10050
  8305: 33 00 ff                 ra = 0xffffffffffffffff
  8308: 01                       fallthrough
      :                          @624
  8309: 84 bb 01                 a4 = a4 & 0x1
  8312: 52 0b 3e                 jump @628 if a4 != 0
      :                          @625
  8315: ac 76 c9 01              jump @656 if s1 <u a0
      :                          @626
  8319: 97 7b 03                 a4 = a0 << 0x3
  8322: d8 c7 09                 a2 = a0 <u a5
  8325: 82 1a 28 01              a3 = u64 [sp + 0x128]
  8329: c8 ba 0a                 a3 = a3 + a4
  8332: da 94 0a                 a3 = t2 if a2 == 0
  8335: c8 8b 0b                 a4 = a4 + a1
  8338: 82 b5                    s0 = u64 [a4]
  8340: 82 a9                    a2 = u64 [a3]
  8342: e4 27 0a                 a3 = maxu(a0, t0)
  8345: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  8348: d8 95 0b                 a4 = s0 <u a2
  8351: d3 59 09                 a2 = a2 ^ s0
  8354: 8e 99                    a2 = a2 >u 0
  8356: db b0 09                 a2 = ra if a4 != 0
  8359: 88 7b 01                 a4 = a0 <u 0x1
  8362: 64 a7                    a0 = a3
  8364: 51 09 c9                 jump @624 if a2 == 0
      :                          @627
  8367: 84 97 ff 00              a0 = a2 & 0xff
  8371: ab 27 44                 jump @632 if a0 != t0
      :                          @628
  8374: 33 09                    a2 = 0
  8376: 82 17 38                 a0 = u64 [sp + 0x38]
  8379: 82 15 28 01              s0 = u64 [sp + 0x128]
  8383: 64 8a                    a3 = a1
  8385: 01                       fallthrough
      :                          @629
  8386: 51 07 27                 jump @631 if a0 == 0
      :                          @630
  8389: 82 a2                    t0 = u64 [a3]
  8391: 82 5c                    a5 = u64 [s0]
  8393: c9 c2 06                 s1 = t0 - a5
  8396: 84 99 01                 a2 = a2 & 0x1
  8399: c9 96 0b                 a4 = s1 - a2
  8402: 7b ab                    u64 [a3] = a4
  8404: 95 aa 08                 a3 = a3 + 0x8
  8407: d8 c2 0b                 a4 = t0 <u a5
  8410: d8 96 09                 a2 = s1 <u a2
  8413: d4 b9 09                 a2 = a2 | a4
  8416: 95 55 08                 s0 = s0 + 0x8
  8419: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  8422: ab 35 dc                 jump @629 if s0 != t1
      :                          @631
  8425: 82 1a 30                 a3 = u64 [sp + 0x30]
  8428: 82 a7                    a0 = u64 [a3]
  8430: 84 99 01                 a2 = a2 & 0x1
  8433: c9 97 07                 a0 = a0 - a2
  8436: 7b a7                    u64 [a3] = a0
  8438: 01                       fallthrough
      :                          @632
  8439: 82 15 08 01              s0 = u64 [sp + 0x108]
  8443: 64 57                    a0 = s0
  8445: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  8449: 64 86                    s1 = a1
  8451: 50 10 60 30 69           ra = 96, jump @1890
      :                          @633 [@dyn 48]
  8456: 64 67                    a0 = s1
  8458: 33 08                    a1 = 0
  8460: 82 19 90 00              a2 = u64 [sp + 0x90]
  8464: 50 10 62 6a 6b           ra = 98, jump @1942
      :                          @634 [@dyn 49]
  8469: 82 17 88 00              a0 = u64 [sp + 0x88]
  8473: 82 18 98 00              a1 = u64 [sp + 0x98]
  8477: d2 87 07                 a0 = a0 & a1
  8480: 51 07 64 fc              jump @593 if a0 == 0
      :                          @635
  8484: 82 17 28                 a0 = u64 [sp + 0x28]
  8487: 7b 17 10                 u64 [sp + 0x10] = a0
  8490: 82 16 d0 00              s1 = u64 [sp + 0xd0]
  8494: 7b 16 08                 u64 [sp + 0x8] = s1
  8497: 82 17 20 01              a0 = u64 [sp + 0x120]
  8501: 7b 17                    u64 [sp] = a0
  8503: 64 57                    a0 = s0
  8505: 82 18 30 01              a1 = u64 [sp + 0x130]
  8509: 82 19 48                 a2 = u64 [sp + 0x48]
  8512: 82 1a 40                 a3 = u64 [sp + 0x40]
  8515: 82 1b 28 01              a4 = u64 [sp + 0x128]
  8519: 64 8c                    a5 = a1
  8521: 50 10 64 73 05           ra = 100, jump @755
      :                          @636 [@dyn 50]
  8526: 64 57                    a0 = s0
  8528: 64 68                    a1 = s1
  8530: 82 19 a0 00              a2 = u64 [sp + 0xa0]
  8534: 50 10 66 dd 68           ra = 102, jump @1890
      :                          @637 [@dyn 51]
  8539: 64 67                    a0 = s1
  8541: 33 08                    a1 = 0
  8543: 82 19 90 00              a2 = u64 [sp + 0x90]
  8547: 50 10 68 17 6b           ra = 104, jump @1942
      :                          @638 [@dyn 52]
  8552: 28 1c fc                 jump @593
      :                          @639
  8555: 82 17 40                 a0 = u64 [sp + 0x40]
  8558: 51 07 e0 00              jump @666 if a0 == 0
      :                          @640
  8562: 82 19 40                 a2 = u64 [sp + 0x40]
  8565: 97 99 03                 a2 = a2 << 0x3
  8568: 82 16 48                 s1 = u64 [sp + 0x48]
  8571: 64 67                    a0 = s1
  8573: 33 08                    a1 = 0
  8575: 50 10 6a fb 6a           ra = 106, jump @1942
      :                          @641 [@dyn 53]
  8580: 49 06 01                 u64 [s1 + 0] = 0x1
  8583: 82 17 28                 a0 = u64 [sp + 0x28]
  8586: 7b 17 10                 u64 [sp + 0x10] = a0
  8589: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  8593: 7b 17 08                 u64 [sp + 0x8] = a0
  8596: 82 17 20 01              a0 = u64 [sp + 0x120]
  8600: 7b 17                    u64 [sp] = a0
  8602: 82 17 08 01              a0 = u64 [sp + 0x108]
  8606: 82 15 30 01              s0 = u64 [sp + 0x130]
  8610: 64 58                    a1 = s0
  8612: 64 69                    a2 = s1
  8614: 82 1a 40                 a3 = u64 [sp + 0x40]
  8617: 82 1b 28 01              a4 = u64 [sp + 0x128]
  8621: 64 5c                    a5 = s0
  8623: 50 10 6c 0d 05           ra = 108, jump @755
      :                          @642 [@dyn 54]
  8628: 82 17 10 01              a0 = u64 [sp + 0x110]
  8632: 82 18 40 01              a1 = u64 [sp + 0x140]
  8636: 7b 78                    u64 [a0] = a1
  8638: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  8642: 7b 78 08                 u64 [a0 + 0x8] = a1
  8645: 7b 75 10                 u64 [a0 + 0x10] = s0
  8648: 82 17 18                 a0 = u64 [sp + 0x18]
  8651: 51 07 34                 jump @649 if a0 == 0
      :                          @643
  8654: 82 18 18                 a1 = u64 [sp + 0x18]
  8657: 56 28 00 02 2e           jump @649 if a1 >u 512
      :                          @644
  8662: 82 17 18                 a0 = u64 [sp + 0x18]
  8665: 97 77 03                 a0 = a0 << 0x3
  8668: 33 09 80 00 03           a2 = 0x30080
  8673: 95 98 00 10              a1 = a2 + 0x1000
  8677: 01                       fallthrough
      :                          @645
  8678: 82 89                    a2 = u64 [a1]
  8680: c9 98 0a                 a3 = a1 - a2
  8683: 82 1b 48                 a4 = u64 [sp + 0x48]
  8686: ab ba 11                 jump @649 if a3 != a4
      :                          @646
  8689: c9 79 0a                 a3 = a2 - a0
  8692: 01                       fallthrough
      :                          @647
  8693: 82 8b                    a4 = u64 [a1]
  8695: ab 9b ef                 jump @645 if a4 != a2
      :                          @648
  8698: 7b 8a                    u64 [a1] = a3
  8700: 33 0c                    a5 = 0
  8702: 01                       fallthrough
      :                          @649
  8703: 33 08 00 02              a1 = 0x200
  8707: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  8711: 82 19 30 01              a2 = u64 [sp + 0x130]
  8715: ac 98 27                 jump @655 if a1 <u a2
      :                          @650
  8718: 33 09 80 00 03           a2 = 0x30080
  8723: 95 98 00 10              a1 = a2 + 0x1000
  8727: 01                       fallthrough
      :                          @651
  8728: 82 89                    a2 = u64 [a1]
  8730: c9 98 0a                 a3 = a1 - a2
  8733: 82 1b 08 01              a4 = u64 [sp + 0x108]
  8737: ab ba 11                 jump @655 if a3 != a4
      :                          @652
  8740: c9 79 0a                 a3 = a2 - a0
  8743: 01                       fallthrough
      :                          @653
  8744: 82 8b                    a4 = u64 [a1]
  8746: ab 9b ee                 jump @651 if a4 != a2
      :                          @654
  8749: 7b 8a                    u64 [a1] = a3
  8751: 33 0c                    a5 = 0
  8753: 01                       fallthrough
      :                          @655
  8754: 82 10 80 01              ra = u64 [sp + 0x180]
  8758: 82 15 78 01              s0 = u64 [sp + 0x178]
  8762: 82 16 70 01              s1 = u64 [sp + 0x170]
  8766: 95 11 88 01              sp = sp + 0x188
  8770: 32 00                    ret
      :                          @656
  8772: 00                       trap
      :                          @657
  8773: 00                       trap
      :                          @658
  8774: 00                       trap
      :                          @659
  8775: 00                       trap
      :                          @660
  8776: 00                       trap
      :                          @661
  8777: 00                       trap
      :                          @662
  8778: 00                       trap
      :                          @663
  8779: 00                       trap
      :                          @664
  8780: 00                       trap
      :                          @665
  8781: 00                       trap
      :                          @666
  8782: 00                       trap
      :                          @667
  8783: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8786: 7b 10 40                 u64 [sp + 0x40] = ra
  8789: 7b 15 38                 u64 [sp + 0x38] = s0
  8792: 7b 16 30                 u64 [sp + 0x30] = s1
  8795: c8 89 09                 a2 = a2 + a1
  8798: ac 89 6c                 jump @676 if a2 <u a1
      :                          @668
  8801: 64 75                    s0 = a0
  8803: 82 7a                    a3 = u64 [a0]
  8805: 97 a7 01                 a0 = a3 << 0x1
  8808: e4 79 08                 a1 = maxu(a2, a0)
  8811: 98 89 3d                 a2 = a1 >> 0x3d
  8814: 33 07                    a0 = 0
  8816: 52 09 50 de              jump @21 if a2 != 0
      :                          @669
  8820: 33 09 04                 a2 = 0x4
  8823: e4 98 06                 s1 = maxu(a1, a2)
  8826: 97 68 03                 a1 = s1 << 0x3
  8829: 14 0b f8 ff ff ff ff ff ff 7f a4 = 0x7ffffffffffffff8
  8839: ac 8b 39 de              jump @21 if a4 <u a1
      :                          @670
  8843: 52 0a 07                 jump @672 if a3 != 0
      :                          @671
  8846: 33 07                    a0 = 0
  8848: 28 12                    jump @673
      :                          @672
  8850: 82 57 08                 a0 = u64 [s0 + 0x8]
  8853: 97 aa 03                 a3 = a3 << 0x3
  8856: 7b 17 18                 u64 [sp + 0x18] = a0
  8859: 7b 1a 28                 u64 [sp + 0x28] = a3
  8862: 33 07 08                 a0 = 0x8
  8865: 01                       fallthrough
      :                          @673
  8866: 7b 17 20                 u64 [sp + 0x20] = a0
  8869: 64 17                    a0 = sp
  8871: 95 19 18                 a2 = sp + 0x18
  8874: 50 10 6e 62 15           ra = 110, jump @1090
      :                          @674 [@dyn 55]
  8879: 82 17                    a0 = u64 [sp]
  8881: 52 07 1e                 jump @677 if a0 != 0
      :                          @675
  8884: 82 17 08                 a0 = u64 [sp + 0x8]
  8887: 7b 57 08                 u64 [s0 + 0x8] = a0
  8890: 7b 56                    u64 [s0] = s1
  8892: 82 10 40                 ra = u64 [sp + 0x40]
  8895: 82 15 38                 s0 = u64 [sp + 0x38]
  8898: 82 16 30                 s1 = u64 [sp + 0x30]
  8901: 95 11 48                 sp = sp + 0x48
  8904: 32 00                    ret
      :                          @676
  8906: 33 07                    a0 = 0
  8908: 28 f4 dd                 jump @21
      :                          @677
  8911: 82 17 08                 a0 = u64 [sp + 0x8]
  8914: 28 ee dd                 jump @21
      :                          @678
  8917: 95 11 58 ff              sp = sp + 0xffffffffffffff58
  8921: 7b 10 a0 00              u64 [sp + 0xa0] = ra
  8925: 7b 15 98 00              u64 [sp + 0x98] = s0
  8929: 7b 16 90 00              u64 [sp + 0x90] = s1
  8933: 64 72                    t0 = a0
  8935: 82 77 10                 a0 = u64 [a0 + 0x10]
  8938: 33 09 02                 a2 = 0x2
  8941: ac 97 30                 jump @685 if a0 <u a2
      :                          @679
  8944: 82 29 08                 a2 = u64 [t0 + 0x8]
  8947: 97 7a 03                 a3 = a0 << 0x3
  8950: c8 a9 09                 a2 = a2 + a3
  8953: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
  8956: 33 0c 01                 a5 = 0x1
  8959: 01                       fallthrough
      :                          @680
  8960: 51 09 1d                 jump @685 if a2 == 0
      :                          @681
  8963: 82 9a                    a3 = u64 [a2]
  8965: 52 0a 18                 jump @685 if a3 != 0
      :                          @682
  8968: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8971: 7b 27 10                 u64 [t0 + 0x10] = a0
  8974: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
  8977: ac 7c ef                 jump @680 if a5 <u a0
      :                          @683
  8980: 82 85 10                 s0 = u64 [a1 + 0x10]
  8983: ac c5 0f                 jump @686 if s0 <u a5
      :                          @684
  8986: 28 6e 03                 jump @745
      :                          @685
  8989: 64 7c                    a5 = a0
  8991: 82 85 10                 s0 = u64 [a1 + 0x10]
  8994: ae 75 66 03              jump @745 if s0 >=u a0
      :                          @686
  8998: 51 05 54 12              jump @1067 if s0 == 0
      :                          @687
  9002: 82 87 08                 a0 = u64 [a1 + 0x8]
  9005: 97 54 03                 t2 = s0 << 0x3
  9008: 7b 17 30                 u64 [sp + 0x30] = a0
  9011: c8 47 07                 a0 = a0 + t2
  9014: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  9017: 51 08 41 12              jump @1067 if a1 == 0
      :                          @688
  9021: 82 89                    a2 = u64 [a1]
  9023: 52 1c 02 1e              jump @692 if a5 != 2
      :                          @689
  9027: 49 12 10 01              u64 [t0 + 16] = 0x1
  9031: 51 09 74 03              jump @754 if a2 == 0
      :                          @690
  9035: 82 25 08                 s0 = u64 [t0 + 0x8]
  9038: 82 58 08                 a1 = u64 [s0 + 0x8]
  9041: 82 57                    a0 = u64 [s0]
  9043: 50 10 70 ad 66           ra = 112, jump @1888
      :                          @691 [@dyn 56]
  9048: 7b 57                    u64 [s0] = a0
  9050: 28 2e 03                 jump @745
      :                          @692
  9053: 7b 12                    u64 [sp] = t0
  9055: 7b 19 58                 u64 [sp + 0x58] = a2
  9058: 52 15 01 45              jump @700 if s0 != 1
      :                          @693
  9062: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
  9065: 51 08 1f 03              jump @745 if a1 == 0
      :                          @694
  9069: 51 09 36 03              jump @750 if a2 == 0
      :                          @695
  9073: 82 27 08                 a0 = u64 [t0 + 0x8]
  9076: 97 ca 03                 a3 = a5 << 0x3
  9079: c8 a7 07                 a0 = a0 + a3
  9082: 95 76 f0                 s1 = a0 + 0xfffffffffffffff0
  9085: 01                       fallthrough
      :                          @696
  9086: 95 85 ff                 s0 = a1 + 0xffffffffffffffff
  9089: 51 08 1a 03              jump @747 if a1 == 0
      :                          @697
  9093: 82 68 08                 a1 = u64 [s1 + 0x8]
  9096: 82 67                    a0 = u64 [s1]
  9098: 50 10 72 76 66           ra = 114, jump @1888
      :                          @698 [@dyn 57]
  9103: 82 19 58                 a2 = u64 [sp + 0x58]
  9106: 7b 67                    u64 [s1] = a0
  9108: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  9111: 64 58                    a1 = s0
  9113: 52 05 e5                 jump @696 if s0 != 0
      :                          @699
  9116: 33 07 01                 a0 = 0x1
  9119: 82 18                    a1 = u64 [sp]
  9121: 7b 87 10                 u64 [a1 + 0x10] = a0
  9124: 28 e4 02                 jump @745
      :                          @700
  9127: 68 98                    a1 = clz a2
  9129: 51 08 4c 01              jump @725 if a1 == 0
      :                          @701
  9133: 33 06                    s1 = 0
  9135: 82 22 08                 t0 = u64 [t0 + 0x8]
  9138: 8d 89                    i32 a2 = -a1
  9140: 64 ca                    a3 = a5
  9142: 84 9c 3f                 a5 = a2 & 0x3f
  9145: 84 87 3f                 a0 = a1 & 0x3f
  9148: 7b 1a 70                 u64 [sp + 0x70] = a3
  9151: 97 a8 03                 a1 = a3 << 0x3
  9154: 64 29                    a2 = t0
  9156: 01                       fallthrough
      :                          @702
  9157: 82 9a                    a3 = u64 [a2]
  9159: cf 7a 0b                 a4 = a3 << a0
  9162: d4 6b 0b                 a4 = a4 | s1
  9165: 7b 9b                    u64 [a2] = a4
  9167: 95 99 08                 a2 = a2 + 0x8
  9170: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  9173: d0 ca 06                 s1 = a3 >> a5
  9176: 52 08 ed                 jump @702 if a1 != 0
      :                          @703
  9179: 7b 17 58                 u64 [sp + 0x58] = a0
  9182: 7b 1c 60                 u64 [sp + 0x60] = a5
  9185: 82 17                    a0 = u64 [sp]
  9187: 82 78                    a1 = u64 [a0]
  9189: 82 19 70                 a2 = u64 [sp + 0x70]
  9192: ab 89 17                 jump @706 if a2 != a1
      :                          @704
  9195: 7b 14 68                 u64 [sp + 0x68] = t2
  9198: 50 10 74 a0 13           ra = 116, jump @1081
      :                          @705 [@dyn 58]
  9203: 82 17                    a0 = u64 [sp]
  9205: 82 19 70                 a2 = u64 [sp + 0x70]
  9208: 82 14 68                 t2 = u64 [sp + 0x68]
  9211: 82 72 08                 t0 = u64 [a0 + 0x8]
  9214: 01                       fallthrough
      :                          @706
  9215: 97 98 03                 a1 = a2 << 0x3
  9218: c8 28 08                 a1 = a1 + t0
  9221: 7b 86                    u64 [a1] = s1
  9223: 95 99 01                 a2 = a2 + 0x1
  9226: 7b 79 10                 u64 [a0 + 0x10] = a2
  9229: 33 02 00 10              t0 = 0x1000
  9233: 33 00 80 00 03           ra = 0x30080
  9238: c8 20 08                 a1 = ra + t0
  9241: 33 03 f8 0f              t1 = 0xff8
  9245: 01                       fallthrough
      :                          @707
  9246: 82 8a                    a3 = u64 [a1]
  9248: c8 4a 0b                 a4 = a3 + t2
  9251: ac ab a2 dc              jump @24 if a4 <u a3
      :                          @708
  9255: ac b3 9e dc              jump @24 if t1 <u a4
      :                          @709
  9259: c9 b0 07                 a0 = ra - a4
  9262: c8 27 07                 a0 = a0 + t0
  9265: 84 7c 07                 a5 = a0 & 0x7
  9268: c8 cb 0b                 a4 = a4 + a5
  9271: 01                       fallthrough
      :                          @710
  9272: 82 86                    s1 = u64 [a1]
  9274: ab a6 e4                 jump @707 if s1 != a3
      :                          @711
  9277: 7b 8b                    u64 [a1] = a4
  9279: c9 c7 06                 s1 = a0 - a5
  9282: 64 67                    a0 = s1
  9284: 82 18 30                 a1 = u64 [sp + 0x30]
  9287: 64 49                    a2 = t2
  9289: 7b 14 68                 u64 [sp + 0x68] = t2
  9292: 50 10 76 e7 65           ra = 118, jump @1890
      :                          @712 [@dyn 59]
  9297: 64 63                    t1 = s1
  9299: 33 09                    a2 = 0
  9301: 82 17 68                 a0 = u64 [sp + 0x68]
  9304: 64 68                    a1 = s1
  9306: 82 12 60                 t0 = u64 [sp + 0x60]
  9309: 82 16 58                 s1 = u64 [sp + 0x58]
  9312: 01                       fallthrough
      :                          @713
  9313: 82 8a                    a3 = u64 [a1]
  9315: 95 8b 08                 a4 = a1 + 0x8
  9318: cf 6a 0c                 a5 = a3 << s1
  9321: d4 c9 09                 a2 = a2 | a5
  9324: d0 2a 0a                 a3 = a3 >> t0
  9327: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  9330: 7b 89                    u64 [a1] = a2
  9332: 64 a9                    a2 = a3
  9334: 64 b8                    a1 = a4
  9336: 52 07 e9                 jump @713 if a0 != 0
      :                          @714
  9339: 7b 15 78                 u64 [sp + 0x78] = s0
  9342: 7b 13 80 00              u64 [sp + 0x80] = t1
  9346: 7b 15 88 00              u64 [sp + 0x88] = s0
  9350: 95 18 78                 a1 = sp + 0x78
  9353: 82 17                    a0 = u64 [sp]
  9355: 64 36                    s1 = t1
  9357: 50 10 78 48 fe           ra = 120, jump @678
      :                          @715 [@dyn 60]
  9362: 82 1c 68                 a5 = u64 [sp + 0x68]
  9365: 56 25 00 02 25           jump @721 if s0 >u 512
      :                          @716
  9370: 33 08 80 00 03           a1 = 0x30080
  9375: 95 87 00 10              a0 = a1 + 0x1000
  9379: 01                       fallthrough
      :                          @717
  9380: 82 78                    a1 = u64 [a0]
  9382: c9 87 09                 a2 = a0 - a1
  9385: ab 69 11                 jump @721 if a2 != s1
      :                          @718
  9388: c9 c8 09                 a2 = a1 - a5
  9391: 01                       fallthrough
      :                          @719
  9392: 82 7a                    a3 = u64 [a0]
  9394: ab 8a f2                 jump @717 if a3 != a1
      :                          @720
  9397: 7b 79                    u64 [a0] = a2
  9399: 33 0b                    a4 = 0
  9401: 01                       fallthrough
      :                          @721
  9402: 82 18                    a1 = u64 [sp]
  9404: 82 87 10                 a0 = u64 [a1 + 0x10]
  9407: 82 1c 60                 a5 = u64 [sp + 0x60]
  9410: 82 15 58                 s0 = u64 [sp + 0x58]
  9413: 51 07 c3 01              jump @745 if a0 == 0
      :                          @722
  9417: 82 88 08                 a1 = u64 [a1 + 0x8]
  9420: 33 09                    a2 = 0
  9422: 97 7a 03                 a3 = a0 << 0x3
  9425: 9a a7                    a0 = -a3
  9427: c8 a8 08                 a1 = a1 + a3
  9430: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  9433: 01                       fallthrough
      :                          @723
  9434: 82 8a                    a3 = u64 [a1]
  9436: d0 5a 0b                 a4 = a3 >> s0
  9439: d4 b9 09                 a2 = a2 | a4
  9442: cf ca 0a                 a3 = a3 << a5
  9445: 7b 89                    u64 [a1] = a2
  9447: 95 77 08                 a0 = a0 + 0x8
  9450: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  9453: 64 a9                    a2 = a3
  9455: 52 07 eb                 jump @723 if a0 != 0
      :                          @724
  9458: 28 96 01                 jump @745
      :                          @725
  9461: 82 2a 08                 a3 = u64 [t0 + 0x8]
  9464: 51 09 b6 01              jump @752 if a2 == 0
      :                          @726
  9468: 33 06                    s1 = 0
  9470: e4 5c 08                 a1 = maxu(a5, s0)
  9473: c9 58 0b                 a4 = a1 - s0
  9476: 82 73 f0                 t1 = u64 [a0 + 0xfffffffffffffff0]
  9479: 95 a7 f8                 a0 = a3 + 0xfffffffffffffff8
  9482: 7b 17 28                 u64 [sp + 0x28] = a0
  9485: 95 a7 f0                 a0 = a3 + 0xfffffffffffffff0
  9488: 7b 17 18                 u64 [sp + 0x18] = a0
  9491: e6 5c 07                 a0 = minu(a5, s0)
  9494: 97 c8 03                 a1 = a5 << 0x3
  9497: 97 77 03                 a0 = a0 << 0x3
  9500: c8 a8 08                 a1 = a1 + a3
  9503: c9 78 04                 t2 = a1 - a0
  9506: 82 18 30                 a1 = u64 [sp + 0x30]
  9509: c8 78 00                 ra = a1 + a0
  9512: 7b 1a 08                 u64 [sp + 0x8] = a3
  9515: 7b 13 20                 u64 [sp + 0x20] = t1
  9518: 7b 10 10                 u64 [sp + 0x10] = ra
  9521: 28 20                    jump @728
      :                          @727
  9523: 82 18 60                 a1 = u64 [sp + 0x60]
  9526: 95 8c ff                 a5 = a1 + 0xffffffffffffffff
  9529: 97 c7 03                 a0 = a5 << 0x3
  9532: 82 1a 08                 a3 = u64 [sp + 0x8]
  9535: c8 a7 07                 a0 = a0 + a3
  9538: 82 76                    s1 = u64 [a0]
  9540: 95 44 f8                 t2 = t2 + 0xfffffffffffffff8
  9543: 82 1b 40                 a4 = u64 [sp + 0x40]
  9546: 82 17 68                 a0 = u64 [sp + 0x68]
  9549: 51 07 37 01              jump @744 if a0 == 0
      :                          @728
  9553: 97 c7 03                 a0 = a5 << 0x3
  9556: 82 18 28                 a1 = u64 [sp + 0x28]
  9559: c8 78 08                 a1 = a1 + a0
  9562: 7b 1b 68                 u64 [sp + 0x68] = a4
  9565: 51 08 1d 10              jump @1067 if a1 == 0
      :                          @729
  9569: 7b 14 50                 u64 [sp + 0x50] = t2
  9572: 7b 1c 60                 u64 [sp + 0x60] = a5
  9575: 53 1c 02 3b 01           jump @749 if a5 <u 2
      :                          @730
  9580: 64 25                    s0 = t0
  9582: 82 8a                    a3 = u64 [a1]
  9584: 7b 1a 48                 u64 [sp + 0x48] = a3
  9587: 82 18 18                 a1 = u64 [sp + 0x18]
  9590: c8 87 07                 a0 = a0 + a1
  9593: 82 77                    a0 = u64 [a0]
  9595: 7b 17 70                 u64 [sp + 0x70] = a0
  9598: 82 17 68                 a0 = u64 [sp + 0x68]
  9601: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9604: 7b 17 40                 u64 [sp + 0x40] = a0
  9607: 64 a7                    a0 = a3
  9609: 64 68                    a1 = s1
  9611: 33 0a                    a3 = 0
  9613: 50 10 7a 41 64           ra = 122, jump @1886
      :                          @731 [@dyn 61]
  9618: 82 19 58                 a2 = u64 [sp + 0x58]
  9621: ca 98 0b                 a4 = a1 * a2
  9624: d6 97 0a                 a3 = a0 mulhu a2
  9627: c8 ab 0b                 a4 = a4 + a3
  9630: ca 97 0a                 a3 = a0 * a2
  9633: 7b 16 38                 u64 [sp + 0x38] = s1
  9636: c9 b6 06                 s1 = s1 - a4
  9639: 82 1c 48                 a5 = u64 [sp + 0x48]
  9642: d8 ac 0b                 a4 = a5 <u a3
  9645: c9 b6 06                 s1 = s1 - a4
  9648: c9 ac 0a                 a3 = a5 - a3
  9651: 64 52                    t0 = s0
  9653: 82 13 20                 t1 = u64 [sp + 0x20]
  9656: 82 14 50                 t2 = u64 [sp + 0x50]
  9659: 82 10 10                 ra = u64 [sp + 0x10]
  9662: 28 19                    jump @733
      :                          @732
  9664: 88 7b 01                 a4 = a0 <u 0x1
  9667: c9 b8 08                 a1 = a1 - a4
  9670: c8 9a 0b                 a4 = a3 + a2
  9673: d8 ab 0a                 a3 = a4 <u a3
  9676: c8 a6 06                 s1 = s1 + a3
  9679: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9682: 64 ba                    a3 = a4
  9684: 52 06 24                 jump @735 if s1 != 0
      :                          @733
  9687: 52 08 e9                 jump @732 if a1 != 0
      :                          @734
  9690: d6 37 0b                 a4 = a0 mulhu t1
  9693: ca 38 0c                 a5 = a1 * t1
  9696: c8 cb 0b                 a4 = a4 + a5
  9699: ca 37 0c                 a5 = a0 * t1
  9702: 82 15 70                 s0 = u64 [sp + 0x70]
  9705: d8 c5 0c                 a5 = s0 <u a5
  9708: d3 ab 05                 s0 = a4 ^ a3
  9711: d8 ba 0b                 a4 = a3 <u a4
  9714: da 5c 0b                 a4 = a5 if s0 == 0
  9717: 52 0b cb                 jump @732 if a4 != 0
      :                          @735
  9720: 82 18 60                 a1 = u64 [sp + 0x60]
  9723: 82 1a 68                 a3 = u64 [sp + 0x68]
  9726: ac a8 9c 00              jump @746 if a1 <u a3
      :                          @736
  9730: 51 07 31 ff              jump @727 if a0 == 0
      :                          @737
  9734: 82 18 60                 a1 = u64 [sp + 0x60]
  9737: 82 1a 68                 a3 = u64 [sp + 0x68]
  9740: aa a8 27 ff              jump @727 if a1 == a3
      :                          @738
  9744: 33 0a ff                 a3 = 0xffffffffffffffff
  9747: 64 48                    a1 = t2
  9749: 82 15 30                 s0 = u64 [sp + 0x30]
  9752: 01                       fallthrough
      :                          @739
  9753: 82 5b                    a4 = u64 [s0]
  9755: 82 8c                    a5 = u64 [a1]
  9757: d6 b7 02                 t0 = a0 mulhu a4
  9760: ca b7 0b                 a4 = a0 * a4
  9763: c8 ac 0c                 a5 = a5 + a3
  9766: d8 ac 0a                 a3 = a5 <u a3
  9769: d8 bc 06                 s1 = a5 <u a4
  9772: c9 2a 0a                 a3 = a3 - t0
  9775: c9 6a 0a                 a3 = a3 - s1
  9778: c9 bc 0c                 a5 = a5 - a4
  9781: 95 cc 01                 a5 = a5 + 0x1
  9784: 88 cb 01                 a4 = a5 <u 0x1
  9787: c8 ba 0a                 a3 = a3 + a4
  9790: 95 aa fe                 a3 = a3 + 0xfffffffffffffffe
  9793: 7b 8c                    u64 [a1] = a5
  9795: 95 55 08                 s0 = s0 + 0x8
  9798: 95 88 08                 a1 = a1 + 0x8
  9801: ab 05 d0                 jump @739 if s0 != ra
      :                          @740
  9804: 85 a7 ff                 a0 = a3 ^ 0xffffffffffffffff
  9807: 82 12                    t0 = u64 [sp]
  9809: 82 18 38                 a1 = u64 [sp + 0x38]
  9812: ae 78 df fe              jump @727 if a1 >=u a0
      :                          @741
  9816: 33 06                    s1 = 0
  9818: 64 47                    a0 = t2
  9820: 82 18 30                 a1 = u64 [sp + 0x30]
  9823: 01                       fallthrough
      :                          @742
  9824: 82 7a                    a3 = u64 [a0]
  9826: 82 8b                    a4 = u64 [a1]
  9828: c8 ab 0b                 a4 = a4 + a3
  9831: d8 ab 0a                 a3 = a4 <u a3
  9834: 84 6c 01                 a5 = s1 & 0x1
  9837: c8 bc 0c                 a5 = a5 + a4
  9840: d8 bc 06                 s1 = a5 <u a4
  9843: d4 a6 06                 s1 = s1 | a3
  9846: 7b 7c                    u64 [a0] = a5
  9848: 95 88 08                 a1 = a1 + 0x8
  9851: 95 77 08                 a0 = a0 + 0x8
  9854: ab 08 e2                 jump @742 if a1 != ra
      :                          @743
  9857: 28 b2 fe                 jump @727
      :                          @744
  9860: 7b 28 10                 u64 [t0 + 0x10] = a1
  9863: 01                       fallthrough
      :                          @745
  9864: 82 10 a0 00              ra = u64 [sp + 0xa0]
  9868: 82 15 98 00              s0 = u64 [sp + 0x98]
  9872: 82 16 90 00              s1 = u64 [sp + 0x90]
  9876: 95 11 a8 00              sp = sp + 0xa8
  9880: 32 00                    ret
      :                          @746
  9882: 00                       trap
      :                          @747
  9883: 82 17                    a0 = u64 [sp]
  9885: 7b 78 10                 u64 [a0 + 0x10] = a1
  9888: 00                       trap
      :                          @748
  9889: 00                       trap
      :                          @749
  9890: 00                       trap
      :                          @750
  9891: 95 c5 fe                 s0 = a5 + 0xfffffffffffffffe
  9894: 7b 28 10                 u64 [t0 + 0x10] = a1
  9897: ae 85 f8                 jump @748 if s0 >=u a1
      :                          @751
  9900: 28 0f                    jump @754
      :                          @752
  9902: 97 c7 03                 a0 = a5 << 0x3
  9905: c8 a7 07                 a0 = a0 + a3
  9908: 52 17 08 07              jump @754 if a0 != 8
      :                          @753
  9912: 28 c2 0e                 jump @1067
      :                          @754
  9915: 00                       trap
      :                          @755
  9916: 95 11 60 ff              sp = sp + 0xffffffffffffff60
  9920: 7b 10 98 00              u64 [sp + 0x98] = ra
  9924: 7b 15 90 00              u64 [sp + 0x90] = s0
  9928: 7b 16 88 00              u64 [sp + 0x88] = s1
  9932: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  9936: 7b 1c 28                 u64 [sp + 0x28] = a5
  9939: 7b 1a 40                 u64 [sp + 0x40] = a3
  9942: 64 7c                    a5 = a0
  9944: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  9948: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  9952: 7b 17 30                 u64 [sp + 0x30] = a0
  9955: 95 67 fe                 a0 = s1 + 0xfffffffffffffffe
  9958: 7b 17 80 00              u64 [sp + 0x80] = a0
  9962: 97 77 03                 a0 = a0 << 0x3
  9965: c8 a7 07                 a0 = a0 + a3
  9968: 7b 17 60                 u64 [sp + 0x60] = a0
  9971: 97 67 03                 a0 = s1 << 0x3
  9974: 7b 17                    u64 [sp] = a0
  9976: c8 a7 07                 a0 = a0 + a3
  9979: 7b 17 58                 u64 [sp + 0x58] = a0
  9982: 33 07 01                 a0 = 0x1
  9985: e4 76 07                 a0 = maxu(s1, a0)
  9988: 7b 17 70                 u64 [sp + 0x70] = a0
  9991: 7b 1b 48                 u64 [sp + 0x48] = a4
  9994: 95 bb 08                 a4 = a4 + 0x8
  9997: 7b 1b 10                 u64 [sp + 0x10] = a4
 10000: 7b 1a 68                 u64 [sp + 0x68] = a3
 10003: 95 aa 08                 a3 = a3 + 0x8
 10006: 7b 1a 08                 u64 [sp + 0x8] = a3
 10009: 7b 16 78                 u64 [sp + 0x78] = s1
 10012: 9a 64                    t2 = -s1
 10014: 7b 19 18                 u64 [sp + 0x18] = a2
 10017: 88 97 01                 a0 = a2 <u 0x1
 10020: 7b 17 38                 u64 [sp + 0x38] = a0
 10023: 33 09                    a2 = 0
 10025: 7b 1c 20                 u64 [sp + 0x20] = a5
 10028: 28 28                    jump @758
      :                          @756
 10030: 82 1c 20                 a5 = u64 [sp + 0x20]
 10033: 82 1a 58                 a3 = u64 [sp + 0x58]
 10036: 82 16 60                 s1 = u64 [sp + 0x60]
 10039: 01                       fallthrough
      :                          @757
 10040: 82 19 50                 a2 = u64 [sp + 0x50]
 10043: 95 99 01                 a2 = a2 + 0x1
 10046: c8 5b 0b                 a4 = a4 + s0
 10049: d8 5b 07                 a0 = a4 <u s0
 10052: 7b ab e8                 u64 [a3 + 0xffffffffffffffe8] = a4
 10055: c8 37 07                 a0 = a0 + t1
 10058: 7b 67                    u64 [s1] = a0
 10060: 82 17 80 00              a0 = u64 [sp + 0x80]
 10064: aa 79 5c 01              jump @787 if a2 == a0
      :                          @758
 10068: 82 17 40                 a0 = u64 [sp + 0x40]
 10071: d8 79 07                 a0 = a2 <u a0
 10074: 85 77 01                 a0 = a0 ^ 0x1
 10077: 82 15 38                 s0 = u64 [sp + 0x38]
 10080: d4 75 05                 s0 = s0 | a0
 10083: 7b 19 50                 u64 [sp + 0x50] = a2
 10086: 33 0b                    a4 = 0
 10088: 51 0c 5e                 jump @768 if a5 == 0
      :                          @759
 10091: 33 00                    ra = 0
 10093: 97 97 03                 a0 = a2 << 0x3
 10096: 82 19 18                 a2 = u64 [sp + 0x18]
 10099: c8 97 07                 a0 = a0 + a2
 10102: 82 19 68                 a2 = u64 [sp + 0x68]
 10105: 64 ca                    a3 = a5
 10107: 28 31                    jump @762
      :                          @760
 10109: 82 76                    s1 = u64 [a0]
 10111: 01                       fallthrough
      :                          @761
 10112: 82 9c                    a5 = u64 [a2]
 10114: 95 00 01                 ra = ra + 0x1
 10117: d6 26 03                 t1 = s1 mulhu t0
 10120: ca 26 06                 s1 = s1 * t0
 10123: c8 cb 0b                 a4 = a4 + a5
 10126: d8 cb 0c                 a5 = a4 <u a5
 10129: c8 b6 06                 s1 = s1 + a4
 10132: d8 b6 0b                 a4 = s1 <u a4
 10135: c8 3c 0c                 a5 = a5 + t1
 10138: c8 cb 0b                 a4 = a4 + a5
 10141: 7b 96                    u64 [a2] = s1
 10143: 95 aa 08                 a3 = a3 + 0x8
 10146: 95 99 08                 a2 = a2 + 0x8
 10149: 82 1c 80 00              a5 = u64 [sp + 0x80]
 10153: aa 0c 60                 jump @776 if a5 == ra
      :                          @762
 10156: 82 1c 78                 a5 = u64 [sp + 0x78]
 10159: aa 0c ff 01              jump @804 if a5 == ra
      :                          @763
 10163: ae 80 0a                 jump @766 if ra >=u a1
      :                          @764
 10166: 82 a2                    t0 = u64 [a3]
 10168: 51 05 c5                 jump @760 if s0 == 0
      :                          @765
 10171: 28 07                    jump @767
      :                          @766
 10173: 33 02                    t0 = 0
 10175: 51 05 be                 jump @760 if s0 == 0
      :                          @767
 10178: 33 06                    s1 = 0
 10180: 28 bc                    jump @761
      :                          @768
 10182: 51 05 24                 jump @773 if s0 == 0
      :                          @769
 10185: 82 17 68                 a0 = u64 [sp + 0x68]
 10188: 82 19 78                 a2 = u64 [sp + 0x78]
 10191: 01                       fallthrough
      :                          @770
 10192: 51 09 de 01              jump @804 if a2 == 0
      :                          @771
 10196: 82 7a                    a3 = u64 [a0]
 10198: c8 ba 06                 s1 = a3 + a4
 10201: d8 a6 0b                 a4 = s1 <u a3
 10204: 7b 76                    u64 [a0] = s1
 10206: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 10209: 95 77 08                 a0 = a0 + 0x8
 10212: 52 19 02 ec              jump @770 if a2 != 2
      :                          @772
 10216: 28 21                    jump @776
      :                          @773
 10218: 82 17 68                 a0 = u64 [sp + 0x68]
 10221: 82 19 78                 a2 = u64 [sp + 0x78]
 10224: 01                       fallthrough
      :                          @774
 10225: 51 09 bd 01              jump @804 if a2 == 0
      :                          @775
 10229: 82 7a                    a3 = u64 [a0]
 10231: c8 ba 06                 s1 = a3 + a4
 10234: d8 a6 0b                 a4 = s1 <u a3
 10237: 7b 76                    u64 [a0] = s1
 10239: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 10242: 95 77 08                 a0 = a0 + 0x8
 10245: 52 19 02 ec              jump @774 if a2 != 2
      :                          @776
 10249: 82 19 60                 a2 = u64 [sp + 0x60]
 10252: 82 97                    a0 = u64 [a2]
 10254: c8 b7 05                 s0 = a0 + a4
 10257: d8 75 03                 t1 = s0 <u a0
 10260: 7b 95                    u64 [a2] = s0
 10262: 82 1a 58                 a3 = u64 [sp + 0x58]
 10265: 7b a3 f8                 u64 [a3 + 0xfffffffffffffff8] = t1
 10268: 82 1a 48                 a3 = u64 [sp + 0x48]
 10271: 51 0a 06                 jump @778 if a3 == 0
      :                          @777
 10274: 82 aa                    a3 = u64 [a3]
 10276: 01                       fallthrough
      :                          @778
 10277: 82 10 28                 ra = u64 [sp + 0x28]
 10280: 82 1b 68                 a4 = u64 [sp + 0x68]
 10283: 82 bb                    a4 = u64 [a4]
 10285: 82 17 30                 a0 = u64 [sp + 0x30]
 10288: ca 7b 02                 t0 = a4 * a0
 10291: d6 2a 06                 s1 = a3 mulhu t0
 10294: ca 2a 0a                 a3 = a3 * t0
 10297: c8 ab 0b                 a4 = a4 + a3
 10300: d8 ab 0b                 a4 = a4 <u a3
 10303: c8 6b 0b                 a4 = a4 + s1
 10306: 82 1a 80 00              a3 = u64 [sp + 0x80]
 10310: 51 1a 01 e8 fe           jump @756 if a3 == 1
      :                          @779
 10315: 33 0c 01                 a5 = 0x1
 10318: 82 19 08                 a2 = u64 [sp + 0x8]
 10321: 82 1a 10                 a3 = u64 [sp + 0x10]
 10324: 01                       fallthrough
      :                          @780
 10325: 82 17 70                 a0 = u64 [sp + 0x70]
 10328: aa c7 58 01              jump @806 if a0 == a5
      :                          @781
 10332: ae 0c 07                 jump @783 if a5 >=u ra
      :                          @782
 10335: 82 a6                    s1 = u64 [a3]
 10337: 28 05                    jump @784
      :                          @783
 10339: 33 06                    s1 = 0
 10341: 01                       fallthrough
      :                          @784
 10342: c8 c4 07                 a0 = t2 + a5
 10345: 51 17 01 46 01           jump @805 if a0 == 1
      :                          @785
 10350: 82 97                    a0 = u64 [a2]
 10352: 95 cc 01                 a5 = a5 + 0x1
 10355: d6 26 05                 s0 = s1 mulhu t0
 10358: ca 26 06                 s1 = s1 * t0
 10361: c8 7b 0b                 a4 = a4 + a0
 10364: d8 7b 07                 a0 = a4 <u a0
 10367: c8 b6 06                 s1 = s1 + a4
 10370: d8 b6 0b                 a4 = s1 <u a4
 10373: c8 57 07                 a0 = a0 + s0
 10376: c8 7b 0b                 a4 = a4 + a0
 10379: 7b 96 f8                 u64 [a2 + 0xfffffffffffffff8] = s1
 10382: 95 aa 08                 a3 = a3 + 0x8
 10385: c8 c4 07                 a0 = t2 + a5
 10388: 95 99 08                 a2 = a2 + 0x8
 10391: 52 17 fe be              jump @780 if a0 != 4294967294
      :                          @786
 10395: 82 16 60                 s1 = u64 [sp + 0x60]
 10398: 82 65                    s0 = u64 [s1]
 10400: 82 1a 58                 a3 = u64 [sp + 0x58]
 10403: 82 a3 f8                 t1 = u64 [a3 + 0xfffffffffffffff8]
 10406: 82 1c 20                 a5 = u64 [sp + 0x20]
 10409: 28 8f fe                 jump @757
      :                          @787
 10412: 64 63                    t1 = s1
 10414: 33 0b                    a4 = 0
 10416: 49 1a f8                 u64 [a3 + 4294967288] = 0
 10419: 33 02 01                 t0 = 0x1
 10422: 33 09 50 00 01           a2 = 0x10050
 10427: 33 0a ff                 a3 = 0xffffffffffffffff
 10430: 82 17 80 00              a0 = u64 [sp + 0x80]
 10434: 82 1c 48                 a5 = u64 [sp + 0x48]
 10437: 82 14                    t2 = u64 [sp]
 10439: 01                       fallthrough
      :                          @788
 10440: 84 bb 01                 a4 = a4 & 0x1
 10443: 52 0b 46                 jump @792 if a4 != 0
      :                          @789
 10446: 82 18 78                 a1 = u64 [sp + 0x78]
 10449: ae 87 e0 00              jump @807 if a0 >=u a1
      :                          @790
 10453: 97 75 03                 s0 = a0 << 0x3
 10456: d8 07 06                 s1 = a0 <u ra
 10459: c8 5c 0b                 a4 = a5 + s0
 10462: 93 6b                    a4 = 0 if s1 == 0
 10464: da b9 0b                 a4 = a2 if a4 == 0
 10467: 82 18 68                 a1 = u64 [sp + 0x68]
 10470: c8 85 05                 s0 = s0 + a1
 10473: 82 56                    s1 = u64 [s0]
 10475: 82 bb                    a4 = u64 [a4]
 10477: e4 27 05                 s0 = maxu(a0, t0)
 10480: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 10483: d8 b6 08                 a1 = s1 <u a4
 10486: d3 6b 0b                 a4 = a4 ^ s1
 10489: 8e b6                    s1 = a4 >u 0
 10491: db 8a 06                 s1 = a3 if a1 != 0
 10494: 88 7b 01                 a4 = a0 <u 0x1
 10497: 64 57                    a0 = s0
 10499: 51 06 c5                 jump @788 if s1 == 0
      :                          @791
 10502: 84 67 ff 00              a0 = s1 & 0xff
 10506: 33 08 01                 a1 = 0x1
 10509: ab 87 8f 00              jump @803 if a0 != a1
      :                          @792
 10513: 33 07                    a0 = 0
 10515: 51 0c 43                 jump @799 if a5 == 0
      :                          @793
 10518: 33 08                    a1 = 0
 10520: 28 34                    jump @796
      :                          @794
 10522: 82 c9                    a2 = u64 [a5]
 10524: 01                       fallthrough
      :                          @795
 10525: 82 15 68                 s0 = u64 [sp + 0x68]
 10528: 82 5a                    a3 = u64 [s0]
 10530: c9 9a 06                 s1 = a3 - a2
 10533: 84 77 01                 a0 = a0 & 0x1
 10536: c9 76 0b                 a4 = s1 - a0
 10539: 7b 5b                    u64 [s0] = a4
 10541: 95 5b 08                 a4 = s0 + 0x8
 10544: 95 88 01                 a1 = a1 + 0x1
 10547: d8 9a 09                 a2 = a3 <u a2
 10550: d8 76 07                 a0 = s1 <u a0
 10553: d4 97 07                 a0 = a0 | a2
 10556: 95 44 f8                 t2 = t2 + 0xfffffffffffffff8
 10559: 95 cc 08                 a5 = a5 + 0x8
 10562: 7b 1b 68                 u64 [sp + 0x68] = a4
 10565: 82 19 80 00              a2 = u64 [sp + 0x80]
 10569: aa 89 48                 jump @802 if a2 == a1
      :                          @796
 10572: 51 04 45                 jump @802 if t2 == 0
      :                          @797
 10575: ac 08 cb                 jump @794 if a1 <u ra
      :                          @798
 10578: 33 09                    a2 = 0
 10580: 28 c9                    jump @795
      :                          @799
 10582: 82 1a 78                 a3 = u64 [sp + 0x78]
 10585: 97 a8 03                 a1 = a3 << 0x3
 10588: 98 89 03                 a2 = a1 >> 0x3
 10591: 95 aa fd                 a3 = a3 + 0xfffffffffffffffd
 10594: e6 a9 09                 a2 = minu(a2, a3)
 10597: 97 99 03                 a2 = a2 << 0x3
 10600: 82 1a 68                 a3 = u64 [sp + 0x68]
 10603: c8 a9 09                 a2 = a2 + a3
 10606: 95 99 08                 a2 = a2 + 0x8
 10609: 01                       fallthrough
      :                          @800
 10610: 51 08 1f                 jump @802 if a1 == 0
      :                          @801
 10613: 82 1b 68                 a4 = u64 [sp + 0x68]
 10616: 82 ba                    a3 = u64 [a4]
 10618: 95 b6 08                 s1 = a4 + 0x8
 10621: 84 77 01                 a0 = a0 & 0x1
 10624: c9 7a 0c                 a5 = a3 - a0
 10627: d8 7a 07                 a0 = a3 <u a0
 10630: 7b bc                    u64 [a4] = a5
 10632: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 10635: 7b 16 68                 u64 [sp + 0x68] = s1
 10638: ab 96 e4                 jump @800 if s1 != a2
      :                          @802
 10641: 82 38                    a1 = u64 [t1]
 10643: 84 77 01                 a0 = a0 & 0x1
 10646: c9 78 08                 a1 = a1 - a0
 10649: 7b 38                    u64 [t1] = a1
 10651: 01                       fallthrough
      :                          @803
 10652: 82 10 98 00              ra = u64 [sp + 0x98]
 10656: 82 15 90 00              s0 = u64 [sp + 0x90]
 10660: 82 16 88 00              s1 = u64 [sp + 0x88]
 10664: 95 11 a0 00              sp = sp + 0xa0
 10668: 32 00                    ret
      :                          @804
 10670: 00                       trap
      :                          @805
 10671: 00                       trap
      :                          @806
 10672: 00                       trap
      :                          @807
 10673: 00                       trap
      :                          @808 [@dyn 62]
 10674: 33 07                    a0 = 0
 10676: 32 00                    ret
      :                          @809
 10678: 00                       trap
      :                          @810 [@dyn 63]
 10679: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 10682: 7b 10                    u64 [sp] = ra
 10684: 82 82                    t0 = u64 [a1]
 10686: 84 2b 01                 a4 = t0 & 0x1
 10689: 52 0b 40                 jump @813 if a4 != 0
      :                          @811
 10692: 95 28 10                 a1 = t0 + 0x10
 10695: 33 0b 01                 a4 = 0x1
 10698: 3e 02 00 00 03           u64 [0x30000] = t0
 10703: 3e 04 08 00 03           u64 [0x30008] = t2
 10708: 82 82                    t0 = u64 [a1]
 10710: c8 b2 04                 t2 = t0 + a4
 10713: 7b 84                    u64 [a1] = t2
 10715: 64 28                    a1 = t0
 10717: 3a 02 00 00 03           t0 = u64 [0x30000]
 10722: 3a 04 08 00 03           t2 = u64 [0x30008]
 10727: 57 08 cf                 jump @809 if a1 <s 0
      :                          @812
 10730: 7b 79 08                 u64 [a0 + 0x8] = a2
 10733: 7b 7a 10                 u64 [a0 + 0x10] = a3
 10736: 7b 72 18                 u64 [a0 + 0x18] = t0
 10739: 33 08 28 01 01           a1 = 0x10128
 10744: 7b 78                    u64 [a0] = a1
 10746: 82 10                    ra = u64 [sp]
 10748: 95 11 08                 sp = sp + 0x8
 10751: 32 00                    ret
      :                          @813
 10753: 64 ac                    a5 = a3
 10755: 84 2a fe                 a3 = t0 & 0xfffffffffffffffe
 10758: 64 9b                    a4 = a2
 10760: 64 29                    a2 = t0
 10762: 50 20 80 00 78 05        ra = 128, jump @943
      :                          @814 [@dyn 64]
 10768: 82 10                    ra = u64 [sp]
 10770: 95 11 08                 sp = sp + 0x8
 10773: 32 00                    ret
      :                          @815 [@dyn 65]
 10775: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 10778: 7b 10 20                 u64 [sp + 0x20] = ra
 10781: 7b 15 18                 u64 [sp + 0x18] = s0
 10784: 7b 16 10                 u64 [sp + 0x10] = s1
 10787: 82 88                    a1 = u64 [a1]
 10789: 84 8b 01                 a4 = a1 & 0x1
 10792: 52 0b 0b                 jump @818 if a4 != 0
      :                          @816
 10795: 50 20 84 00 ff 03        ra = 132, jump @906
      :                          @817 [@dyn 66]
 10801: 28 2c                    jump @820
      :                          @818
 10803: 84 85 fe                 s0 = a1 & 0xfffffffffffffffe
 10806: c8 a9 08                 a1 = a2 + a3
 10809: c9 58 08                 a1 = a1 - s0
 10812: 7b 18 08                 u64 [sp + 0x8] = a1
 10815: 64 76                    s1 = a0
 10817: 64 57                    a0 = s0
 10819: 64 98                    a1 = a2
 10821: 64 a9                    a2 = a3
 10823: 7b 1a                    u64 [sp] = a3
 10825: 50 20 86 00 a4 60        ra = 134, jump @1907
      :                          @819 [@dyn 67]
 10831: 82 17 08                 a0 = u64 [sp + 0x8]
 10834: 7b 67                    u64 [s1] = a0
 10836: 7b 65 08                 u64 [s1 + 0x8] = s0
 10839: 82 17                    a0 = u64 [sp]
 10841: 7b 67 10                 u64 [s1 + 0x10] = a0
 10844: 01                       fallthrough
      :                          @820
 10845: 82 10 20                 ra = u64 [sp + 0x20]
 10848: 82 15 18                 s0 = u64 [sp + 0x18]
 10851: 82 16 10                 s1 = u64 [sp + 0x10]
 10854: 95 11 28                 sp = sp + 0x28
 10857: 32 00                    ret
      :                          @821 [@dyn 68]
 10859: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 10862: 7b 10 30                 u64 [sp + 0x30] = ra
 10865: 7b 15 28                 u64 [sp + 0x28] = s0
 10868: 7b 16 20                 u64 [sp + 0x20] = s1
 10871: 82 88                    a1 = u64 [a1]
 10873: 64 a4                    t2 = a3
 10875: 84 8b 01                 a4 = a1 & 0x1
 10878: 52 0b 0d                 jump @824 if a4 != 0
      :                          @822
 10881: 64 4a                    a3 = t2
 10883: 50 20 8a 00 c1 01        ra = 138, jump @866
      :                          @823 [@dyn 69]
 10889: 28 53                    jump @830
      :                          @824
 10891: 84 88 fe                 a1 = a1 & 0xfffffffffffffffe
 10894: c9 89 02                 t0 = a2 - a1
 10897: c8 42 0a                 a3 = t0 + t2
 10900: 98 ab 11                 a4 = a3 >> 0x11
 10903: 98 ac 0a                 a5 = a3 >> 0xa
 10906: 68 cc                    a5 = clz a5
 10908: 97 cc 02                 a5 = a5 << 0x2
 10911: 9a c6 01 01              s1 = 0x101 - a5
 10915: 33 0c 1d                 a5 = 0x1d
 10918: da b6 0c                 a5 = s1 if a4 == 0
 10921: aa 89 24                 jump @828 if a2 == a1
      :                          @825
 10924: 98 c6 05                 s1 = a5 >> 0x5
 10927: c8 26 0b                 a4 = s1 + t0
 10930: 98 b9 3b                 a2 = a4 >> 0x3b
 10933: 52 09 35                 jump @831 if a2 != 0
      :                          @826
 10936: 97 bb 05                 a4 = a4 << 0x5
 10939: 84 cc 1d                 a5 = a5 & 0x1d
 10942: d4 bc 0c                 a5 = a5 | a4
 10945: 01                       fallthrough
      :                          @827
 10946: c8 28 08                 a1 = a1 + t0
 10949: e4 2a 09                 a2 = maxu(a3, t0)
 10952: c9 29 0a                 a3 = a2 - t0
 10955: 28 05                    jump @829
      :                          @828
 10957: 64 a4                    t2 = a3
 10959: 01                       fallthrough
      :                          @829
 10960: 7b 78                    u64 [a0] = a1
 10962: 7b 7a 08                 u64 [a0 + 0x8] = a3
 10965: 7b 74 10                 u64 [a0 + 0x10] = t2
 10968: 7b 7c 18                 u64 [a0 + 0x18] = a5
 10971: 01                       fallthrough
      :                          @830
 10972: 82 10 30                 ra = u64 [sp + 0x30]
 10975: 82 15 28                 s0 = u64 [sp + 0x28]
 10978: 82 16 20                 s1 = u64 [sp + 0x20]
 10981: 95 11 38                 sp = sp + 0x38
 10984: 32 00                    ret
      :                          @831
 10986: 7b 16 10                 u64 [sp + 0x10] = s1
 10989: 33 0b 80 00 03           a4 = 0x30080
 10994: 95 b9 00 10              a2 = a4 + 0x1000
 10998: 7b 19 18                 u64 [sp + 0x18] = a2
 11001: 33 06 d0 0f              s1 = 0xfd0
 11005: 82 13 18                 t1 = u64 [sp + 0x18]
 11008: 01                       fallthrough
      :                          @832
 11009: 82 19 18                 a2 = u64 [sp + 0x18]
 11012: 82 95                    s0 = u64 [a2]
 11014: ac 56 bf d5              jump @24 if s1 <u s0
      :                          @833
 11018: c9 5b 0b                 a4 = a4 - s0
 11021: 95 bb ff 07              a4 = a4 + 0x7ff
 11025: 95 b9 d9 07              a2 = a4 + 0x7d9
 11029: 7b 19 08                 u64 [sp + 0x8] = a2
 11032: 84 99 07                 a2 = a2 & 0x7
 11035: 7b 19                    u64 [sp] = a2
 11037: c8 95 0b                 a4 = s0 + a2
 11040: 95 bb 28                 a4 = a4 + 0x28
 11043: 01                       fallthrough
      :                          @834
 11044: 82 30                    ra = u64 [t1]
 11046: ab 50 06                 jump @836 if ra != s0
      :                          @835
 11049: 7b 3b                    u64 [t1] = a4
 11051: 01                       fallthrough
      :                          @836
 11052: 33 0b 80 00 03           a4 = 0x30080
 11057: ab 50 d0                 jump @832 if ra != s0
      :                          @837
 11060: 97 cc 3b                 a5 = a5 << 0x3b
 11063: 82 19 08                 a2 = u64 [sp + 0x8]
 11066: 82 1b                    a4 = u64 [sp]
 11068: c9 b9 09                 a2 = a2 - a4
 11071: 82 1b 10                 a4 = u64 [sp + 0x10]
 11074: c8 ab 05                 s0 = a4 + a3
 11077: c9 b8 06                 s1 = a1 - a4
 11080: 98 cc 3d                 a5 = a5 >> 0x3d
 11083: 7b 95                    u64 [a2] = s0
 11085: 7b 96 08                 u64 [a2 + 0x8] = s1
 11088: 7b 95 10                 u64 [a2 + 0x10] = s0
 11091: 7b 9c 18                 u64 [a2 + 0x18] = a5
 11094: 33 0b 01                 a4 = 0x1
 11097: 7b 9b 20                 u64 [a2 + 0x20] = a4
 11100: 64 9c                    a5 = a2
 11102: 28 64 ff                 jump @827
      :                          @838 [@dyn 70]
 11105: 82 78                    a1 = u64 [a0]
 11107: 84 89 01                 a2 = a1 & 0x1
 11110: 33 07 01                 a0 = 0x1
 11113: 52 09 0e                 jump @840 if a2 != 0
      :                          @839
 11116: 82 87 10                 a0 = u64 [a1 + 0x10]
 11119: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 11122: 88 77 01                 a0 = a0 <u 0x1
 11125: 32 00                    ret
      :                          @840
 11127: 32 00                    ret
      :                          @841 [@dyn 71]
 11129: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 11132: 82 77                    a0 = u64 [a0]
 11134: 84 7a 01                 a3 = a0 & 0x1
 11137: 52 0a 86 00              jump @857 if a3 != 0
      :                          @842
 11141: 95 78 10                 a1 = a0 + 0x10
 11144: 3e 02 00 00 03           u64 [0x30000] = t0
 11149: 3e 04 08 00 03           u64 [0x30008] = t2
 11154: 82 82                    t0 = u64 [a1]
 11156: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 11159: 7b 84                    u64 [a1] = t2
 11161: 64 28                    a1 = t0
 11163: 3a 02 00 00 03           t0 = u64 [0x30000]
 11168: 3a 04 08 00 03           t2 = u64 [0x30008]
 11173: 33 09 01                 a2 = 0x1
 11176: ab 98 96 00              jump @864 if a1 != a2
      :                          @843
 11180: 82 74 08                 t2 = u64 [a0 + 0x8]
 11183: 57 04 94 00              jump @865 if t2 <s 0
      :                          @844
 11187: 33 02 00 10              t0 = 0x1000
 11191: ac 42 2c                 jump @850 if t0 <u t2
      :                          @845
 11194: 82 73                    t1 = u64 [a0]
 11196: 33 0b 80 00 03           a4 = 0x30080
 11201: 95 b9 00 10              a2 = a4 + 0x1000
 11205: 01                       fallthrough
      :                          @846
 11206: 82 9c                    a5 = u64 [a2]
 11208: c9 c9 0b                 a4 = a2 - a5
 11211: ab 3b 18                 jump @850 if a4 != t1
      :                          @847
 11214: c9 4c 0b                 a4 = a5 - t2
 11217: 01                       fallthrough
      :                          @848
 11218: 82 9a                    a3 = u64 [a2]
 11220: ab ca f2                 jump @846 if a3 != a5
      :                          @849
 11223: 7b 9b                    u64 [a2] = a4
 11225: 33 09 80 00 03           a2 = 0x30080
 11230: c8 29 09                 a2 = a2 + t0
 11233: 28 0b                    jump @851
      :                          @850
 11235: 33 09 80 00 03           a2 = 0x30080
 11240: c8 29 09                 a2 = a2 + t0
 11243: 01                       fallthrough
      :                          @851
 11244: 82 98                    a1 = u64 [a2]
 11246: c9 89 0a                 a3 = a2 - a1
 11249: ab 7a 4d                 jump @864 if a3 != a0
      :                          @852
 11252: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
 11255: 01                       fallthrough
      :                          @853
 11256: 82 9b                    a4 = u64 [a2]
 11258: ab 8b f2                 jump @851 if a4 != a1
      :                          @854
 11261: 7b 9a                    u64 [a2] = a3
 11263: 33 0c                    a5 = 0
 11265: 01                       fallthrough
      :                          @855
 11266: ab 8b ea                 jump @851 if a4 != a1
      :                          @856
 11269: 28 39                    jump @864
      :                          @857
 11271: 84 72 fe                 t0 = a0 & 0xfffffffffffffffe
 11274: c8 98 08                 a1 = a1 + a2
 11277: c9 28 08                 a1 = a1 - t0
 11280: 57 08 33                 jump @865 if a1 <s 0
      :                          @858
 11283: 33 09 00 10              a2 = 0x1000
 11287: ac 89 27                 jump @864 if a2 <u a1
      :                          @859
 11290: 33 0a 80 00 03           a3 = 0x30080
 11295: 95 a9 00 10              a2 = a3 + 0x1000
 11299: 01                       fallthrough
      :                          @860
 11300: 82 9a                    a3 = u64 [a2]
 11302: c9 a9 0b                 a4 = a2 - a3
 11305: ab 2b 15                 jump @864 if a4 != t0
      :                          @861
 11308: c9 8a 0b                 a4 = a3 - a1
 11311: 01                       fallthrough
      :                          @862
 11312: 82 9c                    a5 = u64 [a2]
 11314: ab ac f2                 jump @860 if a5 != a3
      :                          @863
 11317: 7b 9b                    u64 [a2] = a4
 11319: 33 07                    a0 = 0
 11321: 95 11 08                 sp = sp + 0x8
 11324: 32 00                    ret
      :                          @864
 11326: 95 11 08                 sp = sp + 0x8
 11329: 32 00                    ret
      :                          @865
 11331: 00                       trap
      :                          @866
 11332: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 11335: 7b 10 30                 u64 [sp + 0x30] = ra
 11338: 7b 15 28                 u64 [sp + 0x28] = s0
 11341: 7b 16 20                 u64 [sp + 0x20] = s1
 11344: 82 8b 10                 a4 = u64 [a1 + 0x10]
 11347: 7b 17 10                 u64 [sp + 0x10] = a0
 11350: 33 0c 01                 a5 = 0x1
 11353: ab cb 6b                 jump @876 if a4 != a5
      :                          @867
 11356: 82 84                    t2 = u64 [a1]
 11358: 82 87 08                 a0 = u64 [a1 + 0x8]
 11361: 33 00 80 00 03           ra = 0x30080
 11366: 95 02 00 10              t0 = ra + 0x1000
 11370: 01                       fallthrough
      :                          @868
 11371: 82 26                    s1 = u64 [t0]
 11373: c9 62 0c                 a5 = t0 - s1
 11376: ab 8c 0f                 jump @872 if a5 != a1
      :                          @869
 11379: 95 6c e8                 a5 = s1 + 0xffffffffffffffe8
 11382: 01                       fallthrough
      :                          @870
 11383: 82 2b                    a4 = u64 [t0]
 11385: ab 6b f2                 jump @868 if a4 != s1
      :                          @871
 11388: 7b 2c                    u64 [t0] = a5
 11390: 01                       fallthrough
      :                          @872
 11391: c9 49 03                 t1 = a2 - t2
 11394: c8 3a 0a                 a3 = a3 + t1
 11397: 98 7b 11                 a4 = a0 >> 0x11
 11400: 98 78 0a                 a1 = a0 >> 0xa
 11403: 68 88                    a1 = clz a1
 11405: 97 88 02                 a1 = a1 << 0x2
 11408: 9a 86 01 01              s1 = 0x101 - a1
 11412: 33 08 1d                 a1 = 0x1d
 11415: da b6 08                 a1 = s1 if a4 == 0
 11418: aa 49 12 01              jump @898 if a2 == t2
      :                          @873
 11422: 98 8b 05                 a4 = a1 >> 0x5
 11425: c8 3b 0c                 a5 = a4 + t1
 11428: 98 c9 3b                 a2 = a5 >> 0x3b
 11431: 52 09 21 01              jump @899 if a2 != 0
      :                          @874
 11435: 97 cb 05                 a4 = a5 << 0x5
 11438: 84 88 1d                 a1 = a1 & 0x1d
 11441: d4 b8 08                 a1 = a1 | a4
 11444: 01                       fallthrough
      :                          @875
 11445: c8 34 04                 t2 = t2 + t1
 11448: e4 3a 0a                 a3 = maxu(a3, t1)
 11451: c9 3a 0a                 a3 = a3 - t1
 11454: c9 37 07                 a0 = a0 - t1
 11457: 28 eb 00                 jump @898
      :                          @876
 11460: 57 0a 65 01              jump @905 if a3 <s 0
      :                          @877
 11464: 33 05 01                 s0 = 0x1
 11467: 33 0b 01                 a4 = 0x1
 11470: 51 0a 35                 jump @883 if a3 == 0
      :                          @878
 11473: 33 0c 00 10              a5 = 0x1000
 11477: 33 02 80 00 03           t0 = 0x30080
 11482: c8 c2 03                 t1 = t0 + a5
 11485: 01                       fallthrough
      :                          @879
 11486: 82 36                    s1 = u64 [t1]
 11488: c8 a6 0b                 a4 = s1 + a3
 11491: ac 6b e2 d3              jump @24 if a4 <u s1
      :                          @880
 11495: 98 b5 0c                 s0 = a4 >> 0xc
 11498: 52 05 db d3              jump @24 if s0 != 0
      :                          @881
 11502: 82 35                    s0 = u64 [t1]
 11504: ab 65 ee                 jump @879 if s0 != s1
      :                          @882
 11507: 7b 3b                    u64 [t1] = a4
 11509: c9 b2 0b                 a4 = t0 - a4
 11512: 33 0c 00 10              a5 = 0x1000
 11516: c8 cb 0b                 a4 = a4 + a5
 11519: 33 05 01                 s0 = 0x1
 11522: 01                       fallthrough
      :                          @883
 11523: 7b 1b 08                 u64 [sp + 0x8] = a4
 11526: 64 b7                    a0 = a4
 11528: 64 86                    s1 = a1
 11530: 64 98                    a1 = a2
 11532: 7b 1a                    u64 [sp] = a3
 11534: 64 a9                    a2 = a3
 11536: 50 20 90 00 23 5d        ra = 144, jump @1890
      :                          @884 [@dyn 72]
 11542: 95 69 10                 a2 = s1 + 0x10
 11545: 3e 02 00 00 03           u64 [0x30000] = t0
 11550: 3e 04 08 00 03           u64 [0x30008] = t2
 11555: 82 92                    t0 = u64 [a2]
 11557: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 11560: 7b 94                    u64 [a2] = t2
 11562: 64 29                    a2 = t0
 11564: 3a 02 00 00 03           t0 = u64 [0x30000]
 11569: 3a 04 08 00 03           t2 = u64 [0x30008]
 11574: ab 59 59                 jump @897 if a2 != s0
      :                          @885
 11577: 64 68                    a1 = s1
 11579: 82 69 08                 a2 = u64 [s1 + 0x8]
 11582: 57 09 ea 00              jump @904 if a2 <s 0
      :                          @886
 11586: 33 02 00 10              t0 = 0x1000
 11590: ac 92 2c                 jump @892 if t0 <u a2
      :                          @887
 11593: 82 83                    t1 = u64 [a1]
 11595: 33 0c 80 00 03           a5 = 0x30080
 11600: 95 c6 00 10              s1 = a5 + 0x1000
 11604: 01                       fallthrough
      :                          @888
 11605: 82 6a                    a3 = u64 [s1]
 11607: c9 a6 0c                 a5 = s1 - a3
 11610: ab 3c 18                 jump @892 if a5 != t1
      :                          @889
 11613: c9 9a 0c                 a5 = a3 - a2
 11616: 01                       fallthrough
      :                          @890
 11617: 82 65                    s0 = u64 [s1]
 11619: ab a5 f2                 jump @888 if s0 != a3
      :                          @891
 11622: 7b 6c                    u64 [s1] = a5
 11624: 33 0a 80 00 03           a3 = 0x30080
 11629: c8 2a 0a                 a3 = a3 + t0
 11632: 28 0b                    jump @893
      :                          @892
 11634: 33 0a 80 00 03           a3 = 0x30080
 11639: c8 2a 0a                 a3 = a3 + t0
 11642: 01                       fallthrough
      :                          @893
 11643: 82 a9                    a2 = u64 [a3]
 11645: c9 9a 0b                 a4 = a3 - a2
 11648: ab 8b 0f                 jump @897 if a4 != a1
      :                          @894
 11651: 95 9b e8                 a4 = a2 + 0xffffffffffffffe8
 11654: 01                       fallthrough
      :                          @895
 11655: 82 ac                    a5 = u64 [a3]
 11657: ab 9c f2                 jump @893 if a5 != a2
      :                          @896
 11660: 7b ab                    u64 [a3] = a4
 11662: 01                       fallthrough
      :                          @897
 11663: 82 1a                    a3 = u64 [sp]
 11665: 98 a9 11                 a2 = a3 >> 0x11
 11668: 98 a8 0a                 a1 = a3 >> 0xa
 11671: 68 88                    a1 = clz a1
 11673: 97 88 02                 a1 = a1 << 0x2
 11676: 9a 8b 01 01              a4 = 0x101 - a1
 11680: 33 08 1d                 a1 = 0x1d
 11683: da 9b 08                 a1 = a4 if a2 == 0
 11686: 64 a7                    a0 = a3
 11688: 82 14 08                 t2 = u64 [sp + 0x8]
 11691: 01                       fallthrough
      :                          @898
 11692: 82 19 10                 a2 = u64 [sp + 0x10]
 11695: 7b 94                    u64 [a2] = t2
 11697: 7b 9a 08                 u64 [a2 + 0x8] = a3
 11700: 7b 97 10                 u64 [a2 + 0x10] = a0
 11703: 7b 98 18                 u64 [a2 + 0x18] = a1
 11706: 82 10 30                 ra = u64 [sp + 0x30]
 11709: 82 15 28                 s0 = u64 [sp + 0x28]
 11712: 82 16 20                 s1 = u64 [sp + 0x20]
 11715: 95 11 38                 sp = sp + 0x38
 11718: 32 00                    ret
      :                          @899
 11720: 7b 1b                    u64 [sp] = a4
 11722: 7b 14 08                 u64 [sp + 0x8] = t2
 11725: 95 00 00 10              ra = ra + 0x1000
 11729: 33 0c d0 0f              a5 = 0xfd0
 11733: 01                       fallthrough
      :                          @900
 11734: 82 02                    t0 = u64 [ra]
 11736: ac 2c ed d2              jump @24 if a5 <u t0
      :                          @901
 11740: 33 09 80 00 03           a2 = 0x30080
 11745: c9 29 09                 a2 = a2 - t0
 11748: 95 99 ff 07              a2 = a2 + 0x7ff
 11752: 95 96 d9 07              s1 = a2 + 0x7d9
 11756: 84 69 07                 a2 = s1 & 0x7
 11759: c8 92 0b                 a4 = t0 + a2
 11762: 95 bb 28                 a4 = a4 + 0x28
 11765: 01                       fallthrough
      :                          @902
 11766: 82 05                    s0 = u64 [ra]
 11768: ab 25 de                 jump @900 if s0 != t0
      :                          @903
 11771: 7b 0b                    u64 [ra] = a4
 11773: 97 88 3b                 a1 = a1 << 0x3b
 11776: c9 96 06                 s1 = s1 - a2
 11779: 82 1c                    a5 = u64 [sp]
 11781: c8 7c 09                 a2 = a5 + a0
 11784: c8 ac 0b                 a4 = a5 + a3
 11787: 82 14 08                 t2 = u64 [sp + 0x8]
 11790: c9 c4 05                 s0 = t2 - a5
 11793: 98 88 3d                 a1 = a1 >> 0x3d
 11796: 7b 69                    u64 [s1] = a2
 11798: 7b 65 08                 u64 [s1 + 0x8] = s0
 11801: 7b 6b 10                 u64 [s1 + 0x10] = a4
 11804: 7b 68 18                 u64 [s1 + 0x18] = a1
 11807: 49 16 20 01              u64 [s1 + 32] = 0x1
 11811: 64 68                    a1 = s1
 11813: 28 90 fe                 jump @875
      :                          @904
 11816: 00                       trap
      :                          @905
 11817: 00                       trap
      :                          @906
 11818: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 11821: 7b 10 30                 u64 [sp + 0x30] = ra
 11824: 7b 15 28                 u64 [sp + 0x28] = s0
 11827: 7b 16 20                 u64 [sp + 0x20] = s1
 11830: 64 86                    s1 = a1
 11832: 95 83 10                 t1 = a1 + 0x10
 11835: 01                       fallthrough
      :                          @907
 11836: 82 3b                    a4 = u64 [t1]
 11838: 52 1b 01 09              jump @909 if a4 != 1
      :                          @908
 11842: 49 03                    u64 [t1 + 0] = 0
 11844: 33 0c                    a5 = 0
 11846: 01                       fallthrough
      :                          @909
 11847: 7b 1a 10                 u64 [sp + 0x10] = a3
 11850: 52 1b 01 5c              jump @918 if a4 != 1
      :                          @910
 11854: 7b 17 08                 u64 [sp + 0x8] = a0
 11857: 82 67                    a0 = u64 [s1]
 11859: 82 68 08                 a1 = u64 [s1 + 0x8]
 11862: 7b 18                    u64 [sp] = a1
 11864: 33 05 80 00 03           s0 = 0x30080
 11869: 95 55 00 10              s0 = s0 + 0x1000
 11873: 01                       fallthrough
      :                          @911
 11874: 82 58                    a1 = u64 [s0]
 11876: c9 85 0a                 a3 = s0 - a1
 11879: ab 6a 11                 jump @915 if a3 != s1
      :                          @912
 11882: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
 11885: 01                       fallthrough
      :                          @913
 11886: 82 5b                    a4 = u64 [s0]
 11888: ab 8b f2                 jump @911 if a4 != a1
      :                          @914
 11891: 7b 5a                    u64 [s0] = a3
 11893: 33 0c                    a5 = 0
 11895: 01                       fallthrough
      :                          @915
 11896: 64 98                    a1 = a2
 11898: 82 19 10                 a2 = u64 [sp + 0x10]
 11901: 64 75                    s0 = a0
 11903: 50 20 92 00 6e 5c        ra = 146, jump @1907
      :                          @916 [@dyn 73]
 11909: 64 52                    t0 = s0
 11911: 82 1c 08                 a5 = u64 [sp + 0x8]
 11914: 82 17                    a0 = u64 [sp]
 11916: 01                       fallthrough
      :                          @917
 11917: 7b c7                    u64 [a5] = a0
 11919: 7b c2 08                 u64 [a5 + 0x8] = t0
 11922: 82 17 10                 a0 = u64 [sp + 0x10]
 11925: 7b c7 10                 u64 [a5 + 0x10] = a0
 11928: 82 10 30                 ra = u64 [sp + 0x30]
 11931: 82 15 28                 s0 = u64 [sp + 0x28]
 11934: 82 16 20                 s1 = u64 [sp + 0x20]
 11937: 95 11 38                 sp = sp + 0x38
 11940: 32 00                    ret
      :                          @918
 11942: 82 18 10                 a1 = u64 [sp + 0x10]
 11945: 57 08 d8 00              jump @942 if a1 <s 0
      :                          @919
 11949: 33 08 01                 a1 = 0x1
 11952: 82 1a 10                 a3 = u64 [sp + 0x10]
 11955: 51 0a 2f                 jump @925 if a3 == 0
      :                          @920
 11958: 33 02 80 00 03           t0 = 0x30080
 11963: 95 28 00 10              a1 = t0 + 0x1000
 11967: 01                       fallthrough
      :                          @921
 11968: 82 8b                    a4 = u64 [a1]
 11970: 82 1a 10                 a3 = u64 [sp + 0x10]
 11973: c8 ba 0a                 a3 = a3 + a4
 11976: ac ba fd d1              jump @24 if a3 <u a4
      :                          @922
 11980: 98 ac 0c                 a5 = a3 >> 0xc
 11983: 52 0c f6 d1              jump @24 if a5 != 0
      :                          @923
 11987: 82 8c                    a5 = u64 [a1]
 11989: ab bc eb                 jump @921 if a5 != a4
      :                          @924
 11992: 7b 8a                    u64 [a1] = a3
 11994: c9 a2 0a                 a3 = t0 - a3
 11997: 95 a8 00 10              a1 = a3 + 0x1000
 12001: 01                       fallthrough
      :                          @925
 12002: 7b 17 08                 u64 [sp + 0x8] = a0
 12005: 7b 18                    u64 [sp] = a1
 12007: 64 87                    a0 = a1
 12009: 64 98                    a1 = a2
 12011: 82 19 10                 a2 = u64 [sp + 0x10]
 12014: 64 35                    s0 = t1
 12016: 50 20 94 00 43 5b        ra = 148, jump @1890
      :                          @926 [@dyn 74]
 12022: 3e 02 00 00 03           u64 [0x30000] = t0
 12027: 3e 04 08 00 03           u64 [0x30008] = t2
 12032: 82 52                    t0 = u64 [s0]
 12034: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 12037: 7b 54                    u64 [s0] = t2
 12039: 64 27                    a0 = t0
 12041: 3a 02 00 00 03           t0 = u64 [0x30000]
 12046: 3a 04 08 00 03           t2 = u64 [0x30008]
 12051: 33 08 01                 a1 = 0x1
 12054: ab 87 5f                 jump @940 if a0 != a1
      :                          @927
 12057: 82 67 08                 a0 = u64 [s1 + 0x8]
 12060: 57 07 64                 jump @941 if a0 <s 0
      :                          @928
 12063: 33 02 00 10              t0 = 0x1000
 12067: ac 72 23                 jump @934 if t0 <u a0
      :                          @929
 12070: 82 63                    t1 = u64 [s1]
 12072: 33 0a 80 00 03           a3 = 0x30080
 12077: 95 aa 00 10              a3 = a3 + 0x1000
 12081: 01                       fallthrough
      :                          @930
 12082: 82 ab                    a4 = u64 [a3]
 12084: c9 ba 0c                 a5 = a3 - a4
 12087: ab 3c 0f                 jump @934 if a5 != t1
      :                          @931
 12090: c9 7b 0c                 a5 = a4 - a0
 12093: 01                       fallthrough
      :                          @932
 12094: 82 a8                    a1 = u64 [a3]
 12096: ab b8 f2                 jump @930 if a1 != a4
      :                          @933
 12099: 7b ac                    u64 [a3] = a5
 12101: 01                       fallthrough
      :                          @934
 12102: 33 08 80 00 03           a1 = 0x30080
 12107: c8 28 08                 a1 = a1 + t0
 12110: 82 1c 08                 a5 = u64 [sp + 0x8]
 12113: 82 12                    t0 = u64 [sp]
 12115: 01                       fallthrough
      :                          @935
 12116: 82 87                    a0 = u64 [a1]
 12118: c9 78 09                 a2 = a1 - a0
 12121: ab 69 16                 jump @939 if a2 != s1
      :                          @936
 12124: 95 79 e8                 a2 = a0 + 0xffffffffffffffe8
 12127: 01                       fallthrough
      :                          @937
 12128: 82 8a                    a3 = u64 [a1]
 12130: ab 7a f2                 jump @935 if a3 != a0
      :                          @938
 12133: 7b 89                    u64 [a1] = a2
 12135: 33 0b                    a4 = 0
 12137: 82 17 10                 a0 = u64 [sp + 0x10]
 12140: 28 21 ff                 jump @917
      :                          @939
 12143: 82 17 10                 a0 = u64 [sp + 0x10]
 12146: 28 1b ff                 jump @917
      :                          @940
 12149: 82 17 10                 a0 = u64 [sp + 0x10]
 12152: 82 1c 08                 a5 = u64 [sp + 0x8]
 12155: 82 12                    t0 = u64 [sp]
 12157: 28 10 ff                 jump @917
      :                          @941
 12160: 00                       trap
      :                          @942
 12161: 00                       trap
      :                          @943
 12162: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 12165: 7b 10 28                 u64 [sp + 0x28] = ra
 12168: 7b 15 20                 u64 [sp + 0x20] = s0
 12171: 7b 16 18                 u64 [sp + 0x18] = s1
 12174: 7b 1c 10                 u64 [sp + 0x10] = a5
 12177: 7b 1b 08                 u64 [sp + 0x8] = a4
 12180: 7b 17                    u64 [sp] = a0
 12182: 33 0b 80 00 03           a4 = 0x30080
 12187: 95 b3 00 10              t1 = a4 + 0x1000
 12191: 33 04 e0 0f              t2 = 0xfe0
 12195: 01                       fallthrough
      :                          @944
 12196: 82 32                    t0 = u64 [t1]
 12198: ac 24 1f d1              jump @24 if t2 <u t0
      :                          @945
 12202: c9 2b 06                 s1 = a4 - t0
 12205: 95 66 ff 07              s1 = s1 + 0x7ff
 12209: 95 60 e9 07              ra = s1 + 0x7e9
 12213: 84 06 07                 s1 = ra & 0x7
 12216: c8 62 05                 s0 = t0 + s1
 12219: 95 55 18                 s0 = s0 + 0x18
 12222: 01                       fallthrough
      :                          @946
 12223: 82 3c                    a5 = u64 [t1]
 12225: ab 2c e3                 jump @944 if a5 != t0
      :                          @947
 12228: 7b 35                    u64 [t1] = s0
 12230: c9 60 03                 t1 = ra - s1
 12233: 82 16 08                 s1 = u64 [sp + 0x8]
 12236: c9 a6 07                 a0 = s1 - a3
 12239: 82 1c 10                 a5 = u64 [sp + 0x10]
 12242: c8 c7 07                 a0 = a0 + a5
 12245: 7b 3a                    u64 [t1] = a3
 12247: 7b 37 08                 u64 [t1 + 0x8] = a0
 12250: 49 13 10 02              u64 [t1 + 16] = 0x2
 12254: 01                       fallthrough
      :                          @948
 12255: 82 8a                    a3 = u64 [a1]
 12257: ab 9a 19                 jump @950 if a3 != a2
      :                          @949
 12260: 7b 83                    u64 [a1] = t1
 12262: 82 18                    a1 = u64 [sp]
 12264: 7b 86 08                 u64 [a1 + 0x8] = s1
 12267: 7b 8c 10                 u64 [a1 + 0x10] = a5
 12270: 7b 83 18                 u64 [a1 + 0x18] = t1
 12273: 33 07 28 01 01           a0 = 0x10128
 12278: 7b 87                    u64 [a1] = a0
 12280: 28 53                    jump @956
      :                          @950
 12282: 95 a7 10                 a0 = a3 + 0x10
 12285: 3e 02 00 00 03           u64 [0x30000] = t0
 12290: 3e 04 08 00 03           u64 [0x30008] = t2
 12295: 82 72                    t0 = u64 [a0]
 12297: 95 24 01                 t2 = t0 + 0x1
 12300: 7b 74                    u64 [a0] = t2
 12302: 64 27                    a0 = t0
 12304: 3a 02 00 00 03           t0 = u64 [0x30000]
 12309: 3a 04 08 00 03           t2 = u64 [0x30008]
 12314: 57 07 9c f9              jump @809 if a0 <s 0
      :                          @951
 12318: 82 18                    a1 = u64 [sp]
 12320: 7b 86 08                 u64 [a1 + 0x8] = s1
 12323: 7b 8c 10                 u64 [a1 + 0x10] = a5
 12326: 7b 8a 18                 u64 [a1 + 0x18] = a3
 12329: 33 07 28 01 01           a0 = 0x10128
 12334: 7b 87                    u64 [a1] = a0
 12336: 95 b2 00 10              t0 = a4 + 0x1000
 12340: 01                       fallthrough
      :                          @952
 12341: 82 27                    a0 = u64 [t0]
 12343: c9 72 08                 a1 = t0 - a0
 12346: ab 38 11                 jump @956 if a1 != t1
      :                          @953
 12349: 95 78 e8                 a1 = a0 + 0xffffffffffffffe8
 12352: 01                       fallthrough
      :                          @954
 12353: 82 29                    a2 = u64 [t0]
 12355: ab 79 f2                 jump @952 if a2 != a0
      :                          @955
 12358: 7b 28                    u64 [t0] = a1
 12360: 33 0a                    a3 = 0
 12362: 01                       fallthrough
      :                          @956
 12363: 82 10 28                 ra = u64 [sp + 0x28]
 12366: 82 15 20                 s0 = u64 [sp + 0x20]
 12369: 82 16 18                 s1 = u64 [sp + 0x18]
 12372: 95 11 30                 sp = sp + 0x30
 12375: 32 00                    ret
      :                          @957 [@dyn 75]
 12377: 82 88                    a1 = u64 [a1]
 12379: 95 8b 10                 a4 = a1 + 0x10
 12382: 33 0c 01                 a5 = 0x1
 12385: 3e 02 00 00 03           u64 [0x30000] = t0
 12390: 3e 04 08 00 03           u64 [0x30008] = t2
 12395: 82 b2                    t0 = u64 [a4]
 12397: c8 c2 04                 t2 = t0 + a5
 12400: 7b b4                    u64 [a4] = t2
 12402: 64 2b                    a4 = t0
 12404: 3a 02 00 00 03           t0 = u64 [0x30000]
 12409: 3a 04 08 00 03           t2 = u64 [0x30008]
 12414: 57 0b 38 f9              jump @809 if a4 <s 0
      :                          @958
 12418: 7b 79 08                 u64 [a0 + 0x8] = a2
 12421: 7b 7a 10                 u64 [a0 + 0x10] = a3
 12424: 7b 78 18                 u64 [a0 + 0x18] = a1
 12427: 33 08 28 01 01           a1 = 0x10128
 12432: 7b 78                    u64 [a0] = a1
 12434: 32 00                    ret
      :                          @959 [@dyn 76]
 12436: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 12439: 7b 10                    u64 [sp] = ra
 12441: 82 88                    a1 = u64 [a1]
 12443: 50 20 9a 00 8f fd        ra = 154, jump @906
      :                          @960 [@dyn 77]
 12449: 82 10                    ra = u64 [sp]
 12451: 95 11 08                 sp = sp + 0x8
 12454: 32 00                    ret
      :                          @961 [@dyn 78]
 12456: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 12459: 7b 10                    u64 [sp] = ra
 12461: 82 88                    a1 = u64 [a1]
 12463: 50 20 9e 00 95 fb        ra = 158, jump @866
      :                          @962 [@dyn 79]
 12469: 82 10                    ra = u64 [sp]
 12471: 95 11 08                 sp = sp + 0x8
 12474: 32 00                    ret
      :                          @963 [@dyn 80]
 12476: 82 77                    a0 = u64 [a0]
 12478: 82 77 10                 a0 = u64 [a0 + 0x10]
 12481: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 12484: 88 77 01                 a0 = a0 <u 0x1
 12487: 32 00                    ret
      :                          @964 [@dyn 81]
 12489: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 12492: 7b 15 08                 u64 [sp + 0x8] = s0
 12495: 82 77                    a0 = u64 [a0]
 12497: 95 78 10                 a1 = a0 + 0x10
 12500: 3e 02 00 00 03           u64 [0x30000] = t0
 12505: 3e 04 08 00 03           u64 [0x30008] = t2
 12510: 82 82                    t0 = u64 [a1]
 12512: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 12515: 7b 84                    u64 [a1] = t2
 12517: 64 28                    a1 = t0
 12519: 3a 02 00 00 03           t0 = u64 [0x30000]
 12524: 3a 04 08 00 03           t2 = u64 [0x30008]
 12529: 33 09 01                 a2 = 0x1
 12532: ab 98 57                 jump @977 if a1 != a2
      :                          @965
 12535: 82 78 08                 a1 = u64 [a0 + 0x8]
 12538: 57 08 59                 jump @978 if a1 <s 0
      :                          @966
 12541: 33 03 00 10              t1 = 0x1000
 12545: 33 02 80 00 03           t0 = 0x30080
 12550: ac 83 24                 jump @972 if t1 <u a1
      :                          @967
 12553: 82 74                    t2 = u64 [a0]
 12555: 95 29 00 10              a2 = t0 + 0x1000
 12559: 01                       fallthrough
      :                          @968
 12560: 82 9a                    a3 = u64 [a2]
 12562: c9 a9 0c                 a5 = a2 - a3
 12565: ab 4c 15                 jump @972 if a5 != t2
      :                          @969
 12568: c9 8a 0c                 a5 = a3 - a1
 12571: 01                       fallthrough
      :                          @970
 12572: 82 9b                    a4 = u64 [a2]
 12574: ab ab f2                 jump @968 if a4 != a3
      :                          @971
 12577: 7b 9c                    u64 [a2] = a5
 12579: 33 05                    s0 = 0
 12581: c8 32 09                 a2 = t0 + t1
 12584: 28 06                    jump @973
      :                          @972
 12586: c8 32 09                 a2 = t0 + t1
 12589: 01                       fallthrough
      :                          @973
 12590: 82 98                    a1 = u64 [a2]
 12592: c9 89 0a                 a3 = a2 - a1
 12595: ab 7a 18                 jump @977 if a3 != a0
      :                          @974
 12598: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
 12601: 01                       fallthrough
      :                          @975
 12602: 82 9b                    a4 = u64 [a2]
 12604: ab 8b f2                 jump @973 if a4 != a1
      :                          @976
 12607: 7b 9a                    u64 [a2] = a3
 12609: 33 0c                    a5 = 0
 12611: 82 15 08                 s0 = u64 [sp + 0x8]
 12614: 95 11 10                 sp = sp + 0x10
 12617: 32 00                    ret
      :                          @977
 12619: 82 15 08                 s0 = u64 [sp + 0x8]
 12622: 95 11 10                 sp = sp + 0x10
 12625: 32 00                    ret
      :                          @978
 12627: 00                       trap
      :                          @979 [@dyn 82]
 12628: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 12631: 7b 10                    u64 [sp] = ra
 12633: 82 82                    t0 = u64 [a1]
 12635: 84 2b 01                 a4 = t0 & 0x1
 12638: 52 0b 41                 jump @982 if a4 != 0
      :                          @980
 12641: 95 28 10                 a1 = t0 + 0x10
 12644: 33 0b 01                 a4 = 0x1
 12647: 3e 02 00 00 03           u64 [0x30000] = t0
 12652: 3e 04 08 00 03           u64 [0x30008] = t2
 12657: 82 82                    t0 = u64 [a1]
 12659: c8 b2 04                 t2 = t0 + a4
 12662: 7b 84                    u64 [a1] = t2
 12664: 64 28                    a1 = t0
 12666: 3a 02 00 00 03           t0 = u64 [0x30000]
 12671: 3a 04 08 00 03           t2 = u64 [0x30008]
 12676: 57 08 32 f8              jump @809 if a1 <s 0
      :                          @981
 12680: 7b 79 08                 u64 [a0 + 0x8] = a2
 12683: 7b 7a 10                 u64 [a0 + 0x10] = a3
 12686: 7b 72 18                 u64 [a0 + 0x18] = t0
 12689: 33 08 28 01 01           a1 = 0x10128
 12694: 7b 78                    u64 [a0] = a1
 12696: 82 10                    ra = u64 [sp]
 12698: 95 11 08                 sp = sp + 0x8
 12701: 32 00                    ret
      :                          @982
 12703: 64 9b                    a4 = a2
 12705: 64 29                    a2 = t0
 12707: 64 ac                    a5 = a3
 12709: 64 2a                    a3 = t0
 12711: 50 20 a6 00 db fd        ra = 166, jump @943
      :                          @983 [@dyn 83]
 12717: 82 10                    ra = u64 [sp]
 12719: 95 11 08                 sp = sp + 0x8
 12722: 32 00                    ret
      :                          @984 [@dyn 84]
 12724: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 12727: 7b 10 20                 u64 [sp + 0x20] = ra
 12730: 7b 15 18                 u64 [sp + 0x18] = s0
 12733: 7b 16 10                 u64 [sp + 0x10] = s1
 12736: 82 85                    s0 = u64 [a1]
 12738: 84 58 01                 a1 = s0 & 0x1
 12741: 52 08 0d                 jump @987 if a1 != 0
      :                          @985
 12744: 64 58                    a1 = s0
 12746: 50 20 aa 00 60 fc        ra = 170, jump @906
      :                          @986 [@dyn 85]
 12752: 28 29                    jump @989
      :                          @987
 12754: c8 a9 08                 a1 = a2 + a3
 12757: c9 58 08                 a1 = a1 - s0
 12760: 7b 18 08                 u64 [sp + 0x8] = a1
 12763: 64 76                    s1 = a0
 12765: 64 57                    a0 = s0
 12767: 64 98                    a1 = a2
 12769: 64 a9                    a2 = a3
 12771: 7b 1a                    u64 [sp] = a3
 12773: 50 20 ac 00 08 59        ra = 172, jump @1907
      :                          @988 [@dyn 86]
 12779: 82 17 08                 a0 = u64 [sp + 0x8]
 12782: 7b 67                    u64 [s1] = a0
 12784: 7b 65 08                 u64 [s1 + 0x8] = s0
 12787: 82 17                    a0 = u64 [sp]
 12789: 7b 67 10                 u64 [s1 + 0x10] = a0
 12792: 01                       fallthrough
      :                          @989
 12793: 82 10 20                 ra = u64 [sp + 0x20]
 12796: 82 15 18                 s0 = u64 [sp + 0x18]
 12799: 82 16 10                 s1 = u64 [sp + 0x10]
 12802: 95 11 28                 sp = sp + 0x28
 12805: 32 00                    ret
      :                          @990 [@dyn 87]
 12807: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 12810: 7b 10 30                 u64 [sp + 0x30] = ra
 12813: 7b 15 28                 u64 [sp + 0x28] = s0
 12816: 7b 16 20                 u64 [sp + 0x20] = s1
 12819: 82 88                    a1 = u64 [a1]
 12821: 64 a4                    t2 = a3
 12823: 84 8b 01                 a4 = a1 & 0x1
 12826: 52 0b 0d                 jump @993 if a4 != 0
      :                          @991
 12829: 64 4a                    a3 = t2
 12831: 50 20 b0 00 25 fa        ra = 176, jump @866
      :                          @992 [@dyn 88]
 12837: 28 50                    jump @999
      :                          @993
 12839: c9 89 02                 t0 = a2 - a1
 12842: c8 42 0a                 a3 = t0 + t2
 12845: 98 ab 11                 a4 = a3 >> 0x11
 12848: 98 ac 0a                 a5 = a3 >> 0xa
 12851: 68 cc                    a5 = clz a5
 12853: 97 cc 02                 a5 = a5 << 0x2
 12856: 9a c6 01 01              s1 = 0x101 - a5
 12860: 33 0c 1d                 a5 = 0x1d
 12863: da b6 0c                 a5 = s1 if a4 == 0
 12866: aa 89 24                 jump @997 if a2 == a1
      :                          @994
 12869: 98 c6 05                 s1 = a5 >> 0x5
 12872: c8 26 0b                 a4 = s1 + t0
 12875: 98 b9 3b                 a2 = a4 >> 0x3b
 12878: 52 09 35                 jump @1000 if a2 != 0
      :                          @995
 12881: 97 bb 05                 a4 = a4 << 0x5
 12884: 84 cc 1d                 a5 = a5 & 0x1d
 12887: d4 bc 0c                 a5 = a5 | a4
 12890: 01                       fallthrough
      :                          @996
 12891: c8 28 08                 a1 = a1 + t0
 12894: e4 2a 09                 a2 = maxu(a3, t0)
 12897: c9 29 0a                 a3 = a2 - t0
 12900: 28 05                    jump @998
      :                          @997
 12902: 64 a4                    t2 = a3
 12904: 01                       fallthrough
      :                          @998
 12905: 7b 78                    u64 [a0] = a1
 12907: 7b 7a 08                 u64 [a0 + 0x8] = a3
 12910: 7b 74 10                 u64 [a0 + 0x10] = t2
 12913: 7b 7c 18                 u64 [a0 + 0x18] = a5
 12916: 01                       fallthrough
      :                          @999
 12917: 82 10 30                 ra = u64 [sp + 0x30]
 12920: 82 15 28                 s0 = u64 [sp + 0x28]
 12923: 82 16 20                 s1 = u64 [sp + 0x20]
 12926: 95 11 38                 sp = sp + 0x38
 12929: 32 00                    ret
      :                          @1000
 12931: 7b 16 10                 u64 [sp + 0x10] = s1
 12934: 33 0b 80 00 03           a4 = 0x30080
 12939: 95 b9 00 10              a2 = a4 + 0x1000
 12943: 7b 19 18                 u64 [sp + 0x18] = a2
 12946: 33 06 d0 0f              s1 = 0xfd0
 12950: 82 13 18                 t1 = u64 [sp + 0x18]
 12953: 01                       fallthrough
      :                          @1001
 12954: 82 19 18                 a2 = u64 [sp + 0x18]
 12957: 82 95                    s0 = u64 [a2]
 12959: ac 56 26 ce              jump @24 if s1 <u s0
      :                          @1002
 12963: c9 5b 0b                 a4 = a4 - s0
 12966: 95 bb ff 07              a4 = a4 + 0x7ff
 12970: 95 b9 d9 07              a2 = a4 + 0x7d9
 12974: 7b 19 08                 u64 [sp + 0x8] = a2
 12977: 84 99 07                 a2 = a2 & 0x7
 12980: 7b 19                    u64 [sp] = a2
 12982: c8 95 0b                 a4 = s0 + a2
 12985: 95 bb 28                 a4 = a4 + 0x28
 12988: 01                       fallthrough
      :                          @1003
 12989: 82 30                    ra = u64 [t1]
 12991: ab 50 06                 jump @1005 if ra != s0
      :                          @1004
 12994: 7b 3b                    u64 [t1] = a4
 12996: 01                       fallthrough
      :                          @1005
 12997: 33 0b 80 00 03           a4 = 0x30080
 13002: ab 50 d0                 jump @1001 if ra != s0
      :                          @1006
 13005: 97 cc 3b                 a5 = a5 << 0x3b
 13008: 82 19 08                 a2 = u64 [sp + 0x8]
 13011: 82 1b                    a4 = u64 [sp]
 13013: c9 b9 09                 a2 = a2 - a4
 13016: 82 1b 10                 a4 = u64 [sp + 0x10]
 13019: c8 ab 05                 s0 = a4 + a3
 13022: c9 b8 06                 s1 = a1 - a4
 13025: 98 cc 3d                 a5 = a5 >> 0x3d
 13028: 7b 95                    u64 [a2] = s0
 13030: 7b 96 08                 u64 [a2 + 0x8] = s1
 13033: 7b 95 10                 u64 [a2 + 0x10] = s0
 13036: 7b 9c 18                 u64 [a2 + 0x18] = a5
 13039: 33 0b 01                 a4 = 0x1
 13042: 7b 9b 20                 u64 [a2 + 0x20] = a4
 13045: 64 9c                    a5 = a2
 13047: 28 64 ff                 jump @996
      :                          @1007 [@dyn 89]
 13050: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 13053: 82 77                    a0 = u64 [a0]
 13055: 84 7a 01                 a3 = a0 & 0x1
 13058: 52 0a 86 00              jump @1023 if a3 != 0
      :                          @1008
 13062: 95 78 10                 a1 = a0 + 0x10
 13065: 3e 02 00 00 03           u64 [0x30000] = t0
 13070: 3e 04 08 00 03           u64 [0x30008] = t2
 13075: 82 82                    t0 = u64 [a1]
 13077: 95 24 ff                 t2 = t0 + 0xffffffffffffffff
 13080: 7b 84                    u64 [a1] = t2
 13082: 64 28                    a1 = t0
 13084: 3a 02 00 00 03           t0 = u64 [0x30000]
 13089: 3a 04 08 00 03           t2 = u64 [0x30008]
 13094: 33 09 01                 a2 = 0x1
 13097: ab 98 93 00              jump @1030 if a1 != a2
      :                          @1009
 13101: 82 74 08                 t2 = u64 [a0 + 0x8]
 13104: 57 04 91 00              jump @1031 if t2 <s 0
      :                          @1010
 13108: 33 02 00 10              t0 = 0x1000
 13112: ac 42 2c                 jump @1016 if t0 <u t2
      :                          @1011
 13115: 82 73                    t1 = u64 [a0]
 13117: 33 0b 80 00 03           a4 = 0x30080
 13122: 95 b9 00 10              a2 = a4 + 0x1000
 13126: 01                       fallthrough
      :                          @1012
 13127: 82 9c                    a5 = u64 [a2]
 13129: c9 c9 0b                 a4 = a2 - a5
 13132: ab 3b 18                 jump @1016 if a4 != t1
      :                          @1013
 13135: c9 4c 0b                 a4 = a5 - t2
 13138: 01                       fallthrough
      :                          @1014
 13139: 82 9a                    a3 = u64 [a2]
 13141: ab ca f2                 jump @1012 if a3 != a5
      :                          @1015
 13144: 7b 9b                    u64 [a2] = a4
 13146: 33 09 80 00 03           a2 = 0x30080
 13151: c8 29 09                 a2 = a2 + t0
 13154: 28 0b                    jump @1017
      :                          @1016
 13156: 33 09 80 00 03           a2 = 0x30080
 13161: c8 29 09                 a2 = a2 + t0
 13164: 01                       fallthrough
      :                          @1017
 13165: 82 98                    a1 = u64 [a2]
 13167: c9 89 0a                 a3 = a2 - a1
 13170: ab 7a 4a                 jump @1030 if a3 != a0
      :                          @1018
 13173: 95 8a e8                 a3 = a1 + 0xffffffffffffffe8
 13176: 01                       fallthrough
      :                          @1019
 13177: 82 9b                    a4 = u64 [a2]
 13179: ab 8b f2                 jump @1017 if a4 != a1
      :                          @1020
 13182: 7b 9a                    u64 [a2] = a3
 13184: 33 0c                    a5 = 0
 13186: 01                       fallthrough
      :                          @1021
 13187: ab 8b ea                 jump @1017 if a4 != a1
      :                          @1022
 13190: 28 36                    jump @1030
      :                          @1023
 13192: c9 78 08                 a1 = a1 - a0
 13195: c8 98 02                 t0 = a1 + a2
 13198: 57 02 33                 jump @1031 if t0 <s 0
      :                          @1024
 13201: 33 08 00 10              a1 = 0x1000
 13205: ac 28 27                 jump @1030 if a1 <u t0
      :                          @1025
 13208: 33 0a 80 00 03           a3 = 0x30080
 13213: 95 a8 00 10              a1 = a3 + 0x1000
 13217: 01                       fallthrough
      :                          @1026
 13218: 82 8a                    a3 = u64 [a1]
 13220: c9 a8 0b                 a4 = a1 - a3
 13223: ab 7b 15                 jump @1030 if a4 != a0
      :                          @1027
 13226: c9 2a 0b                 a4 = a3 - t0
 13229: 01                       fallthrough
      :                          @1028
 13230: 82 8c                    a5 = u64 [a1]
 13232: ab ac f2                 jump @1026 if a5 != a3
      :                          @1029
 13235: 7b 8b                    u64 [a1] = a4
 13237: 33 09                    a2 = 0
 13239: 95 11 08                 sp = sp + 0x8
 13242: 32 00                    ret
      :                          @1030
 13244: 95 11 08                 sp = sp + 0x8
 13247: 32 00                    ret
      :                          @1031
 13249: 00                       trap
      :                          @1032 [@dyn 90]
 13250: 7b 79 08                 u64 [a0 + 0x8] = a2
 13253: 7b 7a 10                 u64 [a0 + 0x10] = a3
 13256: 49 17 18                 u64 [a0 + 24] = 0
 13259: 33 08 b0 00 01           a1 = 0x100b0
 13264: 7b 78                    u64 [a0] = a1
 13266: 32 00                    ret
      :                          @1033 [@dyn 91]
 13268: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 13271: 7b 10 18                 u64 [sp + 0x18] = ra
 13274: 7b 15 10                 u64 [sp + 0x10] = s0
 13277: 7b 16 08                 u64 [sp + 0x8] = s1
 13280: 57 0a 5e                 jump @1043 if a3 <s 0
      :                          @1034
 13283: 51 0a 2f                 jump @1040 if a3 == 0
      :                          @1035
 13286: 33 02 80 00 03           t0 = 0x30080
 13291: 95 28 00 10              a1 = t0 + 0x1000
 13295: 01                       fallthrough
      :                          @1036
 13296: 82 8c                    a5 = u64 [a1]
 13298: c8 ac 06                 s1 = a5 + a3
 13301: ac c6 d0 cc              jump @24 if s1 <u a5
      :                          @1037
 13305: 98 6b 0c                 a4 = s1 >> 0xc
 13308: 52 0b c9 cc              jump @24 if a4 != 0
      :                          @1038
 13312: 82 8b                    a4 = u64 [a1]
 13314: ab cb ee                 jump @1036 if a4 != a5
      :                          @1039
 13317: 7b 86                    u64 [a1] = s1
 13319: 7b 17                    u64 [sp] = a0
 13321: c9 62 06                 s1 = t0 - s1
 13324: 95 65 00 10              s0 = s1 + 0x1000
 13328: 28 08                    jump @1041
      :                          @1040
 13330: 7b 17                    u64 [sp] = a0
 13332: 33 05 01                 s0 = 0x1
 13335: 01                       fallthrough
      :                          @1041
 13336: 64 57                    a0 = s0
 13338: 64 98                    a1 = a2
 13340: 64 a9                    a2 = a3
 13342: 64 a6                    s1 = a3
 13344: 50 20 b8 00 13 56        ra = 184, jump @1890
      :                          @1042 [@dyn 92]
 13350: 82 17                    a0 = u64 [sp]
 13352: 7b 76                    u64 [a0] = s1
 13354: 7b 75 08                 u64 [a0 + 0x8] = s0
 13357: 7b 76 10                 u64 [a0 + 0x10] = s1
 13360: 82 10 18                 ra = u64 [sp + 0x18]
 13363: 82 15 10                 s0 = u64 [sp + 0x10]
 13366: 82 16 08                 s1 = u64 [sp + 0x8]
 13369: 95 11 20                 sp = sp + 0x20
 13372: 32 00                    ret
      :                          @1043
 13374: 00                       trap
      :                          @1044 [@dyn 93]
 13375: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 13378: 7b 10 18                 u64 [sp + 0x18] = ra
 13381: 7b 15 10                 u64 [sp + 0x10] = s0
 13384: 7b 16 08                 u64 [sp + 0x8] = s1
 13387: 57 0a 79                 jump @1054 if a3 <s 0
      :                          @1045
 13390: 64 75                    s0 = a0
 13392: 51 0a 32                 jump @1051 if a3 == 0
      :                          @1046
 13395: 33 07 48 00 03           a0 = 0x30048
 13400: 33 02 80 00 03           t0 = 0x30080
 13405: 95 28 00 10              a1 = t0 + 0x1000
 13409: 01                       fallthrough
      :                          @1047
 13410: 82 8c                    a5 = u64 [a1]
 13412: c8 ac 06                 s1 = a5 + a3
 13415: ac c6 5e cc              jump @24 if s1 <u a5
      :                          @1048
 13419: 98 6b 0c                 a4 = s1 >> 0xc
 13422: 52 0b 57 cc              jump @24 if a4 != 0
      :                          @1049
 13426: 82 8b                    a4 = u64 [a1]
 13428: ab cb ee                 jump @1047 if a4 != a5
      :                          @1050
 13431: 7b 86                    u64 [a1] = s1
 13433: c9 62 06                 s1 = t0 - s1
 13436: 95 67 00 10              a0 = s1 + 0x1000
 13440: 28 06                    jump @1052
      :                          @1051
 13442: 33 07 01                 a0 = 0x1
 13445: 01                       fallthrough
      :                          @1052
 13446: 7b 17                    u64 [sp] = a0
 13448: 64 98                    a1 = a2
 13450: 64 a9                    a2 = a3
 13452: 64 a6                    s1 = a3
 13454: 50 20 bc 00 a5 55        ra = 188, jump @1890
      :                          @1053 [@dyn 94]
 13460: 98 67 11                 a0 = s1 >> 0x11
 13463: 98 68 0a                 a1 = s1 >> 0xa
 13466: 68 88                    a1 = clz a1
 13468: 97 88 02                 a1 = a1 << 0x2
 13471: 9a 89 01 01              a2 = 0x101 - a1
 13475: 33 08 1d                 a1 = 0x1d
 13478: da 79 08                 a1 = a2 if a0 == 0
 13481: 82 17                    a0 = u64 [sp]
 13483: 7b 57                    u64 [s0] = a0
 13485: 7b 56 08                 u64 [s0 + 0x8] = s1
 13488: 7b 56 10                 u64 [s0 + 0x10] = s1
 13491: 7b 58 18                 u64 [s0 + 0x18] = a1
 13494: 82 10 18                 ra = u64 [sp + 0x18]
 13497: 82 15 10                 s0 = u64 [sp + 0x10]
 13500: 82 16 08                 s1 = u64 [sp + 0x8]
 13503: 95 11 20                 sp = sp + 0x20
 13506: 32 00                    ret
      :                          @1054
 13508: 00                       trap
      :                          @1055
 13509: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 13512: 7b 10 18                 u64 [sp + 0x18] = ra
 13515: 7b 15 10                 u64 [sp + 0x10] = s0
 13518: 7b 16 08                 u64 [sp + 0x8] = s1
 13521: 82 89                    a2 = u64 [a1]
 13523: 82 84 10                 t2 = u64 [a1 + 0x10]
 13526: 82 8a 08                 a3 = u64 [a1 + 0x8]
 13529: ab 94 1f                 jump @1059 if t2 != a2
      :                          @1056
 13532: 51 09 6e                 jump @1064 if a2 == 0
      :                          @1057
 13535: 84 a8 01                 a1 = a3 & 0x1
 13538: 52 08 79                 jump @1065 if a1 != 0
      :                          @1058
 13541: 95 a8 01                 a1 = a3 + 0x1
 13544: 7b 7a 08                 u64 [a0 + 0x8] = a3
 13547: 7b 79 10                 u64 [a0 + 0x10] = a2
 13550: 7b 78 18                 u64 [a0 + 0x18] = a1
 13553: 33 08 d8 00 01           a1 = 0x100d8
 13558: 28 74                    jump @1066
      :                          @1059
 13560: 7b 1a                    u64 [sp] = a3
 13562: 33 0c 80 00 03           a5 = 0x30080
 13567: 95 c3 00 10              t1 = a5 + 0x1000
 13571: 33 00 e0 0f              ra = 0xfe0
 13575: 01                       fallthrough
      :                          @1060
 13576: 82 38                    a1 = u64 [t1]
 13578: ac 80 bb cb              jump @24 if ra <u a1
      :                          @1061
 13582: c9 8c 0a                 a3 = a5 - a1
 13585: 95 aa ff 07              a3 = a3 + 0x7ff
 13589: 95 aa e9 07              a3 = a3 + 0x7e9
 13593: 84 a5 07                 s0 = a3 & 0x7
 13596: c8 58 06                 s1 = a1 + s0
 13599: 95 66 18                 s1 = s1 + 0x18
 13602: 01                       fallthrough
      :                          @1062
 13603: 82 3b                    a4 = u64 [t1]
 13605: ab 8b e3                 jump @1060 if a4 != a1
      :                          @1063
 13608: 7b 36                    u64 [t1] = s1
 13610: 33 02                    t0 = 0
 13612: c9 5a 0a                 a3 = a3 - s0
 13615: 82 1b                    a4 = u64 [sp]
 13617: 7b ab                    u64 [a3] = a4
 13619: 7b a9 08                 u64 [a3 + 0x8] = a2
 13622: 49 1a 10 01              u64 [a3 + 16] = 0x1
 13626: 7b 7b 08                 u64 [a0 + 0x8] = a4
 13629: 7b 74 10                 u64 [a0 + 0x10] = t2
 13632: 7b 7a 18                 u64 [a0 + 0x18] = a3
 13635: 33 08 28 01 01           a1 = 0x10128
 13640: 28 22                    jump @1066
      :                          @1064
 13642: 49 17 08 01              u64 [a0 + 8] = 0x1
 13646: 49 17 10                 u64 [a0 + 16] = 0
 13649: 49 17 18                 u64 [a0 + 24] = 0
 13652: 33 08 b0 00 01           a1 = 0x100b0
 13657: 28 11                    jump @1066
      :                          @1065
 13659: 7b 7a 08                 u64 [a0 + 0x8] = a3
 13662: 7b 79 10                 u64 [a0 + 0x10] = a2
 13665: 7b 7a 18                 u64 [a0 + 0x18] = a3
 13668: 33 08 00 01 01           a1 = 0x10100
 13673: 01                       fallthrough
      :                          @1066
 13674: 7b 78                    u64 [a0] = a1
 13676: 82 10 18                 ra = u64 [sp + 0x18]
 13679: 82 15 10                 s0 = u64 [sp + 0x10]
 13682: 82 16 08                 s1 = u64 [sp + 0x8]
 13685: 95 11 20                 sp = sp + 0x20
 13688: 32 00                    ret
      :                          @1067
 13690: 00                       trap
      :                          @1068
 13691: 00                       trap
      :                          @1069
 13692: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 13695: 33 02 50 00 03           t0 = 0x30050
 13700: 95 27 20                 a0 = t0 + 0x20
 13703: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
 13706: 33 09 ff 00              a2 = 0xff
 13710: 33 0a 01                 a3 = 0x1
 13713: 01                       fallthrough
      :                          @1070
 13714: 81 7c                    a5 = i32 [a0]
 13716: 84 cb ff 00              a4 = a5 & 0xff
 13720: 52 0b 10                 jump @1072 if a4 != 0
      :                          @1071
 13723: 85 cb 01                 a4 = a5 ^ 0x1
 13726: 84 bb ff 00              a4 = a4 & 0xff
 13730: d3 cb 0b                 a4 = a4 ^ a5
 13733: 7a 7b                    u32 [a0] = a4
 13735: 01                       fallthrough
      :                          @1072
 13736: 84 cb ff 00              a4 = a5 & 0xff
 13740: 51 0b 2a                 jump @1078 if a4 == 0
      :                          @1073
 13743: 33 0b 02                 a4 = 0x2
 13746: 01                       fallthrough
      :                          @1074
 13747: 84 cc ff 00              a5 = a5 & 0xff
 13751: aa bc 07 01              jump @1079 if a5 == a4
      :                          @1075
 13755: 81 7c                    a5 = i32 [a0]
 13757: d2 9c 08                 a1 = a5 & a2
 13760: 52 08 0f                 jump @1077 if a1 != 0
      :                          @1076
 13763: d3 ac 08                 a1 = a5 ^ a3
 13766: d2 98 08                 a1 = a1 & a2
 13769: d3 c8 08                 a1 = a1 ^ a5
 13772: 7a 78                    u32 [a0] = a1
 13774: 01                       fallthrough
      :                          @1077
 13775: 84 c8 ff 00              a1 = a5 & 0xff
 13779: 52 08 e0                 jump @1074 if a1 != 0
      :                          @1078
 13782: 14 07 ac b5 df 98 a6 0b 31 d1 a0 = 0xd1310ba698dfb5ac
 13792: 64 19                    a2 = sp
 13794: ca 79 0a                 a3 = a2 * a0
 13797: d6 79 09                 a2 = a2 mulhu a0
 13800: d3 a9 09                 a2 = a2 ^ a3
 13803: 33 0a be 00              a3 = 0xbe
 13807: d3 a9 09                 a2 = a2 ^ a3
 13810: ca 79 0a                 a3 = a2 * a0
 13813: d6 79 09                 a2 = a2 mulhu a0
 13816: d3 a9 09                 a2 = a2 ^ a3
 13819: d3 29 08                 a1 = a2 ^ t0
 13822: ca 78 09                 a2 = a1 * a0
 13825: d6 78 08                 a1 = a1 mulhu a0
 13828: d3 98 08                 a1 = a1 ^ a2
 13831: d6 78 09                 a2 = a1 mulhu a0
 13834: ca 78 08                 a1 = a1 * a0
 13837: d3 98 08                 a1 = a1 ^ a2
 13840: d6 78 09                 a2 = a1 mulhu a0
 13843: ca 78 08                 a1 = a1 * a0
 13846: d3 98 08                 a1 = a1 ^ a2
 13849: ca 78 09                 a2 = a1 * a0
 13852: d6 78 08                 a1 = a1 mulhu a0
 13855: d3 98 08                 a1 = a1 ^ a2
 13858: d6 78 09                 a2 = a1 mulhu a0
 13861: ca 78 0a                 a3 = a1 * a0
 13864: d3 a9 09                 a2 = a2 ^ a3
 13867: d6 79 0a                 a3 = a2 mulhu a0
 13870: ca 79 09                 a2 = a2 * a0
 13873: d3 a9 09                 a2 = a2 ^ a3
 13876: ca 79 0a                 a3 = a2 * a0
 13879: d6 79 09                 a2 = a2 mulhu a0
 13882: d3 a9 09                 a2 = a2 ^ a3
 13885: d6 79 0a                 a3 = a2 mulhu a0
 13888: ca 79 0b                 a4 = a2 * a0
 13891: d3 ba 0a                 a3 = a3 ^ a4
 13894: d6 7a 0b                 a4 = a3 mulhu a0
 13897: ca 7a 0a                 a3 = a3 * a0
 13900: d3 ba 0a                 a3 = a3 ^ a4
 13903: ca 7a 0b                 a4 = a3 * a0
 13906: d6 7a 0a                 a3 = a3 mulhu a0
 13909: d3 ba 0a                 a3 = a3 ^ a4
 13912: d6 7a 0b                 a4 = a3 mulhu a0
 13915: ca 7a 0c                 a5 = a3 * a0
 13918: d3 cb 0b                 a4 = a4 ^ a5
 13921: d6 7b 0c                 a5 = a4 mulhu a0
 13924: ca 7b 0b                 a4 = a4 * a0
 13927: d3 cb 0b                 a4 = a4 ^ a5
 13930: ca 7b 0c                 a5 = a4 * a0
 13933: d6 7b 07                 a0 = a4 mulhu a0
 13936: d3 c7 07                 a0 = a0 ^ a5
 13939: 14 0c 00 00 00 00 01 00 00 80 a5 = 0x8000000100000000
 13949: 14 0b 01 00 00 80 00 00 00 80 a4 = 0x8000000080000001
 13959: d4 b8 08                 a1 = a1 | a4
 13962: d4 b9 09                 a2 = a2 | a4
 13965: d4 ba 0a                 a3 = a3 | a4
 13968: d4 b7 07                 a0 = a0 | a4
 13971: 33 0b 50 00 03           a4 = 0x30050
 13976: 3e 08 50 00 03           u64 [0x30050] = a1
 13981: 33 08 50 00 03           a1 = 0x30050
 13986: 3e 09 58 00 03           u64 [0x30058] = a2
 13991: 3e 0a 60 00 03           u64 [0x30060] = a3
 13996: 3e 07 68 00 03           u64 [0x30068] = a0
 14001: 33 07 02                 a0 = 0x2
 14004: 3b 07 70 00 03           u8 [0x30070] = a0
 14009: 95 11 08                 sp = sp + 0x8
 14012: 32 00                    ret
      :                          @1079
 14014: 95 11 08                 sp = sp + 0x8
 14017: 32 00                    ret
      :                          @1080 [@dyn 95]
 14019: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 14022: 14 08 ac b5 df 98 a6 0b 31 d1 a1 = 0xd1310ba698dfb5ac
 14032: 64 19                    a2 = sp
 14034: ca 89 0a                 a3 = a2 * a1
 14037: d6 89 09                 a2 = a2 mulhu a1
 14040: d3 a9 09                 a2 = a2 ^ a3
 14043: 33 0a be 00              a3 = 0xbe
 14047: d3 a9 09                 a2 = a2 ^ a3
 14050: ca 89 0a                 a3 = a2 * a1
 14053: d6 89 09                 a2 = a2 mulhu a1
 14056: d3 a9 09                 a2 = a2 ^ a3
 14059: 33 0a 50 00 03           a3 = 0x30050
 14064: d3 a9 09                 a2 = a2 ^ a3
 14067: ca 89 0a                 a3 = a2 * a1
 14070: d6 89 09                 a2 = a2 mulhu a1
 14073: d3 a9 09                 a2 = a2 ^ a3
 14076: d6 89 0a                 a3 = a2 mulhu a1
 14079: ca 89 09                 a2 = a2 * a1
 14082: d3 a9 09                 a2 = a2 ^ a3
 14085: d6 89 0a                 a3 = a2 mulhu a1
 14088: ca 89 09                 a2 = a2 * a1
 14091: d3 a9 09                 a2 = a2 ^ a3
 14094: ca 89 0a                 a3 = a2 * a1
 14097: d6 89 09                 a2 = a2 mulhu a1
 14100: d3 a9 02                 t0 = a2 ^ a3
 14103: d6 82 0a                 a3 = t0 mulhu a1
 14106: ca 82 0b                 a4 = t0 * a1
 14109: d3 ba 0a                 a3 = a3 ^ a4
 14112: d6 8a 0b                 a4 = a3 mulhu a1
 14115: ca 8a 0a                 a3 = a3 * a1
 14118: d3 ba 0a                 a3 = a3 ^ a4
 14121: ca 8a 0b                 a4 = a3 * a1
 14124: d6 8a 0a                 a3 = a3 mulhu a1
 14127: d3 ba 0a                 a3 = a3 ^ a4
 14130: d6 8a 0b                 a4 = a3 mulhu a1
 14133: ca 8a 0c                 a5 = a3 * a1
 14136: d3 cb 0b                 a4 = a4 ^ a5
 14139: d6 8b 0c                 a5 = a4 mulhu a1
 14142: ca 8b 0b                 a4 = a4 * a1
 14145: d3 cb 0b                 a4 = a4 ^ a5
 14148: ca 8b 0c                 a5 = a4 * a1
 14151: d6 8b 0b                 a4 = a4 mulhu a1
 14154: d3 cb 0b                 a4 = a4 ^ a5
 14157: d6 8b 0c                 a5 = a4 mulhu a1
 14160: ca 8b 09                 a2 = a4 * a1
 14163: d3 c9 09                 a2 = a2 ^ a5
 14166: d6 89 0c                 a5 = a2 mulhu a1
 14169: ca 89 09                 a2 = a2 * a1
 14172: d3 c9 09                 a2 = a2 ^ a5
 14175: ca 89 0c                 a5 = a2 * a1
 14178: d6 89 08                 a1 = a2 mulhu a1
 14181: d3 c8 08                 a1 = a1 ^ a5
 14184: 14 09 01 00 00 80 00 00 00 80 a2 = 0x8000000080000001
 14194: d4 92 0c                 a5 = t0 | a2
 14197: d4 9a 0a                 a3 = a3 | a2
 14200: d4 9b 0b                 a4 = a4 | a2
 14203: d4 98 08                 a1 = a1 | a2
 14206: 7b 7c                    u64 [a0] = a5
 14208: 7b 7a 08                 u64 [a0 + 0x8] = a3
 14211: 7b 7b 10                 u64 [a0 + 0x10] = a4
 14214: 7b 78 18                 u64 [a0 + 0x18] = a1
 14217: 95 11 08                 sp = sp + 0x8
 14220: 32 00                    ret
      :                          @1081
 14222: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 14225: 7b 10 40                 u64 [sp + 0x40] = ra
 14228: 7b 15 38                 u64 [sp + 0x38] = s0
 14231: 7b 16 30                 u64 [sp + 0x30] = s1
 14234: 64 75                    s0 = a0
 14236: 82 7a                    a3 = u64 [a0]
 14238: 95 a7 01                 a0 = a3 + 0x1
 14241: 97 a8 01                 a1 = a3 << 0x1
 14244: e4 87 08                 a1 = maxu(a0, a1)
 14247: 98 89 3d                 a2 = a1 >> 0x3d
 14250: 33 07                    a0 = 0
 14252: 52 09 14 c9              jump @21 if a2 != 0
      :                          @1082
 14256: 33 09 04                 a2 = 0x4
 14259: e4 98 06                 s1 = maxu(a1, a2)
 14262: 97 68 03                 a1 = s1 << 0x3
 14265: 14 0b f8 ff ff ff ff ff ff 7f a4 = 0x7ffffffffffffff8
 14275: ac 8b fd c8              jump @21 if a4 <u a1
      :                          @1083
 14279: 52 0a 07                 jump @1085 if a3 != 0
      :                          @1084
 14282: 33 07                    a0 = 0
 14284: 28 12                    jump @1086
      :                          @1085
 14286: 82 57 08                 a0 = u64 [s0 + 0x8]
 14289: 97 aa 03                 a3 = a3 << 0x3
 14292: 7b 17 18                 u64 [sp + 0x18] = a0
 14295: 7b 1a 28                 u64 [sp + 0x28] = a3
 14298: 33 07 08                 a0 = 0x8
 14301: 01                       fallthrough
      :                          @1086
 14302: 7b 17 20                 u64 [sp + 0x20] = a0
 14305: 64 17                    a0 = sp
 14307: 95 19 18                 a2 = sp + 0x18
 14310: 50 20 c0 00 26           ra = 192, jump @1090
      :                          @1087 [@dyn 96]
 14315: 82 17                    a0 = u64 [sp]
 14317: 52 07 19                 jump @1089 if a0 != 0
      :                          @1088
 14320: 82 17 08                 a0 = u64 [sp + 0x8]
 14323: 7b 57 08                 u64 [s0 + 0x8] = a0
 14326: 7b 56                    u64 [s0] = s1
 14328: 82 10 40                 ra = u64 [sp + 0x40]
 14331: 82 15 38                 s0 = u64 [sp + 0x38]
 14334: 82 16 30                 s1 = u64 [sp + 0x30]
 14337: 95 11 48                 sp = sp + 0x48
 14340: 32 00                    ret
      :                          @1089
 14342: 82 17 08                 a0 = u64 [sp + 0x8]
 14345: 28 b7 c8                 jump @21
      :                          @1090
 14348: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 14351: 7b 10 30                 u64 [sp + 0x30] = ra
 14354: 7b 15 28                 u64 [sp + 0x28] = s0
 14357: 7b 16 20                 u64 [sp + 0x20] = s1
 14360: 82 9a 08                 a3 = u64 [a2 + 0x8]
 14363: 51 0a 91 00              jump @1106 if a3 == 0
      :                          @1091
 14367: 82 9a 10                 a3 = u64 [a2 + 0x10]
 14370: 51 0a c5 00              jump @1115 if a3 == 0
      :                          @1092
 14374: 7b 1a 18                 u64 [sp + 0x18] = a3
 14377: 82 99                    a2 = u64 [a2]
 14379: 7b 19 10                 u64 [sp + 0x10] = a2
 14382: 33 02 80 00 03           t0 = 0x30080
 14387: 95 24 00 10              t2 = t0 + 0x1000
 14391: 33 03 f8 0f              t1 = 0xff8
 14395: 01                       fallthrough
      :                          @1093
 14396: 82 45                    s0 = u64 [t2]
 14398: c8 85 0c                 a5 = s0 + a1
 14401: ac 5c e5 00              jump @1123 if a5 <u s0
      :                          @1094
 14405: ac c3 e1 00              jump @1123 if t1 <u a5
      :                          @1095
 14409: c9 c2 06                 s1 = t0 - a5
 14412: 95 60 00 10              ra = s1 + 0x1000
 14416: 84 06 07                 s1 = ra & 0x7
 14419: c8 6c 0c                 a5 = a5 + s1
 14422: 01                       fallthrough
      :                          @1096
 14423: 82 4b                    a4 = u64 [t2]
 14425: ab 5b 08                 jump @1098 if a4 != s0
      :                          @1097
 14428: 7b 4c                    u64 [t2] = a5
 14430: 33 0a                    a3 = 0
 14432: 01                       fallthrough
      :                          @1098
 14433: ab 5b db                 jump @1093 if a4 != s0
      :                          @1099
 14436: 7b 18 08                 u64 [sp + 0x8] = a1
 14439: c9 60 05                 s0 = ra - s1
 14442: 7b 17                    u64 [sp] = a0
 14444: 64 57                    a0 = s0
 14446: 82 16 10                 s1 = u64 [sp + 0x10]
 14449: 64 68                    a1 = s1
 14451: 82 19 18                 a2 = u64 [sp + 0x18]
 14454: 50 20 c2 00 bd 51        ra = 194, jump @1890
      :                          @1100 [@dyn 97]
 14460: 82 12 18                 t0 = u64 [sp + 0x18]
 14463: 82 17                    a0 = u64 [sp]
 14465: 33 09 80 00 03           a2 = 0x30080
 14470: 95 98 00 10              a1 = a2 + 0x1000
 14474: 01                       fallthrough
      :                          @1101
 14475: 82 89                    a2 = u64 [a1]
 14477: c9 98 0a                 a3 = a1 - a2
 14480: ab 6a 16                 jump @1105 if a3 != s1
      :                          @1102
 14483: c9 29 0a                 a3 = a2 - t0
 14486: 01                       fallthrough
      :                          @1103
 14487: 82 8b                    a4 = u64 [a1]
 14489: ab 9b f2                 jump @1101 if a4 != a2
      :                          @1104
 14492: 7b 8a                    u64 [a1] = a3
 14494: 33 0c                    a5 = 0
 14496: 82 18 08                 a1 = u64 [sp + 0x8]
 14499: 28 8b 00                 jump @1125
      :                          @1105
 14502: 82 18 08                 a1 = u64 [sp + 0x8]
 14505: 28 85 00                 jump @1125
      :                          @1106
 14508: 51 08 7e                 jump @1124 if a1 == 0
      :                          @1107
 14511: 33 03 00 10              t1 = 0x1000
 14515: 33 02 80 00 03           t0 = 0x30080
 14520: c8 32 00                 ra = t0 + t1
 14523: 33 04 f8 0f              t2 = 0xff8
 14527: 01                       fallthrough
      :                          @1108
 14528: 82 05                    s0 = u64 [ra]
 14530: c8 85 06                 s1 = s0 + a1
 14533: ac 56 61                 jump @1123 if s1 <u s0
      :                          @1109
 14536: ac 64 5e                 jump @1123 if t2 <u s1
      :                          @1110
 14539: c9 62 0a                 a3 = t0 - s1
 14542: c8 3a 0a                 a3 = a3 + t1
 14545: 84 a9 07                 a2 = a3 & 0x7
 14548: c8 96 06                 s1 = s1 + a2
 14551: 01                       fallthrough
      :                          @1111
 14552: 82 0c                    a5 = u64 [ra]
 14554: ab 5c e6                 jump @1108 if a5 != s0
      :                          @1112
 14557: 7b 06                    u64 [ra] = s1
 14559: 33 0b                    a4 = 0
 14561: 01                       fallthrough
      :                          @1113
 14562: ab 5c de                 jump @1108 if a5 != s0
      :                          @1114
 14565: 28 3c                    jump @1122
      :                          @1115
 14567: 51 08 43                 jump @1124 if a1 == 0
      :                          @1116
 14570: 33 03 00 10              t1 = 0x1000
 14574: 33 02 80 00 03           t0 = 0x30080
 14579: c8 32 00                 ra = t0 + t1
 14582: 33 04 f8 0f              t2 = 0xff8
 14586: 01                       fallthrough
      :                          @1117
 14587: 82 05                    s0 = u64 [ra]
 14589: c8 85 06                 s1 = s0 + a1
 14592: ac 56 26                 jump @1123 if s1 <u s0
      :                          @1118
 14595: ac 64 23                 jump @1123 if t2 <u s1
      :                          @1119
 14598: c9 62 0a                 a3 = t0 - s1
 14601: c8 3a 0a                 a3 = a3 + t1
 14604: 84 a9 07                 a2 = a3 & 0x7
 14607: c8 96 06                 s1 = s1 + a2
 14610: 01                       fallthrough
      :                          @1120
 14611: 82 0c                    a5 = u64 [ra]
 14613: ab 5c e6                 jump @1117 if a5 != s0
      :                          @1121
 14616: 7b 06                    u64 [ra] = s1
 14618: 33 0b                    a4 = 0
 14620: c9 9a 05                 s0 = a3 - a2
 14623: 28 0f                    jump @1125
      :                          @1122
 14625: c9 9a 05                 s0 = a3 - a2
 14628: 28 0a                    jump @1125
      :                          @1123
 14630: 33 05                    s0 = 0
 14632: 28 06                    jump @1125
      :                          @1124
 14634: 33 05 08                 s0 = 0x8
 14637: 01                       fallthrough
      :                          @1125
 14638: 88 59 01                 a2 = s0 <u 0x1
 14641: 33 0a 08                 a3 = 0x8
 14644: db 55 0a                 a3 = s0 if s0 != 0
 14647: 7b 7a 08                 u64 [a0 + 0x8] = a3
 14650: 7b 78 10                 u64 [a0 + 0x10] = a1
 14653: 7b 79                    u64 [a0] = a2
 14655: 82 10 30                 ra = u64 [sp + 0x30]
 14658: 82 15 28                 s0 = u64 [sp + 0x28]
 14661: 82 16 20                 s1 = u64 [sp + 0x20]
 14664: 95 11 38                 sp = sp + 0x38
 14667: 32 00                    ret
      :                          @1126
 14669: 95 11 48 ff              sp = sp + 0xffffffffffffff48
 14673: 7b 10 b0 00              u64 [sp + 0xb0] = ra
 14677: 7b 15 a8 00              u64 [sp + 0xa8] = s0
 14681: 7b 16 a0 00              u64 [sp + 0xa0] = s1
 14685: 82 7a 18                 a3 = u64 [a0 + 0x18]
 14688: c8 a8 08                 a1 = a1 + a3
 14691: 7b 1a 08                 u64 [sp + 0x8] = a3
 14694: ac a8 ec 07              jump @1179 if a1 <u a3
      :                          @1127
 14698: 64 90                    ra = a2
 14700: 82 76 08                 s1 = u64 [a0 + 0x8]
 14703: 88 6a 08                 a3 = s1 <u 0x8
 14706: 95 69 01                 a2 = s1 + 0x1
 14709: 64 7b                    a4 = a0
 14711: 98 97 03                 a0 = a2 >> 0x3
 14714: 84 95 f8                 s0 = a2 & 0xfffffffffffffff8
 14717: c9 75 02                 t0 = s0 - a0
 14720: 64 6c                    a5 = s1
 14722: da a2 0c                 a5 = t0 if a3 == 0
 14725: 98 ca 01                 a3 = a5 >> 0x1
 14728: 7b 16 58                 u64 [sp + 0x58] = s1
 14731: 7b 1b 10                 u64 [sp + 0x10] = a4
 14734: ae 8a bf 02              jump @1142 if a3 >=u a1
      :                          @1128
 14738: 7b 10 78                 u64 [sp + 0x78] = ra
 14741: 7b 19 48                 u64 [sp + 0x48] = a2
 14744: 95 c9 01                 a2 = a5 + 0x1
 14747: e4 89 09                 a2 = maxu(a2, a1)
 14750: 95 17 80 00              a0 = sp + 0x80
 14754: 33 08 14                 a1 = 0x14
 14757: 50 20 c4 00 ae 07        ra = 196, jump @1180
      :                          @1129 [@dyn 98]
 14763: 82 1a 80 00              a3 = u64 [sp + 0x80]
 14767: 82 15 88 00              s0 = u64 [sp + 0x88]
 14771: 51 0a ff 06              jump @1167 if a3 == 0
      :                          @1130
 14775: 82 1b 90 00              a4 = u64 [sp + 0x90]
 14779: 82 18 08                 a1 = u64 [sp + 0x8]
 14782: 51 08 18 07              jump @1169 if a1 == 0
      :                          @1131
 14786: 7b 1b                    u64 [sp] = a4
 14788: 7b 15 40                 u64 [sp + 0x40] = s0
 14791: 82 17 10                 a0 = u64 [sp + 0x10]
 14794: 82 76                    s1 = u64 [a0]
 14796: 14 05 80 80 80 80 80 80 80 80 s0 = 0x8080808080808080
 14806: 82 67                    a0 = u64 [s1]
 14808: 33 0b                    a4 = 0
 14810: 7b 1a 38                 u64 [sp + 0x38] = a3
 14813: 95 aa 08                 a3 = a3 + 0x8
 14816: 7b 1a 30                 u64 [sp + 0x30] = a3
 14819: e0 75 0a                 a3 = s0 & ~a0
 14822: 95 67 ec                 a0 = s1 + 0xffffffffffffffec
 14825: 7b 17 28                 u64 [sp + 0x28] = a0
 14828: 82 17 78                 a0 = u64 [sp + 0x78]
 14831: 9e 77 14                 a0 = a0 >>r 0x14
 14834: 7b 17 20                 u64 [sp + 0x20] = a0
 14837: 33 07 50 00 03           a0 = 0x30050
 14842: 7b 17 18                 u64 [sp + 0x18] = a0
 14845: 7b 16 50                 u64 [sp + 0x50] = s1
 14848: 28 5b                    jump @1134
      :                          @1132
 14850: 82 1a 70                 a3 = u64 [sp + 0x70]
 14853: 95 a7 ff                 a0 = a3 + 0xffffffffffffffff
 14856: d2 7a 0a                 a3 = a3 & a0
 14859: 7b 1a 70                 u64 [sp + 0x70] = a3
 14862: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 14865: 7b 18 78                 u64 [sp + 0x78] = a1
 14868: c8 90 07                 a0 = ra + a2
 14871: 98 38 39                 a1 = t1 >> 0x39
 14874: 95 9a f8                 a3 = a2 + 0xfffffffffffffff8
 14877: d2 4a 0a                 a3 = a3 & t2
 14880: 78 78                    u8 [a0] = a1
 14882: 82 17 30                 a0 = u64 [sp + 0x30]
 14885: c8 7a 0a                 a3 = a3 + a0
 14888: 78 a8                    u8 [a3] = a1
 14890: 82 17 60                 a0 = u64 [sp + 0x60]
 14893: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 14896: 96 78 14                 a1 = a0 * 0x14
 14899: 82 17 50                 a0 = u64 [sp + 0x50]
 14902: c8 78 08                 a1 = a1 + a0
 14905: 85 97 ff                 a0 = a2 ^ 0xffffffffffffffff
 14908: 96 77 14                 a0 = a0 * 0x14
 14911: c8 07 07                 a0 = a0 + ra
 14914: 33 09 14                 a2 = 0x14
 14917: 50 20 c6 00 ee 4f        ra = 198, jump @1890
      :                          @1133 [@dyn 99]
 14923: 82 1a 70                 a3 = u64 [sp + 0x70]
 14926: 82 19 48                 a2 = u64 [sp + 0x48]
 14929: 82 1b 68                 a4 = u64 [sp + 0x68]
 14932: 82 18 78                 a1 = u64 [sp + 0x78]
 14935: 51 08 6f 06              jump @1168 if a1 == 0
      :                          @1134
 14939: 7b 18 78                 u64 [sp + 0x78] = a1
 14942: 52 0a 16                 jump @1137 if a3 != 0
      :                          @1135
 14945: 82 67 08                 a0 = u64 [s1 + 0x8]
 14948: 95 66 08                 s1 = s1 + 0x8
 14951: d2 57 07                 a0 = a0 & s0
 14954: 95 bb 08                 a4 = a4 + 0x8
 14957: aa 57 f4                 jump @1135 if a0 == s0
      :                          @1136
 14960: d3 57 0a                 a3 = a0 ^ s0
 14963: 01                       fallthrough
      :                          @1137
 14964: 7b 1a 70                 u64 [sp + 0x70] = a3
 14967: 6a a7                    a0 = ctz a3
 14969: 98 77 03                 a0 = a0 >> 0x3
 14972: 7b 1b 68                 u64 [sp + 0x68] = a4
 14975: c8 b7 07                 a0 = a0 + a4
 14978: 7b 17 60                 u64 [sp + 0x60] = a0
 14981: 9a 78                    a1 = -a0
 14983: 96 88 14                 a1 = a1 * 0x14
 14986: 82 17 28                 a0 = u64 [sp + 0x28]
 14989: c8 78 08                 a1 = a1 + a0
 14992: 7c 89 01                 a2 = u8 [a1 + 0x1]
 14995: 7c 8a                    a3 = u8 [a1]
 14997: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 15000: 7c 8c 03                 a5 = u8 [a1 + 0x3]
 15003: 97 99 08                 a2 = a2 << 0x8
 15006: d4 a9 09                 a2 = a2 | a3
 15009: 97 bb 10                 a4 = a4 << 0x10
 15012: 97 cc 18                 a5 = a5 << 0x18
 15015: d4 cb 0b                 a4 = a4 | a5
 15018: d4 b9 09                 a2 = a2 | a4
 15021: 7c 8a 05                 a3 = u8 [a1 + 0x5]
 15024: 7c 8b 04                 a4 = u8 [a1 + 0x4]
 15027: 7c 8c 06                 a5 = u8 [a1 + 0x6]
 15030: 7c 87 07                 a0 = u8 [a1 + 0x7]
 15033: 97 aa 08                 a3 = a3 << 0x8
 15036: d4 ba 0a                 a3 = a3 | a4
 15039: 97 cc 10                 a5 = a5 << 0x10
 15042: 97 77 18                 a0 = a0 << 0x18
 15045: d4 c7 07                 a0 = a0 | a5
 15048: d4 a7 04                 t2 = a0 | a3
 15051: 97 47 20                 a0 = t2 << 0x20
 15054: d4 97 03                 t1 = a0 | a2
 15057: 7c 87 09                 a0 = u8 [a1 + 0x9]
 15060: 7c 8b 08                 a4 = u8 [a1 + 0x8]
 15063: 7c 8c 0b                 a5 = u8 [a1 + 0xb]
 15066: 7c 89 0a                 a2 = u8 [a1 + 0xa]
 15069: 97 77 08                 a0 = a0 << 0x8
 15072: d4 b7 07                 a0 = a0 | a4
 15075: 97 cc 08                 a5 = a5 << 0x8
 15078: d4 c9 09                 a2 = a2 | a5
 15081: 7c 8b 0f                 a4 = u8 [a1 + 0xf]
 15084: 97 99 10                 a2 = a2 << 0x10
 15087: d4 97 07                 a0 = a0 | a2
 15090: 7c 89 0e                 a2 = u8 [a1 + 0xe]
 15093: 97 bb 08                 a4 = a4 << 0x8
 15096: 7c 8c 0d                 a5 = u8 [a1 + 0xd]
 15099: 7c 8a 0c                 a3 = u8 [a1 + 0xc]
 15102: d4 b9 09                 a2 = a2 | a4
 15105: 97 99 10                 a2 = a2 << 0x10
 15108: 97 cc 08                 a5 = a5 << 0x8
 15111: d4 ca 0a                 a3 = a3 | a5
 15114: d4 a9 09                 a2 = a2 | a3
 15117: 97 9b 20                 a4 = a2 << 0x20
 15120: d4 7b 00                 ra = a4 | a0
 15123: 7c 8a 11                 a3 = u8 [a1 + 0x11]
 15126: 97 77 20                 a0 = a0 << 0x20
 15129: d4 47 07                 a0 = a0 | t2
 15132: 7c 8c 10                 a5 = u8 [a1 + 0x10]
 15135: 97 aa 08                 a3 = a3 << 0x8
 15138: 7c 8b 12                 a4 = u8 [a1 + 0x12]
 15141: 7c 88 13                 a1 = u8 [a1 + 0x13]
 15144: d4 ca 0a                 a3 = a3 | a5
 15147: 82 1c 18                 a5 = u64 [sp + 0x18]
 15150: 82 cc 08                 a5 = u64 [a5 + 0x8]
 15153: 97 bb 10                 a4 = a4 << 0x10
 15156: 97 88 18                 a1 = a1 << 0x18
 15159: d4 b8 08                 a1 = a1 | a4
 15162: d4 a8 08                 a1 = a1 | a3
 15165: 3a 0a 50 00 03           a3 = u64 [0x30050]
 15170: 82 1b 20                 a4 = u64 [sp + 0x20]
 15173: c8 bc 0c                 a5 = a5 + a4
 15176: 97 88 20                 a1 = a1 << 0x20
 15179: d4 98 08                 a1 = a1 | a2
 15182: d3 b3 09                 a2 = t1 ^ a4
 15185: d3 a7 07                 a0 = a0 ^ a3
 15188: ca 97 0b                 a4 = a0 * a2
 15191: d6 97 07                 a0 = a0 mulhu a2
 15194: d3 c0 09                 a2 = ra ^ a5
 15197: d3 a8 08                 a1 = a1 ^ a3
 15200: ca 98 0c                 a5 = a1 * a2
 15203: d6 98 08                 a1 = a1 mulhu a2
 15206: d3 87 07                 a0 = a0 ^ a1
 15209: d3 cb 0b                 a4 = a4 ^ a5
 15212: d3 b7 07                 a0 = a0 ^ a4
 15215: 85 77 14                 a0 = a0 ^ 0x14
 15218: ca a7 08                 a1 = a0 * a3
 15221: d6 a7 07                 a0 = a0 mulhu a3
 15224: d3 87 03                 t1 = a0 ^ a1
 15227: 82 14 40                 t2 = u64 [sp + 0x40]
 15230: d2 34 09                 a2 = t2 & t1
 15233: 82 10 38                 ra = u64 [sp + 0x38]
 15236: c8 90 07                 a0 = ra + a2
 15239: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 15242: 7c 7b                    a4 = u8 [a0]
 15244: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 15247: 7c 78 03                 a1 = u8 [a0 + 0x3]
 15250: 97 aa 08                 a3 = a3 << 0x8
 15253: d4 ba 0a                 a3 = a3 | a4
 15256: 97 cc 10                 a5 = a5 << 0x10
 15259: 97 88 18                 a1 = a1 << 0x18
 15262: d4 c8 08                 a1 = a1 | a5
 15265: d4 a8 08                 a1 = a1 | a3
 15268: 7c 7a 05                 a3 = u8 [a0 + 0x5]
 15271: 7c 7b 04                 a4 = u8 [a0 + 0x4]
 15274: 7c 7c 06                 a5 = u8 [a0 + 0x6]
 15277: 7c 77 07                 a0 = u8 [a0 + 0x7]
 15280: 97 aa 08                 a3 = a3 << 0x8
 15283: d4 ba 0a                 a3 = a3 | a4
 15286: 97 cc 10                 a5 = a5 << 0x10
 15289: 97 77 18                 a0 = a0 << 0x18
 15292: d4 c7 07                 a0 = a0 | a5
 15295: d4 a7 07                 a0 = a0 | a3
 15298: 97 77 20                 a0 = a0 << 0x20
 15301: d4 87 07                 a0 = a0 | a1
 15304: d2 57 0b                 a4 = a0 & s0
 15307: 52 0b 5e                 jump @1140 if a4 != 0
      :                          @1138
 15310: 33 0a 08                 a3 = 0x8
 15313: 01                       fallthrough
      :                          @1139
 15314: c8 a9 09                 a2 = a2 + a3
 15317: d2 49 09                 a2 = a2 & t2
 15320: c8 90 07                 a0 = ra + a2
 15323: 7c 78 01                 a1 = u8 [a0 + 0x1]
 15326: 7c 7b                    a4 = u8 [a0]
 15328: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 15331: 64 52                    t0 = s0
 15333: 7c 75 03                 s0 = u8 [a0 + 0x3]
 15336: 97 88 08                 a1 = a1 << 0x8
 15339: d4 b8 08                 a1 = a1 | a4
 15342: 97 cc 10                 a5 = a5 << 0x10
 15345: 97 55 18                 s0 = s0 << 0x18
 15348: d4 5c 0c                 a5 = a5 | s0
 15351: d4 c8 08                 a1 = a1 | a5
 15354: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 15357: 7c 7c 04                 a5 = u8 [a0 + 0x4]
 15360: 7c 75 06                 s0 = u8 [a0 + 0x6]
 15363: 7c 77 07                 a0 = u8 [a0 + 0x7]
 15366: 97 bb 08                 a4 = a4 << 0x8
 15369: d4 cb 0b                 a4 = a4 | a5
 15372: 97 55 10                 s0 = s0 << 0x10
 15375: 97 77 18                 a0 = a0 << 0x18
 15378: d4 57 07                 a0 = a0 | s0
 15381: 64 25                    s0 = t0
 15383: d4 b7 07                 a0 = a0 | a4
 15386: 97 77 20                 a0 = a0 << 0x20
 15389: d4 87 07                 a0 = a0 | a1
 15392: d2 27 0b                 a4 = a0 & t0
 15395: 95 aa 08                 a3 = a3 + 0x8
 15398: 51 0b ac                 jump @1139 if a4 == 0
      :                          @1140
 15401: 6a b7                    a0 = ctz a4
 15403: 98 77 03                 a0 = a0 >> 0x3
 15406: c8 97 07                 a0 = a0 + a2
 15409: d2 47 09                 a2 = a0 & t2
 15412: c8 90 07                 a0 = ra + a2
 15415: 7d 77                    a0 = i8 [a0]
 15417: 82 18 78                 a1 = u64 [sp + 0x78]
 15420: 57 07 c6 fd              jump @1132 if a0 <s 0
      :                          @1141
 15424: 82 07                    a0 = u64 [ra]
 15426: d2 57 07                 a0 = a0 & s0
 15429: 6a 79                    a2 = ctz a0
 15431: 98 99 03                 a2 = a2 >> 0x3
 15434: 28 b8 fd                 jump @1132
      :                          @1142
 15437: 82 b8                    a1 = u64 [a4]
 15439: 7b 18 50                 u64 [sp + 0x50] = a1
 15442: 84 98 07                 a1 = a2 & 0x7
 15445: 8e 88                    a1 = a1 >u 0
 15447: c8 87 07                 a0 = a0 + a1
 15450: 51 07 37                 jump @1145 if a0 == 0
      :                          @1143
 15453: 14 08 01 01 01 01 01 01 01 01 a1 = 0x101010101010101
 15463: 14 05 7f 7f 7f 7f 7f 7f 7f 7f s0 = 0x7f7f7f7f7f7f7f7f
 15473: 82 1a 50                 a3 = u64 [sp + 0x50]
 15476: 01                       fallthrough
      :                          @1144
 15477: 82 ab                    a4 = u64 [a3]
 15479: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 15482: d4 5b 0c                 a5 = a4 | s0
 15485: 85 bb ff                 a4 = a4 ^ 0xffffffffffffffff
 15488: 98 bb 07                 a4 = a4 >> 0x7
 15491: d2 8b 0b                 a4 = a4 & a1
 15494: c8 cb 0b                 a4 = a4 + a5
 15497: 7b ab                    u64 [a3] = a4
 15499: 95 aa 08                 a3 = a3 + 0x8
 15502: 52 07 e7                 jump @1144 if a0 != 0
      :                          @1145
 15505: 82 15 50                 s0 = u64 [sp + 0x50]
 15508: 95 57 08                 a0 = s0 + 0x8
 15511: 7b 17 60                 u64 [sp + 0x60] = a0
 15514: 55 19 08 25              jump @1149 if a2 >=u 8
      :                          @1146
 15518: 64 58                    a1 = s0
 15520: 7b 19 48                 u64 [sp + 0x48] = a2
 15523: 64 06                    s1 = ra
 15525: 7b 12 78                 u64 [sp + 0x78] = t0
 15528: 50 20 c8 00 45 4e        ra = 200, jump @1907
      :                          @1147 [@dyn 100]
 15534: 82 19 78                 a2 = u64 [sp + 0x78]
 15537: 64 60                    ra = s1
 15539: 82 1a 08                 a3 = u64 [sp + 0x8]
 15542: 82 17 48                 a0 = u64 [sp + 0x48]
 15545: 52 07 38                 jump @1150 if a0 != 0
      :                          @1148
 15548: 28 e2 03                 jump @1166
      :                          @1149
 15551: c8 95 07                 a0 = s0 + a2
 15554: 7c 52 01                 t0 = u8 [s0 + 0x1]
 15557: 7c 53                    t1 = u8 [s0]
 15559: 7c 54 03                 t2 = u8 [s0 + 0x3]
 15562: 7c 5b 02                 a4 = u8 [s0 + 0x2]
 15565: 7c 5c 06                 a5 = u8 [s0 + 0x6]
 15568: 7c 5a 07                 a3 = u8 [s0 + 0x7]
 15571: 7c 58 04                 a1 = u8 [s0 + 0x4]
 15574: 7c 59 05                 a2 = u8 [s0 + 0x5]
 15577: 78 7c 06                 u8 [a0 + 0x6] = a5
 15580: 78 7a 07                 u8 [a0 + 0x7] = a3
 15583: 78 78 04                 u8 [a0 + 0x4] = a1
 15586: 78 79 05                 u8 [a0 + 0x5] = a2
 15589: 78 7b 02                 u8 [a0 + 0x2] = a4
 15592: 78 74 03                 u8 [a0 + 0x3] = t2
 15595: 78 73                    u8 [a0] = t1
 15597: 78 72 01                 u8 [a0 + 0x1] = t0
 15600: 01                       fallthrough
      :                          @1150
 15601: 33 07                    a0 = 0
 15603: 14 08 80 80 80 80 80 80 80 80 a1 = 0x8080808080808080
 15613: 95 59 ec                 a2 = s0 + 0xffffffffffffffec
 15616: 7b 19 30                 u64 [sp + 0x30] = a2
 15619: 9e 09 14                 a2 = ra >>r 0x14
 15622: 7b 19 48                 u64 [sp + 0x48] = a2
 15625: 33 09 80 00              a2 = 0x80
 15629: 33 0a 50 00 03           a3 = 0x30050
 15634: 7b 1a 40                 u64 [sp + 0x40] = a3
 15637: 82 12 58                 t0 = u64 [sp + 0x58]
 15640: 7b 18 78                 u64 [sp + 0x78] = a1
 15643: 28 27                    jump @1153
      :                          @1151
 15645: 82 17 70                 a0 = u64 [sp + 0x70]
 15648: 98 77 39                 a0 = a0 >> 0x39
 15651: 95 68 f8                 a1 = s1 + 0xfffffffffffffff8
 15654: d2 82 08                 a1 = t0 & a1
 15657: 82 19 38                 a2 = u64 [sp + 0x38]
 15660: 78 97                    u8 [a2] = a0
 15662: 82 19 60                 a2 = u64 [sp + 0x60]
 15665: c8 98 08                 a1 = a1 + a2
 15668: 78 87                    u8 [a1] = a0
 15670: 33 09 80 00              a2 = 0x80
 15674: 01                       fallthrough
      :                          @1152
 15675: 95 67 01                 a0 = s1 + 0x1
 15678: aa 26 44 03              jump @1165 if s1 == t0
      :                          @1153
 15682: 64 76                    s1 = a0
 15684: c8 75 0a                 a3 = s0 + a0
 15687: 7c a7                    a0 = u8 [a3]
 15689: ab 97 f2                 jump @1152 if a0 != a2
      :                          @1154
 15692: 7b 1a 38                 u64 [sp + 0x38] = a3
 15695: 85 67 ff                 a0 = s1 ^ 0xffffffffffffffff
 15698: 96 78 14                 a1 = a0 * 0x14
 15701: c8 58 08                 a1 = a1 + s0
 15704: 7b 16 68                 u64 [sp + 0x68] = s1
 15707: 9a 67                    a0 = -s1
 15709: 96 7a 14                 a3 = a0 * 0x14
 15712: 82 10 30                 ra = u64 [sp + 0x30]
 15715: c8 a0 00                 ra = ra + a3
 15718: 01                       fallthrough
      :                          @1155
 15719: 7c 07 01                 a0 = u8 [ra + 0x1]
 15722: 7c 09                    a2 = u8 [ra]
 15724: 7c 0b 02                 a4 = u8 [ra + 0x2]
 15727: 7c 0c 03                 a5 = u8 [ra + 0x3]
 15730: 97 77 08                 a0 = a0 << 0x8
 15733: d4 97 07                 a0 = a0 | a2
 15736: 97 bb 10                 a4 = a4 << 0x10
 15739: 97 cc 18                 a5 = a5 << 0x18
 15742: d4 cb 0b                 a4 = a4 | a5
 15745: d4 b7 07                 a0 = a0 | a4
 15748: 7c 09 05                 a2 = u8 [ra + 0x5]
 15751: 7c 0b 04                 a4 = u8 [ra + 0x4]
 15754: 7c 0c 06                 a5 = u8 [ra + 0x6]
 15757: 7c 05 07                 s0 = u8 [ra + 0x7]
 15760: 97 99 08                 a2 = a2 << 0x8
 15763: d4 b9 09                 a2 = a2 | a4
 15766: 97 cc 10                 a5 = a5 << 0x10
 15769: 97 55 18                 s0 = s0 << 0x18
 15772: d4 5c 0c                 a5 = a5 | s0
 15775: d4 c9 09                 a2 = a2 | a5
 15778: 97 9b 20                 a4 = a2 << 0x20
 15781: d4 7b 03                 t1 = a4 | a0
 15784: 7c 0b 09                 a4 = u8 [ra + 0x9]
 15787: 7c 0c 08                 a5 = u8 [ra + 0x8]
 15790: 7c 05 0b                 s0 = u8 [ra + 0xb]
 15793: 7c 07 0a                 a0 = u8 [ra + 0xa]
 15796: 97 bb 08                 a4 = a4 << 0x8
 15799: d4 cb 0b                 a4 = a4 | a5
 15802: 97 55 08                 s0 = s0 << 0x8
 15805: d4 57 07                 a0 = a0 | s0
 15808: 7c 0c 0f                 a5 = u8 [ra + 0xf]
 15811: 97 77 10                 a0 = a0 << 0x10
 15814: d4 b7 07                 a0 = a0 | a4
 15817: 7c 0b 0e                 a4 = u8 [ra + 0xe]
 15820: 97 cc 08                 a5 = a5 << 0x8
 15823: 7c 05 0d                 s0 = u8 [ra + 0xd]
 15826: 7c 06 0c                 s1 = u8 [ra + 0xc]
 15829: d4 cb 0b                 a4 = a4 | a5
 15832: 97 bb 10                 a4 = a4 << 0x10
 15835: 97 55 08                 s0 = s0 << 0x8
 15838: d4 65 05                 s0 = s0 | s1
 15841: d4 b5 05                 s0 = s0 | a4
 15844: 97 5b 20                 a4 = s0 << 0x20
 15847: d4 7b 04                 t2 = a4 | a0
 15850: 7c 0c 11                 a5 = u8 [ra + 0x11]
 15853: 97 77 20                 a0 = a0 << 0x20
 15856: d4 97 07                 a0 = a0 | a2
 15859: 7c 09 10                 a2 = u8 [ra + 0x10]
 15862: 97 cc 08                 a5 = a5 << 0x8
 15865: 7c 06 12                 s1 = u8 [ra + 0x12]
 15868: 7c 0b 13                 a4 = u8 [ra + 0x13]
 15871: d4 c9 09                 a2 = a2 | a5
 15874: 82 1a 40                 a3 = u64 [sp + 0x40]
 15877: 82 ac 08                 a5 = u64 [a3 + 0x8]
 15880: 97 66 10                 s1 = s1 << 0x10
 15883: 97 bb 18                 a4 = a4 << 0x18
 15886: d4 6b 0b                 a4 = a4 | s1
 15889: d4 b9 09                 a2 = a2 | a4
 15892: 3a 0b 50 00 03           a4 = u64 [0x30050]
 15897: 82 1a 48                 a3 = u64 [sp + 0x48]
 15900: c8 ac 0c                 a5 = a5 + a3
 15903: 97 99 20                 a2 = a2 << 0x20
 15906: d4 59 09                 a2 = a2 | s0
 15909: d3 a3 06                 s1 = t1 ^ a3
 15912: d3 b7 07                 a0 = a0 ^ a4
 15915: ca 67 05                 s0 = a0 * s1
 15918: d6 67 07                 a0 = a0 mulhu s1
 15921: d3 c4 0c                 a5 = t2 ^ a5
 15924: d3 b9 09                 a2 = a2 ^ a4
 15927: ca c9 06                 s1 = a2 * a5
 15930: d6 c9 09                 a2 = a2 mulhu a5
 15933: d3 97 07                 a0 = a0 ^ a2
 15936: d3 65 05                 s0 = s0 ^ s1
 15939: d3 57 07                 a0 = a0 ^ s0
 15942: 85 77 14                 a0 = a0 ^ 0x14
 15945: ca b7 09                 a2 = a0 * a4
 15948: d6 b7 07                 a0 = a0 mulhu a4
 15951: d3 97 07                 a0 = a0 ^ a2
 15954: 82 12 58                 t0 = u64 [sp + 0x58]
 15957: 7b 17 70                 u64 [sp + 0x70] = a0
 15960: d2 72 04                 t2 = t0 & a0
 15963: 82 13 50                 t1 = u64 [sp + 0x50]
 15966: c8 43 09                 a2 = t1 + t2
 15969: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 15972: 7c 9c                    a5 = u8 [a2]
 15974: 7c 96 02                 s1 = u8 [a2 + 0x2]
 15977: 7c 95 03                 s0 = u8 [a2 + 0x3]
 15980: 97 bb 08                 a4 = a4 << 0x8
 15983: d4 cb 0b                 a4 = a4 | a5
 15986: 97 66 10                 s1 = s1 << 0x10
 15989: 97 55 18                 s0 = s0 << 0x18
 15992: d4 65 05                 s0 = s0 | s1
 15995: d4 5b 0b                 a4 = a4 | s0
 15998: 7c 9c 05                 a5 = u8 [a2 + 0x5]
 16001: 7c 96 04                 s1 = u8 [a2 + 0x4]
 16004: 7c 95 06                 s0 = u8 [a2 + 0x6]
 16007: 7c 99 07                 a2 = u8 [a2 + 0x7]
 16010: 97 cc 08                 a5 = a5 << 0x8
 16013: d4 6c 0c                 a5 = a5 | s1
 16016: 97 55 10                 s0 = s0 << 0x10
 16019: 97 99 18                 a2 = a2 << 0x18
 16022: d4 59 09                 a2 = a2 | s0
 16025: d4 c9 09                 a2 = a2 | a5
 16028: 97 99 20                 a2 = a2 << 0x20
 16031: d4 b9 09                 a2 = a2 | a4
 16034: 82 1a 78                 a3 = u64 [sp + 0x78]
 16037: d2 a9 0b                 a4 = a2 & a3
 16040: 64 4c                    a5 = t2
 16042: 52 0b 5f                 jump @1158 if a4 != 0
      :                          @1156
 16045: 33 09 08                 a2 = 0x8
 16048: 64 4c                    a5 = t2
 16050: 01                       fallthrough
      :                          @1157
 16051: c8 9c 0c                 a5 = a5 + a2
 16054: d2 2c 0c                 a5 = a5 & t0
 16057: c8 c3 0b                 a4 = t1 + a5
 16060: 7c b6 01                 s1 = u8 [a4 + 0x1]
 16063: 7c b5                    s0 = u8 [a4]
 16065: 7c b7 02                 a0 = u8 [a4 + 0x2]
 16068: 7c ba 03                 a3 = u8 [a4 + 0x3]
 16071: 97 66 08                 s1 = s1 << 0x8
 16074: d4 65 05                 s0 = s0 | s1
 16077: 97 77 10                 a0 = a0 << 0x10
 16080: 97 aa 18                 a3 = a3 << 0x18
 16083: d4 a7 07                 a0 = a0 | a3
 16086: d4 57 07                 a0 = a0 | s0
 16089: 7c ba 05                 a3 = u8 [a4 + 0x5]
 16092: 7c b5 04                 s0 = u8 [a4 + 0x4]
 16095: 7c b6 06                 s1 = u8 [a4 + 0x6]
 16098: 7c bb 07                 a4 = u8 [a4 + 0x7]
 16101: 97 aa 08                 a3 = a3 << 0x8
 16104: d4 5a 0a                 a3 = a3 | s0
 16107: 97 66 10                 s1 = s1 << 0x10
 16110: 97 bb 18                 a4 = a4 << 0x18
 16113: d4 6b 0b                 a4 = a4 | s1
 16116: d4 ba 0a                 a3 = a3 | a4
 16119: 97 aa 20                 a3 = a3 << 0x20
 16122: d4 a7 07                 a0 = a0 | a3
 16125: 82 1a 78                 a3 = u64 [sp + 0x78]
 16128: d2 a7 0b                 a4 = a0 & a3
 16131: 95 99 08                 a2 = a2 + 0x8
 16134: 51 0b ad                 jump @1157 if a4 == 0
      :                          @1158
 16137: 6a b7                    a0 = ctz a4
 16139: 98 77 03                 a0 = a0 >> 0x3
 16142: c8 c7 07                 a0 = a0 + a5
 16145: d2 27 09                 a2 = a0 & t0
 16148: c8 93 07                 a0 = t1 + a2
 16151: 7d 77                    a0 = i8 [a0]
 16153: 64 35                    s0 = t1
 16155: 57 07 0e                 jump @1160 if a0 <s 0
      :                          @1159
 16158: 82 57                    a0 = u64 [s0]
 16160: d2 a7 07                 a0 = a0 & a3
 16163: 6a 79                    a2 = ctz a0
 16165: 98 99 03                 a2 = a2 >> 0x3
 16168: 01                       fallthrough
      :                          @1160
 16169: 82 16 68                 s1 = u64 [sp + 0x68]
 16172: c9 46 07                 a0 = s1 - t2
 16175: c9 49 0a                 a3 = a2 - t2
 16178: d3 a7 07                 a0 = a0 ^ a3
 16181: d2 27 07                 a0 = a0 & t0
 16184: 53 17 08 e5 fd           jump @1151 if a0 <u 8
      :                          @1161
 16189: 85 97 ff                 a0 = a2 ^ 0xffffffffffffffff
 16192: 96 77 14                 a0 = a0 * 0x14
 16195: c8 57 07                 a0 = a0 + s0
 16198: c8 95 0a                 a3 = s0 + a2
 16201: 7c ab                    a4 = u8 [a3]
 16203: 82 1c 70                 a5 = u64 [sp + 0x70]
 16206: 98 cc 39                 a5 = a5 >> 0x39
 16209: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 16212: d2 29 09                 a2 = a2 & t0
 16215: 78 ac                    u8 [a3] = a5
 16217: 82 1a 60                 a3 = u64 [sp + 0x60]
 16220: c8 a9 09                 a2 = a2 + a3
 16223: 78 9c                    u8 [a2] = a5
 16225: 51 2b ff 00 f5 00        jump @1163 if a4 == 255
      :                          @1162
 16231: 7c 79                    a2 = u8 [a0]
 16233: 7c 8a                    a3 = u8 [a1]
 16235: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 16238: 7c 8c 01                 a5 = u8 [a1 + 0x1]
 16241: 78 89                    u8 [a1] = a2
 16243: 78 7a                    u8 [a0] = a3
 16245: 78 8b 01                 u8 [a1 + 0x1] = a4
 16248: 78 7c 01                 u8 [a0 + 0x1] = a5
 16251: 7c 79 02                 a2 = u8 [a0 + 0x2]
 16254: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 16257: 7c 7b 03                 a4 = u8 [a0 + 0x3]
 16260: 7c 8c 03                 a5 = u8 [a1 + 0x3]
 16263: 78 89 02                 u8 [a1 + 0x2] = a2
 16266: 78 7a 02                 u8 [a0 + 0x2] = a3
 16269: 78 8b 03                 u8 [a1 + 0x3] = a4
 16272: 78 7c 03                 u8 [a0 + 0x3] = a5
 16275: 7c 79 04                 a2 = u8 [a0 + 0x4]
 16278: 7c 8a 04                 a3 = u8 [a1 + 0x4]
 16281: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 16284: 7c 8c 05                 a5 = u8 [a1 + 0x5]
 16287: 78 89 04                 u8 [a1 + 0x4] = a2
 16290: 78 7a 04                 u8 [a0 + 0x4] = a3
 16293: 78 8b 05                 u8 [a1 + 0x5] = a4
 16296: 78 7c 05                 u8 [a0 + 0x5] = a5
 16299: 7c 79 06                 a2 = u8 [a0 + 0x6]
 16302: 7c 8a 06                 a3 = u8 [a1 + 0x6]
 16305: 7c 7b 07                 a4 = u8 [a0 + 0x7]
 16308: 7c 8c 07                 a5 = u8 [a1 + 0x7]
 16311: 78 89 06                 u8 [a1 + 0x6] = a2
 16314: 78 7a 06                 u8 [a0 + 0x6] = a3
 16317: 78 8b 07                 u8 [a1 + 0x7] = a4
 16320: 78 7c 07                 u8 [a0 + 0x7] = a5
 16323: 7c 79 08                 a2 = u8 [a0 + 0x8]
 16326: 7c 8a 08                 a3 = u8 [a1 + 0x8]
 16329: 7c 7b 09                 a4 = u8 [a0 + 0x9]
 16332: 7c 8c 09                 a5 = u8 [a1 + 0x9]
 16335: 78 89 08                 u8 [a1 + 0x8] = a2
 16338: 78 7a 08                 u8 [a0 + 0x8] = a3
 16341: 78 8b 09                 u8 [a1 + 0x9] = a4
 16344: 78 7c 09                 u8 [a0 + 0x9] = a5
 16347: 7c 79 0a                 a2 = u8 [a0 + 0xa]
 16350: 7c 8a 0a                 a3 = u8 [a1 + 0xa]
 16353: 7c 7b 0b                 a4 = u8 [a0 + 0xb]
 16356: 7c 8c 0b                 a5 = u8 [a1 + 0xb]
 16359: 78 89 0a                 u8 [a1 + 0xa] = a2
 16362: 78 7a 0a                 u8 [a0 + 0xa] = a3
 16365: 78 8b 0b                 u8 [a1 + 0xb] = a4
 16368: 78 7c 0b                 u8 [a0 + 0xb] = a5
 16371: 7c 79 0c                 a2 = u8 [a0 + 0xc]
 16374: 7c 8a 0c                 a3 = u8 [a1 + 0xc]
 16377: 7c 7b 0d                 a4 = u8 [a0 + 0xd]
 16380: 7c 8c 0d                 a5 = u8 [a1 + 0xd]
 16383: 78 89 0c                 u8 [a1 + 0xc] = a2
 16386: 78 7a 0c                 u8 [a0 + 0xc] = a3
 16389: 78 8b 0d                 u8 [a1 + 0xd] = a4
 16392: 78 7c 0d                 u8 [a0 + 0xd] = a5
 16395: 7c 79 0e                 a2 = u8 [a0 + 0xe]
 16398: 7c 8a 0e                 a3 = u8 [a1 + 0xe]
 16401: 7c 7b 0f                 a4 = u8 [a0 + 0xf]
 16404: 7c 8c 0f                 a5 = u8 [a1 + 0xf]
 16407: 78 89 0e                 u8 [a1 + 0xe] = a2
 16410: 78 7a 0e                 u8 [a0 + 0xe] = a3
 16413: 78 8b 0f                 u8 [a1 + 0xf] = a4
 16416: 78 7c 0f                 u8 [a0 + 0xf] = a5
 16419: 7c 79 10                 a2 = u8 [a0 + 0x10]
 16422: 7c 8a 10                 a3 = u8 [a1 + 0x10]
 16425: 7c 7b 11                 a4 = u8 [a0 + 0x11]
 16428: 7c 8c 11                 a5 = u8 [a1 + 0x11]
 16431: 78 89 10                 u8 [a1 + 0x10] = a2
 16434: 78 7a 10                 u8 [a0 + 0x10] = a3
 16437: 78 8b 11                 u8 [a1 + 0x11] = a4
 16440: 78 7c 11                 u8 [a0 + 0x11] = a5
 16443: 7c 79 12                 a2 = u8 [a0 + 0x12]
 16446: 7c 8a 12                 a3 = u8 [a1 + 0x12]
 16449: 7c 7b 13                 a4 = u8 [a0 + 0x13]
 16452: 7c 8c 13                 a5 = u8 [a1 + 0x13]
 16455: 78 89 12                 u8 [a1 + 0x12] = a2
 16458: 78 7a 12                 u8 [a0 + 0x12] = a3
 16461: 78 8b 13                 u8 [a1 + 0x13] = a4
 16464: 78 7c 13                 u8 [a0 + 0x13] = a5
 16467: 28 14 fd                 jump @1155
      :                          @1163
 16470: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
 16473: d2 92 09                 a2 = t0 & a2
 16476: 82 1a 38                 a3 = u64 [sp + 0x38]
 16479: 46 0a ff                 u8 [a3 + 0] = 0xffffffffffffffff
 16482: 82 1a 60                 a3 = u64 [sp + 0x60]
 16485: c8 a9 09                 a2 = a2 + a3
 16488: 46 09 ff                 u8 [a2 + 0] = 0xffffffffffffffff
 16491: 33 09 14                 a2 = 0x14
 16494: 64 26                    s1 = t0
 16496: 50 20 ca 00 c3 49        ra = 202, jump @1890
      :                          @1164 [@dyn 101]
 16502: 64 62                    t0 = s1
 16504: 82 16 68                 s1 = u64 [sp + 0x68]
 16507: 33 09 80 00              a2 = 0x80
 16511: 28 bc fc                 jump @1152
      :                          @1165
 16514: 82 18 10                 a1 = u64 [sp + 0x10]
 16517: 82 87 08                 a0 = u64 [a1 + 0x8]
 16520: 82 8a 18                 a3 = u64 [a1 + 0x18]
 16523: 95 78 01                 a1 = a0 + 0x1
 16526: 98 89 03                 a2 = a1 >> 0x3
 16529: 84 88 f8                 a1 = a1 & 0xfffffffffffffff8
 16532: c9 98 09                 a2 = a1 - a2
 16535: 88 78 08                 a1 = a0 <u 0x8
 16538: db 87 09                 a2 = a0 if a1 != 0
 16541: 01                       fallthrough
      :                          @1166
 16542: c9 a9 07                 a0 = a2 - a3
 16545: 82 18 10                 a1 = u64 [sp + 0x10]
 16548: 7b 87 10                 u64 [a1 + 0x10] = a0
 16551: 14 05 01 00 00 00 00 00 00 80 s0 = 0x8000000000000001
 16561: 01                       fallthrough
      :                          @1167
 16562: 64 57                    a0 = s0
 16564: 82 10 b0 00              ra = u64 [sp + 0xb0]
 16568: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 16572: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 16576: 95 11 b8 00              sp = sp + 0xb8
 16580: 32 00                    ret
      :                          @1168
 16582: 82 18 10                 a1 = u64 [sp + 0x10]
 16585: 82 16 58                 s1 = u64 [sp + 0x58]
 16588: 82 15 40                 s0 = u64 [sp + 0x40]
 16591: 82 1a 38                 a3 = u64 [sp + 0x38]
 16594: 82 1b                    a4 = u64 [sp]
 16596: 28 0e                    jump @1170
      :                          @1169
 16598: 82 18 10                 a1 = u64 [sp + 0x10]
 16601: 82 87                    a0 = u64 [a1]
 16603: 7b 17 50                 u64 [sp + 0x50] = a0
 16606: 82 19 48                 a2 = u64 [sp + 0x48]
 16609: 01                       fallthrough
      :                          @1170
 16610: 82 17 08                 a0 = u64 [sp + 0x8]
 16613: c9 7b 07                 a0 = a4 - a0
 16616: 7b 8a                    u64 [a1] = a3
 16618: 7b 85 08                 u64 [a1 + 0x8] = s0
 16621: 7b 87 10                 u64 [a1 + 0x10] = a0
 16624: 14 05 01 00 00 00 00 00 00 80 s0 = 0x8000000000000001
 16634: 51 06 b8                 jump @1167 if s1 == 0
      :                          @1171
 16637: 96 97 14                 a0 = a2 * 0x14
 16640: 95 77 07                 a0 = a0 + 0x7
 16643: 84 78 f8                 a1 = a0 & 0xfffffffffffffff8
 16646: c8 86 07                 a0 = s1 + a1
 16649: 95 79 00 f8              a2 = a0 + 0xfffffffffffff800
 16653: 95 99 08 f8              a2 = a2 + 0xfffffffffffff808
 16657: 33 0a 00 f0              a3 = 0xfffffffffffff000
 16661: ac a9 9d                 jump @1167 if a2 <u a3
      :                          @1172
 16664: 95 77 09                 a0 = a0 + 0x9
 16667: 82 19 50                 a2 = u64 [sp + 0x50]
 16670: c9 89 08                 a1 = a2 - a1
 16673: 33 09 80 00 03           a2 = 0x30080
 16678: 95 99 00 10              a2 = a2 + 0x1000
 16682: 14 05 01 00 00 00 00 00 00 80 s0 = 0x8000000000000001
 16692: 01                       fallthrough
      :                          @1173
 16693: 82 9a                    a3 = u64 [a2]
 16695: c9 a9 0b                 a4 = a2 - a3
 16698: ab 8b 78 ff              jump @1167 if a4 != a1
      :                          @1174
 16702: c9 7a 0b                 a4 = a3 - a0
 16705: 01                       fallthrough
      :                          @1175
 16706: 82 9c                    a5 = u64 [a2]
 16708: ab ac f1                 jump @1173 if a5 != a3
      :                          @1176
 16711: 7b 9b                    u64 [a2] = a4
 16713: 33 06                    s1 = 0
 16715: 01                       fallthrough
      :                          @1177
 16716: ab ac e9                 jump @1173 if a5 != a3
      :                          @1178
 16719: 28 63 ff                 jump @1167
      :                          @1179
 16722: 00                       trap
      :                          @1180
 16723: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 16726: 7b 10 30                 u64 [sp + 0x30] = ra
 16729: 7b 15 28                 u64 [sp + 0x28] = s0
 16732: 7b 16 20                 u64 [sp + 0x20] = s1
 16735: 7b 17 18                 u64 [sp + 0x18] = a0
 16738: 55 19 08 0f              jump @1182 if a2 >=u 8
      :                          @1181
 16742: 88 97 04                 a0 = a2 <u 0x4
 16745: 33 00 04                 ra = 0x4
 16748: 93 70 08                 ra = 0x8 if a0 == 0
 16751: 28 31                    jump @1184
      :                          @1182
 16753: 98 97 3d                 a0 = a2 >> 0x3d
 16756: 52 07 e3 00              jump @1197 if a0 != 0
      :                          @1183
 16760: 14 07 93 24 49 92 24 49 92 24 a0 = 0x2492492492492493
 16770: 97 99 03                 a2 = a2 << 0x3
 16773: d6 79 07                 a0 = a2 mulhu a0
 16776: c9 79 09                 a2 = a2 - a0
 16779: 98 99 01                 a2 = a2 >> 0x1
 16782: c8 97 07                 a0 = a0 + a2
 16785: 98 77 02                 a0 = a0 >> 0x2
 16788: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 16791: 68 77                    a0 = clz a0
 16793: 9c 70 ff                 ra = 0xffffffffffffffff >> a0
 16796: 95 00 01                 ra = ra + 0x1
 16799: 01                       fallthrough
      :                          @1184
 16800: d6 08 07                 a0 = a1 mulhu ra
 16803: 52 07 b4 00              jump @1197 if a0 != 0
      :                          @1185
 16807: ca 08 07                 a0 = a1 * ra
 16810: 56 17 f8 ad 00           jump @1197 if a0 >u 4294967288
      :                          @1186
 16815: 95 77 07                 a0 = a0 + 0x7
 16818: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 16821: 95 09 08                 a2 = ra + 0x8
 16824: c8 9a 08                 a1 = a3 + a2
 16827: ac a8 9c 00              jump @1197 if a1 <u a3
      :                          @1187
 16831: 14 07 f8 ff ff ff ff ff ff 7f a0 = 0x7ffffffffffffff8
 16841: ac 87 8e 00              jump @1197 if a0 <u a1
      :                          @1188
 16845: 7b 1a 08                 u64 [sp + 0x8] = a3
 16848: 7b 19 10                 u64 [sp + 0x10] = a2
 16851: 33 02 80 00 03           t0 = 0x30080
 16856: 95 24 00 10              t2 = t0 + 0x1000
 16860: 33 0c f8 0f              a5 = 0xff8
 16864: 01                       fallthrough
      :                          @1189
 16865: 82 45                    s0 = u64 [t2]
 16867: c8 85 06                 s1 = s0 + a1
 16870: ac 56 df be              jump @24 if s1 <u s0
      :                          @1190
 16874: ac 6c db be              jump @24 if a5 <u s1
      :                          @1191
 16878: c9 62 03                 t1 = t0 - s1
 16881: 95 33 00 10              t1 = t1 + 0x1000
 16885: 84 3a 07                 a3 = t1 & 0x7
 16888: c8 a6 06                 s1 = s1 + a3
 16891: 01                       fallthrough
      :                          @1192
 16892: 82 47                    a0 = u64 [t2]
 16894: ab 57 08                 jump @1194 if a0 != s0
      :                          @1193
 16897: 7b 46                    u64 [t2] = s1
 16899: 33 09                    a2 = 0
 16901: 01                       fallthrough
      :                          @1194
 16902: ab 57 db                 jump @1189 if a0 != s0
      :                          @1195
 16905: c9 a3 05                 s0 = t1 - a3
 16908: 88 07 09                 a0 = ra <u 0x9
 16911: 95 0a ff                 a3 = ra + 0xffffffffffffffff
 16914: 7b 1a                    u64 [sp] = a3
 16916: 98 08 03                 a1 = ra >> 0x3
 16919: 84 09 f8                 a2 = ra & 0xfffffffffffffff8
 16922: c9 89 06                 s1 = a2 - a1
 16925: db 7a 06                 s1 = a3 if a0 != 0
 16928: 82 17 08                 a0 = u64 [sp + 0x8]
 16931: c8 57 07                 a0 = a0 + s0
 16934: 7b 17 08                 u64 [sp + 0x8] = a0
 16937: 33 08 ff 00              a1 = 0xff
 16941: 82 15 18                 s0 = u64 [sp + 0x18]
 16944: 82 19 10                 a2 = u64 [sp + 0x10]
 16947: 50 20 cc 00 47 4a        ra = 204, jump @1942
      :                          @1196 [@dyn 102]
 16953: 82 17 08                 a0 = u64 [sp + 0x8]
 16956: 7b 57                    u64 [s0] = a0
 16958: 82 17                    a0 = u64 [sp]
 16960: 7b 57 08                 u64 [s0 + 0x8] = a0
 16963: 7b 56 10                 u64 [s0 + 0x10] = s1
 16966: 49 15 18                 u64 [s0 + 24] = 0
 16969: 82 10 30                 ra = u64 [sp + 0x30]
 16972: 82 15 28                 s0 = u64 [sp + 0x28]
 16975: 82 16 20                 s1 = u64 [sp + 0x20]
 16978: 95 11 38                 sp = sp + 0x38
 16981: 32 00                    ret
      :                          @1197
 16983: 00                       trap
      :                          @1198
 16984: 95 11 48 ff              sp = sp + 0xffffffffffffff48
 16988: 7b 10 b0 00              u64 [sp + 0xb0] = ra
 16992: 7b 15 a8 00              u64 [sp + 0xa8] = s0
 16996: 7b 16 a0 00              u64 [sp + 0xa0] = s1
 17000: 82 76 18                 s1 = u64 [a0 + 0x18]
 17003: c8 68 08                 a1 = a1 + s1
 17006: ac 68 71 08              jump @1251 if a1 <u s1
      :                          @1199
 17010: 64 94                    t2 = a2
 17012: 82 72 08                 t0 = u64 [a0 + 0x8]
 17015: 88 2a 08                 a3 = t0 <u 0x8
 17018: 95 29 01                 a2 = t0 + 0x1
 17021: 64 7b                    a4 = a0
 17023: 98 97 03                 a0 = a2 >> 0x3
 17026: 84 95 f8                 s0 = a2 & 0xfffffffffffffff8
 17029: c9 75 05                 s0 = s0 - a0
 17032: 64 2c                    a5 = t0
 17034: da a5 0c                 a5 = s0 if a3 == 0
 17037: 98 ca 01                 a3 = a5 >> 0x1
 17040: 7b 12 60                 u64 [sp + 0x60] = t0
 17043: 7b 1b 10                 u64 [sp + 0x10] = a4
 17046: ae 8a c1 02              jump @1214 if a3 >=u a1
      :                          @1200
 17050: 7b 14 78                 u64 [sp + 0x78] = t2
 17053: 64 25                    s0 = t0
 17055: 7b 19 50                 u64 [sp + 0x50] = a2
 17058: 95 c9 01                 a2 = a5 + 0x1
 17061: e4 89 09                 a2 = maxu(a2, a1)
 17064: 95 17 80 00              a0 = sp + 0x80
 17068: 33 08 20                 a1 = 0x20
 17071: 50 20 ce 00 a4 fe        ra = 206, jump @1180
      :                          @1201 [@dyn 103]
 17077: 82 1b 80 00              a4 = u64 [sp + 0x80]
 17081: 82 17 88 00              a0 = u64 [sp + 0x88]
 17085: 51 0b 93 07              jump @1239 if a4 == 0
      :                          @1202
 17089: 82 1a 90 00              a3 = u64 [sp + 0x90]
 17093: 51 06 b0 07              jump @1241 if s1 == 0
      :                          @1203
 17097: 7b 1a                    u64 [sp] = a3
 17099: 7b 17 40                 u64 [sp + 0x40] = a0
 17102: 82 17 10                 a0 = u64 [sp + 0x10]
 17105: 64 6a                    a3 = s1
 17107: 82 76                    s1 = u64 [a0]
 17109: 14 05 80 80 80 80 80 80 80 80 s0 = 0x8080808080808080
 17119: 82 67                    a0 = u64 [s1]
 17121: 33 08                    a1 = 0
 17123: 7b 1b 38                 u64 [sp + 0x38] = a4
 17126: 95 bb 08                 a4 = a4 + 0x8
 17129: 7b 1b 30                 u64 [sp + 0x30] = a4
 17132: e0 75 0b                 a4 = s0 & ~a0
 17135: 95 67 e0                 a0 = s1 + 0xffffffffffffffe0
 17138: 7b 17 28                 u64 [sp + 0x28] = a0
 17141: 82 17 78                 a0 = u64 [sp + 0x78]
 17144: 9e 77 14                 a0 = a0 >>r 0x14
 17147: 7b 17 20                 u64 [sp + 0x20] = a0
 17150: 33 07 50 00 03           a0 = 0x30050
 17155: 7b 17 18                 u64 [sp + 0x18] = a0
 17158: 7b 1a 08                 u64 [sp + 0x8] = a3
 17161: 7b 16 48                 u64 [sp + 0x48] = s1
 17164: 28 5b                    jump @1206
      :                          @1204
 17166: 82 1a 70                 a3 = u64 [sp + 0x70]
 17169: 95 a7 ff                 a0 = a3 + 0xffffffffffffffff
 17172: d2 7a 0a                 a3 = a3 & a0
 17175: 7b 1a 70                 u64 [sp + 0x70] = a3
 17178: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 17181: 7b 18 78                 u64 [sp + 0x78] = a1
 17184: c8 90 07                 a0 = ra + a2
 17187: 98 38 39                 a1 = t1 >> 0x39
 17190: 95 9a f8                 a3 = a2 + 0xfffffffffffffff8
 17193: d2 4a 0a                 a3 = a3 & t2
 17196: 78 78                    u8 [a0] = a1
 17198: 82 17 30                 a0 = u64 [sp + 0x30]
 17201: c8 7a 0a                 a3 = a3 + a0
 17204: 78 a8                    u8 [a3] = a1
 17206: 82 17 58                 a0 = u64 [sp + 0x58]
 17209: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 17212: 97 77 05                 a0 = a0 << 0x5
 17215: 82 18 48                 a1 = u64 [sp + 0x48]
 17218: c8 78 08                 a1 = a1 + a0
 17221: 85 97 ff                 a0 = a2 ^ 0xffffffffffffffff
 17224: 97 77 05                 a0 = a0 << 0x5
 17227: c8 07 07                 a0 = a0 + ra
 17230: 33 09 20                 a2 = 0x20
 17233: 50 20 d0 00 e2 46        ra = 208, jump @1890
      :                          @1205 [@dyn 104]
 17239: 82 1b 70                 a4 = u64 [sp + 0x70]
 17242: 82 19 50                 a2 = u64 [sp + 0x50]
 17245: 82 18 68                 a1 = u64 [sp + 0x68]
 17248: 82 1a 78                 a3 = u64 [sp + 0x78]
 17251: 51 0a ff 06              jump @1240 if a3 == 0
      :                          @1206
 17255: 7b 1a 78                 u64 [sp + 0x78] = a3
 17258: 52 0b 16                 jump @1209 if a4 != 0
      :                          @1207
 17261: 82 67 08                 a0 = u64 [s1 + 0x8]
 17264: 95 66 08                 s1 = s1 + 0x8
 17267: d2 57 07                 a0 = a0 & s0
 17270: 95 88 08                 a1 = a1 + 0x8
 17273: aa 57 f4                 jump @1207 if a0 == s0
      :                          @1208
 17276: d3 57 0b                 a4 = a0 ^ s0
 17279: 01                       fallthrough
      :                          @1209
 17280: 7b 1b 70                 u64 [sp + 0x70] = a4
 17283: 6a b7                    a0 = ctz a4
 17285: 98 77 03                 a0 = a0 >> 0x3
 17288: 7b 18 68                 u64 [sp + 0x68] = a1
 17291: c8 87 07                 a0 = a0 + a1
 17294: 7b 17 58                 u64 [sp + 0x58] = a0
 17297: 97 78 05                 a1 = a0 << 0x5
 17300: 82 17 28                 a0 = u64 [sp + 0x28]
 17303: c9 87 08                 a1 = a0 - a1
 17306: 7c 89 01                 a2 = u8 [a1 + 0x1]
 17309: 7c 8a                    a3 = u8 [a1]
 17311: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 17314: 7c 8c 03                 a5 = u8 [a1 + 0x3]
 17317: 97 99 08                 a2 = a2 << 0x8
 17320: d4 a9 09                 a2 = a2 | a3
 17323: 97 bb 10                 a4 = a4 << 0x10
 17326: 97 cc 18                 a5 = a5 << 0x18
 17329: d4 cb 0b                 a4 = a4 | a5
 17332: d4 b9 09                 a2 = a2 | a4
 17335: 7c 8a 05                 a3 = u8 [a1 + 0x5]
 17338: 7c 8b 04                 a4 = u8 [a1 + 0x4]
 17341: 7c 8c 06                 a5 = u8 [a1 + 0x6]
 17344: 7c 87 07                 a0 = u8 [a1 + 0x7]
 17347: 97 aa 08                 a3 = a3 << 0x8
 17350: d4 ba 0a                 a3 = a3 | a4
 17353: 97 cc 10                 a5 = a5 << 0x10
 17356: 97 77 18                 a0 = a0 << 0x18
 17359: d4 c7 07                 a0 = a0 | a5
 17362: d4 a7 04                 t2 = a0 | a3
 17365: 97 47 20                 a0 = t2 << 0x20
 17368: d4 97 03                 t1 = a0 | a2
 17371: 7c 87 09                 a0 = u8 [a1 + 0x9]
 17374: 7c 8b 08                 a4 = u8 [a1 + 0x8]
 17377: 7c 8c 0b                 a5 = u8 [a1 + 0xb]
 17380: 7c 89 0a                 a2 = u8 [a1 + 0xa]
 17383: 97 77 08                 a0 = a0 << 0x8
 17386: d4 b7 07                 a0 = a0 | a4
 17389: 97 cc 08                 a5 = a5 << 0x8
 17392: d4 c9 09                 a2 = a2 | a5
 17395: 97 99 10                 a2 = a2 << 0x10
 17398: d4 97 07                 a0 = a0 | a2
 17401: 7c 89 0f                 a2 = u8 [a1 + 0xf]
 17404: 7c 8b 0d                 a4 = u8 [a1 + 0xd]
 17407: 7c 8c 0c                 a5 = u8 [a1 + 0xc]
 17410: 7c 8a 0e                 a3 = u8 [a1 + 0xe]
 17413: 97 99 08                 a2 = a2 << 0x8
 17416: 97 bb 08                 a4 = a4 << 0x8
 17419: d4 cb 0b                 a4 = a4 | a5
 17422: d4 a9 09                 a2 = a2 | a3
 17425: 97 99 10                 a2 = a2 << 0x10
 17428: d4 b9 09                 a2 = a2 | a4
 17431: 97 9b 20                 a4 = a2 << 0x20
 17434: d4 7b 00                 ra = a4 | a0
 17437: 7c 8a 11                 a3 = u8 [a1 + 0x11]
 17440: 97 77 20                 a0 = a0 << 0x20
 17443: d4 47 07                 a0 = a0 | t2
 17446: 7c 8c 10                 a5 = u8 [a1 + 0x10]
 17449: 97 aa 08                 a3 = a3 << 0x8
 17452: 7c 8b 12                 a4 = u8 [a1 + 0x12]
 17455: 7c 88 13                 a1 = u8 [a1 + 0x13]
 17458: d4 ca 0a                 a3 = a3 | a5
 17461: 82 1c 18                 a5 = u64 [sp + 0x18]
 17464: 82 cc 08                 a5 = u64 [a5 + 0x8]
 17467: 97 bb 10                 a4 = a4 << 0x10
 17470: 97 88 18                 a1 = a1 << 0x18
 17473: d4 b8 08                 a1 = a1 | a4
 17476: d4 a8 08                 a1 = a1 | a3
 17479: 3a 0a 50 00 03           a3 = u64 [0x30050]
 17484: 82 1b 20                 a4 = u64 [sp + 0x20]
 17487: c8 bc 0c                 a5 = a5 + a4
 17490: 97 88 20                 a1 = a1 << 0x20
 17493: d4 98 08                 a1 = a1 | a2
 17496: d3 b3 09                 a2 = t1 ^ a4
 17499: d3 a7 07                 a0 = a0 ^ a3
 17502: ca 97 0b                 a4 = a0 * a2
 17505: d6 97 07                 a0 = a0 mulhu a2
 17508: d3 c0 09                 a2 = ra ^ a5
 17511: d3 a8 08                 a1 = a1 ^ a3
 17514: ca 98 0c                 a5 = a1 * a2
 17517: d6 98 08                 a1 = a1 mulhu a2
 17520: d3 87 07                 a0 = a0 ^ a1
 17523: d3 cb 0b                 a4 = a4 ^ a5
 17526: d3 b7 07                 a0 = a0 ^ a4
 17529: 85 77 14                 a0 = a0 ^ 0x14
 17532: ca a7 08                 a1 = a0 * a3
 17535: d6 a7 07                 a0 = a0 mulhu a3
 17538: d3 87 03                 t1 = a0 ^ a1
 17541: 82 14 40                 t2 = u64 [sp + 0x40]
 17544: d2 34 09                 a2 = t2 & t1
 17547: 82 10 38                 ra = u64 [sp + 0x38]
 17550: c8 90 07                 a0 = ra + a2
 17553: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 17556: 7c 7b                    a4 = u8 [a0]
 17558: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 17561: 7c 78 03                 a1 = u8 [a0 + 0x3]
 17564: 97 aa 08                 a3 = a3 << 0x8
 17567: d4 ba 0a                 a3 = a3 | a4
 17570: 97 cc 10                 a5 = a5 << 0x10
 17573: 97 88 18                 a1 = a1 << 0x18
 17576: d4 c8 08                 a1 = a1 | a5
 17579: d4 a8 08                 a1 = a1 | a3
 17582: 7c 7a 05                 a3 = u8 [a0 + 0x5]
 17585: 7c 7b 04                 a4 = u8 [a0 + 0x4]
 17588: 7c 7c 06                 a5 = u8 [a0 + 0x6]
 17591: 7c 77 07                 a0 = u8 [a0 + 0x7]
 17594: 97 aa 08                 a3 = a3 << 0x8
 17597: d4 ba 0a                 a3 = a3 | a4
 17600: 97 cc 10                 a5 = a5 << 0x10
 17603: 97 77 18                 a0 = a0 << 0x18
 17606: d4 c7 07                 a0 = a0 | a5
 17609: d4 a7 07                 a0 = a0 | a3
 17612: 97 77 20                 a0 = a0 << 0x20
 17615: d4 87 07                 a0 = a0 | a1
 17618: d2 57 0b                 a4 = a0 & s0
 17621: 52 0b 5e                 jump @1212 if a4 != 0
      :                          @1210
 17624: 33 0a 08                 a3 = 0x8
 17627: 01                       fallthrough
      :                          @1211
 17628: c8 a9 09                 a2 = a2 + a3
 17631: d2 49 09                 a2 = a2 & t2
 17634: c8 90 07                 a0 = ra + a2
 17637: 7c 78 01                 a1 = u8 [a0 + 0x1]
 17640: 7c 7b                    a4 = u8 [a0]
 17642: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 17645: 64 52                    t0 = s0
 17647: 7c 75 03                 s0 = u8 [a0 + 0x3]
 17650: 97 88 08                 a1 = a1 << 0x8
 17653: d4 b8 08                 a1 = a1 | a4
 17656: 97 cc 10                 a5 = a5 << 0x10
 17659: 97 55 18                 s0 = s0 << 0x18
 17662: d4 5c 0c                 a5 = a5 | s0
 17665: d4 c8 08                 a1 = a1 | a5
 17668: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 17671: 7c 7c 04                 a5 = u8 [a0 + 0x4]
 17674: 7c 75 06                 s0 = u8 [a0 + 0x6]
 17677: 7c 77 07                 a0 = u8 [a0 + 0x7]
 17680: 97 bb 08                 a4 = a4 << 0x8
 17683: d4 cb 0b                 a4 = a4 | a5
 17686: 97 55 10                 s0 = s0 << 0x10
 17689: 97 77 18                 a0 = a0 << 0x18
 17692: d4 57 07                 a0 = a0 | s0
 17695: 64 25                    s0 = t0
 17697: d4 b7 07                 a0 = a0 | a4
 17700: 97 77 20                 a0 = a0 << 0x20
 17703: d4 87 07                 a0 = a0 | a1
 17706: d2 27 0b                 a4 = a0 & t0
 17709: 95 aa 08                 a3 = a3 + 0x8
 17712: 51 0b ac                 jump @1211 if a4 == 0
      :                          @1212
 17715: 6a b7                    a0 = ctz a4
 17717: 98 77 03                 a0 = a0 >> 0x3
 17720: c8 97 07                 a0 = a0 + a2
 17723: d2 47 09                 a2 = a0 & t2
 17726: c8 90 07                 a0 = ra + a2
 17729: 7d 77                    a0 = i8 [a0]
 17731: 82 18 78                 a1 = u64 [sp + 0x78]
 17734: 57 07 c8 fd              jump @1204 if a0 <s 0
      :                          @1213
 17738: 82 07                    a0 = u64 [ra]
 17740: d2 57 07                 a0 = a0 & s0
 17743: 6a 79                    a2 = ctz a0
 17745: 98 99 03                 a2 = a2 >> 0x3
 17748: 28 ba fd                 jump @1204
      :                          @1214
 17751: 7b 16 08                 u64 [sp + 0x8] = s1
 17754: 82 b8                    a1 = u64 [a4]
 17756: 7b 18 78                 u64 [sp + 0x78] = a1
 17759: 84 98 07                 a1 = a2 & 0x7
 17762: 8e 88                    a1 = a1 >u 0
 17764: c8 87 07                 a0 = a0 + a1
 17767: 51 07 37                 jump @1217 if a0 == 0
      :                          @1215
 17770: 14 08 01 01 01 01 01 01 01 01 a1 = 0x101010101010101
 17780: 14 06 7f 7f 7f 7f 7f 7f 7f 7f s1 = 0x7f7f7f7f7f7f7f7f
 17790: 82 1a 78                 a3 = u64 [sp + 0x78]
 17793: 01                       fallthrough
      :                          @1216
 17794: 82 ab                    a4 = u64 [a3]
 17796: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 17799: d4 6b 0c                 a5 = a4 | s1
 17802: 85 bb ff                 a4 = a4 ^ 0xffffffffffffffff
 17805: 98 bb 07                 a4 = a4 >> 0x7
 17808: d2 8b 0b                 a4 = a4 & a1
 17811: c8 cb 0b                 a4 = a4 + a5
 17814: 7b ab                    u64 [a3] = a4
 17816: 95 aa 08                 a3 = a3 + 0x8
 17819: 52 07 e7                 jump @1216 if a0 != 0
      :                          @1217
 17822: 82 18 78                 a1 = u64 [sp + 0x78]
 17825: 95 87 08                 a0 = a1 + 0x8
 17828: 7b 17 58                 u64 [sp + 0x58] = a0
 17831: 55 19 08 20              jump @1221 if a2 >=u 8
      :                          @1218
 17835: 7b 19 50                 u64 [sp + 0x50] = a2
 17838: 64 46                    s1 = t2
 17840: 50 20 d2 00 3d 45        ra = 210, jump @1907
      :                          @1219 [@dyn 105]
 17846: 64 64                    t2 = s1
 17848: 82 16 78                 s1 = u64 [sp + 0x78]
 17851: 82 1a 08                 a3 = u64 [sp + 0x8]
 17854: 82 17 50                 a0 = u64 [sp + 0x50]
 17857: 52 07 3a                 jump @1222 if a0 != 0
      :                          @1220
 17860: 28 78 04                 jump @1238
      :                          @1221
 17863: c8 98 07                 a0 = a1 + a2
 17866: 7c 82 01                 t0 = u8 [a1 + 0x1]
 17869: 7c 83                    t1 = u8 [a1]
 17871: 64 86                    s1 = a1
 17873: 7c 8a 03                 a3 = u8 [a1 + 0x3]
 17876: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 17879: 7c 8c 06                 a5 = u8 [a1 + 0x6]
 17882: 7c 85 07                 s0 = u8 [a1 + 0x7]
 17885: 7c 88 04                 a1 = u8 [a1 + 0x4]
 17888: 7c 69 05                 a2 = u8 [s1 + 0x5]
 17891: 78 7c 06                 u8 [a0 + 0x6] = a5
 17894: 78 75 07                 u8 [a0 + 0x7] = s0
 17897: 78 78 04                 u8 [a0 + 0x4] = a1
 17900: 78 79 05                 u8 [a0 + 0x5] = a2
 17903: 78 7b 02                 u8 [a0 + 0x2] = a4
 17906: 78 7a 03                 u8 [a0 + 0x3] = a3
 17909: 78 73                    u8 [a0] = t1
 17911: 78 72 01                 u8 [a0 + 0x1] = t0
 17914: 01                       fallthrough
      :                          @1222
 17915: 33 07                    a0 = 0
 17917: 14 05 80 80 80 80 80 80 80 80 s0 = 0x8080808080808080
 17927: 95 68 e0                 a1 = s1 + 0xffffffffffffffe0
 17930: 7b 18 38                 u64 [sp + 0x38] = a1
 17933: 9e 48 14                 a1 = t2 >>r 0x14
 17936: 7b 18 50                 u64 [sp + 0x50] = a1
 17939: 33 08 80 00              a1 = 0x80
 17943: 33 09 50 00 03           a2 = 0x30050
 17948: 7b 19 48                 u64 [sp + 0x48] = a2
 17951: 64 6a                    a3 = s1
 17953: 82 12 60                 t0 = u64 [sp + 0x60]
 17956: 28 2a                    jump @1225
      :                          @1223
 17958: 82 17 70                 a0 = u64 [sp + 0x70]
 17961: 98 77 39                 a0 = a0 >> 0x39
 17964: 95 68 f8                 a1 = s1 + 0xfffffffffffffff8
 17967: d2 82 08                 a1 = t0 & a1
 17970: 82 19 40                 a2 = u64 [sp + 0x40]
 17973: 78 97                    u8 [a2] = a0
 17975: 82 19 58                 a2 = u64 [sp + 0x58]
 17978: c8 98 08                 a1 = a1 + a2
 17981: 78 87                    u8 [a1] = a0
 17983: 82 1a 78                 a3 = u64 [sp + 0x78]
 17986: 33 08 80 00              a1 = 0x80
 17990: 01                       fallthrough
      :                          @1224
 17991: 95 67 01                 a0 = s1 + 0x1
 17994: aa 26 d6 03              jump @1237 if s1 == t0
      :                          @1225
 17998: 64 76                    s1 = a0
 18000: c8 7a 09                 a2 = a3 + a0
 18003: 7c 97                    a0 = u8 [a2]
 18005: ab 87 f2                 jump @1224 if a0 != a1
      :                          @1226
 18008: 7b 19 40                 u64 [sp + 0x40] = a2
 18011: 64 53                    t1 = s0
 18013: 85 67 ff                 a0 = s1 ^ 0xffffffffffffffff
 18016: 97 77 05                 a0 = a0 << 0x5
 18019: c8 7a 08                 a1 = a3 + a0
 18022: 7b 16 68                 u64 [sp + 0x68] = s1
 18025: 97 67 05                 a0 = s1 << 0x5
 18028: 82 19 38                 a2 = u64 [sp + 0x38]
 18031: c9 79 00                 ra = a2 - a0
 18034: 01                       fallthrough
      :                          @1227
 18035: 7c 07 01                 a0 = u8 [ra + 0x1]
 18038: 7c 09                    a2 = u8 [ra]
 18040: 7c 0b 02                 a4 = u8 [ra + 0x2]
 18043: 7c 0c 03                 a5 = u8 [ra + 0x3]
 18046: 97 77 08                 a0 = a0 << 0x8
 18049: d4 97 07                 a0 = a0 | a2
 18052: 97 bb 10                 a4 = a4 << 0x10
 18055: 97 cc 18                 a5 = a5 << 0x18
 18058: d4 cb 0b                 a4 = a4 | a5
 18061: d4 b7 07                 a0 = a0 | a4
 18064: 7c 09 05                 a2 = u8 [ra + 0x5]
 18067: 7c 0b 04                 a4 = u8 [ra + 0x4]
 18070: 7c 0c 06                 a5 = u8 [ra + 0x6]
 18073: 7c 05 07                 s0 = u8 [ra + 0x7]
 18076: 97 99 08                 a2 = a2 << 0x8
 18079: d4 b9 09                 a2 = a2 | a4
 18082: 97 cc 10                 a5 = a5 << 0x10
 18085: 97 55 18                 s0 = s0 << 0x18
 18088: d4 5c 0c                 a5 = a5 | s0
 18091: d4 c9 09                 a2 = a2 | a5
 18094: 97 9b 20                 a4 = a2 << 0x20
 18097: d4 7b 02                 t0 = a4 | a0
 18100: 7c 0b 09                 a4 = u8 [ra + 0x9]
 18103: 7c 0c 08                 a5 = u8 [ra + 0x8]
 18106: 7c 05 0b                 s0 = u8 [ra + 0xb]
 18109: 7c 07 0a                 a0 = u8 [ra + 0xa]
 18112: 97 bb 08                 a4 = a4 << 0x8
 18115: d4 cb 0b                 a4 = a4 | a5
 18118: 97 55 08                 s0 = s0 << 0x8
 18121: d4 57 07                 a0 = a0 | s0
 18124: 7c 0c 0f                 a5 = u8 [ra + 0xf]
 18127: 97 77 10                 a0 = a0 << 0x10
 18130: d4 b7 07                 a0 = a0 | a4
 18133: 7c 0b 0e                 a4 = u8 [ra + 0xe]
 18136: 97 cc 08                 a5 = a5 << 0x8
 18139: 7c 05 0d                 s0 = u8 [ra + 0xd]
 18142: 7c 06 0c                 s1 = u8 [ra + 0xc]
 18145: d4 cb 0b                 a4 = a4 | a5
 18148: 97 bb 10                 a4 = a4 << 0x10
 18151: 97 55 08                 s0 = s0 << 0x8
 18154: d4 65 05                 s0 = s0 | s1
 18157: d4 b5 05                 s0 = s0 | a4
 18160: 97 5b 20                 a4 = s0 << 0x20
 18163: d4 7b 04                 t2 = a4 | a0
 18166: 7c 0c 11                 a5 = u8 [ra + 0x11]
 18169: 97 77 20                 a0 = a0 << 0x20
 18172: d4 97 07                 a0 = a0 | a2
 18175: 7c 09 10                 a2 = u8 [ra + 0x10]
 18178: 97 cc 08                 a5 = a5 << 0x8
 18181: 7c 06 12                 s1 = u8 [ra + 0x12]
 18184: 7c 0b 13                 a4 = u8 [ra + 0x13]
 18187: d4 c9 09                 a2 = a2 | a5
 18190: 82 1c 48                 a5 = u64 [sp + 0x48]
 18193: 82 cc 08                 a5 = u64 [a5 + 0x8]
 18196: 97 66 10                 s1 = s1 << 0x10
 18199: 97 bb 18                 a4 = a4 << 0x18
 18202: d4 6b 0b                 a4 = a4 | s1
 18205: d4 b9 09                 a2 = a2 | a4
 18208: 3a 0b 50 00 03           a4 = u64 [0x30050]
 18213: 82 16 50                 s1 = u64 [sp + 0x50]
 18216: c8 6c 0c                 a5 = a5 + s1
 18219: 97 99 20                 a2 = a2 << 0x20
 18222: d4 59 09                 a2 = a2 | s0
 18225: d3 62 06                 s1 = t0 ^ s1
 18228: d3 b7 07                 a0 = a0 ^ a4
 18231: ca 67 05                 s0 = a0 * s1
 18234: d6 67 07                 a0 = a0 mulhu s1
 18237: d3 c4 0c                 a5 = t2 ^ a5
 18240: d3 b9 09                 a2 = a2 ^ a4
 18243: ca c9 06                 s1 = a2 * a5
 18246: d6 c9 09                 a2 = a2 mulhu a5
 18249: d3 97 07                 a0 = a0 ^ a2
 18252: d3 65 05                 s0 = s0 ^ s1
 18255: d3 57 07                 a0 = a0 ^ s0
 18258: 85 77 14                 a0 = a0 ^ 0x14
 18261: ca b7 09                 a2 = a0 * a4
 18264: d6 b7 07                 a0 = a0 mulhu a4
 18267: d3 97 07                 a0 = a0 ^ a2
 18270: 82 12 60                 t0 = u64 [sp + 0x60]
 18273: 7b 17 70                 u64 [sp + 0x70] = a0
 18276: d2 72 04                 t2 = t0 & a0
 18279: c8 4a 09                 a2 = a3 + t2
 18282: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 18285: 7c 9c                    a5 = u8 [a2]
 18287: 7c 96 02                 s1 = u8 [a2 + 0x2]
 18290: 7c 95 03                 s0 = u8 [a2 + 0x3]
 18293: 97 bb 08                 a4 = a4 << 0x8
 18296: d4 cb 0b                 a4 = a4 | a5
 18299: 97 66 10                 s1 = s1 << 0x10
 18302: 97 55 18                 s0 = s0 << 0x18
 18305: d4 65 05                 s0 = s0 | s1
 18308: d4 5b 0b                 a4 = a4 | s0
 18311: 7c 9c 05                 a5 = u8 [a2 + 0x5]
 18314: 7c 96 04                 s1 = u8 [a2 + 0x4]
 18317: 7c 95 06                 s0 = u8 [a2 + 0x6]
 18320: 7c 99 07                 a2 = u8 [a2 + 0x7]
 18323: 97 cc 08                 a5 = a5 << 0x8
 18326: d4 6c 0c                 a5 = a5 | s1
 18329: 97 55 10                 s0 = s0 << 0x10
 18332: 97 99 18                 a2 = a2 << 0x18
 18335: d4 59 09                 a2 = a2 | s0
 18338: d4 c9 09                 a2 = a2 | a5
 18341: 97 99 20                 a2 = a2 << 0x20
 18344: d4 b9 09                 a2 = a2 | a4
 18347: 64 35                    s0 = t1
 18349: d2 39 0b                 a4 = a2 & t1
 18352: 64 4c                    a5 = t2
 18354: 52 0b 61                 jump @1230 if a4 != 0
      :                          @1228
 18357: 33 09 08                 a2 = 0x8
 18360: 64 4c                    a5 = t2
 18362: 01                       fallthrough
      :                          @1229
 18363: c8 9c 0c                 a5 = a5 + a2
 18366: d2 2c 0c                 a5 = a5 & t0
 18369: c8 ca 0b                 a4 = a3 + a5
 18372: 7c b6 01                 s1 = u8 [a4 + 0x1]
 18375: 7c b5                    s0 = u8 [a4]
 18377: 7c b7 02                 a0 = u8 [a4 + 0x2]
 18380: 7c ba 03                 a3 = u8 [a4 + 0x3]
 18383: 97 66 08                 s1 = s1 << 0x8
 18386: d4 65 05                 s0 = s0 | s1
 18389: 97 77 10                 a0 = a0 << 0x10
 18392: 97 aa 18                 a3 = a3 << 0x18
 18395: d4 a7 07                 a0 = a0 | a3
 18398: d4 57 07                 a0 = a0 | s0
 18401: 7c ba 05                 a3 = u8 [a4 + 0x5]
 18404: 7c b5 04                 s0 = u8 [a4 + 0x4]
 18407: 7c b6 06                 s1 = u8 [a4 + 0x6]
 18410: 7c bb 07                 a4 = u8 [a4 + 0x7]
 18413: 97 aa 08                 a3 = a3 << 0x8
 18416: d4 5a 0a                 a3 = a3 | s0
 18419: 64 35                    s0 = t1
 18421: 97 66 10                 s1 = s1 << 0x10
 18424: 97 bb 18                 a4 = a4 << 0x18
 18427: d4 6b 0b                 a4 = a4 | s1
 18430: d4 ba 0a                 a3 = a3 | a4
 18433: 97 aa 20                 a3 = a3 << 0x20
 18436: d4 a7 07                 a0 = a0 | a3
 18439: 82 1a 78                 a3 = u64 [sp + 0x78]
 18442: d2 37 0b                 a4 = a0 & t1
 18445: 95 99 08                 a2 = a2 + 0x8
 18448: 51 0b ab                 jump @1229 if a4 == 0
      :                          @1230
 18451: 6a b7                    a0 = ctz a4
 18453: 98 77 03                 a0 = a0 >> 0x3
 18456: c8 c7 07                 a0 = a0 + a5
 18459: d2 27 09                 a2 = a0 & t0
 18462: c8 9a 07                 a0 = a3 + a2
 18465: 7d 77                    a0 = i8 [a0]
 18467: 57 07 0e                 jump @1232 if a0 <s 0
      :                          @1231
 18470: 82 a7                    a0 = u64 [a3]
 18472: d2 57 07                 a0 = a0 & s0
 18475: 6a 79                    a2 = ctz a0
 18477: 98 99 03                 a2 = a2 >> 0x3
 18480: 01                       fallthrough
      :                          @1232
 18481: 82 16 68                 s1 = u64 [sp + 0x68]
 18484: c9 46 07                 a0 = s1 - t2
 18487: c9 49 0a                 a3 = a2 - t2
 18490: d3 a7 07                 a0 = a0 ^ a3
 18493: d2 27 07                 a0 = a0 & t0
 18496: 53 17 08 e6 fd           jump @1223 if a0 <u 8
      :                          @1233
 18501: 85 97 ff                 a0 = a2 ^ 0xffffffffffffffff
 18504: 97 77 05                 a0 = a0 << 0x5
 18507: 82 1a 78                 a3 = u64 [sp + 0x78]
 18510: c8 a7 07                 a0 = a0 + a3
 18513: c8 9a 0a                 a3 = a3 + a2
 18516: 7c ab                    a4 = u8 [a3]
 18518: 82 1c 70                 a5 = u64 [sp + 0x70]
 18521: 98 cc 39                 a5 = a5 >> 0x39
 18524: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 18527: d2 29 09                 a2 = a2 & t0
 18530: 78 ac                    u8 [a3] = a5
 18532: 82 1a 58                 a3 = u64 [sp + 0x58]
 18535: c8 a9 09                 a2 = a2 + a3
 18538: 78 9c                    u8 [a2] = a5
 18540: 51 2b ff 00 88 01        jump @1235 if a4 == 255
      :                          @1234
 18546: 7c 79                    a2 = u8 [a0]
 18548: 7c 8a                    a3 = u8 [a1]
 18550: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 18553: 7c 8c 01                 a5 = u8 [a1 + 0x1]
 18556: 78 89                    u8 [a1] = a2
 18558: 78 7a                    u8 [a0] = a3
 18560: 78 8b 01                 u8 [a1 + 0x1] = a4
 18563: 78 7c 01                 u8 [a0 + 0x1] = a5
 18566: 7c 79 02                 a2 = u8 [a0 + 0x2]
 18569: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 18572: 7c 7b 03                 a4 = u8 [a0 + 0x3]
 18575: 7c 8c 03                 a5 = u8 [a1 + 0x3]
 18578: 78 89 02                 u8 [a1 + 0x2] = a2
 18581: 78 7a 02                 u8 [a0 + 0x2] = a3
 18584: 78 8b 03                 u8 [a1 + 0x3] = a4
 18587: 78 7c 03                 u8 [a0 + 0x3] = a5
 18590: 7c 79 04                 a2 = u8 [a0 + 0x4]
 18593: 7c 8a 04                 a3 = u8 [a1 + 0x4]
 18596: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 18599: 7c 8c 05                 a5 = u8 [a1 + 0x5]
 18602: 78 89 04                 u8 [a1 + 0x4] = a2
 18605: 78 7a 04                 u8 [a0 + 0x4] = a3
 18608: 78 8b 05                 u8 [a1 + 0x5] = a4
 18611: 78 7c 05                 u8 [a0 + 0x5] = a5
 18614: 7c 79 06                 a2 = u8 [a0 + 0x6]
 18617: 7c 8a 06                 a3 = u8 [a1 + 0x6]
 18620: 7c 7b 07                 a4 = u8 [a0 + 0x7]
 18623: 7c 8c 07                 a5 = u8 [a1 + 0x7]
 18626: 78 89 06                 u8 [a1 + 0x6] = a2
 18629: 78 7a 06                 u8 [a0 + 0x6] = a3
 18632: 78 8b 07                 u8 [a1 + 0x7] = a4
 18635: 78 7c 07                 u8 [a0 + 0x7] = a5
 18638: 7c 79 08                 a2 = u8 [a0 + 0x8]
 18641: 7c 8a 08                 a3 = u8 [a1 + 0x8]
 18644: 7c 7b 09                 a4 = u8 [a0 + 0x9]
 18647: 7c 8c 09                 a5 = u8 [a1 + 0x9]
 18650: 78 89 08                 u8 [a1 + 0x8] = a2
 18653: 78 7a 08                 u8 [a0 + 0x8] = a3
 18656: 78 8b 09                 u8 [a1 + 0x9] = a4
 18659: 78 7c 09                 u8 [a0 + 0x9] = a5
 18662: 7c 79 0a                 a2 = u8 [a0 + 0xa]
 18665: 7c 8a 0a                 a3 = u8 [a1 + 0xa]
 18668: 7c 7b 0b                 a4 = u8 [a0 + 0xb]
 18671: 7c 8c 0b                 a5 = u8 [a1 + 0xb]
 18674: 78 89 0a                 u8 [a1 + 0xa] = a2
 18677: 78 7a 0a                 u8 [a0 + 0xa] = a3
 18680: 78 8b 0b                 u8 [a1 + 0xb] = a4
 18683: 78 7c 0b                 u8 [a0 + 0xb] = a5
 18686: 7c 79 0c                 a2 = u8 [a0 + 0xc]
 18689: 7c 8a 0c                 a3 = u8 [a1 + 0xc]
 18692: 7c 7b 0d                 a4 = u8 [a0 + 0xd]
 18695: 7c 8c 0d                 a5 = u8 [a1 + 0xd]
 18698: 78 89 0c                 u8 [a1 + 0xc] = a2
 18701: 78 7a 0c                 u8 [a0 + 0xc] = a3
 18704: 78 8b 0d                 u8 [a1 + 0xd] = a4
 18707: 78 7c 0d                 u8 [a0 + 0xd] = a5
 18710: 7c 79 0e                 a2 = u8 [a0 + 0xe]
 18713: 7c 8a 0e                 a3 = u8 [a1 + 0xe]
 18716: 7c 7b 0f                 a4 = u8 [a0 + 0xf]
 18719: 7c 8c 0f                 a5 = u8 [a1 + 0xf]
 18722: 78 89 0e                 u8 [a1 + 0xe] = a2
 18725: 78 7a 0e                 u8 [a0 + 0xe] = a3
 18728: 78 8b 0f                 u8 [a1 + 0xf] = a4
 18731: 78 7c 0f                 u8 [a0 + 0xf] = a5
 18734: 7c 79 10                 a2 = u8 [a0 + 0x10]
 18737: 7c 8a 10                 a3 = u8 [a1 + 0x10]
 18740: 7c 7b 11                 a4 = u8 [a0 + 0x11]
 18743: 7c 8c 11                 a5 = u8 [a1 + 0x11]
 18746: 78 89 10                 u8 [a1 + 0x10] = a2
 18749: 78 7a 10                 u8 [a0 + 0x10] = a3
 18752: 78 8b 11                 u8 [a1 + 0x11] = a4
 18755: 78 7c 11                 u8 [a0 + 0x11] = a5
 18758: 7c 79 12                 a2 = u8 [a0 + 0x12]
 18761: 7c 8a 12                 a3 = u8 [a1 + 0x12]
 18764: 7c 7b 13                 a4 = u8 [a0 + 0x13]
 18767: 7c 8c 13                 a5 = u8 [a1 + 0x13]
 18770: 78 89 12                 u8 [a1 + 0x12] = a2
 18773: 78 7a 12                 u8 [a0 + 0x12] = a3
 18776: 78 8b 13                 u8 [a1 + 0x13] = a4
 18779: 78 7c 13                 u8 [a0 + 0x13] = a5
 18782: 7c 79 14                 a2 = u8 [a0 + 0x14]
 18785: 7c 8a 14                 a3 = u8 [a1 + 0x14]
 18788: 7c 7b 15                 a4 = u8 [a0 + 0x15]
 18791: 7c 8c 15                 a5 = u8 [a1 + 0x15]
 18794: 78 89 14                 u8 [a1 + 0x14] = a2
 18797: 78 7a 14                 u8 [a0 + 0x14] = a3
 18800: 78 8b 15                 u8 [a1 + 0x15] = a4
 18803: 78 7c 15                 u8 [a0 + 0x15] = a5
 18806: 7c 79 16                 a2 = u8 [a0 + 0x16]
 18809: 7c 8a 16                 a3 = u8 [a1 + 0x16]
 18812: 7c 7b 17                 a4 = u8 [a0 + 0x17]
 18815: 7c 8c 17                 a5 = u8 [a1 + 0x17]
 18818: 78 89 16                 u8 [a1 + 0x16] = a2
 18821: 78 7a 16                 u8 [a0 + 0x16] = a3
 18824: 78 8b 17                 u8 [a1 + 0x17] = a4
 18827: 78 7c 17                 u8 [a0 + 0x17] = a5
 18830: 7c 79 18                 a2 = u8 [a0 + 0x18]
 18833: 7c 8a 18                 a3 = u8 [a1 + 0x18]
 18836: 7c 7b 19                 a4 = u8 [a0 + 0x19]
 18839: 7c 8c 19                 a5 = u8 [a1 + 0x19]
 18842: 78 89 18                 u8 [a1 + 0x18] = a2
 18845: 78 7a 18                 u8 [a0 + 0x18] = a3
 18848: 78 8b 19                 u8 [a1 + 0x19] = a4
 18851: 78 7c 19                 u8 [a0 + 0x19] = a5
 18854: 7c 79 1a                 a2 = u8 [a0 + 0x1a]
 18857: 7c 8a 1a                 a3 = u8 [a1 + 0x1a]
 18860: 7c 7b 1b                 a4 = u8 [a0 + 0x1b]
 18863: 7c 8c 1b                 a5 = u8 [a1 + 0x1b]
 18866: 78 89 1a                 u8 [a1 + 0x1a] = a2
 18869: 78 7a 1a                 u8 [a0 + 0x1a] = a3
 18872: 78 8b 1b                 u8 [a1 + 0x1b] = a4
 18875: 78 7c 1b                 u8 [a0 + 0x1b] = a5
 18878: 7c 79 1c                 a2 = u8 [a0 + 0x1c]
 18881: 7c 8a 1c                 a3 = u8 [a1 + 0x1c]
 18884: 7c 7b 1d                 a4 = u8 [a0 + 0x1d]
 18887: 7c 8c 1d                 a5 = u8 [a1 + 0x1d]
 18890: 78 89 1c                 u8 [a1 + 0x1c] = a2
 18893: 78 7a 1c                 u8 [a0 + 0x1c] = a3
 18896: 78 8b 1d                 u8 [a1 + 0x1d] = a4
 18899: 78 7c 1d                 u8 [a0 + 0x1d] = a5
 18902: 7c 79 1e                 a2 = u8 [a0 + 0x1e]
 18905: 7c 8a 1e                 a3 = u8 [a1 + 0x1e]
 18908: 7c 7b 1f                 a4 = u8 [a0 + 0x1f]
 18911: 7c 8c 1f                 a5 = u8 [a1 + 0x1f]
 18914: 78 89 1e                 u8 [a1 + 0x1e] = a2
 18917: 78 7a 1e                 u8 [a0 + 0x1e] = a3
 18920: 78 8b 1f                 u8 [a1 + 0x1f] = a4
 18923: 78 7c 1f                 u8 [a0 + 0x1f] = a5
 18926: 82 1a 78                 a3 = u64 [sp + 0x78]
 18929: 28 82 fc                 jump @1227
      :                          @1235
 18932: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
 18935: d2 92 09                 a2 = t0 & a2
 18938: 82 1c 40                 a5 = u64 [sp + 0x40]
 18941: 46 0c ff                 u8 [a5 + 0] = 0xffffffffffffffff
 18944: c8 a9 09                 a2 = a2 + a3
 18947: 46 09 ff                 u8 [a2 + 0] = 0xffffffffffffffff
 18950: 33 09 20                 a2 = 0x20
 18953: 64 26                    s1 = t0
 18955: 50 20 d4 00 28 40        ra = 212, jump @1890
      :                          @1236 [@dyn 106]
 18961: 64 62                    t0 = s1
 18963: 82 16 68                 s1 = u64 [sp + 0x68]
 18966: 82 1a 78                 a3 = u64 [sp + 0x78]
 18969: 33 08 80 00              a1 = 0x80
 18973: 28 2a fc                 jump @1224
      :                          @1237
 18976: 82 18 10                 a1 = u64 [sp + 0x10]
 18979: 82 87 08                 a0 = u64 [a1 + 0x8]
 18982: 82 8a 18                 a3 = u64 [a1 + 0x18]
 18985: 95 78 01                 a1 = a0 + 0x1
 18988: 98 89 03                 a2 = a1 >> 0x3
 18991: 84 88 f8                 a1 = a1 & 0xfffffffffffffff8
 18994: c9 98 05                 s0 = a1 - a2
 18997: 88 78 08                 a1 = a0 <u 0x8
 19000: db 87 05                 s0 = a0 if a1 != 0
 19003: 01                       fallthrough
      :                          @1238
 19004: c9 a5 07                 a0 = s0 - a3
 19007: 82 18 10                 a1 = u64 [sp + 0x10]
 19010: 7b 87 10                 u64 [a1 + 0x10] = a0
 19013: 14 07 01 00 00 00 00 00 00 80 a0 = 0x8000000000000001
 19023: 01                       fallthrough
      :                          @1239
 19024: 82 10 b0 00              ra = u64 [sp + 0xb0]
 19028: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 19032: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 19036: 95 11 b8 00              sp = sp + 0xb8
 19040: 32 00                    ret
      :                          @1240
 19042: 82 18 10                 a1 = u64 [sp + 0x10]
 19045: 82 15 60                 s0 = u64 [sp + 0x60]
 19048: 82 16 08                 s1 = u64 [sp + 0x8]
 19051: 82 17 40                 a0 = u64 [sp + 0x40]
 19054: 82 1b 38                 a4 = u64 [sp + 0x38]
 19057: 82 1a                    a3 = u64 [sp]
 19059: 28 0e                    jump @1242
      :                          @1241
 19061: 82 18 10                 a1 = u64 [sp + 0x10]
 19064: 82 89                    a2 = u64 [a1]
 19066: 7b 19 48                 u64 [sp + 0x48] = a2
 19069: 82 19 50                 a2 = u64 [sp + 0x50]
 19072: 01                       fallthrough
      :                          @1242
 19073: c9 6a 0a                 a3 = a3 - s1
 19076: 7b 8b                    u64 [a1] = a4
 19078: 7b 87 08                 u64 [a1 + 0x8] = a0
 19081: 7b 8a 10                 u64 [a1 + 0x10] = a3
 19084: 14 07 01 00 00 00 00 00 00 80 a0 = 0x8000000000000001
 19094: 51 05 ba                 jump @1239 if s0 == 0
      :                          @1243
 19097: 97 98 05                 a1 = a2 << 0x5
 19100: c8 85 05                 s0 = s0 + a1
 19103: 95 55 09                 s0 = s0 + 0x9
 19106: 33 09 00 10              a2 = 0x1000
 19110: ac 59 aa                 jump @1239 if a2 <u s0
      :                          @1244
 19113: 82 17 48                 a0 = u64 [sp + 0x48]
 19116: c9 87 08                 a1 = a0 - a1
 19119: 33 0a 80 00 03           a3 = 0x30080
 19124: 95 a9 00 10              a2 = a3 + 0x1000
 19128: 14 07 01 00 00 00 00 00 00 80 a0 = 0x8000000000000001
 19138: 01                       fallthrough
      :                          @1245
 19139: 82 9a                    a3 = u64 [a2]
 19141: c9 a9 0b                 a4 = a2 - a3
 19144: ab 8b 88                 jump @1239 if a4 != a1
      :                          @1246
 19147: c9 5a 0b                 a4 = a3 - s0
 19150: 01                       fallthrough
      :                          @1247
 19151: 82 9c                    a5 = u64 [a2]
 19153: ab ac f2                 jump @1245 if a5 != a3
      :                          @1248
 19156: 7b 9b                    u64 [a2] = a4
 19158: 33 06                    s1 = 0
 19160: 01                       fallthrough
      :                          @1249
 19161: ab ac ea                 jump @1245 if a5 != a3
      :                          @1250
 19164: 28 74 ff                 jump @1239
      :                          @1251
 19167: 00                       trap
      :                          @1252
 19168: 95 11 f0 fe              sp = sp + 0xfffffffffffffef0
 19172: 7b 10 08 01              u64 [sp + 0x108] = ra
 19176: 7b 15 00 01              u64 [sp + 0x100] = s0
 19180: 7b 16 f8 00              u64 [sp + 0xf8] = s1
 19184: 3a 05 18 00 03           s0 = u64 [0x30018]
 19189: 51 05 d2 01              jump @1286 if s0 == 0
      :                          @1253
 19193: 95 17 50                 a0 = sp + 0x50
 19196: 64 58                    a1 = s0
 19198: 50 20 d6 00 20 04        ra = 214, jump @1325
      :                          @1254 [@dyn 107]
 19204: 95 58 28                 a1 = s0 + 0x28
 19207: 95 17 d0 00              a0 = sp + 0xd0
 19211: 50 20 d8 00 6b 05        ra = 216, jump @1347
      :                          @1255 [@dyn 108]
 19217: 82 17 70                 a0 = u64 [sp + 0x70]
 19220: 82 18 68                 a1 = u64 [sp + 0x68]
 19223: 7b 17 20                 u64 [sp + 0x20] = a0
 19226: 7b 18 18                 u64 [sp + 0x18] = a1
 19229: 82 17 60                 a0 = u64 [sp + 0x60]
 19232: 82 18 58                 a1 = u64 [sp + 0x58]
 19235: 82 19 50                 a2 = u64 [sp + 0x50]
 19238: 82 1a d0 00              a3 = u64 [sp + 0xd0]
 19242: 7b 17 10                 u64 [sp + 0x10] = a0
 19245: 7b 18 08                 u64 [sp + 0x8] = a1
 19248: 7b 19                    u64 [sp] = a2
 19250: 7b 1a 28                 u64 [sp + 0x28] = a3
 19253: 82 17 d8 00              a0 = u64 [sp + 0xd8]
 19257: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 19261: 82 19 e8 00              a2 = u64 [sp + 0xe8]
 19265: 82 1a f0 00              a3 = u64 [sp + 0xf0]
 19269: 7b 17 30                 u64 [sp + 0x30] = a0
 19272: 7b 18 38                 u64 [sp + 0x38] = a1
 19275: 7b 19 40                 u64 [sp + 0x40] = a2
 19278: 7b 1a 48                 u64 [sp + 0x48] = a3
 19281: 49 11 68 00 00 00 06     u64 [sp + 104] = 0x6000000
 19288: 49 11 60                 u64 [sp + 96] = 0
 19291: 49 11 58                 u64 [sp + 88] = 0
 19294: 49 11 50 de 4f 06        u64 [sp + 80] = 0x64fde
 19300: 49 11 70 9c 1c 06        u64 [sp + 112] = 0x61c9c
 19306: 49 11 78                 u64 [sp + 120] = 0
 19309: 49 21 80 00              u64 [sp + 128] = 0
 19313: 49 21 88 00 00 00 00 07  u64 [sp + 136] = 0x7000000
 19321: 49 21 90 00 70 a8 03     u64 [sp + 144] = 0x3a870
 19328: 49 21 98 00              u64 [sp + 152] = 0
 19332: 49 21 a0 00              u64 [sp + 160] = 0
 19336: 49 21 a8 00 00 00 00 08  u64 [sp + 168] = 0x8000000
 19344: 49 21 c8 00 00 00 00 05  u64 [sp + 200] = 0x5000000
 19352: 49 21 c0 00              u64 [sp + 192] = 0
 19356: 49 21 b8 00              u64 [sp + 184] = 0
 19360: 49 21 b0 00 80 8e 03     u64 [sp + 176] = 0x38e80
 19367: 64 17                    a0 = sp
 19369: 95 18 50                 a1 = sp + 0x50
 19372: 50 20 da 00 42 06        ra = 218, jump @1371
      :                          @1256 [@dyn 109]
 19378: 33 02 80 00 03           t0 = 0x30080
 19383: 95 27 00 10              a0 = t0 + 0x1000
 19387: 33 08 a8 0f              a1 = 0xfa8
 19391: 01                       fallthrough
      :                          @1257
 19392: 82 79                    a2 = u64 [a0]
 19394: ac 98 03 b5              jump @24 if a1 <u a2
      :                          @1258
 19398: c9 92 0a                 a3 = t0 - a2
 19401: 95 aa ff 07              a3 = a3 + 0x7ff
 19405: 95 aa b1 07              a3 = a3 + 0x7b1
 19409: 84 ab 07                 a4 = a3 & 0x7
 19412: c8 b9 0c                 a5 = a2 + a4
 19415: 95 cc 50                 a5 = a5 + 0x50
 19418: 01                       fallthrough
      :                          @1259
 19419: 82 75                    s0 = u64 [a0]
 19421: ab 95 e3                 jump @1257 if s0 != a2
      :                          @1260
 19424: 7b 7c                    u64 [a0] = a5
 19426: 64 26                    s1 = t0
 19428: c9 ba 05                 s0 = a3 - a4
 19431: 64 18                    a1 = sp
 19433: 33 09 50                 a2 = 0x50
 19436: 64 57                    a0 = s0
 19438: 50 20 dc 00 45 3e        ra = 220, jump @1890
      :                          @1261 [@dyn 110]
 19444: 33 08 20 00 03           a1 = 0x30020
 19449: 01                       fallthrough
      :                          @1262
 19450: 3a 03 20 00 03           t1 = u64 [0x30020]
 19455: 52 03 0b                 jump @1264 if t1 != 0
      :                          @1263
 19458: 3e 05 20 00 03           u64 [0x30020] = s0
 19463: 33 09                    a2 = 0
 19465: 01                       fallthrough
      :                          @1264
 19466: 51 03 a9 00              jump @1285 if t1 == 0
      :                          @1265
 19470: 82 59 08                 a2 = u64 [s0 + 0x8]
 19473: 33 0a 00 f0              a3 = 0xfffffffffffff000
 19477: 33 02 ff ef              t0 = 0xffffffffffffefff
 19481: 64 64                    t2 = s1
 19483: 51 09 36                 jump @1272 if a2 == 0
      :                          @1266
 19486: 97 9b 05                 a4 = a2 << 0x5
 19489: c8 b9 09                 a2 = a2 + a4
 19492: 95 99 29                 a2 = a2 + 0x29
 19495: 95 9c ff ef              a5 = a2 + 0xffffffffffffefff
 19499: 53 2c 00 f0 26           jump @1272 if a5 <u 4294963200
      :                          @1267
 19504: 82 5a                    a3 = u64 [s0]
 19506: c9 ba 0a                 a3 = a3 - a4
 19509: 95 aa e0                 a3 = a3 + 0xffffffffffffffe0
 19512: 95 46 00 10              s1 = t2 + 0x1000
 19516: 01                       fallthrough
      :                          @1268
 19517: 82 6c                    a5 = u64 [s1]
 19519: c9 c6 0b                 a4 = s1 - a5
 19522: ab ab 0f                 jump @1272 if a4 != a3
      :                          @1269
 19525: c9 9c 0b                 a4 = a5 - a2
 19528: 01                       fallthrough
      :                          @1270
 19529: 82 68                    a1 = u64 [s1]
 19531: ab c8 f2                 jump @1268 if a1 != a5
      :                          @1271
 19534: 7b 6b                    u64 [s1] = a4
 19536: 01                       fallthrough
      :                          @1272
 19537: 82 59 30                 a2 = u64 [s0 + 0x30]
 19540: 51 09 3e                 jump @1279 if a2 == 0
      :                          @1273
 19543: 96 97 14                 a0 = a2 * 0x14
 19546: 95 77 1b                 a0 = a0 + 0x1b
 19549: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 19552: c8 a9 09                 a2 = a2 + a3
 19555: 95 99 09                 a2 = a2 + 0x9
 19558: c8 92 02                 t0 = t0 + a2
 19561: 53 22 00 f0 29           jump @1279 if t0 <u 4294963200
      :                          @1274
 19566: 82 58 28                 a1 = u64 [s0 + 0x28]
 19569: c9 a8 08                 a1 = a1 - a3
 19572: 95 4a 00 10              a3 = t2 + 0x1000
 19576: 01                       fallthrough
      :                          @1275
 19577: 82 ab                    a4 = u64 [a3]
 19579: c9 ba 07                 a0 = a3 - a4
 19582: ab 87 14                 jump @1279 if a0 != a1
      :                          @1276
 19585: c9 9b 07                 a0 = a4 - a2
 19588: 01                       fallthrough
      :                          @1277
 19589: 82 ac                    a5 = u64 [a3]
 19591: ab bc f2                 jump @1275 if a5 != a4
      :                          @1278
 19594: 7b a7                    u64 [a3] = a0
 19596: 95 46 00 10              s1 = t2 + 0x1000
 19600: 28 07                    jump @1280
      :                          @1279
 19602: 95 46 00 10              s1 = t2 + 0x1000
 19606: 01                       fallthrough
      :                          @1280
 19607: 82 68                    a1 = u64 [s1]
 19609: c9 86 07                 a0 = s1 - a1
 19612: ab 57 14                 jump @1284 if a0 != s0
      :                          @1281
 19615: 95 87 b0                 a0 = a1 + 0xffffffffffffffb0
 19618: 01                       fallthrough
      :                          @1282
 19619: 82 69                    a2 = u64 [s1]
 19621: ab 89 f2                 jump @1280 if a2 != a1
      :                          @1283
 19624: 7b 67                    u64 [s1] = a0
 19626: 33 0a                    a3 = 0
 19628: 64 35                    s0 = t1
 19630: 28 05                    jump @1285
      :                          @1284
 19632: 64 35                    s0 = t1
 19634: 01                       fallthrough
      :                          @1285
 19635: 64 57                    a0 = s0
 19637: 82 10 08 01              ra = u64 [sp + 0x108]
 19641: 82 15 00 01              s0 = u64 [sp + 0x100]
 19645: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 19649: 95 11 10 01              sp = sp + 0x110
 19653: 32 00                    ret
      :                          @1286
 19655: 50 20 de 00 0a           ra = 222, jump @1288
      :                          @1287 [@dyn 111]
 19660: 64 75                    s0 = a0
 19662: 28 2b fe                 jump @1253
      :                          @1288
 19665: 95 11 00 ff              sp = sp + 0xffffffffffffff00
 19669: 7b 10 f8 00              u64 [sp + 0xf8] = ra
 19673: 7b 15 f0 00              u64 [sp + 0xf0] = s0
 19677: 7b 16 e8 00              u64 [sp + 0xe8] = s1
 19681: 14 0c 44 73 70 03 2e 8a 19 13 a5 = 0x13198a2e03707344
 19691: 95 16 68                 s1 = sp + 0x68
 19694: 7b 16 68                 u64 [sp + 0x68] = s1
 19697: 3a 07 10 00 03           a0 = u64 [0x30010]
 19702: 33 03 ff                 t1 = 0xffffffffffffffff
 19705: 14 05 d0 31 9f 29 22 38 09 a4 s0 = 0xa4093822299f31d0
 19715: d3 c7 07                 a0 = a0 ^ a5
 19718: ca 67 08                 a1 = a0 * s1
 19721: d6 67 07                 a0 = a0 mulhu s1
 19724: d3 87 07                 a0 = a0 ^ a1
 19727: 3e 07 10 00 03           u64 [0x30010] = a0
 19732: 35 08 70 00 03           a1 = i8 [0x30070]
 19737: ca 57 02                 t0 = a0 * s0
 19740: d6 57 04                 t2 = a0 mulhu s0
 19743: 52 18 02 d6 01           jump @1321 if a1 != 2
      :                          @1289
 19748: 7b 16 68                 u64 [sp + 0x68] = s1
 19751: 3a 07 10 00 03           a0 = u64 [0x30010]
 19756: d3 24 02                 t0 = t2 ^ t0
 19759: d3 c7 07                 a0 = a0 ^ a5
 19762: ca 67 08                 a1 = a0 * s1
 19765: d6 67 07                 a0 = a0 mulhu s1
 19768: d3 87 07                 a0 = a0 ^ a1
 19771: 3e 07 10 00 03           u64 [0x30010] = a0
 19776: 84 77 ff                 a0 = a0 & 0xffffffffffffffff
 19779: 35 08 70 00 03           a1 = i8 [0x30070]
 19784: ca 57 09                 a2 = a0 * s0
 19787: d6 57 05                 s0 = a0 mulhu s0
 19790: d3 95 05                 s0 = s0 ^ a2
 19793: 52 18 02 c0 01           jump @1323 if a1 != 2
      :                          @1290
 19798: 49 11 18 c8 0d 01        u64 [sp + 24] = 0x10dc8
 19804: 49 11 30                 u64 [sp + 48] = 0
 19807: 49 11 28                 u64 [sp + 40] = 0
 19810: 49 11 20                 u64 [sp + 32] = 0
 19813: 7b 12 38                 u64 [sp + 0x38] = t0
 19816: 49 11 40 c8 0d 01        u64 [sp + 64] = 0x10dc8
 19822: 49 11 48                 u64 [sp + 72] = 0
 19825: 49 11 50                 u64 [sp + 80] = 0
 19828: 49 11 58                 u64 [sp + 88] = 0
 19831: 7b 15 60                 u64 [sp + 0x60] = s0
 19834: 49 21 80 00 00 00 00 01  u64 [sp + 128] = 0x1000000
 19842: 49 11 78                 u64 [sp + 120] = 0
 19845: 49 11 70                 u64 [sp + 112] = 0
 19848: 49 11 68 1e 58 06        u64 [sp + 104] = 0x6581e
 19854: 49 21 88 00 3c 55 06     u64 [sp + 136] = 0x6553c
 19861: 49 21 90 00              u64 [sp + 144] = 0
 19865: 49 21 98 00              u64 [sp + 152] = 0
 19869: 49 21 a0 00 00 00 00 02  u64 [sp + 160] = 0x2000000
 19877: 49 21 a8 00 3e 53 06     u64 [sp + 168] = 0x6533e
 19884: 49 21 b0 00              u64 [sp + 176] = 0
 19888: 49 21 b8 00              u64 [sp + 184] = 0
 19892: 49 21 c0 00 00 00 00 03  u64 [sp + 192] = 0x3000000
 19900: 49 21 e0 00 00 00 00 04  u64 [sp + 224] = 0x4000000
 19908: 49 21 d8 00              u64 [sp + 216] = 0
 19912: 49 21 d0 00              u64 [sp + 208] = 0
 19916: 49 21 c8 00 f6 52 06     u64 [sp + 200] = 0x652f6
 19923: 95 17 18                 a0 = sp + 0x18
 19926: 95 18 68                 a1 = sp + 0x68
 19929: 50 20 e0 00 15 04        ra = 224, jump @1371
      :                          @1291 [@dyn 112]
 19935: 33 02 80 00 03           t0 = 0x30080
 19940: 95 27 00 10              a0 = t0 + 0x1000
 19944: 33 08 a8 0f              a1 = 0xfa8
 19948: 01                       fallthrough
      :                          @1292
 19949: 82 79                    a2 = u64 [a0]
 19951: ac 98 d6 b2              jump @24 if a1 <u a2
      :                          @1293
 19955: c9 92 0a                 a3 = t0 - a2
 19958: 95 aa ff 07              a3 = a3 + 0x7ff
 19962: 95 aa b1 07              a3 = a3 + 0x7b1
 19966: 84 ab 07                 a4 = a3 & 0x7
 19969: c8 b9 0c                 a5 = a2 + a4
 19972: 95 cc 50                 a5 = a5 + 0x50
 19975: 01                       fallthrough
      :                          @1294
 19976: 82 75                    s0 = u64 [a0]
 19978: ab 95 e3                 jump @1292 if s0 != a2
      :                          @1295
 19981: 7b 7c                    u64 [a0] = a5
 19983: 64 26                    s1 = t0
 19985: c9 ba 05                 s0 = a3 - a4
 19988: 95 18 18                 a1 = sp + 0x18
 19991: 33 09 50                 a2 = 0x50
 19994: 64 57                    a0 = s0
 19996: 50 20 e2 00 17 3c        ra = 226, jump @1890
      :                          @1296 [@dyn 113]
 20002: 33 08 18 00 03           a1 = 0x30018
 20007: 01                       fallthrough
      :                          @1297
 20008: 3a 03 18 00 03           t1 = u64 [0x30018]
 20013: 52 03 0b                 jump @1299 if t1 != 0
      :                          @1298
 20016: 3e 05 18 00 03           u64 [0x30018] = s0
 20021: 33 09                    a2 = 0
 20023: 01                       fallthrough
      :                          @1299
 20024: 51 03 a9 00              jump @1320 if t1 == 0
      :                          @1300
 20028: 82 59 08                 a2 = u64 [s0 + 0x8]
 20031: 33 0a 00 f0              a3 = 0xfffffffffffff000
 20035: 33 02 ff ef              t0 = 0xffffffffffffefff
 20039: 64 64                    t2 = s1
 20041: 51 09 36                 jump @1307 if a2 == 0
      :                          @1301
 20044: 97 9b 05                 a4 = a2 << 0x5
 20047: c8 b9 09                 a2 = a2 + a4
 20050: 95 99 29                 a2 = a2 + 0x29
 20053: 95 9c ff ef              a5 = a2 + 0xffffffffffffefff
 20057: 53 2c 00 f0 26           jump @1307 if a5 <u 4294963200
      :                          @1302
 20062: 82 5a                    a3 = u64 [s0]
 20064: c9 ba 0a                 a3 = a3 - a4
 20067: 95 aa e0                 a3 = a3 + 0xffffffffffffffe0
 20070: 95 46 00 10              s1 = t2 + 0x1000
 20074: 01                       fallthrough
      :                          @1303
 20075: 82 6c                    a5 = u64 [s1]
 20077: c9 c6 0b                 a4 = s1 - a5
 20080: ab ab 0f                 jump @1307 if a4 != a3
      :                          @1304
 20083: c9 9c 0b                 a4 = a5 - a2
 20086: 01                       fallthrough
      :                          @1305
 20087: 82 68                    a1 = u64 [s1]
 20089: ab c8 f2                 jump @1303 if a1 != a5
      :                          @1306
 20092: 7b 6b                    u64 [s1] = a4
 20094: 01                       fallthrough
      :                          @1307
 20095: 82 59 30                 a2 = u64 [s0 + 0x30]
 20098: 51 09 3e                 jump @1314 if a2 == 0
      :                          @1308
 20101: 96 97 14                 a0 = a2 * 0x14
 20104: 95 77 1b                 a0 = a0 + 0x1b
 20107: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 20110: c8 a9 09                 a2 = a2 + a3
 20113: 95 99 09                 a2 = a2 + 0x9
 20116: c8 92 02                 t0 = t0 + a2
 20119: 53 22 00 f0 29           jump @1314 if t0 <u 4294963200
      :                          @1309
 20124: 82 58 28                 a1 = u64 [s0 + 0x28]
 20127: c9 a8 08                 a1 = a1 - a3
 20130: 95 4a 00 10              a3 = t2 + 0x1000
 20134: 01                       fallthrough
      :                          @1310
 20135: 82 ab                    a4 = u64 [a3]
 20137: c9 ba 07                 a0 = a3 - a4
 20140: ab 87 14                 jump @1314 if a0 != a1
      :                          @1311
 20143: c9 9b 07                 a0 = a4 - a2
 20146: 01                       fallthrough
      :                          @1312
 20147: 82 ac                    a5 = u64 [a3]
 20149: ab bc f2                 jump @1310 if a5 != a4
      :                          @1313
 20152: 7b a7                    u64 [a3] = a0
 20154: 95 46 00 10              s1 = t2 + 0x1000
 20158: 28 07                    jump @1315
      :                          @1314
 20160: 95 46 00 10              s1 = t2 + 0x1000
 20164: 01                       fallthrough
      :                          @1315
 20165: 82 68                    a1 = u64 [s1]
 20167: c9 86 07                 a0 = s1 - a1
 20170: ab 57 14                 jump @1319 if a0 != s0
      :                          @1316
 20173: 95 87 b0                 a0 = a1 + 0xffffffffffffffb0
 20176: 01                       fallthrough
      :                          @1317
 20177: 82 69                    a2 = u64 [s1]
 20179: ab 89 f2                 jump @1315 if a2 != a1
      :                          @1318
 20182: 7b 67                    u64 [s1] = a0
 20184: 33 0a                    a3 = 0
 20186: 64 35                    s0 = t1
 20188: 28 05                    jump @1320
      :                          @1319
 20190: 64 35                    s0 = t1
 20192: 01                       fallthrough
      :                          @1320
 20193: 64 57                    a0 = s0
 20195: 82 10 f8 00              ra = u64 [sp + 0xf8]
 20199: 82 15 f0 00              s0 = u64 [sp + 0xf0]
 20203: 82 16 e8 00              s1 = u64 [sp + 0xe8]
 20207: 95 11 00 01              sp = sp + 0x100
 20211: 32 00                    ret
      :                          @1321
 20213: 7b 1c 10                 u64 [sp + 0x10] = a5
 20216: 7b 12 08                 u64 [sp + 0x8] = t0
 20219: 7b 14                    u64 [sp] = t2
 20221: 50 20 e4 00 7f e6        ra = 228, jump @1069
      :                          @1322 [@dyn 114]
 20227: 82 14                    t2 = u64 [sp]
 20229: 82 12 08                 t0 = u64 [sp + 0x8]
 20232: 82 1c 10                 a5 = u64 [sp + 0x10]
 20235: 33 03 ff                 t1 = 0xffffffffffffffff
 20238: 28 16 fe                 jump @1289
      :                          @1323
 20241: 64 26                    s1 = t0
 20243: 50 20 e6 00 69 e6        ra = 230, jump @1069
      :                          @1324 [@dyn 115]
 20249: 64 62                    t0 = s1
 20251: 28 3b fe                 jump @1290
      :                          @1325
 20254: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 20257: 7b 10 58                 u64 [sp + 0x58] = ra
 20260: 7b 15 50                 u64 [sp + 0x50] = s0
 20263: 7b 16 48                 u64 [sp + 0x48] = s1
 20266: 82 89 08                 a2 = u64 [a1 + 0x8]
 20269: 82 8a 20                 a3 = u64 [a1 + 0x20]
 20272: 7b 17 28                 u64 [sp + 0x28] = a0
 20275: 51 09 08 01              jump @1343 if a2 == 0
      :                          @1326
 20279: 95 94 01                 t2 = a2 + 0x1
 20282: 98 47 3b                 a0 = t2 >> 0x3b
 20285: 52 07 38 01              jump @1346 if a0 != 0
      :                          @1327
 20289: 97 44 05                 t2 = t2 << 0x5
 20292: 95 9b 09                 a4 = a2 + 0x9
 20295: c8 b4 06                 s1 = t2 + a4
 20298: ac 46 2b 01              jump @1346 if s1 <u t2
      :                          @1328
 20302: 14 07 f9 ff ff ff ff ff ff 7f a0 = 0x7ffffffffffffff9
 20312: ae 76 1d 01              jump @1346 if s1 >=u a0
      :                          @1329
 20316: 7b 14 08                 u64 [sp + 0x8] = t2
 20319: 7b 1b 10                 u64 [sp + 0x10] = a4
 20322: 7b 1a 18                 u64 [sp + 0x18] = a3
 20325: 7b 19 20                 u64 [sp + 0x20] = a2
 20328: 33 02 80 00 03           t0 = 0x30080
 20333: 95 24 00 10              t2 = t0 + 0x1000
 20337: 33 00 f8 0f              ra = 0xff8
 20341: 01                       fallthrough
      :                          @1330
 20342: 82 4c                    a5 = u64 [t2]
 20344: c8 6c 0a                 a3 = a5 + s1
 20347: ac ca 4a b1              jump @24 if a3 <u a5
      :                          @1331
 20351: ac a0 46 b1              jump @24 if ra <u a3
      :                          @1332
 20355: c9 a2 03                 t1 = t0 - a3
 20358: 95 33 00 10              t1 = t1 + 0x1000
 20362: 84 35 07                 s0 = t1 & 0x7
 20365: c8 5a 0a                 a3 = a3 + s0
 20368: 01                       fallthrough
      :                          @1333
 20369: 82 47                    a0 = u64 [t2]
 20371: ab c7 08                 jump @1335 if a0 != a5
      :                          @1334
 20374: 7b 4a                    u64 [t2] = a3
 20376: 33 09                    a2 = 0
 20378: 01                       fallthrough
      :                          @1335
 20379: ab c7 db                 jump @1330 if a0 != a5
      :                          @1336
 20382: 82 89                    a2 = u64 [a1]
 20384: c9 53 05                 s0 = t1 - s0
 20387: 82 17 08                 a0 = u64 [sp + 0x8]
 20390: c8 57 07                 a0 = a0 + s0
 20393: 7b 17 08                 u64 [sp + 0x8] = a0
 20396: 64 86                    s1 = a1
 20398: 7b 19                    u64 [sp] = a2
 20400: 64 98                    a1 = a2
 20402: 82 19 10                 a2 = u64 [sp + 0x10]
 20405: 50 20 e8 00 7e 3a        ra = 232, jump @1890
      :                          @1337 [@dyn 116]
 20411: 7b 16 10                 u64 [sp + 0x10] = s1
 20414: 82 63 18                 t1 = u64 [s1 + 0x18]
 20417: 51 03 a3 00              jump @1345 if t1 == 0
      :                          @1338
 20421: 14 0a 80 80 80 80 80 80 80 80 a3 = 0x8080808080808080
 20431: 82 19                    a2 = u64 [sp]
 20433: 82 97                    a0 = u64 [a2]
 20435: 95 9b 08                 a4 = a2 + 0x8
 20438: e0 7a 08                 a1 = a3 & ~a0
 20441: 64 30                    ra = t1
 20443: 28 49                    jump @1340
      :                          @1339
 20445: 6a 87                    a0 = ctz a1
 20447: 97 77 02                 a0 = a0 << 0x2
 20450: 84 77 e0 01              a0 = a0 & 0x1e0
 20454: c9 79 07                 a0 = a2 - a0
 20457: 81 76 f0                 s1 = i32 [a0 + 0xfffffffffffffff0]
 20460: 7a 16 40                 u32 [sp + 0x40] = s1
 20463: 82 72 e8                 t0 = u64 [a0 + 0xffffffffffffffe8]
 20466: 95 84 ff                 t2 = a1 + 0xffffffffffffffff
 20469: 7b 12 38                 u64 [sp + 0x38] = t0
 20472: 82 75 e0                 s0 = u64 [a0 + 0xffffffffffffffe0]
 20475: d2 84 08                 a1 = t2 & a1
 20478: 82 1c                    a5 = u64 [sp]
 20480: c9 c7 0c                 a5 = a0 - a5
 20483: 82 16 08                 s1 = u64 [sp + 0x8]
 20486: c8 6c 0c                 a5 = a5 + s1
 20489: 7b 15 30                 u64 [sp + 0x30] = s0
 20492: 82 74 f8                 t2 = u64 [a0 + 0xfffffffffffffff8]
 20495: 82 17 40                 a0 = u64 [sp + 0x40]
 20498: 7b c5 e0                 u64 [a5 + 0xffffffffffffffe0] = s0
 20501: 95 00 ff                 ra = ra + 0xffffffffffffffff
 20504: 7b c2 e8                 u64 [a5 + 0xffffffffffffffe8] = t0
 20507: 7b c7 f0                 u64 [a5 + 0xfffffffffffffff0] = a0
 20510: 7b c4 f8                 u64 [a5 + 0xfffffffffffffff8] = t2
 20513: 51 00 43                 jump @1345 if ra == 0
      :                          @1340
 20516: 52 08 b9                 jump @1339 if a1 != 0
      :                          @1341
 20519: 82 b8                    a1 = u64 [a4]
 20521: d2 a8 08                 a1 = a1 & a3
 20524: 95 99 00 ff              a2 = a2 + 0xffffffffffffff00
 20528: 95 bb 08                 a4 = a4 + 0x8
 20531: aa a8 f4                 jump @1341 if a1 == a3
      :                          @1342
 20534: d3 a8 08                 a1 = a1 ^ a3
 20537: 28 a4                    jump @1339
      :                          @1343
 20539: 33 03                    t1 = 0
 20541: 33 08                    a1 = 0
 20543: 33 0b 58 00 01           a4 = 0x10058
 20548: 01                       fallthrough
      :                          @1344
 20549: 82 17 28                 a0 = u64 [sp + 0x28]
 20552: 7b 7a 20                 u64 [a0 + 0x20] = a3
 20555: 7b 7b                    u64 [a0] = a4
 20557: 7b 79 08                 u64 [a0 + 0x8] = a2
 20560: 7b 78 10                 u64 [a0 + 0x10] = a1
 20563: 7b 73 18                 u64 [a0 + 0x18] = t1
 20566: 82 10 58                 ra = u64 [sp + 0x58]
 20569: 82 15 50                 s0 = u64 [sp + 0x50]
 20572: 82 16 48                 s1 = u64 [sp + 0x48]
 20575: 95 11 60                 sp = sp + 0x60
 20578: 32 00                    ret
      :                          @1345
 20580: 82 17 10                 a0 = u64 [sp + 0x10]
 20583: 82 78 10                 a1 = u64 [a0 + 0x10]
 20586: 82 19 20                 a2 = u64 [sp + 0x20]
 20589: 82 1a 18                 a3 = u64 [sp + 0x18]
 20592: 82 1b 08                 a4 = u64 [sp + 0x8]
 20595: 28 d2                    jump @1344
      :                          @1346
 20597: 00                       trap
      :                          @1347
 20598: 95 11 90                 sp = sp + 0xffffffffffffff90
 20601: 7b 10 68                 u64 [sp + 0x68] = ra
 20604: 7b 15 60                 u64 [sp + 0x60] = s0
 20607: 7b 16 58                 u64 [sp + 0x58] = s1
 20610: 82 8c 08                 a5 = u64 [a1 + 0x8]
 20613: 82 86 20                 s1 = u64 [a1 + 0x20]
 20616: 64 75                    s0 = a0
 20618: 51 0c 27 01              jump @1367 if a5 == 0
      :                          @1348
 20622: 95 c9 01                 a2 = a5 + 0x1
 20625: 33 0a 14                 a3 = 0x14
 20628: d6 a9 0b                 a4 = a2 mulhu a3
 20631: 52 0b 56 01              jump @1370 if a4 != 0
      :                          @1349
 20635: 96 99 14                 a2 = a2 * 0x14
 20638: 56 19 f8 4f 01           jump @1370 if a2 >u 4294967288
      :                          @1350
 20643: 95 99 07                 a2 = a2 + 0x7
 20646: 84 9b f8                 a4 = a2 & 0xfffffffffffffff8
 20649: 95 ca 09                 a3 = a5 + 0x9
 20652: c8 ab 07                 a0 = a4 + a3
 20655: ac b7 3e 01              jump @1370 if a0 <u a4
      :                          @1351
 20659: 14 09 f9 ff ff ff ff ff ff 7f a2 = 0x7ffffffffffffff9
 20669: ae 97 30 01              jump @1370 if a0 >=u a2
      :                          @1352
 20673: 7b 15 40                 u64 [sp + 0x40] = s0
 20676: 7b 1b 48                 u64 [sp + 0x48] = a4
 20679: 7b 1a 50                 u64 [sp + 0x50] = a3
 20682: 7b 16 30                 u64 [sp + 0x30] = s1
 20685: 7b 1c 38                 u64 [sp + 0x38] = a5
 20688: 33 05 80 00 03           s0 = 0x30080
 20693: 95 54 00 10              t2 = s0 + 0x1000
 20697: 33 00 f8 0f              ra = 0xff8
 20701: 01                       fallthrough
      :                          @1353
 20702: 82 46                    s1 = u64 [t2]
 20704: c8 76 0a                 a3 = s1 + a0
 20707: ac 6a e2 af              jump @24 if a3 <u s1
      :                          @1354
 20711: ac a0 de af              jump @24 if ra <u a3
      :                          @1355
 20715: c9 a5 03                 t1 = s0 - a3
 20718: 95 33 00 10              t1 = t1 + 0x1000
 20722: 84 3b 07                 a4 = t1 & 0x7
 20725: c8 ba 0a                 a3 = a3 + a4
 20728: 01                       fallthrough
      :                          @1356
 20729: 82 49                    a2 = u64 [t2]
 20731: ab 69 08                 jump @1358 if a2 != s1
      :                          @1357
 20734: 7b 4a                    u64 [t2] = a3
 20736: 33 02                    t0 = 0
 20738: 01                       fallthrough
      :                          @1358
 20739: 33 0c 00 10              a5 = 0x1000
 20743: ab 69 d7                 jump @1353 if a2 != s1
      :                          @1359
 20746: 82 89                    a2 = u64 [a1]
 20748: c9 b3 07                 a0 = t1 - a4
 20751: 82 1a 48                 a3 = u64 [sp + 0x48]
 20754: c8 a7 07                 a0 = a0 + a3
 20757: 7b 17 10                 u64 [sp + 0x10] = a0
 20760: 64 85                    s0 = a1
 20762: 7b 19 28                 u64 [sp + 0x28] = a2
 20765: 64 98                    a1 = a2
 20767: 82 19 50                 a2 = u64 [sp + 0x50]
 20770: 50 20 ea 00 11 39        ra = 234, jump @1890
      :                          @1360 [@dyn 117]
 20776: 7b 15                    u64 [sp] = s0
 20778: 82 57 18                 a0 = u64 [s0 + 0x18]
 20781: 7b 17 08                 u64 [sp + 0x8] = a0
 20784: 51 07 a7 00              jump @1369 if a0 == 0
      :                          @1361
 20788: 14 09 80 80 80 80 80 80 80 80 a2 = 0x8080808080808080
 20798: 82 15 28                 s0 = u64 [sp + 0x28]
 20801: 82 57                    a0 = u64 [s0]
 20803: 82 18 10                 a1 = u64 [sp + 0x10]
 20806: 95 88 ec                 a1 = a1 + 0xffffffffffffffec
 20809: 7b 18 18                 u64 [sp + 0x18] = a1
 20812: 95 56 08                 s1 = s0 + 0x8
 20815: e0 79 0b                 a4 = a2 & ~a0
 20818: 82 1a 08                 a3 = u64 [sp + 0x8]
 20821: 7b 19 20                 u64 [sp + 0x20] = a2
 20824: 28 42                    jump @1364
      :                          @1362
 20826: 6a b7                    a0 = ctz a4
 20828: 98 77 03                 a0 = a0 >> 0x3
 20831: 9a 77                    a0 = -a0
 20833: 96 77 14                 a0 = a0 * 0x14
 20836: c8 57 07                 a0 = a0 + s0
 20839: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 20842: 7b 1a 50                 u64 [sp + 0x50] = a3
 20845: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 20848: d2 8b 0b                 a4 = a4 & a1
 20851: 7b 1b 48                 u64 [sp + 0x48] = a4
 20854: 95 78 ec                 a1 = a0 + 0xffffffffffffffec
 20857: 82 19 28                 a2 = u64 [sp + 0x28]
 20860: 82 1a 18                 a3 = u64 [sp + 0x18]
 20863: c9 9a 09                 a2 = a3 - a2
 20866: c8 97 07                 a0 = a0 + a2
 20869: 33 09 14                 a2 = 0x14
 20872: 50 20 ec 00 65 39        ra = 236, jump @1907
      :                          @1363 [@dyn 118]
 20878: 82 1b 48                 a4 = u64 [sp + 0x48]
 20881: 82 1a 50                 a3 = u64 [sp + 0x50]
 20884: 82 19 20                 a2 = u64 [sp + 0x20]
 20887: 51 0a 40                 jump @1369 if a3 == 0
      :                          @1364
 20890: 52 0b c0                 jump @1362 if a4 != 0
      :                          @1365
 20893: 82 67                    a0 = u64 [s1]
 20895: d2 97 07                 a0 = a0 & a2
 20898: 95 55 60 ff              s0 = s0 + 0xffffffffffffff60
 20902: 95 66 08                 s1 = s1 + 0x8
 20905: aa 97 f4                 jump @1365 if a0 == a2
      :                          @1366
 20908: d3 97 0b                 a4 = a0 ^ a2
 20911: 28 ab                    jump @1362
      :                          @1367
 20913: 33 0a                    a3 = 0
 20915: 33 08                    a1 = 0
 20917: 33 09 58 00 01           a2 = 0x10058
 20922: 01                       fallthrough
      :                          @1368
 20923: 7b 56 20                 u64 [s0 + 0x20] = s1
 20926: 7b 59                    u64 [s0] = a2
 20928: 7b 5c 08                 u64 [s0 + 0x8] = a5
 20931: 7b 58 10                 u64 [s0 + 0x10] = a1
 20934: 7b 5a 18                 u64 [s0 + 0x18] = a3
 20937: 82 10 68                 ra = u64 [sp + 0x68]
 20940: 82 15 60                 s0 = u64 [sp + 0x60]
 20943: 82 16 58                 s1 = u64 [sp + 0x58]
 20946: 95 11 70                 sp = sp + 0x70
 20949: 32 00                    ret
      :                          @1369
 20951: 82 17                    a0 = u64 [sp]
 20953: 82 78 10                 a1 = u64 [a0 + 0x10]
 20956: 82 15 40                 s0 = u64 [sp + 0x40]
 20959: 82 1c 38                 a5 = u64 [sp + 0x38]
 20962: 82 16 30                 s1 = u64 [sp + 0x30]
 20965: 82 19 10                 a2 = u64 [sp + 0x10]
 20968: 82 1a 08                 a3 = u64 [sp + 0x8]
 20971: 28 d0                    jump @1368
      :                          @1370
 20973: 00                       trap
      :                          @1371
 20974: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 20977: 7b 10 30                 u64 [sp + 0x30] = ra
 20980: 7b 15 28                 u64 [sp + 0x28] = s0
 20983: 7b 16 20                 u64 [sp + 0x20] = s1
 20986: 33 09 48 00 03           a2 = 0x30048
 20991: 33 04 80 00 03           t2 = 0x30080
 20996: 95 43 00 10              t1 = t2 + 0x1000
 21000: 33 02 78 0f              t0 = 0xf78
 21004: 01                       fallthrough
      :                          @1372
 21005: 82 36                    s1 = u64 [t1]
 21007: ac 62 b6 ae              jump @24 if t0 <u s1
      :                          @1373
 21011: c9 64 0c                 a5 = t2 - s1
 21014: 95 cc ff 07              a5 = a5 + 0x7ff
 21018: 95 c5 81 07              s0 = a5 + 0x781
 21022: 84 5c 07                 a5 = s0 & 0x7
 21025: c8 c6 0b                 a4 = s1 + a5
 21028: 95 bb 80 00              a4 = a4 + 0x80
 21032: 01                       fallthrough
      :                          @1374
 21033: 82 3a                    a3 = u64 [t1]
 21035: ab 6a e2                 jump @1372 if a3 != s1
      :                          @1375
 21038: 7b 3b                    u64 [t1] = a4
 21040: c9 c5 05                 s0 = s0 - a5
 21043: 33 09 80 00              a2 = 0x80
 21047: 64 76                    s1 = a0
 21049: 64 57                    a0 = s0
 21051: 50 20 ee 00 f8 37        ra = 238, jump @1890
      :                          @1376 [@dyn 119]
 21057: 95 6c 28                 a5 = s1 + 0x28
 21060: 82 67 40                 a0 = u64 [s1 + 0x40]
 21063: 7b 16                    u64 [sp] = s1
 21065: 82 69 38                 a2 = u64 [s1 + 0x38]
 21068: 33 08 04                 a1 = 0x4
 21071: 94 78 02                 a1 = 0x2 if a0 != 0
 21074: ac 89 9d 03              jump @1392 if a2 <u a1
      :                          @1377
 21078: 7c 57 19                 a0 = u8 [s0 + 0x19]
 21081: 7c 58 18                 a1 = u8 [s0 + 0x18]
 21084: 7c 59 1a                 a2 = u8 [s0 + 0x1a]
 21087: 7c 5a 1b                 a3 = u8 [s0 + 0x1b]
 21090: 97 77 08                 a0 = a0 << 0x8
 21093: d4 87 07                 a0 = a0 | a1
 21096: 97 99 10                 a2 = a2 << 0x10
 21099: 97 aa 18                 a3 = a3 << 0x18
 21102: d4 a9 09                 a2 = a2 | a3
 21105: d4 97 07                 a0 = a0 | a2
 21108: 7a 17 18                 u32 [sp + 0x18] = a0
 21111: 7c 57 11                 a0 = u8 [s0 + 0x11]
 21114: 7c 58 10                 a1 = u8 [s0 + 0x10]
 21117: 7c 59 12                 a2 = u8 [s0 + 0x12]
 21120: 7c 5a 13                 a3 = u8 [s0 + 0x13]
 21123: 97 77 08                 a0 = a0 << 0x8
 21126: d4 87 07                 a0 = a0 | a1
 21129: 97 99 10                 a2 = a2 << 0x10
 21132: 97 aa 18                 a3 = a3 << 0x18
 21135: d4 a9 09                 a2 = a2 | a3
 21138: d4 97 07                 a0 = a0 | a2
 21141: 7c 58 15                 a1 = u8 [s0 + 0x15]
 21144: 7c 59 14                 a2 = u8 [s0 + 0x14]
 21147: 7c 5a 16                 a3 = u8 [s0 + 0x16]
 21150: 7c 5b 17                 a4 = u8 [s0 + 0x17]
 21153: 97 88 08                 a1 = a1 << 0x8
 21156: d4 98 08                 a1 = a1 | a2
 21159: 97 aa 10                 a3 = a3 << 0x10
 21162: 97 bb 18                 a4 = a4 << 0x18
 21165: d4 ba 0a                 a3 = a3 | a4
 21168: d4 a8 08                 a1 = a1 | a3
 21171: 97 88 20                 a1 = a1 << 0x20
 21174: d4 87 07                 a0 = a0 | a1
 21177: 7b 17 10                 u64 [sp + 0x10] = a0
 21180: 7c 57 09                 a0 = u8 [s0 + 0x9]
 21183: 7c 58 08                 a1 = u8 [s0 + 0x8]
 21186: 7c 59 0a                 a2 = u8 [s0 + 0xa]
 21189: 7c 5a 0b                 a3 = u8 [s0 + 0xb]
 21192: 97 77 08                 a0 = a0 << 0x8
 21195: d4 87 07                 a0 = a0 | a1
 21198: 97 99 10                 a2 = a2 << 0x10
 21201: 97 aa 18                 a3 = a3 << 0x18
 21204: d4 a9 09                 a2 = a2 | a3
 21207: d4 97 07                 a0 = a0 | a2
 21210: 7c 58 0d                 a1 = u8 [s0 + 0xd]
 21213: 7c 59 0c                 a2 = u8 [s0 + 0xc]
 21216: 7c 5a 0e                 a3 = u8 [s0 + 0xe]
 21219: 7c 5b 0f                 a4 = u8 [s0 + 0xf]
 21222: 97 88 08                 a1 = a1 << 0x8
 21225: d4 98 08                 a1 = a1 | a2
 21228: 97 aa 10                 a3 = a3 << 0x10
 21231: 97 bb 18                 a4 = a4 << 0x18
 21234: d4 ba 0a                 a3 = a3 | a4
 21237: d4 a8 08                 a1 = a1 | a3
 21240: 97 88 20                 a1 = a1 << 0x20
 21243: d4 87 07                 a0 = a0 | a1
 21246: 7b 17 08                 u64 [sp + 0x8] = a0
 21249: 95 18 08                 a1 = sp + 0x8
 21252: 64 c7                    a0 = a5
 21254: 64 c6                    s1 = a5
 21256: 50 20 f0 00 0d 03        ra = 240, jump @1396
      :                          @1378 [@dyn 120]
 21262: 7c 57 39                 a0 = u8 [s0 + 0x39]
 21265: 7c 58 38                 a1 = u8 [s0 + 0x38]
 21268: 7c 59 3a                 a2 = u8 [s0 + 0x3a]
 21271: 7c 5a 3b                 a3 = u8 [s0 + 0x3b]
 21274: 97 77 08                 a0 = a0 << 0x8
 21277: d4 87 07                 a0 = a0 | a1
 21280: 97 99 10                 a2 = a2 << 0x10
 21283: 97 aa 18                 a3 = a3 << 0x18
 21286: d4 a9 09                 a2 = a2 | a3
 21289: d4 97 07                 a0 = a0 | a2
 21292: 7a 17 18                 u32 [sp + 0x18] = a0
 21295: 7c 57 31                 a0 = u8 [s0 + 0x31]
 21298: 7c 58 30                 a1 = u8 [s0 + 0x30]
 21301: 7c 59 32                 a2 = u8 [s0 + 0x32]
 21304: 7c 5a 33                 a3 = u8 [s0 + 0x33]
 21307: 97 77 08                 a0 = a0 << 0x8
 21310: d4 87 07                 a0 = a0 | a1
 21313: 97 99 10                 a2 = a2 << 0x10
 21316: 97 aa 18                 a3 = a3 << 0x18
 21319: d4 a9 09                 a2 = a2 | a3
 21322: d4 97 07                 a0 = a0 | a2
 21325: 7c 58 35                 a1 = u8 [s0 + 0x35]
 21328: 7c 59 34                 a2 = u8 [s0 + 0x34]
 21331: 7c 5a 36                 a3 = u8 [s0 + 0x36]
 21334: 7c 5b 37                 a4 = u8 [s0 + 0x37]
 21337: 97 88 08                 a1 = a1 << 0x8
 21340: d4 98 08                 a1 = a1 | a2
 21343: 97 aa 10                 a3 = a3 << 0x10
 21346: 97 bb 18                 a4 = a4 << 0x18
 21349: d4 ba 0a                 a3 = a3 | a4
 21352: d4 a8 08                 a1 = a1 | a3
 21355: 97 88 20                 a1 = a1 << 0x20
 21358: d4 87 07                 a0 = a0 | a1
 21361: 7b 17 10                 u64 [sp + 0x10] = a0
 21364: 7c 57 29                 a0 = u8 [s0 + 0x29]
 21367: 7c 58 28                 a1 = u8 [s0 + 0x28]
 21370: 7c 59 2a                 a2 = u8 [s0 + 0x2a]
 21373: 7c 5a 2b                 a3 = u8 [s0 + 0x2b]
 21376: 97 77 08                 a0 = a0 << 0x8
 21379: d4 87 07                 a0 = a0 | a1
 21382: 97 99 10                 a2 = a2 << 0x10
 21385: 97 aa 18                 a3 = a3 << 0x18
 21388: d4 a9 09                 a2 = a2 | a3
 21391: d4 97 07                 a0 = a0 | a2
 21394: 7c 58 2d                 a1 = u8 [s0 + 0x2d]
 21397: 7c 59 2c                 a2 = u8 [s0 + 0x2c]
 21400: 7c 5a 2e                 a3 = u8 [s0 + 0x2e]
 21403: 7c 5b 2f                 a4 = u8 [s0 + 0x2f]
 21406: 97 88 08                 a1 = a1 << 0x8
 21409: d4 98 08                 a1 = a1 | a2
 21412: 97 aa 10                 a3 = a3 << 0x10
 21415: 97 bb 18                 a4 = a4 << 0x18
 21418: d4 ba 0a                 a3 = a3 | a4
 21421: d4 a8 08                 a1 = a1 | a3
 21424: 97 88 20                 a1 = a1 << 0x20
 21427: d4 87 07                 a0 = a0 | a1
 21430: 7b 17 08                 u64 [sp + 0x8] = a0
 21433: 95 18 08                 a1 = sp + 0x8
 21436: 64 67                    a0 = s1
 21438: 50 20 f2 00 57 02        ra = 242, jump @1396
      :                          @1379 [@dyn 121]
 21444: 7c 57 59                 a0 = u8 [s0 + 0x59]
 21447: 7c 58 58                 a1 = u8 [s0 + 0x58]
 21450: 7c 59 5a                 a2 = u8 [s0 + 0x5a]
 21453: 7c 5a 5b                 a3 = u8 [s0 + 0x5b]
 21456: 97 77 08                 a0 = a0 << 0x8
 21459: d4 87 07                 a0 = a0 | a1
 21462: 97 99 10                 a2 = a2 << 0x10
 21465: 97 aa 18                 a3 = a3 << 0x18
 21468: d4 a9 09                 a2 = a2 | a3
 21471: d4 97 07                 a0 = a0 | a2
 21474: 7a 17 18                 u32 [sp + 0x18] = a0
 21477: 7c 57 51                 a0 = u8 [s0 + 0x51]
 21480: 7c 58 50                 a1 = u8 [s0 + 0x50]
 21483: 7c 59 52                 a2 = u8 [s0 + 0x52]
 21486: 7c 5a 53                 a3 = u8 [s0 + 0x53]
 21489: 97 77 08                 a0 = a0 << 0x8
 21492: d4 87 07                 a0 = a0 | a1
 21495: 97 99 10                 a2 = a2 << 0x10
 21498: 97 aa 18                 a3 = a3 << 0x18
 21501: d4 a9 09                 a2 = a2 | a3
 21504: d4 97 07                 a0 = a0 | a2
 21507: 7c 58 55                 a1 = u8 [s0 + 0x55]
 21510: 7c 59 54                 a2 = u8 [s0 + 0x54]
 21513: 7c 5a 56                 a3 = u8 [s0 + 0x56]
 21516: 7c 5b 57                 a4 = u8 [s0 + 0x57]
 21519: 97 88 08                 a1 = a1 << 0x8
 21522: d4 98 08                 a1 = a1 | a2
 21525: 97 aa 10                 a3 = a3 << 0x10
 21528: 97 bb 18                 a4 = a4 << 0x18
 21531: d4 ba 0a                 a3 = a3 | a4
 21534: d4 a8 08                 a1 = a1 | a3
 21537: 97 88 20                 a1 = a1 << 0x20
 21540: d4 87 07                 a0 = a0 | a1
 21543: 7b 17 10                 u64 [sp + 0x10] = a0
 21546: 7c 57 49                 a0 = u8 [s0 + 0x49]
 21549: 7c 58 48                 a1 = u8 [s0 + 0x48]
 21552: 7c 59 4a                 a2 = u8 [s0 + 0x4a]
 21555: 7c 5a 4b                 a3 = u8 [s0 + 0x4b]
 21558: 97 77 08                 a0 = a0 << 0x8
 21561: d4 87 07                 a0 = a0 | a1
 21564: 97 99 10                 a2 = a2 << 0x10
 21567: 97 aa 18                 a3 = a3 << 0x18
 21570: d4 a9 09                 a2 = a2 | a3
 21573: d4 97 07                 a0 = a0 | a2
 21576: 7c 58 4d                 a1 = u8 [s0 + 0x4d]
 21579: 7c 59 4c                 a2 = u8 [s0 + 0x4c]
 21582: 7c 5a 4e                 a3 = u8 [s0 + 0x4e]
 21585: 7c 5b 4f                 a4 = u8 [s0 + 0x4f]
 21588: 97 88 08                 a1 = a1 << 0x8
 21591: d4 98 08                 a1 = a1 | a2
 21594: 97 aa 10                 a3 = a3 << 0x10
 21597: 97 bb 18                 a4 = a4 << 0x18
 21600: d4 ba 0a                 a3 = a3 | a4
 21603: d4 a8 08                 a1 = a1 | a3
 21606: 97 88 20                 a1 = a1 << 0x20
 21609: d4 87 07                 a0 = a0 | a1
 21612: 7b 17 08                 u64 [sp + 0x8] = a0
 21615: 95 18 08                 a1 = sp + 0x8
 21618: 64 67                    a0 = s1
 21620: 50 20 f4 00 a1 01        ra = 244, jump @1396
      :                          @1380 [@dyn 122]
 21626: 7c 57 79                 a0 = u8 [s0 + 0x79]
 21629: 7c 58 78                 a1 = u8 [s0 + 0x78]
 21632: 7c 59 7a                 a2 = u8 [s0 + 0x7a]
 21635: 7c 5a 7b                 a3 = u8 [s0 + 0x7b]
 21638: 97 77 08                 a0 = a0 << 0x8
 21641: d4 87 07                 a0 = a0 | a1
 21644: 97 99 10                 a2 = a2 << 0x10
 21647: 97 aa 18                 a3 = a3 << 0x18
 21650: d4 a9 09                 a2 = a2 | a3
 21653: d4 97 07                 a0 = a0 | a2
 21656: 7a 17 18                 u32 [sp + 0x18] = a0
 21659: 7c 57 71                 a0 = u8 [s0 + 0x71]
 21662: 7c 58 70                 a1 = u8 [s0 + 0x70]
 21665: 7c 59 72                 a2 = u8 [s0 + 0x72]
 21668: 7c 5a 73                 a3 = u8 [s0 + 0x73]
 21671: 97 77 08                 a0 = a0 << 0x8
 21674: d4 87 07                 a0 = a0 | a1
 21677: 97 99 10                 a2 = a2 << 0x10
 21680: 97 aa 18                 a3 = a3 << 0x18
 21683: d4 a9 09                 a2 = a2 | a3
 21686: d4 97 07                 a0 = a0 | a2
 21689: 7c 58 75                 a1 = u8 [s0 + 0x75]
 21692: 7c 59 74                 a2 = u8 [s0 + 0x74]
 21695: 7c 5a 76                 a3 = u8 [s0 + 0x76]
 21698: 7c 5b 77                 a4 = u8 [s0 + 0x77]
 21701: 97 88 08                 a1 = a1 << 0x8
 21704: d4 98 08                 a1 = a1 | a2
 21707: 97 aa 10                 a3 = a3 << 0x10
 21710: 97 bb 18                 a4 = a4 << 0x18
 21713: d4 ba 0a                 a3 = a3 | a4
 21716: d4 a8 08                 a1 = a1 | a3
 21719: 97 88 20                 a1 = a1 << 0x20
 21722: d4 87 07                 a0 = a0 | a1
 21725: 7b 17 10                 u64 [sp + 0x10] = a0
 21728: 7c 57 69                 a0 = u8 [s0 + 0x69]
 21731: 7c 58 68                 a1 = u8 [s0 + 0x68]
 21734: 7c 59 6a                 a2 = u8 [s0 + 0x6a]
 21737: 7c 5a 6b                 a3 = u8 [s0 + 0x6b]
 21740: 97 77 08                 a0 = a0 << 0x8
 21743: d4 87 07                 a0 = a0 | a1
 21746: 97 99 10                 a2 = a2 << 0x10
 21749: 97 aa 18                 a3 = a3 << 0x18
 21752: d4 a9 09                 a2 = a2 | a3
 21755: d4 97 07                 a0 = a0 | a2
 21758: 7c 58 6d                 a1 = u8 [s0 + 0x6d]
 21761: 7c 59 6c                 a2 = u8 [s0 + 0x6c]
 21764: 7c 5a 6e                 a3 = u8 [s0 + 0x6e]
 21767: 7c 5b 6f                 a4 = u8 [s0 + 0x6f]
 21770: 97 88 08                 a1 = a1 << 0x8
 21773: d4 98 08                 a1 = a1 | a2
 21776: 97 aa 10                 a3 = a3 << 0x10
 21779: 97 bb 18                 a4 = a4 << 0x18
 21782: d4 ba 0a                 a3 = a3 | a4
 21785: d4 a8 08                 a1 = a1 | a3
 21788: 97 88 20                 a1 = a1 << 0x20
 21791: d4 87 07                 a0 = a0 | a1
 21794: 7b 17 08                 u64 [sp + 0x8] = a0
 21797: 95 18 08                 a1 = sp + 0x8
 21800: 64 67                    a0 = s1
 21802: 50 20 f6 00 eb 00        ra = 246, jump @1396
      :                          @1381 [@dyn 123]
 21808: 82 16                    s1 = u64 [sp]
 21810: 82 68 18                 a1 = u64 [s1 + 0x18]
 21813: 82 69 10                 a2 = u64 [s1 + 0x10]
 21816: 33 0b 04                 a4 = 0x4
 21819: 94 8b 02                 a4 = 0x2 if a1 != 0
 21822: ac b9 c5 00              jump @1394 if a2 <u a4
      :                          @1382
 21826: 81 58 18                 a1 = i32 [s0 + 0x18]
 21829: 82 5a 10                 a3 = u64 [s0 + 0x10]
 21832: 82 5b 08                 a4 = u64 [s0 + 0x8]
 21835: 82 59                    a2 = u64 [s0]
 21837: 7a 18 18                 u32 [sp + 0x18] = a1
 21840: 7b 1a 10                 u64 [sp + 0x10] = a3
 21843: 7b 1b 08                 u64 [sp + 0x8] = a4
 21846: 95 18 08                 a1 = sp + 0x8
 21849: 64 67                    a0 = s1
 21851: 50 20 f8 00 67 03        ra = 248, jump @1412
      :                          @1383 [@dyn 124]
 21857: 81 57 38                 a0 = i32 [s0 + 0x38]
 21860: 82 58 30                 a1 = u64 [s0 + 0x30]
 21863: 82 5a 28                 a3 = u64 [s0 + 0x28]
 21866: 82 59 20                 a2 = u64 [s0 + 0x20]
 21869: 7a 17 18                 u32 [sp + 0x18] = a0
 21872: 7b 18 10                 u64 [sp + 0x10] = a1
 21875: 7b 1a 08                 u64 [sp + 0x8] = a3
 21878: 95 18 08                 a1 = sp + 0x8
 21881: 64 67                    a0 = s1
 21883: 50 20 fa 00 47 03        ra = 250, jump @1412
      :                          @1384 [@dyn 125]
 21889: 81 57 58                 a0 = i32 [s0 + 0x58]
 21892: 82 58 50                 a1 = u64 [s0 + 0x50]
 21895: 82 5a 48                 a3 = u64 [s0 + 0x48]
 21898: 82 59 40                 a2 = u64 [s0 + 0x40]
 21901: 7a 17 18                 u32 [sp + 0x18] = a0
 21904: 7b 18 10                 u64 [sp + 0x10] = a1
 21907: 7b 1a 08                 u64 [sp + 0x8] = a3
 21910: 95 18 08                 a1 = sp + 0x8
 21913: 64 67                    a0 = s1
 21915: 50 20 fc 00 27 03        ra = 252, jump @1412
      :                          @1385 [@dyn 126]
 21921: 81 57 78                 a0 = i32 [s0 + 0x78]
 21924: 82 58 70                 a1 = u64 [s0 + 0x70]
 21927: 82 5a 68                 a3 = u64 [s0 + 0x68]
 21930: 82 59 60                 a2 = u64 [s0 + 0x60]
 21933: 7a 17 18                 u32 [sp + 0x18] = a0
 21936: 7b 18 10                 u64 [sp + 0x10] = a1
 21939: 7b 1a 08                 u64 [sp + 0x8] = a3
 21942: 95 18 08                 a1 = sp + 0x8
 21945: 64 67                    a0 = s1
 21947: 50 20 fe 00 07 03        ra = 254, jump @1412
      :                          @1386 [@dyn 127]
 21953: 33 07 80 00 03           a0 = 0x30080
 21958: 95 76 00 10              s1 = a0 + 0x1000
 21962: 01                       fallthrough
      :                          @1387
 21963: 82 67                    a0 = u64 [s1]
 21965: c9 76 08                 a1 = s1 - a0
 21968: ab 58 11                 jump @1391 if a1 != s0
      :                          @1388
 21971: 95 78 80                 a1 = a0 + 0xffffffffffffff80
 21974: 01                       fallthrough
      :                          @1389
 21975: 82 69                    a2 = u64 [s1]
 21977: ab 79 f2                 jump @1387 if a2 != a0
      :                          @1390
 21980: 7b 68                    u64 [s1] = a1
 21982: 33 0a                    a3 = 0
 21984: 01                       fallthrough
      :                          @1391
 21985: 82 10 30                 ra = u64 [sp + 0x30]
 21988: 82 15 28                 s0 = u64 [sp + 0x28]
 21991: 82 16 20                 s1 = u64 [sp + 0x20]
 21994: 95 11 38                 sp = sp + 0x38
 21997: 32 00                    ret
      :                          @1392
 21999: 82 17                    a0 = u64 [sp]
 22001: 82 79 48                 a2 = u64 [a0 + 0x48]
 22004: 64 c7                    a0 = a5
 22006: 64 c6                    s1 = a5
 22008: 50 20 00 01 55 e3        ra = 256, jump @1126
      :                          @1393 [@dyn 128]
 22014: 64 6c                    a5 = s1
 22016: 28 56 fc                 jump @1377
      :                          @1394
 22019: 64 b8                    a1 = a4
 22021: 82 69 20                 a2 = u64 [s1 + 0x20]
 22024: 82 17                    a0 = u64 [sp]
 22026: 50 20 02 01 4e ec        ra = 258, jump @1198
      :                          @1395 [@dyn 129]
 22032: 82 16                    s1 = u64 [sp]
 22034: 28 30 ff                 jump @1382
      :                          @1396
 22037: 95 11 80                 sp = sp + 0xffffffffffffff80
 22040: 7b 10 78                 u64 [sp + 0x78] = ra
 22043: 7b 15 70                 u64 [sp + 0x70] = s0
 22046: 7b 16 68                 u64 [sp + 0x68] = s1
 22049: 64 73                    t1 = a0
 22051: 7c 87 01                 a0 = u8 [a1 + 0x1]
 22054: 7c 8b                    a4 = u8 [a1]
 22056: 7c 89 02                 a2 = u8 [a1 + 0x2]
 22059: 7c 8a 03                 a3 = u8 [a1 + 0x3]
 22062: 97 77 08                 a0 = a0 << 0x8
 22065: d4 b7 07                 a0 = a0 | a4
 22068: 97 99 10                 a2 = a2 << 0x10
 22071: 97 aa 18                 a3 = a3 << 0x18
 22074: d4 a9 09                 a2 = a2 | a3
 22077: d4 97 07                 a0 = a0 | a2
 22080: 7c 8c 05                 a5 = u8 [a1 + 0x5]
 22083: 7c 89 04                 a2 = u8 [a1 + 0x4]
 22086: 7c 8a 06                 a3 = u8 [a1 + 0x6]
 22089: 7c 8b 07                 a4 = u8 [a1 + 0x7]
 22092: 97 cc 08                 a5 = a5 << 0x8
 22095: d4 c9 09                 a2 = a2 | a5
 22098: 97 aa 10                 a3 = a3 << 0x10
 22101: 97 bb 18                 a4 = a4 << 0x18
 22104: d4 ba 0a                 a3 = a3 | a4
 22107: d4 9a 05                 s0 = a3 | a2
 22110: 97 59 20                 a2 = s0 << 0x20
 22113: d4 79 02                 t0 = a2 | a0
 22116: 7c 89 09                 a2 = u8 [a1 + 0x9]
 22119: 7c 8a 08                 a3 = u8 [a1 + 0x8]
 22122: 7c 8b 0b                 a4 = u8 [a1 + 0xb]
 22125: 7c 8c 0a                 a5 = u8 [a1 + 0xa]
 22128: 97 99 08                 a2 = a2 << 0x8
 22131: d4 a9 09                 a2 = a2 | a3
 22134: 97 bb 08                 a4 = a4 << 0x8
 22137: d4 cb 0b                 a4 = a4 | a5
 22140: 7c 8a 0f                 a3 = u8 [a1 + 0xf]
 22143: 97 bb 10                 a4 = a4 << 0x10
 22146: d4 b9 09                 a2 = a2 | a4
 22149: 7c 8b 0e                 a4 = u8 [a1 + 0xe]
 22152: 97 aa 08                 a3 = a3 << 0x8
 22155: 7c 8c 0d                 a5 = u8 [a1 + 0xd]
 22158: 7c 86 0c                 s1 = u8 [a1 + 0xc]
 22161: d4 ba 0a                 a3 = a3 | a4
 22164: 97 aa 10                 a3 = a3 << 0x10
 22167: 97 cc 08                 a5 = a5 << 0x8
 22170: d4 6c 0b                 a4 = a5 | s1
 22173: d4 ab 0b                 a4 = a4 | a3
 22176: 97 ba 20                 a3 = a4 << 0x20
 22179: d4 9a 0a                 a3 = a3 | a2
 22182: 7c 8c 11                 a5 = u8 [a1 + 0x11]
 22185: 97 99 20                 a2 = a2 << 0x20
 22188: d4 59 06                 s1 = a2 | s0
 22191: 7c 89 10                 a2 = u8 [a1 + 0x10]
 22194: 97 cc 08                 a5 = a5 << 0x8
 22197: 7c 85 12                 s0 = u8 [a1 + 0x12]
 22200: 7b 18 58                 u64 [sp + 0x58] = a1
 22203: 7c 87 13                 a0 = u8 [a1 + 0x13]
 22206: d4 9c 08                 a1 = a5 | a2
 22209: 82 39 20                 a2 = u64 [t1 + 0x20]
 22212: 97 55 10                 s0 = s0 << 0x10
 22215: 97 77 18                 a0 = a0 << 0x18
 22218: d4 57 07                 a0 = a0 | s0
 22221: d4 87 07                 a0 = a0 | a1
 22224: 3a 08 50 00 03           a1 = u64 [0x30050]
 22229: 3a 0c 58 00 03           a5 = u64 [0x30058]
 22234: 97 77 20                 a0 = a0 << 0x20
 22237: d4 b7 07                 a0 = a0 | a4
 22240: 9e 9b 14                 a4 = a2 >>r 0x14
 22243: c8 bc 0c                 a5 = a5 + a4
 22246: d3 b2 0b                 a4 = t0 ^ a4
 22249: d3 86 06                 s1 = s1 ^ a1
 22252: ca b6 05                 s0 = s1 * a4
 22255: d6 b6 0b                 a4 = s1 mulhu a4
 22258: d3 ca 0a                 a3 = a3 ^ a5
 22261: d3 87 07                 a0 = a0 ^ a1
 22264: ca a7 0c                 a5 = a0 * a3
 22267: d6 a7 07                 a0 = a0 mulhu a3
 22270: d3 b7 07                 a0 = a0 ^ a4
 22273: d3 5c 0c                 a5 = a5 ^ s0
 22276: d3 c7 07                 a0 = a0 ^ a5
 22279: 82 3a 10                 a3 = u64 [t1 + 0x10]
 22282: 85 77 14                 a0 = a0 ^ 0x14
 22285: ca 87 0b                 a4 = a0 * a1
 22288: d6 87 06                 s1 = a0 mulhu a1
 22291: d3 b6 04                 t2 = s1 ^ a4
 22294: 7b 13 30                 u64 [sp + 0x30] = t1
 22297: 51 0a 94 01              jump @1410 if a3 == 0
      :                          @1397
 22301: 33 0a                    a3 = 0
 22303: 49 11 40                 u64 [sp + 64] = 0
 22306: 14 02 80 80 80 80 80 80 80 80 t0 = 0x8080808080808080
 22316: 82 3b                    a4 = u64 [t1]
 22318: 82 3c 08                 a5 = u64 [t1 + 0x8]
 22321: 98 49 39                 a2 = t2 >> 0x39
 22324: 14 07 01 01 01 01 01 01 01 01 a0 = 0x101010101010101
 22334: 7b 19                    u64 [sp] = a2
 22336: ca 79 06                 s1 = a2 * a0
 22339: 95 b7 ec                 a0 = a4 + 0xffffffffffffffec
 22342: 7b 17 50                 u64 [sp + 0x50] = a0
 22345: 14 05 ff fe fe fe fe fe fe fe s0 = 0xfefefefefefefeff
 22355: 7b 1b 28                 u64 [sp + 0x28] = a4
 22358: 7b 12 20                 u64 [sp + 0x20] = t0
 22361: 7b 16 18                 u64 [sp + 0x18] = s1
 22364: 7b 15 10                 u64 [sp + 0x10] = s0
 22367: 01                       fallthrough
      :                          @1398
 22368: 7b 1a 48                 u64 [sp + 0x48] = a3
 22371: d2 c4 07                 a0 = t2 & a5
 22374: 7b 17 60                 u64 [sp + 0x60] = a0
 22377: c8 b7 07                 a0 = a0 + a4
 22380: 7c 78 01                 a1 = u8 [a0 + 0x1]
 22383: 7c 79                    a2 = u8 [a0]
 22385: 7c 7a 02                 a3 = u8 [a0 + 0x2]
 22388: 7c 7b 03                 a4 = u8 [a0 + 0x3]
 22391: 97 88 08                 a1 = a1 << 0x8
 22394: d4 98 08                 a1 = a1 | a2
 22397: 97 aa 10                 a3 = a3 << 0x10
 22400: 97 bb 18                 a4 = a4 << 0x18
 22403: d4 ba 0a                 a3 = a3 | a4
 22406: d4 a8 08                 a1 = a1 | a3
 22409: 7c 79 05                 a2 = u8 [a0 + 0x5]
 22412: 7c 7a 04                 a3 = u8 [a0 + 0x4]
 22415: 7c 7b 06                 a4 = u8 [a0 + 0x6]
 22418: 7c 77 07                 a0 = u8 [a0 + 0x7]
 22421: 97 99 08                 a2 = a2 << 0x8
 22424: d4 a9 09                 a2 = a2 | a3
 22427: 97 bb 10                 a4 = a4 << 0x10
 22430: 97 77 18                 a0 = a0 << 0x18
 22433: d4 b7 07                 a0 = a0 | a4
 22436: d4 97 07                 a0 = a0 | a2
 22439: 97 77 20                 a0 = a0 << 0x20
 22442: d4 87 07                 a0 = a0 | a1
 22445: 7b 17 38                 u64 [sp + 0x38] = a0
 22448: d3 67 07                 a0 = a0 ^ s1
 22451: c8 57 08                 a1 = a0 + s0
 22454: e0 72 05                 s0 = t0 & ~a0
 22457: d2 85 05                 s0 = s0 & a1
 22460: 51 05 3b                 jump @1402 if s0 == 0
      :                          @1399
 22463: 6a 57                    a0 = ctz s0
 22465: 98 77 03                 a0 = a0 >> 0x3
 22468: 82 18 60                 a1 = u64 [sp + 0x60]
 22471: c8 87 07                 a0 = a0 + a1
 22474: 64 c6                    s1 = a5
 22476: d2 c7 07                 a0 = a0 & a5
 22479: 9a 77                    a0 = -a0
 22481: 96 78 14                 a1 = a0 * 0x14
 22484: 82 17 50                 a0 = u64 [sp + 0x50]
 22487: c8 78 08                 a1 = a1 + a0
 22490: 33 09 14                 a2 = 0x14
 22493: 82 17 58                 a0 = u64 [sp + 0x58]
 22496: 50 20 04 01 04 35        ra = 260, jump @1954
      :                          @1400 [@dyn 130]
 22502: 83 77                    i32 a0 = a0 + 0
 22504: 51 07 b6 00              jump @1409 if a0 == 0
      :                          @1401
 22508: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
 22511: d2 75 05                 s0 = s0 & a0
 22514: 64 6c                    a5 = s1
 22516: 52 05 cb                 jump @1399 if s0 != 0
      :                          @1402
 22519: 33 07 01                 a0 = 0x1
 22522: 82 12 20                 t0 = u64 [sp + 0x20]
 22525: 82 1b 38                 a4 = u64 [sp + 0x38]
 22528: d2 2b 08                 a1 = a4 & t0
 22531: 82 19 40                 a2 = u64 [sp + 0x40]
 22534: aa 79 17                 jump @1404 if a2 == a0
      :                          @1403
 22537: 8e 87                    a0 = a1 >u 0
 22539: 6a 89                    a2 = ctz a1
 22541: 98 99 03                 a2 = a2 >> 0x3
 22544: 82 1a 60                 a3 = u64 [sp + 0x60]
 22547: c8 a9 09                 a2 = a2 + a3
 22550: d2 c9 09                 a2 = a2 & a5
 22553: 7b 19 08                 u64 [sp + 0x8] = a2
 22556: 01                       fallthrough
      :                          @1404
 22557: 97 b9 01                 a2 = a4 << 0x1
 22560: d2 98 08                 a1 = a1 & a2
 22563: 82 1a 30                 a3 = u64 [sp + 0x30]
 22566: 82 1b 28                 a4 = u64 [sp + 0x28]
 22569: 82 19 48                 a2 = u64 [sp + 0x48]
 22572: 52 08 18                 jump @1406 if a1 != 0
      :                          @1405
 22575: 95 9a 08                 a3 = a2 + 0x8
 22578: 82 18 60                 a1 = u64 [sp + 0x60]
 22581: c8 a8 04                 t2 = a1 + a3
 22584: 7b 17 40                 u64 [sp + 0x40] = a0
 22587: 82 16 18                 s1 = u64 [sp + 0x18]
 22590: 82 15 10                 s0 = u64 [sp + 0x10]
 22593: 28 1f ff                 jump @1398
      :                          @1406
 22596: 82 19 08                 a2 = u64 [sp + 0x8]
 22599: c8 9b 07                 a0 = a4 + a2
 22602: 7d 77                    a0 = i8 [a0]
 22604: 57 07 13                 jump @1408 if a0 <s 0
      :                          @1407
 22607: 82 b7                    a0 = u64 [a4]
 22609: d2 27 07                 a0 = a0 & t0
 22612: 6a 77                    a0 = ctz a0
 22614: 98 79 03                 a2 = a0 >> 0x3
 22617: c8 9b 07                 a0 = a4 + a2
 22620: 7c 77                    a0 = u8 [a0]
 22622: 01                       fallthrough
      :                          @1408
 22623: 82 a8 10                 a1 = u64 [a3 + 0x10]
 22626: c8 9b 06                 s1 = a4 + a2
 22629: 84 77 01                 a0 = a0 & 0x1
 22632: c9 78 08                 a1 = a1 - a0
 22635: 7b a8 10                 u64 [a3 + 0x10] = a1
 22638: 95 97 f8                 a0 = a2 + 0xfffffffffffffff8
 22641: d2 c7 07                 a0 = a0 & a5
 22644: 82 a8 18                 a1 = u64 [a3 + 0x18]
 22647: 82 1c                    a5 = u64 [sp]
 22649: 78 6c                    u8 [s1] = a5
 22651: c8 b7 07                 a0 = a0 + a4
 22654: 78 7c 08                 u8 [a0 + 0x8] = a5
 22657: 95 88 01                 a1 = a1 + 0x1
 22660: 7b a8 18                 u64 [a3 + 0x18] = a1
 22663: 9a 97                    a0 = -a2
 22665: 96 77 14                 a0 = a0 * 0x14
 22668: c8 b7 07                 a0 = a0 + a4
 22671: 95 77 ec                 a0 = a0 + 0xffffffffffffffec
 22674: 33 09 14                 a2 = 0x14
 22677: 82 18 58                 a1 = u64 [sp + 0x58]
 22680: 50 20 06 01 9b 31        ra = 262, jump @1890
      :                          @1409 [@dyn 131]
 22686: 82 10 78                 ra = u64 [sp + 0x78]
 22689: 82 15 70                 s0 = u64 [sp + 0x70]
 22692: 82 16 68                 s1 = u64 [sp + 0x68]
 22695: 95 11 80 00              sp = sp + 0x80
 22699: 32 00                    ret
      :                          @1410
 22701: 33 08 01                 a1 = 0x1
 22704: 64 37                    a0 = t1
 22706: 64 45                    s0 = t2
 22708: 50 20 08 01 99 e0        ra = 264, jump @1126
      :                          @1411 [@dyn 132]
 22714: 64 54                    t2 = s0
 22716: 82 13 30                 t1 = u64 [sp + 0x30]
 22719: 28 5e fe                 jump @1397
      :                          @1412
 22722: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 22726: 7b 10 98 00              u64 [sp + 0x98] = ra
 22730: 7b 15 90 00              u64 [sp + 0x90] = s0
 22734: 7b 16 88 00              u64 [sp + 0x88] = s1
 22738: 7b 19 18                 u64 [sp + 0x18] = a2
 22741: 64 73                    t1 = a0
 22743: 7c 87 01                 a0 = u8 [a1 + 0x1]
 22746: 7c 8b                    a4 = u8 [a1]
 22748: 7c 89 02                 a2 = u8 [a1 + 0x2]
 22751: 7c 8a 03                 a3 = u8 [a1 + 0x3]
 22754: 97 77 08                 a0 = a0 << 0x8
 22757: d4 b7 07                 a0 = a0 | a4
 22760: 97 99 10                 a2 = a2 << 0x10
 22763: 97 aa 18                 a3 = a3 << 0x18
 22766: d4 a9 09                 a2 = a2 | a3
 22769: d4 97 07                 a0 = a0 | a2
 22772: 7c 8c 05                 a5 = u8 [a1 + 0x5]
 22775: 7c 89 04                 a2 = u8 [a1 + 0x4]
 22778: 7c 8a 06                 a3 = u8 [a1 + 0x6]
 22781: 7c 8b 07                 a4 = u8 [a1 + 0x7]
 22784: 97 cc 08                 a5 = a5 << 0x8
 22787: d4 c9 09                 a2 = a2 | a5
 22790: 97 aa 10                 a3 = a3 << 0x10
 22793: 97 bb 18                 a4 = a4 << 0x18
 22796: d4 ba 0a                 a3 = a3 | a4
 22799: d4 9a 05                 s0 = a3 | a2
 22802: 97 59 20                 a2 = s0 << 0x20
 22805: d4 79 02                 t0 = a2 | a0
 22808: 7c 89 09                 a2 = u8 [a1 + 0x9]
 22811: 7c 8a 08                 a3 = u8 [a1 + 0x8]
 22814: 7c 8b 0b                 a4 = u8 [a1 + 0xb]
 22817: 7c 8c 0a                 a5 = u8 [a1 + 0xa]
 22820: 97 99 08                 a2 = a2 << 0x8
 22823: d4 a9 09                 a2 = a2 | a3
 22826: 97 bb 08                 a4 = a4 << 0x8
 22829: d4 cb 0b                 a4 = a4 | a5
 22832: 7c 8a 0f                 a3 = u8 [a1 + 0xf]
 22835: 97 bb 10                 a4 = a4 << 0x10
 22838: d4 b9 09                 a2 = a2 | a4
 22841: 7c 8b 0e                 a4 = u8 [a1 + 0xe]
 22844: 97 aa 08                 a3 = a3 << 0x8
 22847: 7c 8c 0d                 a5 = u8 [a1 + 0xd]
 22850: 7c 86 0c                 s1 = u8 [a1 + 0xc]
 22853: d4 ba 0a                 a3 = a3 | a4
 22856: 97 aa 10                 a3 = a3 << 0x10
 22859: 97 cc 08                 a5 = a5 << 0x8
 22862: d4 6c 0b                 a4 = a5 | s1
 22865: d4 ab 0b                 a4 = a4 | a3
 22868: 97 ba 20                 a3 = a4 << 0x20
 22871: d4 9a 0a                 a3 = a3 | a2
 22874: 7c 8c 11                 a5 = u8 [a1 + 0x11]
 22877: 97 99 20                 a2 = a2 << 0x20
 22880: d4 59 06                 s1 = a2 | s0
 22883: 7c 89 10                 a2 = u8 [a1 + 0x10]
 22886: 97 cc 08                 a5 = a5 << 0x8
 22889: 7c 85 12                 s0 = u8 [a1 + 0x12]
 22892: 7b 18 60                 u64 [sp + 0x60] = a1
 22895: 7c 87 13                 a0 = u8 [a1 + 0x13]
 22898: d4 9c 08                 a1 = a5 | a2
 22901: 82 39 20                 a2 = u64 [t1 + 0x20]
 22904: 97 55 10                 s0 = s0 << 0x10
 22907: 97 77 18                 a0 = a0 << 0x18
 22910: d4 57 07                 a0 = a0 | s0
 22913: d4 87 07                 a0 = a0 | a1
 22916: 3a 08 50 00 03           a1 = u64 [0x30050]
 22921: 3a 0c 58 00 03           a5 = u64 [0x30058]
 22926: 97 77 20                 a0 = a0 << 0x20
 22929: d4 b7 07                 a0 = a0 | a4
 22932: 9e 9b 14                 a4 = a2 >>r 0x14
 22935: c8 bc 0c                 a5 = a5 + a4
 22938: d3 b2 0b                 a4 = t0 ^ a4
 22941: d3 86 06                 s1 = s1 ^ a1
 22944: ca b6 05                 s0 = s1 * a4
 22947: d6 b6 0b                 a4 = s1 mulhu a4
 22950: 64 36                    s1 = t1
 22952: d3 ca 0a                 a3 = a3 ^ a5
 22955: d3 87 07                 a0 = a0 ^ a1
 22958: ca a7 0c                 a5 = a0 * a3
 22961: d6 a7 07                 a0 = a0 mulhu a3
 22964: d3 b7 07                 a0 = a0 ^ a4
 22967: d3 5c 0c                 a5 = a5 ^ s0
 22970: d3 c7 07                 a0 = a0 ^ a5
 22973: 82 3a 10                 a3 = u64 [t1 + 0x10]
 22976: 85 77 14                 a0 = a0 ^ 0x14
 22979: ca 87 0b                 a4 = a0 * a1
 22982: d6 87 05                 s0 = a0 mulhu a1
 22985: d3 5b 0b                 a4 = a4 ^ s0
 22988: 51 0a 47 02              jump @1427 if a3 == 0
      :                          @1413
 22992: 33 0a                    a3 = 0
 22994: 49 11 40                 u64 [sp + 64] = 0
 22997: 14 04 80 80 80 80 80 80 80 80 t2 = 0x8080808080808080
 23007: 82 62                    t0 = u64 [s1]
 23009: 7b 16 08                 u64 [sp + 0x8] = s1
 23012: 82 65 08                 s0 = u64 [s1 + 0x8]
 23015: 98 b9 39                 a2 = a4 >> 0x39
 23018: 14 07 01 01 01 01 01 01 01 01 a0 = 0x101010101010101
 23028: 7b 19                    u64 [sp] = a2
 23030: ca 79 06                 s1 = a2 * a0
 23033: 14 0c ff fe fe fe fe fe fe fe a5 = 0xfefefefefefefeff
 23043: 7b 12 58                 u64 [sp + 0x58] = t0
 23046: 7b 15 50                 u64 [sp + 0x50] = s0
 23049: 7b 14 30                 u64 [sp + 0x30] = t2
 23052: 7b 16 28                 u64 [sp + 0x28] = s1
 23055: 7b 1c 20                 u64 [sp + 0x20] = a5
 23058: 01                       fallthrough
      :                          @1414
 23059: 7b 1a 48                 u64 [sp + 0x48] = a3
 23062: d2 5b 07                 a0 = a4 & s0
 23065: 7b 17 68                 u64 [sp + 0x68] = a0
 23068: c8 27 07                 a0 = a0 + t0
 23071: 7c 78 01                 a1 = u8 [a0 + 0x1]
 23074: 7c 79                    a2 = u8 [a0]
 23076: 7c 7a 02                 a3 = u8 [a0 + 0x2]
 23079: 7c 7b 03                 a4 = u8 [a0 + 0x3]
 23082: 97 88 08                 a1 = a1 << 0x8
 23085: d4 98 08                 a1 = a1 | a2
 23088: 97 aa 10                 a3 = a3 << 0x10
 23091: 97 bb 18                 a4 = a4 << 0x18
 23094: d4 ba 0a                 a3 = a3 | a4
 23097: d4 a8 08                 a1 = a1 | a3
 23100: 7c 79 05                 a2 = u8 [a0 + 0x5]
 23103: 7c 7a 04                 a3 = u8 [a0 + 0x4]
 23106: 7c 7b 06                 a4 = u8 [a0 + 0x6]
 23109: 7c 77 07                 a0 = u8 [a0 + 0x7]
 23112: 97 99 08                 a2 = a2 << 0x8
 23115: d4 a9 09                 a2 = a2 | a3
 23118: 97 bb 10                 a4 = a4 << 0x10
 23121: 97 77 18                 a0 = a0 << 0x18
 23124: d4 b7 07                 a0 = a0 | a4
 23127: d4 97 07                 a0 = a0 | a2
 23130: 97 77 20                 a0 = a0 << 0x20
 23133: d4 87 07                 a0 = a0 | a1
 23136: 7b 17 38                 u64 [sp + 0x38] = a0
 23139: d3 67 07                 a0 = a0 ^ s1
 23142: c8 c7 08                 a1 = a0 + a5
 23145: e0 74 06                 s1 = t2 & ~a0
 23148: d2 86 06                 s1 = s1 & a1
 23151: 51 06 3a                 jump @1418 if s1 == 0
      :                          @1415
 23154: 6a 67                    a0 = ctz s1
 23156: 98 77 03                 a0 = a0 >> 0x3
 23159: 82 18 68                 a1 = u64 [sp + 0x68]
 23162: c8 87 07                 a0 = a0 + a1
 23165: d2 57 07                 a0 = a0 & s0
 23168: 97 77 05                 a0 = a0 << 0x5
 23171: c9 72 05                 s0 = t0 - a0
 23174: 95 58 e0                 a1 = s0 + 0xffffffffffffffe0
 23177: 33 09 14                 a2 = 0x14
 23180: 82 17 60                 a0 = u64 [sp + 0x60]
 23183: 50 20 0a 01 55 32        ra = 266, jump @1954
      :                          @1416 [@dyn 133]
 23189: 83 77                    i32 a0 = a0 + 0
 23191: 51 07 59                 jump @1422 if a0 == 0
      :                          @1417
 23194: 95 67 ff                 a0 = s1 + 0xffffffffffffffff
 23197: d2 76 06                 s1 = s1 & a0
 23200: 82 12 58                 t0 = u64 [sp + 0x58]
 23203: 82 15 50                 s0 = u64 [sp + 0x50]
 23206: 52 06 cc                 jump @1415 if s1 != 0
      :                          @1418
 23209: 33 07 01                 a0 = 0x1
 23212: 82 14 30                 t2 = u64 [sp + 0x30]
 23215: 82 1b 38                 a4 = u64 [sp + 0x38]
 23218: d2 4b 08                 a1 = a4 & t2
 23221: 82 19 40                 a2 = u64 [sp + 0x40]
 23224: aa 79 17                 jump @1420 if a2 == a0
      :                          @1419
 23227: 8e 87                    a0 = a1 >u 0
 23229: 6a 89                    a2 = ctz a1
 23231: 98 99 03                 a2 = a2 >> 0x3
 23234: 82 1a 68                 a3 = u64 [sp + 0x68]
 23237: c8 a9 09                 a2 = a2 + a3
 23240: d2 59 09                 a2 = a2 & s0
 23243: 7b 19 10                 u64 [sp + 0x10] = a2
 23246: 01                       fallthrough
      :                          @1420
 23247: 97 b9 01                 a2 = a4 << 0x1
 23250: d2 98 08                 a1 = a1 & a2
 23253: 82 1a 48                 a3 = u64 [sp + 0x48]
 23256: 52 08 31                 jump @1424 if a1 != 0
      :                          @1421
 23259: 95 aa 08                 a3 = a3 + 0x8
 23262: 82 18 68                 a1 = u64 [sp + 0x68]
 23265: c8 a8 0b                 a4 = a1 + a3
 23268: 7b 17 40                 u64 [sp + 0x40] = a0
 23271: 82 16 28                 s1 = u64 [sp + 0x28]
 23274: 82 1c 20                 a5 = u64 [sp + 0x20]
 23277: 28 26 ff                 jump @1414
      :                          @1422
 23280: 82 17 18                 a0 = u64 [sp + 0x18]
 23283: 7b 57 f8                 u64 [s0 + 0xfffffffffffffff8] = a0
 23286: 01                       fallthrough
      :                          @1423
 23287: 82 10 98 00              ra = u64 [sp + 0x98]
 23291: 82 15 90 00              s0 = u64 [sp + 0x90]
 23295: 82 16 88 00              s1 = u64 [sp + 0x88]
 23299: 95 11 a0 00              sp = sp + 0xa0
 23303: 32 00                    ret
      :                          @1424
 23305: 82 13 10                 t1 = u64 [sp + 0x10]
 23308: c8 32 07                 a0 = t0 + t1
 23311: 7d 77                    a0 = i8 [a0]
 23313: 57 07 13                 jump @1426 if a0 <s 0
      :                          @1425
 23316: 82 27                    a0 = u64 [t0]
 23318: d2 47 07                 a0 = a0 & t2
 23321: 6a 77                    a0 = ctz a0
 23323: 98 73 03                 t1 = a0 >> 0x3
 23326: c8 32 07                 a0 = t0 + t1
 23329: 7c 77                    a0 = u8 [a0]
 23331: 01                       fallthrough
      :                          @1426
 23332: 82 16 60                 s1 = u64 [sp + 0x60]
 23335: 7c 68 11                 a1 = u8 [s1 + 0x11]
 23338: 7c 69 10                 a2 = u8 [s1 + 0x10]
 23341: 7c 6a 12                 a3 = u8 [s1 + 0x12]
 23344: 7c 6b 13                 a4 = u8 [s1 + 0x13]
 23347: 97 88 08                 a1 = a1 << 0x8
 23350: d4 98 08                 a1 = a1 | a2
 23353: 97 aa 10                 a3 = a3 << 0x10
 23356: 97 bb 18                 a4 = a4 << 0x18
 23359: d4 ba 0a                 a3 = a3 | a4
 23362: d4 a8 08                 a1 = a1 | a3
 23365: 7a 18 80 00              u32 [sp + 0x80] = a1
 23369: 7c 68 09                 a1 = u8 [s1 + 0x9]
 23372: 7c 69 08                 a2 = u8 [s1 + 0x8]
 23375: 7c 6a 0a                 a3 = u8 [s1 + 0xa]
 23378: 7c 6b 0b                 a4 = u8 [s1 + 0xb]
 23381: 97 88 08                 a1 = a1 << 0x8
 23384: d4 98 08                 a1 = a1 | a2
 23387: 97 aa 10                 a3 = a3 << 0x10
 23390: 97 bb 18                 a4 = a4 << 0x18
 23393: d4 ba 0a                 a3 = a3 | a4
 23396: d4 a8 08                 a1 = a1 | a3
 23399: 7c 69 0d                 a2 = u8 [s1 + 0xd]
 23402: 7c 6a 0c                 a3 = u8 [s1 + 0xc]
 23405: 7c 6b 0e                 a4 = u8 [s1 + 0xe]
 23408: 7c 6c 0f                 a5 = u8 [s1 + 0xf]
 23411: 97 99 08                 a2 = a2 << 0x8
 23414: d4 a9 09                 a2 = a2 | a3
 23417: 97 bb 10                 a4 = a4 << 0x10
 23420: 97 cc 18                 a5 = a5 << 0x18
 23423: d4 cb 0b                 a4 = a4 | a5
 23426: d4 b9 09                 a2 = a2 | a4
 23429: 97 99 20                 a2 = a2 << 0x20
 23432: d4 98 08                 a1 = a1 | a2
 23435: 7c 69 01                 a2 = u8 [s1 + 0x1]
 23438: 7c 6a                    a3 = u8 [s1]
 23440: 7c 6b 02                 a4 = u8 [s1 + 0x2]
 23443: 7c 6c 03                 a5 = u8 [s1 + 0x3]
 23446: 97 99 08                 a2 = a2 << 0x8
 23449: d4 a9 09                 a2 = a2 | a3
 23452: 97 bb 10                 a4 = a4 << 0x10
 23455: 97 cc 18                 a5 = a5 << 0x18
 23458: d4 cb 0b                 a4 = a4 | a5
 23461: d4 b9 09                 a2 = a2 | a4
 23464: 7c 6a 05                 a3 = u8 [s1 + 0x5]
 23467: 7c 6b 04                 a4 = u8 [s1 + 0x4]
 23470: 7c 6c 06                 a5 = u8 [s1 + 0x6]
 23473: 7c 66 07                 s1 = u8 [s1 + 0x7]
 23476: 97 aa 08                 a3 = a3 << 0x8
 23479: d4 ba 0a                 a3 = a3 | a4
 23482: 97 cc 10                 a5 = a5 << 0x10
 23485: 97 66 18                 s1 = s1 << 0x18
 23488: d4 6c 0c                 a5 = a5 | s1
 23491: d4 ca 0a                 a3 = a3 | a5
 23494: 97 aa 20                 a3 = a3 << 0x20
 23497: 82 1c 08                 a5 = u64 [sp + 0x8]
 23500: 82 cb 10                 a4 = u64 [a5 + 0x10]
 23503: d4 a9 09                 a2 = a2 | a3
 23506: c8 32 0a                 a3 = t0 + t1
 23509: 84 77 01                 a0 = a0 & 0x1
 23512: c9 7b 0b                 a4 = a4 - a0
 23515: 7b cb 10                 u64 [a5 + 0x10] = a4
 23518: 95 37 f8                 a0 = t1 + 0xfffffffffffffff8
 23521: d2 57 07                 a0 = a0 & s0
 23524: 82 cb 18                 a4 = u64 [a5 + 0x18]
 23527: 82 16                    s1 = u64 [sp]
 23529: 78 a6                    u8 [a3] = s1
 23531: c8 27 07                 a0 = a0 + t0
 23534: 78 76 08                 u8 [a0 + 0x8] = s1
 23537: 95 bb 01                 a4 = a4 + 0x1
 23540: 7b cb 18                 u64 [a5 + 0x18] = a4
 23543: 97 37 05                 a0 = t1 << 0x5
 23546: 82 1a 80 00              a3 = u64 [sp + 0x80]
 23550: c9 72 07                 a0 = t0 - a0
 23553: 7b 79 e0                 u64 [a0 + 0xffffffffffffffe0] = a2
 23556: 7b 78 e8                 u64 [a0 + 0xffffffffffffffe8] = a1
 23559: 7b 7a f0                 u64 [a0 + 0xfffffffffffffff0] = a3
 23562: 82 18 18                 a1 = u64 [sp + 0x18]
 23565: 7b 78 f8                 u64 [a0 + 0xfffffffffffffff8] = a1
 23568: 28 e7 fe                 jump @1423
      :                          @1427
 23571: 33 08 01                 a1 = 0x1
 23574: 64 67                    a0 = s1
 23576: 64 b5                    s0 = a4
 23578: 50 20 0c 01 3e e6        ra = 268, jump @1198
      :                          @1428 [@dyn 134]
 23584: 64 5b                    a4 = s0
 23586: 28 ae fd                 jump @1413
      :                          @1429
 23589: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 23592: 7b 10 18                 u64 [sp + 0x18] = ra
 23595: 7b 15 10                 u64 [sp + 0x10] = s0
 23598: 7b 16 08                 u64 [sp + 0x8] = s1
 23601: 57 09 5a                 jump @1439 if a2 <s 0
      :                          @1430
 23604: 51 09 2f                 jump @1436 if a2 == 0
      :                          @1431
 23607: 33 02 80 00 03           t0 = 0x30080
 23612: 95 2a 00 10              a3 = t0 + 0x1000
 23616: 01                       fallthrough
      :                          @1432
 23617: 82 ac                    a5 = u64 [a3]
 23619: c8 9c 06                 s1 = a5 + a2
 23622: ac c6 7f a4              jump @24 if s1 <u a5
      :                          @1433
 23626: 98 6b 0c                 a4 = s1 >> 0xc
 23629: 52 0b 78 a4              jump @24 if a4 != 0
      :                          @1434
 23633: 82 ab                    a4 = u64 [a3]
 23635: ab cb ee                 jump @1432 if a4 != a5
      :                          @1435
 23638: 7b a6                    u64 [a3] = s1
 23640: 7b 17                    u64 [sp] = a0
 23642: c9 62 07                 a0 = t0 - s1
 23645: 95 75 00 10              s0 = a0 + 0x1000
 23649: 28 08                    jump @1437
      :                          @1436
 23651: 7b 17                    u64 [sp] = a0
 23653: 33 05 01                 s0 = 0x1
 23656: 01                       fallthrough
      :                          @1437
 23657: 64 57                    a0 = s0
 23659: 64 96                    s1 = a2
 23661: 50 20 0e 01 c6 2d        ra = 270, jump @1890
      :                          @1438 [@dyn 135]
 23667: 82 17                    a0 = u64 [sp]
 23669: 7b 76                    u64 [a0] = s1
 23671: 7b 75 08                 u64 [a0 + 0x8] = s0
 23674: 7b 76 10                 u64 [a0 + 0x10] = s1
 23677: 82 10 18                 ra = u64 [sp + 0x18]
 23680: 82 15 10                 s0 = u64 [sp + 0x10]
 23683: 82 16 08                 s1 = u64 [sp + 0x8]
 23686: 95 11 20                 sp = sp + 0x20
 23689: 32 00                    ret
      :                          @1439
 23691: 00                       trap
      :                          @1440
 23692: 95 11 08 ff              sp = sp + 0xffffffffffffff08
 23696: 7b 10 f0 00              u64 [sp + 0xf0] = ra
 23700: 7b 15 e8 00              u64 [sp + 0xe8] = s0
 23704: 7b 16 e0 00              u64 [sp + 0xe0] = s1
 23708: 7b 18 a0 00              u64 [sp + 0xa0] = a1
 23712: 82 88 18                 a1 = u64 [a1 + 0x18]
 23715: 64 72                    t0 = a0
 23717: 33 03 04                 t1 = 0x4
 23720: 51 08 1a                 jump @1443 if a1 == 0
      :                          @1441
 23723: 33 08                    a1 = 0
 23725: 33 07 03                 a0 = 0x3
 23728: 33 06 04                 s1 = 0x4
 23731: 82 29 18                 a2 = u64 [t0 + 0x18]
 23734: 7b 12 98 00              u64 [sp + 0x98] = t0
 23738: 51 09 24                 jump @1445 if a2 == 0
      :                          @1442
 23741: 33 09                    a2 = 0
 23743: 28 be 00                 jump @1460
      :                          @1443
 23746: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 23750: 82 77 10                 a0 = u64 [a0 + 0x10]
 23753: 51 07 22                 jump @1447 if a0 == 0
      :                          @1444
 23756: 33 08                    a1 = 0
 23758: 33 06 03                 s1 = 0x3
 23761: 33 07 02                 a0 = 0x2
 23764: 82 29 18                 a2 = u64 [t0 + 0x18]
 23767: 7b 12 98 00              u64 [sp + 0x98] = t0
 23771: 52 09 e2                 jump @1442 if a2 != 0
      :                          @1445
 23774: 82 29 10                 a2 = u64 [t0 + 0x10]
 23777: 51 09 29                 jump @1450 if a2 == 0
      :                          @1446
 23780: 33 09                    a2 = 0
 23782: 33 03 03                 t1 = 0x3
 23785: 28 58                    jump @1456
      :                          @1447
 23787: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 23791: 82 77 08                 a0 = u64 [a0 + 0x8]
 23794: 51 07 25                 jump @1452 if a0 == 0
      :                          @1448
 23797: 33 06 02                 s1 = 0x2
 23800: 33 07 01                 a0 = 0x1
 23803: 33 08 01                 a1 = 0x1
 23806: 82 29 18                 a2 = u64 [t0 + 0x18]
 23809: 7b 12 98 00              u64 [sp + 0x98] = t0
 23813: 52 09 b8                 jump @1442 if a2 != 0
      :                          @1449
 23816: 28 d6                    jump @1445
      :                          @1450
 23818: 82 29 08                 a2 = u64 [t0 + 0x8]
 23821: 51 09 28                 jump @1455 if a2 == 0
      :                          @1451
 23824: 33 09                    a2 = 0
 23826: 33 03 02                 t1 = 0x2
 23829: 28 2c                    jump @1456
      :                          @1452
 23831: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 23835: 82 77                    a0 = u64 [a0]
 23837: 51 07 c7 0b              jump @1548 if a0 == 0
      :                          @1453
 23841: 33 07                    a0 = 0
 23843: 33 08 01                 a1 = 0x1
 23846: 33 06 01                 s1 = 0x1
 23849: 82 29 18                 a2 = u64 [t0 + 0x18]
 23852: 7b 12 98 00              u64 [sp + 0x98] = t0
 23856: 52 09 8d                 jump @1442 if a2 != 0
      :                          @1454
 23859: 28 ab                    jump @1445
      :                          @1455
 23861: 82 2a                    a3 = u64 [t0]
 23863: 33 09 01                 a2 = 0x1
 23866: 33 03 01                 t1 = 0x1
 23869: 51 0a 95 0b              jump @1541 if a3 == 0
      :                          @1456
 23873: ae 63 3c                 jump @1460 if t1 >=u s1
      :                          @1457
 23876: 97 35 03                 s0 = t1 << 0x3
 23879: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 23883: 7b 13 b0 00              u64 [sp + 0xb0] = t1
 23887: 64 28                    a1 = t0
 23889: 64 59                    a2 = s0
 23891: 50 20 10 01 e0 2c        ra = 272, jump @1890
      :                          @1458 [@dyn 136]
 23897: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 23901: c9 76 09                 a2 = s1 - a0
 23904: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 23908: c8 57 07                 a0 = a0 + s0
 23911: 97 99 03                 a2 = a2 << 0x3
 23914: 33 08                    a1 = 0
 23916: 50 20 12 01 0e 2f        ra = 274, jump @1942
      :                          @1459 [@dyn 137]
 23922: 82 17 98 00              a0 = u64 [sp + 0x98]
 23926: 33 08                    a1 = 0
 23928: 64 59                    a2 = s0
 23930: 28 07 05                 jump @1515
      :                          @1460
 23933: 7b 13 b0 00              u64 [sp + 0xb0] = t1
 23937: 51 08 33                 jump @1466 if a1 == 0
      :                          @1461
 23940: 51 16 02 10 05           jump @1516 if s1 == 2
      :                          @1462
 23945: 52 16 01 59 0b           jump @1546 if s1 != 1
      :                          @1463
 23950: 64 38                    a1 = t1
 23952: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 23956: 82 73                    t1 = u64 [a0]
 23958: 51 09 0d 06              jump @1521 if a2 == 0
      :                          @1464
 23962: 51 03 49 0b              jump @1547 if t1 == 0
      :                          @1465
 23966: 82 27                    a0 = u64 [t0]
 23968: cb 37 09                 a2 = a0 /u t1
 23971: ca 39 08                 a1 = a2 * t1
 23974: c9 87 08                 a1 = a0 - a1
 23977: 7b 29                    u64 [t0] = a2
 23979: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 23983: 7b 78                    u64 [a0] = a1
 23985: 28 0f 0b                 jump @1540
      :                          @1466
 23988: 95 69 fe                 a2 = s1 + 0xfffffffffffffffe
 23991: 97 78 03                 a1 = a0 << 0x3
 23994: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 23998: 7b 18                    u64 [sp] = a1
 24000: c8 78 08                 a1 = a1 + a0
 24003: 82 8b                    a4 = u64 [a1]
 24005: 7b 19 18                 u64 [sp + 0x18] = a2
 24008: 97 98 03                 a1 = a2 << 0x3
 24011: c8 87 07                 a0 = a0 + a1
 24014: 82 75                    s0 = u64 [a0]
 24016: 68 ba                    a3 = clz a4
 24018: 97 64 03                 t2 = s1 << 0x3
 24021: 85 a8 ff                 a1 = a3 ^ 0xffffffffffffffff
 24024: 95 a9 c0                 a2 = a3 + 0xffffffffffffffc0
 24027: 7b 1a a8 00              u64 [sp + 0xa8] = a3
 24031: 7b 19 58                 u64 [sp + 0x58] = a2
 24034: 7b 18 60                 u64 [sp + 0x60] = a1
 24037: 51 0a 30                 jump @1468 if a3 == 0
      :                          @1467
 24040: 98 57 01                 a0 = s0 >> 0x1
 24043: d0 87 07                 a0 = a0 >> a1
 24046: cf ab 08                 a1 = a4 << a3
 24049: d4 78 0b                 a4 = a1 | a0
 24052: cf a5 08                 a1 = s0 << a3
 24055: 89 97                    a0 = a2 <s 0
 24057: da 78 0b                 a4 = a1 if a0 == 0
 24060: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 24064: c8 47 07                 a0 = a0 + t2
 24067: 82 77 e8                 a0 = u64 [a0 + 0xffffffffffffffe8]
 24070: 99 99 3f                 a2 = a2 >>a 0x3f
 24073: d2 98 08                 a1 = a1 & a2
 24076: 8d a9                    i32 a2 = -a3
 24078: d0 97 07                 a0 = a0 >> a2
 24081: d4 78 05                 s0 = a1 | a0
 24084: 01                       fallthrough
      :                          @1468
 24085: 97 b7 3f                 a0 = a4 << 0x3f
 24088: 99 72 3f                 t0 = a0 >>a 0x3f
 24091: 98 b8 18                 a1 = a4 >> 0x18
 24094: 98 b9 37                 a2 = a4 >> 0x37
 24097: 97 99 01                 a2 = a2 << 0x1
 24100: 33 0a 34 03 01           a3 = 0x10334
 24105: c8 a9 09                 a2 = a2 + a3
 24108: 7e 99 00 fe              a2 = u16 [a2 + 0xfffffffffffffe00]
 24112: 95 88 01                 a1 = a1 + 0x1
 24115: 95 ba 01                 a3 = a4 + 0x1
 24118: 98 aa 01                 a3 = a3 >> 0x1
 24121: 97 9c 0b                 a5 = a2 << 0xb
 24124: ca 99 09                 a2 = a2 * a2
 24127: ca 89 09                 a2 = a2 * a1
 24130: 98 99 28                 a2 = a2 >> 0x28
 24133: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
 24136: c8 c9 09                 a2 = a2 + a5
 24139: 97 97 0d                 a0 = a2 << 0xd
 24142: ca 89 08                 a1 = a2 * a1
 24145: 14 0c 00 00 00 00 00 00 00 10 a5 = 0x1000000000000000
 24155: c9 8c 0c                 a5 = a5 - a1
 24158: ca 9c 08                 a1 = a5 * a2
 24161: 98 88 2f                 a1 = a1 >> 0x2f
 24164: c8 78 08                 a1 = a1 + a0
 24167: 98 89 01                 a2 = a1 >> 0x1
 24170: d2 92 07                 a0 = t0 & a2
 24173: ca a8 09                 a2 = a1 * a3
 24176: c9 97 07                 a0 = a0 - a2
 24179: d6 87 07                 a0 = a0 mulhu a1
 24182: 98 77 01                 a0 = a0 >> 0x1
 24185: 97 88 1f                 a1 = a1 << 0x1f
 24188: c8 87 07                 a0 = a0 + a1
 24191: 95 78 01                 a1 = a0 + 0x1
 24194: 88 89 01                 a2 = a1 <u 0x1
 24197: d6 b8 08                 a1 = a1 mulhu a4
 24200: ca b9 09                 a2 = a2 * a4
 24203: c8 b8 08                 a1 = a1 + a4
 24206: c8 98 08                 a1 = a1 + a2
 24209: c9 87 0c                 a5 = a0 - a1
 24212: ca bc 08                 a1 = a5 * a4
 24215: c8 58 07                 a0 = a1 + s0
 24218: ae 87 17                 jump @1470 if a0 >=u a1
      :                          @1469
 24221: d8 b7 08                 a1 = a0 <u a4
 24224: 64 b9                    a2 = a4
 24226: 94 89                    a2 = 0 if a1 != 0
 24228: c8 c8 08                 a1 = a1 + a5
 24231: 95 8c fe                 a5 = a1 + 0xfffffffffffffffe
 24234: c8 b9 09                 a2 = a2 + a4
 24237: c9 97 07                 a0 = a0 - a2
 24240: 01                       fallthrough
      :                          @1470
 24241: d6 c5 08                 a1 = s0 mulhu a5
 24244: c8 78 08                 a1 = a1 + a0
 24247: 7b 1b 90 00              u64 [sp + 0x90] = a4
 24251: 82 1a a8 00              a3 = u64 [sp + 0xa8]
 24255: 7b 15 88 00              u64 [sp + 0x88] = s0
 24259: ae 78 23                 jump @1472 if a1 >=u a0
      :                          @1471
 24262: 49 11 30                 u64 [sp + 48] = 0
 24265: ca c5 07                 a0 = s0 * a5
 24268: 84 77 ff                 a0 = a0 & 0xffffffffffffffff
 24271: d3 b8 09                 a2 = a1 ^ a4
 24274: d8 b8 08                 a1 = a1 <u a4
 24277: d8 57 07                 a0 = a0 <u s0
 24280: db 98 07                 a0 = a1 if a2 != 0
 24283: c8 c7 07                 a0 = a0 + a5
 24286: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 24289: 7b 17 38                 u64 [sp + 0x38] = a0
 24292: 28 09                    jump @1473
      :                          @1472
 24294: 7b 1c 38                 u64 [sp + 0x38] = a5
 24297: 49 11 30                 u64 [sp + 48] = 0
 24300: 01                       fallthrough
      :                          @1473
 24301: 49 21 d8 00              u64 [sp + 216] = 0
 24305: 49 11 40                 u64 [sp + 64] = 0
 24308: c9 63 09                 a2 = t1 - s1
 24311: 84 a7 3f                 a0 = a3 & 0x3f
 24314: 7b 17 50                 u64 [sp + 0x50] = a0
 24317: 8d a7                    i32 a0 = -a3
 24319: 84 77 3f                 a0 = a0 & 0x3f
 24322: 7b 17 48                 u64 [sp + 0x48] = a0
 24325: 97 37 03                 a0 = t1 << 0x3
 24328: 7b 17 70                 u64 [sp + 0x70] = a0
 24331: c9 47 02                 t0 = a0 - t2
 24334: 82 18 98 00              a1 = u64 [sp + 0x98]
 24338: c8 28 00                 ra = a1 + t0
 24341: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 24345: 7b 14 10                 u64 [sp + 0x10] = t2
 24348: c8 47 07                 a0 = a0 + t2
 24351: 7b 17 20                 u64 [sp + 0x20] = a0
 24354: 7b 19 08                 u64 [sp + 0x8] = a2
 24357: 64 97                    a0 = a2
 24359: 7b 16 68                 u64 [sp + 0x68] = s1
 24362: 28 25                    jump @1476
      :                          @1474
 24364: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 24368: 7b 7b                    u64 [a0] = a4
 24370: 01                       fallthrough
      :                          @1475
 24371: 82 18 98 00              a1 = u64 [sp + 0x98]
 24375: 95 47 ff                 a0 = t2 + 0xffffffffffffffff
 24378: 95 00 f8                 ra = ra + 0xfffffffffffffff8
 24381: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 24385: 95 99 01                 a2 = a2 + 0x1
 24388: 7b 19 d8 00              u64 [sp + 0xd8] = a2
 24392: 82 16 68                 s1 = u64 [sp + 0x68]
 24395: 51 04 e8 02              jump @1510 if t2 == 0
      :                          @1476
 24399: 64 7a                    a3 = a0
 24401: c8 67 09                 a2 = a0 + s1
 24404: 97 97 03                 a0 = a2 << 0x3
 24407: c8 87 07                 a0 = a0 + a1
 24410: ae 39 07                 jump @1478 if a2 >=u t1
      :                          @1477
 24413: 82 7c                    a5 = u64 [a0]
 24415: 28 05                    jump @1479
      :                          @1478
 24417: 33 0c                    a5 = 0
 24419: 01                       fallthrough
      :                          @1479
 24420: 82 12 90 00              t0 = u64 [sp + 0x90]
 24424: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 24428: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
 24431: ae 3b 71 09              jump @1544 if a4 >=u t1
      :                          @1480
 24435: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 24439: 7b 10 c0 00              u64 [sp + 0xc0] = ra
 24443: 7b 1a c8 00              u64 [sp + 0xc8] = a3
 24447: 95 94 fe                 t2 = a2 + 0xfffffffffffffffe
 24450: ae 34 5d 09              jump @1543 if t2 >=u t1
      :                          @1481
 24454: 97 bb 03                 a4 = a4 << 0x3
 24457: c8 8b 0b                 a4 = a4 + a1
 24460: 7b 1b 80 00              u64 [sp + 0x80] = a4
 24464: 82 b6                    s1 = u64 [a4]
 24466: 97 47 03                 a0 = t2 << 0x3
 24469: c8 87 07                 a0 = a0 + a1
 24472: 7b 17 78                 u64 [sp + 0x78] = a0
 24475: 82 70                    ra = u64 [a0]
 24477: 7b 19 d0 00              u64 [sp + 0xd0] = a2
 24481: 51 05 48                 jump @1484 if s0 == 0
      :                          @1482
 24484: 95 9b fd                 a4 = a2 + 0xfffffffffffffffd
 24487: ae 3b 3a 09              jump @1545 if a4 >=u t1
      :                          @1483
 24491: 82 17 50                 a0 = u64 [sp + 0x50]
 24494: cf 70 0a                 a3 = ra << a0
 24497: 98 69 01                 a2 = s1 >> 0x1
 24500: 82 17 60                 a0 = u64 [sp + 0x60]
 24503: d0 79 09                 a2 = a2 >> a0
 24506: cf 5c 0c                 a5 = a5 << s0
 24509: d4 9c 0c                 a5 = a5 | a2
 24512: cf 56 09                 a2 = s1 << s0
 24515: 82 17 58                 a0 = u64 [sp + 0x58]
 24518: 89 75                    s0 = a0 <s 0
 24520: da 59 0c                 a5 = a2 if s0 == 0
 24523: 99 75 3f                 s0 = a0 >>a 0x3f
 24526: 97 bb 03                 a4 = a4 << 0x3
 24529: c8 8b 0b                 a4 = a4 + a1
 24532: 82 bb                    a4 = u64 [a4]
 24534: d2 59 09                 a2 = a2 & s0
 24537: 82 17 48                 a0 = u64 [sp + 0x48]
 24540: d0 70 06                 s1 = ra >> a0
 24543: d4 96 06                 s1 = s1 | a2
 24546: d0 7b 09                 a2 = a4 >> a0
 24549: d4 a9 00                 ra = a2 | a3
 24552: 01                       fallthrough
      :                          @1484
 24553: 82 17 d8 00              a0 = u64 [sp + 0xd8]
 24557: 97 77 03                 a0 = a0 << 0x3
 24560: 82 15 70                 s0 = u64 [sp + 0x70]
 24563: c9 75 05                 s0 = s0 - a0
 24566: 82 13 88 00              t1 = u64 [sp + 0x88]
 24570: d8 36 07                 a0 = s1 <u t1
 24573: d3 2c 09                 a2 = a5 ^ t0
 24576: d8 2c 0b                 a4 = a5 <u t0
 24579: da 97 0b                 a4 = a0 if a2 == 0
 24582: 64 2a                    a3 = t0
 24584: c8 58 02                 t0 = a1 + s0
 24587: 51 0b dd 00              jump @1493 if a4 == 0
      :                          @1485
 24591: 82 17 30                 a0 = u64 [sp + 0x30]
 24594: ca 7c 07                 a0 = a5 * a0
 24597: 82 19 38                 a2 = u64 [sp + 0x38]
 24600: d6 9c 08                 a1 = a5 mulhu a2
 24603: c8 87 07                 a0 = a0 + a1
 24606: c8 c7 07                 a0 = a0 + a5
 24609: ca 9c 08                 a1 = a5 * a2
 24612: c8 68 09                 a2 = a1 + s1
 24615: d8 89 08                 a1 = a2 <u a1
 24618: c8 87 07                 a0 = a0 + a1
 24621: ca a7 08                 a1 = a0 * a3
 24624: c9 86 06                 s1 = s1 - a1
 24627: d6 37 08                 a1 = a0 mulhu t1
 24630: ca 37 0b                 a4 = a0 * t1
 24633: d8 b0 0c                 a5 = ra <u a4
 24636: c8 c8 08                 a1 = a1 + a5
 24639: c9 b0 0b                 a4 = ra - a4
 24642: c9 86 06                 s1 = s1 - a1
 24645: d8 3b 08                 a1 = a4 <u t1
 24648: c8 a8 08                 a1 = a1 + a3
 24651: c9 86 0c                 a5 = s1 - a1
 24654: d8 9c 08                 a1 = a5 <u a2
 24657: c8 78 09                 a2 = a1 + a0
 24660: da 86 0c                 a5 = s1 if a1 == 0
 24663: 64 37                    a0 = t1
 24665: 93 87                    a0 = 0 if a1 == 0
 24667: c9 7b 06                 s1 = a4 - a0
 24670: d3 ac 0b                 a4 = a5 ^ a3
 24673: d8 ac 05                 s0 = a5 <u a3
 24676: d8 36 0a                 a3 = s1 <u t1
 24679: db b5 0a                 a3 = s0 if a4 != 0
 24682: 85 ab 01                 a4 = a3 ^ 0x1
 24685: c8 9b 0b                 a4 = a4 + a2
 24688: 51 0b cb 00              jump @1497 if a4 == 0
      :                          @1486
 24692: 82 18 a8 00              a1 = u64 [sp + 0xa8]
 24696: 82 10 c0 00              ra = u64 [sp + 0xc0]
 24700: 51 08 ca 00              jump @1498 if a1 == 0
      :                          @1487
 24704: 33 03 ff                 t1 = 0xffffffffffffffff
 24707: 82 14 c8 00              t2 = u64 [sp + 0xc8]
 24711: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 24715: ac 47 f0 d4              jump @1068 if a0 <u t2
      :                          @1488
 24719: 33 0a                    a3 = 0
 24721: 33 08                    a1 = 0
 24723: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 24727: 64 0c                    a5 = ra
 24729: 01                       fallthrough
      :                          @1489
 24730: 82 79                    a2 = u64 [a0]
 24732: d6 b9 05                 s0 = a2 mulhu a4
 24735: ca b9 09                 a2 = a2 * a4
 24738: c8 a9 06                 s1 = a2 + a3
 24741: d8 96 0a                 a3 = s1 <u a2
 24744: c8 5a 0a                 a3 = a3 + s0
 24747: 82 c9                    a2 = u64 [a5]
 24749: d2 36 05                 s0 = s1 & t1
 24752: c8 85 06                 s1 = s0 + a1
 24755: d8 56 08                 a1 = s1 <u s0
 24758: d8 69 05                 s0 = a2 <u s1
 24761: c8 58 08                 a1 = a1 + s0
 24764: c9 69 09                 a2 = a2 - s1
 24767: 7b c9                    u64 [a5] = a2
 24769: 95 cc 08                 a5 = a5 + 0x8
 24772: 95 77 08                 a0 = a0 + 0x8
 24775: ab 2c d3                 jump @1489 if a5 != t0
      :                          @1490
 24778: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 24782: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 24786: ae 79 16 01              jump @1504 if a2 >=u a0
      :                          @1491
 24790: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 24794: 82 77                    a0 = u64 [a0]
 24796: 9a 88                    a1 = -a1
 24798: c9 8a 0a                 a3 = a3 - a1
 24801: ab 7a 0f 01              jump @1505 if a3 != a0
      :                          @1492
 24805: 28 3c 01                 jump @1508
      :                          @1493
 24808: 33 03 ff                 t1 = 0xffffffffffffffff
 24811: 82 14 c8 00              t2 = u64 [sp + 0xc8]
 24815: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 24819: ac 47 88 d4              jump @1068 if a0 <u t2
      :                          @1494
 24823: 33 08                    a1 = 0
 24825: 33 0c                    a5 = 0
 24827: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 24831: 82 10 c0 00              ra = u64 [sp + 0xc0]
 24835: 64 0a                    a3 = ra
 24837: 01                       fallthrough
      :                          @1495
 24838: 82 76                    s1 = u64 [a0]
 24840: 33 0b ff                 a4 = 0xffffffffffffffff
 24843: d6 b6 09                 a2 = s1 mulhu a4
 24846: 9a 65                    s0 = -s1
 24848: c9 68 06                 s1 = a1 - s1
 24851: d8 56 08                 a1 = s1 <u s0
 24854: c8 98 08                 a1 = a1 + a2
 24857: 82 a9                    a2 = u64 [a3]
 24859: d2 36 05                 s0 = s1 & t1
 24862: c8 c5 06                 s1 = s0 + a5
 24865: d8 56 0c                 a5 = s1 <u s0
 24868: d8 69 05                 s0 = a2 <u s1
 24871: c8 5c 0c                 a5 = a5 + s0
 24874: c9 69 09                 a2 = a2 - s1
 24877: 7b a9                    u64 [a3] = a2
 24879: 95 aa 08                 a3 = a3 + 0x8
 24882: 95 77 08                 a0 = a0 + 0x8
 24885: ab 2a d1                 jump @1495 if a3 != t0
      :                          @1496
 24888: 28 e9 00                 jump @1508
      :                          @1497
 24891: 82 14 c8 00              t2 = u64 [sp + 0xc8]
 24895: 82 10 c0 00              ra = u64 [sp + 0xc0]
 24899: 28 de 00                 jump @1508
      :                          @1498
 24902: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 24906: ac 74 31 d4              jump @1068 if t2 <u a0
      :                          @1499
 24910: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 24914: ac 48 8c 07              jump @1542 if a1 <u t2
      :                          @1500
 24918: 64 02                    t0 = ra
 24920: 33 00                    ra = 0
 24922: 64 65                    s0 = s1
 24924: 33 06                    s1 = 0
 24926: 82 19 90 00              a2 = u64 [sp + 0x90]
 24930: 94 a9                    a2 = 0 if a3 != 0
 24932: 82 18 88 00              a1 = u64 [sp + 0x88]
 24936: 94 a8                    a1 = 0 if a3 != 0
 24938: d8 85 07                 a0 = s0 <u a1
 24941: c9 9c 0c                 a5 = a5 - a2
 24944: c9 7c 0c                 a5 = a5 - a0
 24947: 7b 1c 28                 u64 [sp + 0x28] = a5
 24950: c9 85 04                 t2 = s0 - a1
 24953: 82 17 18                 a0 = u64 [sp + 0x18]
 24956: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 24960: 64 2a                    a3 = t0
 24962: 33 03 ff                 t1 = 0xffffffffffffffff
 24965: 01                       fallthrough
      :                          @1501
 24966: 82 89                    a2 = u64 [a1]
 24968: d6 b9 05                 s0 = a2 mulhu a4
 24971: ca b9 09                 a2 = a2 * a4
 24974: c8 09 02                 t0 = a2 + ra
 24977: d8 92 00                 ra = t0 <u a2
 24980: c8 50 00                 ra = ra + s0
 24983: 82 a9                    a2 = u64 [a3]
 24985: d2 32 0c                 a5 = t0 & t1
 24988: c8 6c 05                 s0 = a5 + s1
 24991: d8 c5 06                 s1 = s0 <u a5
 24994: d8 59 0c                 a5 = a2 <u s0
 24997: c8 c6 06                 s1 = s1 + a5
 25000: c9 59 09                 a2 = a2 - s0
 25003: 7b a9                    u64 [a3] = a2
 25005: 95 aa 08                 a3 = a3 + 0x8
 25008: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 25011: 95 88 08                 a1 = a1 + 0x8
 25014: 52 07 d0                 jump @1501 if a0 != 0
      :                          @1502
 25017: 9a 67                    a0 = -s1
 25019: c9 70 07                 a0 = ra - a0
 25022: d8 74 08                 a1 = t2 <u a0
 25025: 82 1a 28                 a3 = u64 [sp + 0x28]
 25028: c9 8a 09                 a2 = a3 - a1
 25031: 94 a8                    a1 = 0 if a3 != 0
 25033: c9 74 07                 a0 = t2 - a0
 25036: 82 1a 78                 a3 = u64 [sp + 0x78]
 25039: 7b a7                    u64 [a3] = a0
 25041: 82 17 80 00              a0 = u64 [sp + 0x80]
 25045: 7b 79                    u64 [a0] = a2
 25047: 82 14 c8 00              t2 = u64 [sp + 0xc8]
 25051: 82 10 c0 00              ra = u64 [sp + 0xc0]
 25055: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 25059: 52 08 0d                 jump @1505 if a1 != 0
      :                          @1503
 25062: 28 3b                    jump @1508
      :                          @1504
 25064: 9a 88                    a1 = -a1
 25066: c9 8a 0a                 a3 = a3 - a1
 25069: 51 0a 34                 jump @1508 if a3 == 0
      :                          @1505
 25072: 82 16 20                 s1 = u64 [sp + 0x20]
 25075: ac 49 88 d3              jump @1068 if a2 <u t2
      :                          @1506
 25079: 33 0a                    a3 = 0
 25081: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 25084: 64 07                    a0 = ra
 25086: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 25090: 01                       fallthrough
      :                          @1507
 25091: 82 79                    a2 = u64 [a0]
 25093: 82 8c                    a5 = u64 [a1]
 25095: c8 9a 0a                 a3 = a3 + a2
 25098: d8 9a 09                 a2 = a3 <u a2
 25101: c8 ac 0c                 a5 = a5 + a3
 25104: d8 ac 0a                 a3 = a5 <u a3
 25107: c8 9a 0a                 a3 = a3 + a2
 25110: 7b 7c                    u64 [a0] = a5
 25112: 95 88 08                 a1 = a1 + 0x8
 25115: 95 77 08                 a0 = a0 + 0x8
 25118: ab 68 e5                 jump @1507 if a1 != s1
      :                          @1508
 25121: 82 13 b0 00              t1 = u64 [sp + 0xb0]
 25125: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 25129: ac 37 03 fd              jump @1474 if a0 <u t1
      :                          @1509
 25133: 7b 1b 40                 u64 [sp + 0x40] = a4
 25136: 28 03 fd                 jump @1475
      :                          @1510
 25139: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 25143: 82 16 10                 s1 = u64 [sp + 0x10]
 25146: 64 69                    a2 = s1
 25148: 50 20 14 01 f7 27        ra = 276, jump @1890
      :                          @1511 [@dyn 138]
 25154: 82 18 98 00              a1 = u64 [sp + 0x98]
 25158: c8 68 08                 a1 = a1 + s1
 25161: 82 16 08                 s1 = u64 [sp + 0x8]
 25164: 97 65 03                 s0 = s1 << 0x3
 25167: 82 17 98 00              a0 = u64 [sp + 0x98]
 25171: 64 59                    a2 = s0
 25173: 50 20 16 01 98 28        ra = 278, jump @1907
      :                          @1512 [@dyn 139]
 25179: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 25183: 82 19 98 00              a2 = u64 [sp + 0x98]
 25187: c8 59 0a                 a3 = a2 + s0
 25190: 95 67 01                 a0 = s1 + 0x1
 25193: 82 1b 40                 a4 = u64 [sp + 0x40]
 25196: 7b ab                    u64 [a3] = a4
 25198: ac 78 0d d3              jump @1068 if a1 <u a0
      :                          @1513
 25202: aa 87 4e 06              jump @1540 if a0 == a1
      :                          @1514
 25206: 97 77 03                 a0 = a0 << 0x3
 25209: c8 97 07                 a0 = a0 + a2
 25212: 33 08                    a1 = 0
 25214: 82 19                    a2 = u64 [sp]
 25216: 01                       fallthrough
      :                          @1515
 25217: 82 10 f0 00              ra = u64 [sp + 0xf0]
 25221: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 25225: 82 16 e0 00              s1 = u64 [sp + 0xe0]
 25229: 95 11 f8 00              sp = sp + 0xf8
 25233: 28 e9 29                 jump @1942
      :                          @1516
 25236: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 25240: 82 84 08                 t2 = u64 [a1 + 0x8]
 25243: 82 83                    t1 = u64 [a1]
 25245: 68 46                    s1 = clz t2
 25247: 14 05 00 00 00 00 00 00 00 10 s0 = 0x1000000000000000
 25257: 51 06 4b 02              jump @1525 if s1 == 0
      :                          @1517
 25261: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 25264: 98 37 01                 a0 = t1 >> 0x1
 25267: 7b 18 80 00              u64 [sp + 0x80] = a1
 25271: d0 87 07                 a0 = a0 >> a1
 25274: cf 64 0a                 a3 = t2 << s1
 25277: d4 7a 0a                 a3 = a3 | a0
 25280: cf 63 08                 a1 = t1 << s1
 25283: 95 69 c0                 a2 = s1 + 0xffffffffffffffc0
 25286: 89 97                    a0 = a2 <s 0
 25288: 7b 17 78                 u64 [sp + 0x78] = a0
 25291: da 78 0a                 a3 = a1 if a0 == 0
 25294: 98 a7 37                 a0 = a3 >> 0x37
 25297: 97 77 01                 a0 = a0 << 0x1
 25300: 33 0b 34 03 01           a4 = 0x10334
 25305: c8 b7 07                 a0 = a0 + a4
 25308: 7e 77 00 fe              a0 = u16 [a0 + 0xfffffffffffffe00]
 25312: 98 ab 18                 a4 = a3 >> 0x18
 25315: 95 bb 01                 a4 = a4 + 0x1
 25318: ca 7b 0c                 a5 = a4 * a0
 25321: ca 7c 0c                 a5 = a5 * a0
 25324: 97 77 0b                 a0 = a0 << 0xb
 25327: 98 cc 28                 a5 = a5 >> 0x28
 25330: 85 cc ff                 a5 = a5 ^ 0xffffffffffffffff
 25333: c8 c7 07                 a0 = a0 + a5
 25336: 99 94 3f                 t2 = a2 >>a 0x3f
 25339: d2 84 03                 t1 = t2 & a1
 25342: ca b7 08                 a1 = a0 * a4
 25345: c9 85 05                 s0 = s0 - a1
 25348: 97 a8 3f                 a1 = a3 << 0x3f
 25351: 99 88 3f                 a1 = a1 >>a 0x3f
 25354: ca 75 09                 a2 = s0 * a0
 25357: 97 77 0d                 a0 = a0 << 0xd
 25360: 98 99 2f                 a2 = a2 >> 0x2f
 25363: c8 97 07                 a0 = a0 + a2
 25366: 98 79 01                 a2 = a0 >> 0x1
 25369: d2 98 08                 a1 = a1 & a2
 25372: 95 a9 01                 a2 = a3 + 0x1
 25375: 98 99 01                 a2 = a2 >> 0x1
 25378: ca 97 09                 a2 = a0 * a2
 25381: c9 98 08                 a1 = a1 - a2
 25384: d6 78 08                 a1 = a1 mulhu a0
 25387: 98 88 01                 a1 = a1 >> 0x1
 25390: 97 77 1f                 a0 = a0 << 0x1f
 25393: c8 87 07                 a0 = a0 + a1
 25396: 95 78 01                 a1 = a0 + 0x1
 25399: 88 89 01                 a2 = a1 <u 0x1
 25402: d6 a8 08                 a1 = a1 mulhu a3
 25405: ca a9 09                 a2 = a2 * a3
 25408: c8 a8 08                 a1 = a1 + a3
 25411: c8 98 08                 a1 = a1 + a2
 25414: c9 87 0b                 a4 = a0 - a1
 25417: ca ab 08                 a1 = a4 * a3
 25420: c8 38 07                 a0 = a1 + t1
 25423: ae 87 17                 jump @1519 if a0 >=u a1
      :                          @1518
 25426: d8 a7 08                 a1 = a0 <u a3
 25429: 64 a9                    a2 = a3
 25431: 94 89                    a2 = 0 if a1 != 0
 25433: c8 b8 08                 a1 = a1 + a4
 25436: 95 8b fe                 a4 = a1 + 0xfffffffffffffffe
 25439: c8 a9 09                 a2 = a2 + a3
 25442: c9 97 07                 a0 = a0 - a2
 25445: 01                       fallthrough
      :                          @1519
 25446: 82 10 b0 00              ra = u64 [sp + 0xb0]
 25450: 84 3c fe                 a5 = t1 & 0xfffffffffffffffe
 25453: d6 bc 09                 a2 = a5 mulhu a4
 25456: c8 79 09                 a2 = a2 + a0
 25459: 7b 14 70                 u64 [sp + 0x70] = t2
 25462: 7b 1a d8 00              u64 [sp + 0xd8] = a3
 25466: 7b 1c d0 00              u64 [sp + 0xd0] = a5
 25470: ae 79 d5 02              jump @1532 if a2 >=u a0
      :                          @1520
 25474: 33 05                    s0 = 0
 25476: 64 b8                    a1 = a4
 25478: ca bc 0b                 a4 = a5 * a4
 25481: 84 b7 fe                 a0 = a4 & 0xfffffffffffffffe
 25484: d3 a9 0b                 a4 = a2 ^ a3
 25487: d8 a9 09                 a2 = a2 <u a3
 25490: 64 3a                    a3 = t1
 25492: d8 37 07                 a0 = a0 <u t1
 25495: db b9 07                 a0 = a2 if a4 != 0
 25498: c8 87 07                 a0 = a0 + a1
 25501: 95 7b fe                 a4 = a0 + 0xfffffffffffffffe
 25504: 28 b8 02                 jump @1533
      :                          @1521
 25507: 33 02 01                 t0 = 0x1
 25510: 68 3b                    a4 = clz t1
 25512: 14 00 00 00 00 00 00 00 00 10 ra = 0x1000000000000000
 25522: 51 0b 38 04              jump @1537 if a4 == 0
      :                          @1522
 25526: 84 b4 3f                 t2 = a4 & 0x3f
 25529: cf b3 09                 a2 = t1 << a4
 25532: 97 9c 3f                 a5 = a2 << 0x3f
 25535: 99 cc 3f                 a5 = a5 >>a 0x3f
 25538: 98 96 18                 s1 = a2 >> 0x18
 25541: 98 98 37                 a1 = a2 >> 0x37
 25544: 97 88 01                 a1 = a1 << 0x1
 25547: 33 05 34 03 01           s0 = 0x10334
 25552: c8 58 08                 a1 = a1 + s0
 25555: 7e 88 00 fe              a1 = u16 [a1 + 0xfffffffffffffe00]
 25559: 95 66 01                 s1 = s1 + 0x1
 25562: 95 97 01                 a0 = a2 + 0x1
 25565: 98 77 01                 a0 = a0 >> 0x1
 25568: 97 85 0b                 s0 = a1 << 0xb
 25571: ca 86 0a                 a3 = s1 * a1
 25574: ca 8a 08                 a1 = a3 * a1
 25577: 98 88 28                 a1 = a1 >> 0x28
 25580: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 25583: c8 58 08                 a1 = a1 + s0
 25586: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 25590: 97 8a 0d                 a3 = a1 << 0xd
 25593: ca 68 06                 s1 = a1 * s1
 25596: c9 60 06                 s1 = ra - s1
 25599: ca 86 08                 a1 = s1 * a1
 25602: 98 88 2f                 a1 = a1 >> 0x2f
 25605: c8 a8 08                 a1 = a1 + a3
 25608: 98 8a 01                 a3 = a1 >> 0x1
 25611: d2 ca 0a                 a3 = a3 & a5
 25614: ca 78 07                 a0 = a1 * a0
 25617: c9 7a 0a                 a3 = a3 - a0
 25620: d6 8a 07                 a0 = a3 mulhu a1
 25623: 98 77 01                 a0 = a0 >> 0x1
 25626: 97 88 1f                 a1 = a1 << 0x1f
 25629: c8 87 07                 a0 = a0 + a1
 25632: 95 78 01                 a1 = a0 + 0x1
 25635: 88 8a 01                 a3 = a1 <u 0x1
 25638: d6 98 08                 a1 = a1 mulhu a2
 25641: ca 9a 0a                 a3 = a3 * a2
 25644: c8 98 08                 a1 = a1 + a2
 25647: c8 a8 08                 a1 = a1 + a3
 25650: c9 87 00                 ra = a0 - a1
 25653: 97 57 03                 a0 = s0 << 0x3
 25656: 82 18 98 00              a1 = u64 [sp + 0x98]
 25660: c8 87 07                 a0 = a0 + a1
 25663: 82 78 f8                 a1 = u64 [a0 + 0xfffffffffffffff8]
 25666: 95 7c f8                 a5 = a0 + 0xfffffffffffffff8
 25669: 8d b7                    i32 a0 = -a4
 25671: 84 73 3f                 t1 = a0 & 0x3f
 25674: d0 78 06                 s1 = a1 >> a0
 25677: 01                       fallthrough
      :                          @1523
 25678: 82 c7                    a0 = u64 [a5]
 25680: 82 c8 f8                 a1 = u64 [a5 + 0xfffffffffffffff8]
 25683: cf 47 07                 a0 = a0 << t2
 25686: d0 38 08                 a1 = a1 >> t1
 25689: d4 78 08                 a1 = a1 | a0
 25692: d6 60 07                 a0 = ra mulhu s1
 25695: 64 5a                    a3 = s0
 25697: ca 62 05                 s0 = t0 * s1
 25700: c8 75 05                 s0 = s0 + a0
 25703: ca 60 06                 s1 = ra * s1
 25706: c8 86 07                 a0 = s1 + a1
 25709: d8 67 06                 s1 = a0 <u s1
 25712: c8 65 05                 s0 = s0 + s1
 25715: 95 56 01                 s1 = s0 + 0x1
 25718: ca 96 0b                 a4 = s1 * a2
 25721: c9 b8 08                 a1 = a1 - a4
 25724: d8 87 07                 a0 = a0 <u a1
 25727: 64 9b                    a4 = a2
 25729: 93 7b                    a4 = 0 if a0 == 0
 25731: c8 b8 08                 a1 = a1 + a4
 25734: da 76 05                 s0 = s1 if a0 == 0
 25737: d8 98 07                 a0 = a1 <u a2
 25740: 64 9b                    a4 = a2
 25742: 94 7b                    a4 = 0 if a0 != 0
 25744: 85 77 01                 a0 = a0 ^ 0x1
 25747: c8 57 07                 a0 = a0 + s0
 25750: 7b c7                    u64 [a5] = a0
 25752: 95 a5 ff                 s0 = a3 + 0xffffffffffffffff
 25755: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 25758: c9 b8 06                 s1 = a1 - a4
 25761: ac 52 ad                 jump @1523 if t0 <u s0
      :                          @1524
 25764: 82 15 98 00              s0 = u64 [sp + 0x98]
 25768: 82 57                    a0 = u64 [s0]
 25770: cf 47 07                 a0 = a0 << t2
 25773: d6 60 08                 a1 = ra mulhu s1
 25776: ca 62 0b                 a4 = t0 * s1
 25779: c8 b8 08                 a1 = a1 + a4
 25782: ca 60 0a                 a3 = ra * s1
 25785: c8 7a 0b                 a4 = a3 + a0
 25788: d8 ab 0a                 a3 = a4 <u a3
 25791: c8 a8 08                 a1 = a1 + a3
 25794: 95 8a 01                 a3 = a1 + 0x1
 25797: ca 9a 0c                 a5 = a3 * a2
 25800: c9 c7 07                 a0 = a0 - a5
 25803: d8 7b 0b                 a4 = a4 <u a0
 25806: 64 9c                    a5 = a2
 25808: 93 bc                    a5 = 0 if a4 == 0
 25810: c8 c7 07                 a0 = a0 + a5
 25813: da ba 08                 a1 = a3 if a4 == 0
 25816: d8 97 0a                 a3 = a0 <u a2
 25819: 85 ab 01                 a4 = a3 ^ 0x1
 25822: 94 a9                    a2 = 0 if a3 != 0
 25824: c9 97 07                 a0 = a0 - a2
 25827: c8 b8 08                 a1 = a1 + a4
 25830: 7b 58                    u64 [s0] = a1
 25832: d0 47 09                 a2 = a0 >> t2
 25835: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 25839: 7b 79                    u64 [a0] = a2
 25841: 28 cf 03                 jump @1540
      :                          @1525
 25844: 97 48 3f                 a1 = t2 << 0x3f
 25847: 99 82 3f                 t0 = a1 >>a 0x3f
 25850: 98 4b 18                 a4 = t2 >> 0x18
 25853: 98 4c 37                 a5 = t2 >> 0x37
 25856: 97 cc 01                 a5 = a5 << 0x1
 25859: 33 06 34 03 01           s1 = 0x10334
 25864: c8 6c 0c                 a5 = a5 + s1
 25867: 7e cc 00 fe              a5 = u16 [a5 + 0xfffffffffffffe00]
 25871: 95 bb 01                 a4 = a4 + 0x1
 25874: 95 4a 01                 a3 = t2 + 0x1
 25877: 98 aa 01                 a3 = a3 >> 0x1
 25880: 97 c6 0b                 s1 = a5 << 0xb
 25883: ca cb 08                 a1 = a4 * a5
 25886: ca c8 08                 a1 = a1 * a5
 25889: 98 88 28                 a1 = a1 >> 0x28
 25892: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 25895: c8 68 08                 a1 = a1 + s1
 25898: 97 8c 0d                 a5 = a1 << 0xd
 25901: ca b8 0b                 a4 = a1 * a4
 25904: c9 b5 05                 s0 = s0 - a4
 25907: ca 85 08                 a1 = s0 * a1
 25910: 98 88 2f                 a1 = a1 >> 0x2f
 25913: c8 c8 08                 a1 = a1 + a5
 25916: 98 8b 01                 a4 = a1 >> 0x1
 25919: d2 b2 0b                 a4 = t0 & a4
 25922: ca a8 0a                 a3 = a1 * a3
 25925: c9 ab 0b                 a4 = a4 - a3
 25928: d6 8b 0a                 a3 = a4 mulhu a1
 25931: 98 aa 01                 a3 = a3 >> 0x1
 25934: 97 88 1f                 a1 = a1 << 0x1f
 25937: c8 a8 08                 a1 = a1 + a3
 25940: 95 8a 01                 a3 = a1 + 0x1
 25943: 88 ab 01                 a4 = a3 <u 0x1
 25946: d6 4a 0a                 a3 = a3 mulhu t2
 25949: ca 4b 0b                 a4 = a4 * t2
 25952: c8 4a 0a                 a3 = a3 + t2
 25955: c8 ba 0a                 a3 = a3 + a4
 25958: c9 a8 02                 t0 = a1 - a3
 25961: ca 42 0b                 a4 = t0 * t2
 25964: c8 3b 08                 a1 = a4 + t1
 25967: ae b8 17                 jump @1527 if a1 >=u a4
      :                          @1526
 25970: d8 48 0b                 a4 = a1 <u t2
 25973: 64 4c                    a5 = t2
 25975: 94 bc                    a5 = 0 if a4 != 0
 25977: c8 b2 0a                 a3 = t0 + a4
 25980: 95 a2 fe                 t0 = a3 + 0xfffffffffffffffe
 25983: c8 4c 0c                 a5 = a5 + t2
 25986: c9 c8 08                 a1 = a1 - a5
 25989: 01                       fallthrough
      :                          @1527
 25990: 82 17 98 00              a0 = u64 [sp + 0x98]
 25994: d6 32 0b                 a4 = t0 mulhu t1
 25997: 33 09                    a2 = 0
 25999: c8 8b 0b                 a4 = a4 + a1
 26002: ae 8b 19                 jump @1529 if a4 >=u a1
      :                          @1528
 26005: ca 32 0c                 a5 = t0 * t1
 26008: d8 3c 0c                 a5 = a5 <u t1
 26011: d3 4b 06                 s1 = a4 ^ t2
 26014: d8 4b 0b                 a4 = a4 <u t2
 26017: da 6c 0b                 a4 = a5 if s1 == 0
 26020: c8 b2 0a                 a3 = t0 + a4
 26023: 95 a2 fe                 t0 = a3 + 0xfffffffffffffffe
 26026: 01                       fallthrough
      :                          @1529
 26027: 33 06                    s1 = 0
 26029: 33 05                    s0 = 0
 26031: 82 1c b0 00              a5 = u64 [sp + 0xb0]
 26035: 97 cc 03                 a5 = a5 << 0x3
 26038: 9a cb                    a4 = -a5
 26040: c8 7c 0c                 a5 = a5 + a0
 26043: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 26046: 49 21 d8 00              u64 [sp + 216] = 0
 26050: 01                       fallthrough
      :                          @1530
 26051: 82 c8                    a1 = u64 [a5]
 26053: ca 95 0a                 a3 = s0 * a2
 26056: d6 25 07                 a0 = s0 mulhu t0
 26059: c8 a7 07                 a0 = a0 + a3
 26062: c8 57 07                 a0 = a0 + s0
 26065: ca 25 0a                 a3 = s0 * t0
 26068: c8 6a 05                 s0 = a3 + s1
 26071: d8 a5 0a                 a3 = s0 <u a3
 26074: c8 a7 07                 a0 = a0 + a3
 26077: ca 74 0a                 a3 = t2 * a0
 26080: c9 a6 00                 ra = s1 - a3
 26083: d6 37 0a                 a3 = a0 mulhu t1
 26086: ca 37 09                 a2 = a0 * t1
 26089: 64 36                    s1 = t1
 26091: 64 43                    t1 = t2
 26093: 64 24                    t2 = t0
 26095: d8 98 02                 t0 = a1 <u a2
 26098: c8 2a 0a                 a3 = a3 + t0
 26101: 64 42                    t0 = t2
 26103: 64 34                    t2 = t1
 26105: 64 63                    t1 = s1
 26107: c9 98 08                 a1 = a1 - a2
 26110: c9 a0 06                 s1 = ra - a3
 26113: d8 38 09                 a2 = a1 <u t1
 26116: c8 49 09                 a2 = a2 + t2
 26119: c9 96 09                 a2 = s1 - a2
 26122: d8 59 0a                 a3 = a2 <u s0
 26125: c8 a7 07                 a0 = a0 + a3
 26128: da a6 09                 a2 = s1 if a3 == 0
 26131: 64 36                    s1 = t1
 26133: 93 a6                    s1 = 0 if a3 == 0
 26135: c9 68 08                 a1 = a1 - s1
 26138: d3 49 0a                 a3 = a2 ^ t2
 26141: d8 49 06                 s1 = a2 <u t2
 26144: d8 38 05                 s0 = a1 <u t1
 26147: db a6 05                 s0 = s1 if a3 != 0
 26150: 85 5a 01                 a3 = s0 ^ 0x1
 26153: c8 a7 07                 a0 = a0 + a3
 26156: 64 4a                    a3 = t2
 26158: 94 5a                    a3 = 0 if s0 != 0
 26160: 64 36                    s1 = t1
 26162: 94 56                    s1 = 0 if s0 != 0
 26164: c9 a9 09                 a2 = a2 - a3
 26167: d8 68 0a                 a3 = a1 <u s1
 26170: c9 a9 05                 s0 = a2 - a3
 26173: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 26177: c9 68 06                 s1 = a1 - s1
 26180: 7b c7                    u64 [a5] = a0
 26182: 95 bb 08                 a4 = a4 + 0x8
 26185: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 26188: 52 0b 77 ff              jump @1530 if a4 != 0
      :                          @1531
 26192: 28 8e 01                 jump @1536
      :                          @1532
 26195: 64 3a                    a3 = t1
 26197: 33 05                    s0 = 0
 26199: 01                       fallthrough
      :                          @1533
 26200: 7b 1b c0 00              u64 [sp + 0xc0] = a4
 26204: 7b 1a c8 00              u64 [sp + 0xc8] = a3
 26208: 33 03                    t1 = 0
 26210: 97 07 03                 a0 = ra << 0x3
 26213: c8 27 07                 a0 = a0 + t0
 26216: 82 72 f8                 t0 = u64 [a0 + 0xfffffffffffffff8]
 26219: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 26222: 8d 69                    i32 a2 = -s1
 26224: 84 98 3f                 a1 = a2 & 0x3f
 26227: 7b 18 90 00              u64 [sp + 0x90] = a1
 26231: d0 92 04                 t2 = t0 >> a2
 26234: 7b 16 88 00              u64 [sp + 0x88] = s1
 26238: 84 68 3f                 a1 = s1 & 0x3f
 26241: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 26245: 49 21 a8 00              u64 [sp + 168] = 0
 26249: 01                       fallthrough
      :                          @1534
 26250: 82 78                    a1 = u64 [a0]
 26252: 82 72 f8                 t0 = u64 [a0 + 0xfffffffffffffff8]
 26255: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 26259: cf 98 08                 a1 = a1 << a2
 26262: 82 19 90 00              a2 = u64 [sp + 0x90]
 26266: d0 92 0b                 a4 = t0 >> a2
 26269: d4 b8 08                 a1 = a1 | a4
 26272: ca 53 0b                 a4 = t1 * s0
 26275: 82 1a c0 00              a3 = u64 [sp + 0xc0]
 26279: d6 a3 09                 a2 = t1 mulhu a3
 26282: c8 b9 09                 a2 = a2 + a4
 26285: c8 39 09                 a2 = a2 + t1
 26288: ca a3 0b                 a4 = t1 * a3
 26291: c8 4b 03                 t1 = a4 + t2
 26294: d8 b3 0b                 a4 = t1 <u a4
 26297: c8 b9 09                 a2 = a2 + a4
 26300: 82 15 d8 00              s0 = u64 [sp + 0xd8]
 26304: ca 59 0b                 a4 = a2 * s0
 26307: c9 b4 02                 t0 = t2 - a4
 26310: 82 1a d0 00              a3 = u64 [sp + 0xd0]
 26314: d6 a9 0b                 a4 = a2 mulhu a3
 26317: ca a9 0c                 a5 = a2 * a3
 26320: d8 c8 0a                 a3 = a1 <u a5
 26323: c8 ba 0a                 a3 = a3 + a4
 26326: c9 c8 06                 s1 = a1 - a5
 26329: c9 a2 0b                 a4 = t0 - a3
 26332: 82 18 c8 00              a1 = u64 [sp + 0xc8]
 26336: d8 86 0a                 a3 = s1 <u a1
 26339: c8 5a 0a                 a3 = a3 + s0
 26342: c9 ab 0a                 a3 = a4 - a3
 26345: d8 3a 0c                 a5 = a3 <u t1
 26348: c8 9c 02                 t0 = a5 + a2
 26351: da cb 0a                 a3 = a4 if a5 == 0
 26354: 64 8b                    a4 = a1
 26356: 93 cb                    a4 = 0 if a5 == 0
 26358: c9 b6 09                 a2 = s1 - a4
 26361: d3 5a 0b                 a4 = a3 ^ s0
 26364: d8 5a 0c                 a5 = a3 <u s0
 26367: d8 89 06                 s1 = a2 <u a1
 26370: db bc 06                 s1 = a5 if a4 != 0
 26373: 85 6b 01                 a4 = s1 ^ 0x1
 26376: c8 b2 02                 t0 = t0 + a4
 26379: 64 5b                    a4 = s0
 26381: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 26385: 94 6b                    a4 = 0 if s1 != 0
 26387: 64 8c                    a5 = a1
 26389: 94 6c                    a5 = 0 if s1 != 0
 26391: c9 ba 0a                 a3 = a3 - a4
 26394: d8 c9 0b                 a4 = a2 <u a5
 26397: c9 ba 03                 t1 = a3 - a4
 26400: 7b 72                    u64 [a0] = t0
 26402: 95 00 ff                 ra = ra + 0xffffffffffffffff
 26405: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 26408: c9 c9 04                 t2 = a2 - a5
 26411: 56 10 01 5f ff           jump @1534 if ra >u 1
      :                          @1535
 26416: 82 10 98 00              ra = u64 [sp + 0x98]
 26420: 82 07                    a0 = u64 [ra]
 26422: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 26426: cf 87 07                 a0 = a0 << a1
 26429: ca 53 08                 a1 = t1 * s0
 26432: 82 1a c0 00              a3 = u64 [sp + 0xc0]
 26436: d6 a3 09                 a2 = t1 mulhu a3
 26439: c8 98 08                 a1 = a1 + a2
 26442: c8 38 08                 a1 = a1 + t1
 26445: ca a3 09                 a2 = t1 * a3
 26448: c8 49 0b                 a4 = a2 + t2
 26451: d8 9b 09                 a2 = a4 <u a2
 26454: c8 98 08                 a1 = a1 + a2
 26457: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 26461: ca a8 09                 a2 = a1 * a3
 26464: c9 94 02                 t0 = t2 - a2
 26467: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 26471: d6 98 06                 s1 = a1 mulhu a2
 26474: ca 98 05                 s0 = a1 * a2
 26477: d8 57 09                 a2 = a0 <u s0
 26480: c8 69 09                 a2 = a2 + s1
 26483: c9 57 06                 s1 = a0 - s0
 26486: c9 92 09                 a2 = t0 - a2
 26489: 82 1c c8 00              a5 = u64 [sp + 0xc8]
 26493: d8 c6 07                 a0 = s1 <u a5
 26496: c8 a7 07                 a0 = a0 + a3
 26499: c9 79 07                 a0 = a2 - a0
 26502: d8 b7 0b                 a4 = a0 <u a4
 26505: da b9 07                 a0 = a2 if a4 == 0
 26508: 64 c9                    a2 = a5
 26510: 93 b9                    a2 = 0 if a4 == 0
 26512: c9 96 06                 s1 = s1 - a2
 26515: d3 a7 02                 t0 = a0 ^ a3
 26518: d8 a7 05                 s0 = a0 <u a3
 26521: d8 c6 09                 a2 = s1 <u a5
 26524: db 25 09                 a2 = s0 if t0 != 0
 26527: c8 b8 08                 a1 = a1 + a4
 26530: 85 9b 01                 a4 = a2 ^ 0x1
 26533: c8 b8 08                 a1 = a1 + a4
 26536: 7b 08                    u64 [ra] = a1
 26538: 94 9a                    a3 = 0 if a2 != 0
 26540: 94 9c                    a5 = 0 if a2 != 0
 26542: c9 a7 07                 a0 = a0 - a3
 26545: d8 c6 08                 a1 = s1 <u a5
 26548: c9 87 07                 a0 = a0 - a1
 26551: c9 c6 06                 s1 = s1 - a5
 26554: 97 78 01                 a1 = a0 << 0x1
 26557: 82 19 80 00              a2 = u64 [sp + 0x80]
 26561: cf 98 08                 a1 = a1 << a2
 26564: 82 19 88 00              a2 = u64 [sp + 0x88]
 26568: d0 97 07                 a0 = a0 >> a2
 26571: d0 96 06                 s1 = s1 >> a2
 26574: d4 86 06                 s1 = s1 | a1
 26577: 82 18 78                 a1 = u64 [sp + 0x78]
 26580: da 87 06                 s1 = a0 if a1 == 0
 26583: 82 15 70                 s0 = u64 [sp + 0x70]
 26586: d2 75 05                 s0 = s0 & a0
 26589: 01                       fallthrough
      :                          @1536
 26590: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 26594: 7b 76                    u64 [a0] = s1
 26596: 7b 75 08                 u64 [a0 + 0x8] = s0
 26599: 28 d9 00                 jump @1540
      :                          @1537
 26602: 98 39 37                 a2 = t1 >> 0x37
 26605: 97 99 01                 a2 = a2 << 0x1
 26608: 33 0b 34 03 01           a4 = 0x10334
 26613: c8 b9 09                 a2 = a2 + a4
 26616: 7e 9b 00 fe              a4 = u16 [a2 + 0xfffffffffffffe00]
 26620: 33 09                    a2 = 0
 26622: 98 3c 18                 a5 = t1 >> 0x18
 26625: 95 cc 01                 a5 = a5 + 0x1
 26628: ca bc 06                 s1 = a5 * a4
 26631: ca b6 06                 s1 = s1 * a4
 26634: 97 bb 0b                 a4 = a4 << 0xb
 26637: 98 66 28                 s1 = s1 >> 0x28
 26640: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
 26643: c8 6b 0b                 a4 = a4 + s1
 26646: ca cb 0c                 a5 = a4 * a5
 26649: c9 c0 0a                 a3 = ra - a5
 26652: ca ba 0a                 a3 = a3 * a4
 26655: 98 aa 2f                 a3 = a3 >> 0x2f
 26658: 97 bb 0d                 a4 = a4 << 0xd
 26661: c8 ab 0b                 a4 = a4 + a3
 26664: 97 b6 1f                 s1 = a4 << 0x1f
 26667: 97 3c 3f                 a5 = t1 << 0x3f
 26670: 99 cc 3f                 a5 = a5 >>a 0x3f
 26673: 98 ba 01                 a3 = a4 >> 0x1
 26676: d2 ca 0a                 a3 = a3 & a5
 26679: 95 3c 01                 a5 = t1 + 0x1
 26682: 98 cc 01                 a5 = a5 >> 0x1
 26685: ca cb 0c                 a5 = a4 * a5
 26688: c9 ca 0a                 a3 = a3 - a5
 26691: d6 ba 0a                 a3 = a3 mulhu a4
 26694: 98 aa 01                 a3 = a3 >> 0x1
 26697: c8 6a 0a                 a3 = a3 + s1
 26700: 95 ab 01                 a4 = a3 + 0x1
 26703: 88 bc 01                 a5 = a4 <u 0x1
 26706: d6 3b 0b                 a4 = a4 mulhu t1
 26709: ca 3c 0c                 a5 = a5 * t1
 26712: c8 3b 0b                 a4 = a4 + t1
 26715: c8 cb 0b                 a4 = a4 + a5
 26718: c9 ba 0a                 a3 = a3 - a4
 26721: 97 8c 03                 a5 = a1 << 0x3
 26724: 9a cb                    a4 = -a5
 26726: 82 17 98 00              a0 = u64 [sp + 0x98]
 26730: c8 7c 0c                 a5 = a5 + a0
 26733: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 26736: 01                       fallthrough
      :                          @1538
 26737: 82 c8                    a1 = u64 [a5]
 26739: d6 9a 05                 s0 = a3 mulhu a2
 26742: ca 92 07                 a0 = t0 * a2
 26745: c8 57 07                 a0 = a0 + s0
 26748: ca 9a 09                 a2 = a3 * a2
 26751: c8 89 06                 s1 = a2 + a1
 26754: d8 96 09                 a2 = s1 <u a2
 26757: c8 97 07                 a0 = a0 + a2
 26760: 95 79 01                 a2 = a0 + 0x1
 26763: ca 39 05                 s0 = a2 * t1
 26766: c9 58 08                 a1 = a1 - s0
 26769: d8 86 06                 s1 = s1 <u a1
 26772: 64 35                    s0 = t1
 26774: 93 65                    s0 = 0 if s1 == 0
 26776: c8 58 08                 a1 = a1 + s0
 26779: da 69 07                 a0 = a2 if s1 == 0
 26782: d8 38 09                 a2 = a1 <u t1
 26785: 85 96 01                 s1 = a2 ^ 0x1
 26788: 64 35                    s0 = t1
 26790: 94 95                    s0 = 0 if a2 != 0
 26792: c9 58 09                 a2 = a1 - s0
 26795: c8 67 07                 a0 = a0 + s1
 26798: 7b c7                    u64 [a5] = a0
 26800: 95 bb 08                 a4 = a4 + 0x8
 26803: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 26806: 52 0b bb                 jump @1538 if a4 != 0
      :                          @1539
 26809: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 26813: 7b 79                    u64 [a0] = a2
 26815: 01                       fallthrough
      :                          @1540
 26816: 82 10 f0 00              ra = u64 [sp + 0xf0]
 26820: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 26824: 82 16 e0 00              s1 = u64 [sp + 0xe0]
 26828: 95 11 f8 00              sp = sp + 0xf8
 26832: 32 00                    ret
      :                          @1541
 26834: 97 69 03                 a2 = s1 << 0x3
 26837: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 26841: 33 08                    a1 = 0
 26843: 28 a6 f9                 jump @1515
      :                          @1542
 26846: 00                       trap
      :                          @1543
 26847: 00                       trap
      :                          @1544
 26848: 00                       trap
      :                          @1545
 26849: 00                       trap
      :                          @1546
 26850: 00                       trap
      :                          @1547
 26851: 00                       trap
      :                          @1548
 26852: 00                       trap
      :                          @1549 [@dyn 140]
 26853: 7b 79 08                 u64 [a0 + 0x8] = a2
 26856: 7b 7a 10                 u64 [a0 + 0x10] = a3
 26859: 49 17 18                 u64 [a0 + 24] = 0
 26862: 33 08 d0 02 01           a1 = 0x102d0
 26867: 7b 78                    u64 [a0] = a1
 26869: 32 00                    ret
      :                          @1550 [@dyn 141]
 26871: 32 00                    ret
      :                          @1551
 26873: 95 11 70 fe              sp = sp + 0xfffffffffffffe70
 26877: 7b 10 88 01              u64 [sp + 0x188] = ra
 26881: 7b 15 80 01              u64 [sp + 0x180] = s0
 26885: 7b 16 78 01              u64 [sp + 0x178] = s1
 26889: 3a 05 38 00 03           s0 = u64 [0x30038]
 26894: 51 05 fc 08              jump @1610 if s0 == 0
      :                          @1552
 26898: 95 17 80 00              a0 = sp + 0x80
 26902: 64 58                    a1 = s0
 26904: 50 20 1c 01 06 e6        ra = 284, jump @1325
      :                          @1553 [@dyn 142]
 26910: 95 58 28                 a1 = s0 + 0x28
 26913: 95 17 58                 a0 = sp + 0x58
 26916: 50 20 1e 01 52 e7        ra = 286, jump @1347
      :                          @1554 [@dyn 143]
 26922: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 26926: 82 18 98 00              a1 = u64 [sp + 0x98]
 26930: 7b 17 28                 u64 [sp + 0x28] = a0
 26933: 82 17 90 00              a0 = u64 [sp + 0x90]
 26937: 7b 18 20                 u64 [sp + 0x20] = a1
 26940: 82 18 88 00              a1 = u64 [sp + 0x88]
 26944: 82 19 80 00              a2 = u64 [sp + 0x80]
 26948: 7b 17 18                 u64 [sp + 0x18] = a0
 26951: 82 17 58                 a0 = u64 [sp + 0x58]
 26954: 7b 18 10                 u64 [sp + 0x10] = a1
 26957: 7b 19 08                 u64 [sp + 0x8] = a2
 26960: 95 14 30                 t2 = sp + 0x30
 26963: 7b 17 30                 u64 [sp + 0x30] = a0
 26966: 82 17 60                 a0 = u64 [sp + 0x60]
 26969: 82 18 68                 a1 = u64 [sp + 0x68]
 26972: 82 19 70                 a2 = u64 [sp + 0x70]
 26975: 82 1a 78                 a3 = u64 [sp + 0x78]
 26978: 7b 17 38                 u64 [sp + 0x38] = a0
 26981: 7b 18 40                 u64 [sp + 0x40] = a1
 26984: 7b 19 48                 u64 [sp + 0x48] = a2
 26987: 7b 1a 50                 u64 [sp + 0x50] = a3
 26990: 49 21 80 00 2c 84 09     u64 [sp + 128] = 0x9842c
 26997: 49 21 88 00              u64 [sp + 136] = 0
 27001: 49 21 90 00              u64 [sp + 144] = 0
 27005: 49 21 98 00 00 00 00 0b  u64 [sp + 152] = 0xb000000
 27013: 49 21 a0 00 bc 64 09     u64 [sp + 160] = 0x964bc
 27020: 49 21 a8 00              u64 [sp + 168] = 0
 27024: 49 21 b0 00              u64 [sp + 176] = 0
 27028: 49 21 b8 00 00 00 00 0c  u64 [sp + 184] = 0xc000000
 27036: 49 21 c0 00 32 5f 09     u64 [sp + 192] = 0x95f32
 27043: 49 21 c8 00              u64 [sp + 200] = 0
 27047: 49 21 d0 00              u64 [sp + 208] = 0
 27051: 49 21 d8 00 00 00 00 0d  u64 [sp + 216] = 0xd000000
 27059: 49 21 f8 00 00 00 00 0e  u64 [sp + 248] = 0xe000000
 27067: 49 21 f0 00              u64 [sp + 240] = 0
 27071: 49 21 e8 00              u64 [sp + 232] = 0
 27075: 49 21 e0 00 68 f9 08     u64 [sp + 224] = 0x8f968
 27082: 49 21 18 01 00 00 00 0f  u64 [sp + 280] = 0xf000000
 27090: 49 21 10 01              u64 [sp + 272] = 0
 27094: 49 21 08 01              u64 [sp + 264] = 0
 27098: 49 21 00 01 62 ae 07     u64 [sp + 256] = 0x7ae62
 27105: 49 21 38 01 00 00 00 10  u64 [sp + 312] = 0x10000000
 27113: 49 21 30 01              u64 [sp + 304] = 0
 27117: 49 21 28 01              u64 [sp + 296] = 0
 27121: 49 21 20 01 3e 6f 07     u64 [sp + 288] = 0x76f3e
 27128: 49 21 58 01 00 00 00 11  u64 [sp + 344] = 0x11000000
 27136: 49 21 50 01              u64 [sp + 336] = 0
 27140: 49 21 48 01              u64 [sp + 328] = 0
 27144: 49 21 40 01 ee c8 06     u64 [sp + 320] = 0x6c8ee
 27151: 33 02 80 00 03           t0 = 0x30080
 27156: 95 27 00 10              a0 = t0 + 0x1000
 27160: 33 08 18 0f              a1 = 0xf18
 27164: 33 03 20 0f              t1 = 0xf20
 27168: 01                       fallthrough
      :                          @1555
 27169: 82 79                    a2 = u64 [a0]
 27171: ac 98 a2 96              jump @24 if a1 <u a2
      :                          @1556
 27175: c9 93 0a                 a3 = t1 - a2
 27178: c8 2a 0a                 a3 = a3 + t0
 27181: 84 ab 07                 a4 = a3 & 0x7
 27184: c8 b9 0c                 a5 = a2 + a4
 27187: 95 cc e0 00              a5 = a5 + 0xe0
 27191: 01                       fallthrough
      :                          @1557
 27192: 82 75                    s0 = u64 [a0]
 27194: ab 95 e7                 jump @1555 if s0 != a2
      :                          @1558
 27197: 7b 7c                    u64 [a0] = a5
 27199: 64 46                    s1 = t2
 27201: 7b 13                    u64 [sp] = t1
 27203: c9 ba 05                 s0 = a3 - a4
 27206: 95 18 80 00              a1 = sp + 0x80
 27210: 33 09 e0 00              a2 = 0xe0
 27214: 64 57                    a0 = s0
 27216: 50 20 20 01 e3 1f        ra = 288, jump @1890
      :                          @1559 [@dyn 144]
 27222: 82 17 48                 a0 = u64 [sp + 0x48]
 27225: 82 19 40                 a2 = u64 [sp + 0x40]
 27228: 33 08 07                 a1 = 0x7
 27231: 94 78 04                 a1 = 0x4 if a0 != 0
 27234: ac 89 b2 07              jump @1612 if a2 <u a1
      :                          @1560
 27238: 7c 57 19                 a0 = u8 [s0 + 0x19]
 27241: 7c 58 18                 a1 = u8 [s0 + 0x18]
 27244: 7c 59 1a                 a2 = u8 [s0 + 0x1a]
 27247: 7c 5a 1b                 a3 = u8 [s0 + 0x1b]
 27250: 97 77 08                 a0 = a0 << 0x8
 27253: d4 87 07                 a0 = a0 | a1
 27256: 97 99 10                 a2 = a2 << 0x10
 27259: 97 aa 18                 a3 = a3 << 0x18
 27262: d4 a9 09                 a2 = a2 | a3
 27265: d4 97 07                 a0 = a0 | a2
 27268: 7a 17 70 01              u32 [sp + 0x170] = a0
 27272: 7c 57 11                 a0 = u8 [s0 + 0x11]
 27275: 7c 58 10                 a1 = u8 [s0 + 0x10]
 27278: 7c 59 12                 a2 = u8 [s0 + 0x12]
 27281: 7c 5a 13                 a3 = u8 [s0 + 0x13]
 27284: 97 77 08                 a0 = a0 << 0x8
 27287: d4 87 07                 a0 = a0 | a1
 27290: 97 99 10                 a2 = a2 << 0x10
 27293: 97 aa 18                 a3 = a3 << 0x18
 27296: d4 a9 09                 a2 = a2 | a3
 27299: d4 97 07                 a0 = a0 | a2
 27302: 7c 58 15                 a1 = u8 [s0 + 0x15]
 27305: 7c 59 14                 a2 = u8 [s0 + 0x14]
 27308: 7c 5a 16                 a3 = u8 [s0 + 0x16]
 27311: 7c 5b 17                 a4 = u8 [s0 + 0x17]
 27314: 97 88 08                 a1 = a1 << 0x8
 27317: d4 98 08                 a1 = a1 | a2
 27320: 97 aa 10                 a3 = a3 << 0x10
 27323: 97 bb 18                 a4 = a4 << 0x18
 27326: d4 ba 0a                 a3 = a3 | a4
 27329: d4 a8 08                 a1 = a1 | a3
 27332: 97 88 20                 a1 = a1 << 0x20
 27335: d4 87 07                 a0 = a0 | a1
 27338: 7b 17 68 01              u64 [sp + 0x168] = a0
 27342: 7c 57 09                 a0 = u8 [s0 + 0x9]
 27345: 7c 58 08                 a1 = u8 [s0 + 0x8]
 27348: 7c 59 0a                 a2 = u8 [s0 + 0xa]
 27351: 7c 5a 0b                 a3 = u8 [s0 + 0xb]
 27354: 97 77 08                 a0 = a0 << 0x8
 27357: d4 87 07                 a0 = a0 | a1
 27360: 97 99 10                 a2 = a2 << 0x10
 27363: 97 aa 18                 a3 = a3 << 0x18
 27366: d4 a9 09                 a2 = a2 | a3
 27369: d4 97 07                 a0 = a0 | a2
 27372: 7c 58 0d                 a1 = u8 [s0 + 0xd]
 27375: 7c 59 0c                 a2 = u8 [s0 + 0xc]
 27378: 7c 5a 0e                 a3 = u8 [s0 + 0xe]
 27381: 7c 5b 0f                 a4 = u8 [s0 + 0xf]
 27384: 97 88 08                 a1 = a1 << 0x8
 27387: d4 98 08                 a1 = a1 | a2
 27390: 97 aa 10                 a3 = a3 << 0x10
 27393: 97 bb 18                 a4 = a4 << 0x18
 27396: d4 ba 0a                 a3 = a3 | a4
 27399: d4 a8 08                 a1 = a1 | a3
 27402: 97 88 20                 a1 = a1 << 0x20
 27405: d4 87 07                 a0 = a0 | a1
 27408: 7b 17 60 01              u64 [sp + 0x160] = a0
 27412: 95 18 60 01              a1 = sp + 0x160
 27416: 64 67                    a0 = s1
 27418: 50 20 22 01 fb ea        ra = 290, jump @1396
      :                          @1561 [@dyn 145]
 27424: 7c 57 39                 a0 = u8 [s0 + 0x39]
 27427: 7c 58 38                 a1 = u8 [s0 + 0x38]
 27430: 7c 59 3a                 a2 = u8 [s0 + 0x3a]
 27433: 7c 5a 3b                 a3 = u8 [s0 + 0x3b]
 27436: 97 77 08                 a0 = a0 << 0x8
 27439: d4 87 07                 a0 = a0 | a1
 27442: 97 99 10                 a2 = a2 << 0x10
 27445: 97 aa 18                 a3 = a3 << 0x18
 27448: d4 a9 09                 a2 = a2 | a3
 27451: d4 97 07                 a0 = a0 | a2
 27454: 7a 17 70 01              u32 [sp + 0x170] = a0
 27458: 7c 57 31                 a0 = u8 [s0 + 0x31]
 27461: 7c 58 30                 a1 = u8 [s0 + 0x30]
 27464: 7c 59 32                 a2 = u8 [s0 + 0x32]
 27467: 7c 5a 33                 a3 = u8 [s0 + 0x33]
 27470: 97 77 08                 a0 = a0 << 0x8
 27473: d4 87 07                 a0 = a0 | a1
 27476: 97 99 10                 a2 = a2 << 0x10
 27479: 97 aa 18                 a3 = a3 << 0x18
 27482: d4 a9 09                 a2 = a2 | a3
 27485: d4 97 07                 a0 = a0 | a2
 27488: 7c 58 35                 a1 = u8 [s0 + 0x35]
 27491: 7c 59 34                 a2 = u8 [s0 + 0x34]
 27494: 7c 5a 36                 a3 = u8 [s0 + 0x36]
 27497: 7c 5b 37                 a4 = u8 [s0 + 0x37]
 27500: 97 88 08                 a1 = a1 << 0x8
 27503: d4 98 08                 a1 = a1 | a2
 27506: 97 aa 10                 a3 = a3 << 0x10
 27509: 97 bb 18                 a4 = a4 << 0x18
 27512: d4 ba 0a                 a3 = a3 | a4
 27515: d4 a8 08                 a1 = a1 | a3
 27518: 97 88 20                 a1 = a1 << 0x20
 27521: d4 87 07                 a0 = a0 | a1
 27524: 7b 17 68 01              u64 [sp + 0x168] = a0
 27528: 7c 57 29                 a0 = u8 [s0 + 0x29]
 27531: 7c 58 28                 a1 = u8 [s0 + 0x28]
 27534: 7c 59 2a                 a2 = u8 [s0 + 0x2a]
 27537: 7c 5a 2b                 a3 = u8 [s0 + 0x2b]
 27540: 97 77 08                 a0 = a0 << 0x8
 27543: d4 87 07                 a0 = a0 | a1
 27546: 97 99 10                 a2 = a2 << 0x10
 27549: 97 aa 18                 a3 = a3 << 0x18
 27552: d4 a9 09                 a2 = a2 | a3
 27555: d4 97 07                 a0 = a0 | a2
 27558: 7c 58 2d                 a1 = u8 [s0 + 0x2d]
 27561: 7c 59 2c                 a2 = u8 [s0 + 0x2c]
 27564: 7c 5a 2e                 a3 = u8 [s0 + 0x2e]
 27567: 7c 5b 2f                 a4 = u8 [s0 + 0x2f]
 27570: 97 88 08                 a1 = a1 << 0x8
 27573: d4 98 08                 a1 = a1 | a2
 27576: 97 aa 10                 a3 = a3 << 0x10
 27579: 97 bb 18                 a4 = a4 << 0x18
 27582: d4 ba 0a                 a3 = a3 | a4
 27585: d4 a8 08                 a1 = a1 | a3
 27588: 97 88 20                 a1 = a1 << 0x20
 27591: d4 87 07                 a0 = a0 | a1
 27594: 7b 17 60 01              u64 [sp + 0x160] = a0
 27598: 95 18 60 01              a1 = sp + 0x160
 27602: 64 67                    a0 = s1
 27604: 50 20 24 01 41 ea        ra = 292, jump @1396
      :                          @1562 [@dyn 146]
 27610: 7c 57 59                 a0 = u8 [s0 + 0x59]
 27613: 7c 58 58                 a1 = u8 [s0 + 0x58]
 27616: 7c 59 5a                 a2 = u8 [s0 + 0x5a]
 27619: 7c 5a 5b                 a3 = u8 [s0 + 0x5b]
 27622: 97 77 08                 a0 = a0 << 0x8
 27625: d4 87 07                 a0 = a0 | a1
 27628: 97 99 10                 a2 = a2 << 0x10
 27631: 97 aa 18                 a3 = a3 << 0x18
 27634: d4 a9 09                 a2 = a2 | a3
 27637: d4 97 07                 a0 = a0 | a2
 27640: 7a 17 70 01              u32 [sp + 0x170] = a0
 27644: 7c 57 51                 a0 = u8 [s0 + 0x51]
 27647: 7c 58 50                 a1 = u8 [s0 + 0x50]
 27650: 7c 59 52                 a2 = u8 [s0 + 0x52]
 27653: 7c 5a 53                 a3 = u8 [s0 + 0x53]
 27656: 97 77 08                 a0 = a0 << 0x8
 27659: d4 87 07                 a0 = a0 | a1
 27662: 97 99 10                 a2 = a2 << 0x10
 27665: 97 aa 18                 a3 = a3 << 0x18
 27668: d4 a9 09                 a2 = a2 | a3
 27671: d4 97 07                 a0 = a0 | a2
 27674: 7c 58 55                 a1 = u8 [s0 + 0x55]
 27677: 7c 59 54                 a2 = u8 [s0 + 0x54]
 27680: 7c 5a 56                 a3 = u8 [s0 + 0x56]
 27683: 7c 5b 57                 a4 = u8 [s0 + 0x57]
 27686: 97 88 08                 a1 = a1 << 0x8
 27689: d4 98 08                 a1 = a1 | a2
 27692: 97 aa 10                 a3 = a3 << 0x10
 27695: 97 bb 18                 a4 = a4 << 0x18
 27698: d4 ba 0a                 a3 = a3 | a4
 27701: d4 a8 08                 a1 = a1 | a3
 27704: 97 88 20                 a1 = a1 << 0x20
 27707: d4 87 07                 a0 = a0 | a1
 27710: 7b 17 68 01              u64 [sp + 0x168] = a0
 27714: 7c 57 49                 a0 = u8 [s0 + 0x49]
 27717: 7c 58 48                 a1 = u8 [s0 + 0x48]
 27720: 7c 59 4a                 a2 = u8 [s0 + 0x4a]
 27723: 7c 5a 4b                 a3 = u8 [s0 + 0x4b]
 27726: 97 77 08                 a0 = a0 << 0x8
 27729: d4 87 07                 a0 = a0 | a1
 27732: 97 99 10                 a2 = a2 << 0x10
 27735: 97 aa 18                 a3 = a3 << 0x18
 27738: d4 a9 09                 a2 = a2 | a3
 27741: d4 97 07                 a0 = a0 | a2
 27744: 7c 58 4d                 a1 = u8 [s0 + 0x4d]
 27747: 7c 59 4c                 a2 = u8 [s0 + 0x4c]
 27750: 7c 5a 4e                 a3 = u8 [s0 + 0x4e]
 27753: 7c 5b 4f                 a4 = u8 [s0 + 0x4f]
 27756: 97 88 08                 a1 = a1 << 0x8
 27759: d4 98 08                 a1 = a1 | a2
 27762: 97 aa 10                 a3 = a3 << 0x10
 27765: 97 bb 18                 a4 = a4 << 0x18
 27768: d4 ba 0a                 a3 = a3 | a4
 27771: d4 a8 08                 a1 = a1 | a3
 27774: 97 88 20                 a1 = a1 << 0x20
 27777: d4 87 07                 a0 = a0 | a1
 27780: 7b 17 60 01              u64 [sp + 0x160] = a0
 27784: 95 18 60 01              a1 = sp + 0x160
 27788: 64 67                    a0 = s1
 27790: 50 20 26 01 87 e9        ra = 294, jump @1396
      :                          @1563 [@dyn 147]
 27796: 7c 57 79                 a0 = u8 [s0 + 0x79]
 27799: 7c 58 78                 a1 = u8 [s0 + 0x78]
 27802: 7c 59 7a                 a2 = u8 [s0 + 0x7a]
 27805: 7c 5a 7b                 a3 = u8 [s0 + 0x7b]
 27808: 97 77 08                 a0 = a0 << 0x8
 27811: d4 87 07                 a0 = a0 | a1
 27814: 97 99 10                 a2 = a2 << 0x10
 27817: 97 aa 18                 a3 = a3 << 0x18
 27820: d4 a9 09                 a2 = a2 | a3
 27823: d4 97 07                 a0 = a0 | a2
 27826: 7a 17 70 01              u32 [sp + 0x170] = a0
 27830: 7c 57 71                 a0 = u8 [s0 + 0x71]
 27833: 7c 58 70                 a1 = u8 [s0 + 0x70]
 27836: 7c 59 72                 a2 = u8 [s0 + 0x72]
 27839: 7c 5a 73                 a3 = u8 [s0 + 0x73]
 27842: 97 77 08                 a0 = a0 << 0x8
 27845: d4 87 07                 a0 = a0 | a1
 27848: 97 99 10                 a2 = a2 << 0x10
 27851: 97 aa 18                 a3 = a3 << 0x18
 27854: d4 a9 09                 a2 = a2 | a3
 27857: d4 97 07                 a0 = a0 | a2
 27860: 7c 58 75                 a1 = u8 [s0 + 0x75]
 27863: 7c 59 74                 a2 = u8 [s0 + 0x74]
 27866: 7c 5a 76                 a3 = u8 [s0 + 0x76]
 27869: 7c 5b 77                 a4 = u8 [s0 + 0x77]
 27872: 97 88 08                 a1 = a1 << 0x8
 27875: d4 98 08                 a1 = a1 | a2
 27878: 97 aa 10                 a3 = a3 << 0x10
 27881: 97 bb 18                 a4 = a4 << 0x18
 27884: d4 ba 0a                 a3 = a3 | a4
 27887: d4 a8 08                 a1 = a1 | a3
 27890: 97 88 20                 a1 = a1 << 0x20
 27893: d4 87 07                 a0 = a0 | a1
 27896: 7b 17 68 01              u64 [sp + 0x168] = a0
 27900: 7c 57 69                 a0 = u8 [s0 + 0x69]
 27903: 7c 58 68                 a1 = u8 [s0 + 0x68]
 27906: 7c 59 6a                 a2 = u8 [s0 + 0x6a]
 27909: 7c 5a 6b                 a3 = u8 [s0 + 0x6b]
 27912: 97 77 08                 a0 = a0 << 0x8
 27915: d4 87 07                 a0 = a0 | a1
 27918: 97 99 10                 a2 = a2 << 0x10
 27921: 97 aa 18                 a3 = a3 << 0x18
 27924: d4 a9 09                 a2 = a2 | a3
 27927: d4 97 07                 a0 = a0 | a2
 27930: 7c 58 6d                 a1 = u8 [s0 + 0x6d]
 27933: 7c 59 6c                 a2 = u8 [s0 + 0x6c]
 27936: 7c 5a 6e                 a3 = u8 [s0 + 0x6e]
 27939: 7c 5b 6f                 a4 = u8 [s0 + 0x6f]
 27942: 97 88 08                 a1 = a1 << 0x8
 27945: d4 98 08                 a1 = a1 | a2
 27948: 97 aa 10                 a3 = a3 << 0x10
 27951: 97 bb 18                 a4 = a4 << 0x18
 27954: d4 ba 0a                 a3 = a3 | a4
 27957: d4 a8 08                 a1 = a1 | a3
 27960: 97 88 20                 a1 = a1 << 0x20
 27963: d4 87 07                 a0 = a0 | a1
 27966: 7b 17 60 01              u64 [sp + 0x160] = a0
 27970: 95 18 60 01              a1 = sp + 0x160
 27974: 64 67                    a0 = s1
 27976: 50 20 28 01 cd e8        ra = 296, jump @1396
      :                          @1564 [@dyn 148]
 27982: 7c 57 99 00              a0 = u8 [s0 + 0x99]
 27986: 7c 58 98 00              a1 = u8 [s0 + 0x98]
 27990: 7c 59 9a 00              a2 = u8 [s0 + 0x9a]
 27994: 7c 5a 9b 00              a3 = u8 [s0 + 0x9b]
 27998: 97 77 08                 a0 = a0 << 0x8
 28001: d4 87 07                 a0 = a0 | a1
 28004: 97 99 10                 a2 = a2 << 0x10
 28007: 97 aa 18                 a3 = a3 << 0x18
 28010: d4 a9 09                 a2 = a2 | a3
 28013: d4 97 07                 a0 = a0 | a2
 28016: 7a 17 70 01              u32 [sp + 0x170] = a0
 28020: 7c 57 91 00              a0 = u8 [s0 + 0x91]
 28024: 7c 58 90 00              a1 = u8 [s0 + 0x90]
 28028: 7c 59 92 00              a2 = u8 [s0 + 0x92]
 28032: 7c 5a 93 00              a3 = u8 [s0 + 0x93]
 28036: 97 77 08                 a0 = a0 << 0x8
 28039: d4 87 07                 a0 = a0 | a1
 28042: 97 99 10                 a2 = a2 << 0x10
 28045: 97 aa 18                 a3 = a3 << 0x18
 28048: d4 a9 09                 a2 = a2 | a3
 28051: d4 97 07                 a0 = a0 | a2
 28054: 7c 58 95 00              a1 = u8 [s0 + 0x95]
 28058: 7c 59 94 00              a2 = u8 [s0 + 0x94]
 28062: 7c 5a 96 00              a3 = u8 [s0 + 0x96]
 28066: 7c 5b 97 00              a4 = u8 [s0 + 0x97]
 28070: 97 88 08                 a1 = a1 << 0x8
 28073: d4 98 08                 a1 = a1 | a2
 28076: 97 aa 10                 a3 = a3 << 0x10
 28079: 97 bb 18                 a4 = a4 << 0x18
 28082: d4 ba 0a                 a3 = a3 | a4
 28085: d4 a8 08                 a1 = a1 | a3
 28088: 97 88 20                 a1 = a1 << 0x20
 28091: d4 87 07                 a0 = a0 | a1
 28094: 7b 17 68 01              u64 [sp + 0x168] = a0
 28098: 7c 57 89 00              a0 = u8 [s0 + 0x89]
 28102: 7c 58 88 00              a1 = u8 [s0 + 0x88]
 28106: 7c 59 8a 00              a2 = u8 [s0 + 0x8a]
 28110: 7c 5a 8b 00              a3 = u8 [s0 + 0x8b]
 28114: 97 77 08                 a0 = a0 << 0x8
 28117: d4 87 07                 a0 = a0 | a1
 28120: 97 99 10                 a2 = a2 << 0x10
 28123: 97 aa 18                 a3 = a3 << 0x18
 28126: d4 a9 09                 a2 = a2 | a3
 28129: d4 97 07                 a0 = a0 | a2
 28132: 7c 58 8d 00              a1 = u8 [s0 + 0x8d]
 28136: 7c 59 8c 00              a2 = u8 [s0 + 0x8c]
 28140: 7c 5a 8e 00              a3 = u8 [s0 + 0x8e]
 28144: 7c 5b 8f 00              a4 = u8 [s0 + 0x8f]
 28148: 97 88 08                 a1 = a1 << 0x8
 28151: d4 98 08                 a1 = a1 | a2
 28154: 97 aa 10                 a3 = a3 << 0x10
 28157: 97 bb 18                 a4 = a4 << 0x18
 28160: d4 ba 0a                 a3 = a3 | a4
 28163: d4 a8 08                 a1 = a1 | a3
 28166: 97 88 20                 a1 = a1 << 0x20
 28169: d4 87 07                 a0 = a0 | a1
 28172: 7b 17 60 01              u64 [sp + 0x160] = a0
 28176: 95 18 60 01              a1 = sp + 0x160
 28180: 64 67                    a0 = s1
 28182: 50 20 2a 01 ff e7        ra = 298, jump @1396
      :                          @1565 [@dyn 149]
 28188: 7c 57 b9 00              a0 = u8 [s0 + 0xb9]
 28192: 7c 58 b8 00              a1 = u8 [s0 + 0xb8]
 28196: 7c 59 ba 00              a2 = u8 [s0 + 0xba]
 28200: 7c 5a bb 00              a3 = u8 [s0 + 0xbb]
 28204: 97 77 08                 a0 = a0 << 0x8
 28207: d4 87 07                 a0 = a0 | a1
 28210: 97 99 10                 a2 = a2 << 0x10
 28213: 97 aa 18                 a3 = a3 << 0x18
 28216: d4 a9 09                 a2 = a2 | a3
 28219: d4 97 07                 a0 = a0 | a2
 28222: 7a 17 70 01              u32 [sp + 0x170] = a0
 28226: 7c 57 b1 00              a0 = u8 [s0 + 0xb1]
 28230: 7c 58 b0 00              a1 = u8 [s0 + 0xb0]
 28234: 7c 59 b2 00              a2 = u8 [s0 + 0xb2]
 28238: 7c 5a b3 00              a3 = u8 [s0 + 0xb3]
 28242: 97 77 08                 a0 = a0 << 0x8
 28245: d4 87 07                 a0 = a0 | a1
 28248: 97 99 10                 a2 = a2 << 0x10
 28251: 97 aa 18                 a3 = a3 << 0x18
 28254: d4 a9 09                 a2 = a2 | a3
 28257: d4 97 07                 a0 = a0 | a2
 28260: 7c 58 b5 00              a1 = u8 [s0 + 0xb5]
 28264: 7c 59 b4 00              a2 = u8 [s0 + 0xb4]
 28268: 7c 5a b6 00              a3 = u8 [s0 + 0xb6]
 28272: 7c 5b b7 00              a4 = u8 [s0 + 0xb7]
 28276: 97 88 08                 a1 = a1 << 0x8
 28279: d4 98 08                 a1 = a1 | a2
 28282: 97 aa 10                 a3 = a3 << 0x10
 28285: 97 bb 18                 a4 = a4 << 0x18
 28288: d4 ba 0a                 a3 = a3 | a4
 28291: d4 a8 08                 a1 = a1 | a3
 28294: 97 88 20                 a1 = a1 << 0x20
 28297: d4 87 07                 a0 = a0 | a1
 28300: 7b 17 68 01              u64 [sp + 0x168] = a0
 28304: 7c 57 a9 00              a0 = u8 [s0 + 0xa9]
 28308: 7c 58 a8 00              a1 = u8 [s0 + 0xa8]
 28312: 7c 59 aa 00              a2 = u8 [s0 + 0xaa]
 28316: 7c 5a ab 00              a3 = u8 [s0 + 0xab]
 28320: 97 77 08                 a0 = a0 << 0x8
 28323: d4 87 07                 a0 = a0 | a1
 28326: 97 99 10                 a2 = a2 << 0x10
 28329: 97 aa 18                 a3 = a3 << 0x18
 28332: d4 a9 09                 a2 = a2 | a3
 28335: d4 97 07                 a0 = a0 | a2
 28338: 7c 58 ad 00              a1 = u8 [s0 + 0xad]
 28342: 7c 59 ac 00              a2 = u8 [s0 + 0xac]
 28346: 7c 5a ae 00              a3 = u8 [s0 + 0xae]
 28350: 7c 5b af 00              a4 = u8 [s0 + 0xaf]
 28354: 97 88 08                 a1 = a1 << 0x8
 28357: d4 98 08                 a1 = a1 | a2
 28360: 97 aa 10                 a3 = a3 << 0x10
 28363: 97 bb 18                 a4 = a4 << 0x18
 28366: d4 ba 0a                 a3 = a3 | a4
 28369: d4 a8 08                 a1 = a1 | a3
 28372: 97 88 20                 a1 = a1 << 0x20
 28375: d4 87 07                 a0 = a0 | a1
 28378: 7b 17 60 01              u64 [sp + 0x160] = a0
 28382: 95 18 60 01              a1 = sp + 0x160
 28386: 64 67                    a0 = s1
 28388: 50 20 2c 01 31 e7        ra = 300, jump @1396
      :                          @1566 [@dyn 150]
 28394: 7c 57 d9 00              a0 = u8 [s0 + 0xd9]
 28398: 7c 58 d8 00              a1 = u8 [s0 + 0xd8]
 28402: 7c 59 da 00              a2 = u8 [s0 + 0xda]
 28406: 7c 5a db 00              a3 = u8 [s0 + 0xdb]
 28410: 97 77 08                 a0 = a0 << 0x8
 28413: d4 87 07                 a0 = a0 | a1
 28416: 97 99 10                 a2 = a2 << 0x10
 28419: 97 aa 18                 a3 = a3 << 0x18
 28422: d4 a9 09                 a2 = a2 | a3
 28425: d4 97 07                 a0 = a0 | a2
 28428: 7a 17 70 01              u32 [sp + 0x170] = a0
 28432: 7c 57 d1 00              a0 = u8 [s0 + 0xd1]
 28436: 7c 58 d0 00              a1 = u8 [s0 + 0xd0]
 28440: 7c 59 d2 00              a2 = u8 [s0 + 0xd2]
 28444: 7c 5a d3 00              a3 = u8 [s0 + 0xd3]
 28448: 97 77 08                 a0 = a0 << 0x8
 28451: d4 87 07                 a0 = a0 | a1
 28454: 97 99 10                 a2 = a2 << 0x10
 28457: 97 aa 18                 a3 = a3 << 0x18
 28460: d4 a9 09                 a2 = a2 | a3
 28463: d4 97 07                 a0 = a0 | a2
 28466: 7c 58 d5 00              a1 = u8 [s0 + 0xd5]
 28470: 7c 59 d4 00              a2 = u8 [s0 + 0xd4]
 28474: 7c 5a d6 00              a3 = u8 [s0 + 0xd6]
 28478: 7c 5b d7 00              a4 = u8 [s0 + 0xd7]
 28482: 97 88 08                 a1 = a1 << 0x8
 28485: d4 98 08                 a1 = a1 | a2
 28488: 97 aa 10                 a3 = a3 << 0x10
 28491: 97 bb 18                 a4 = a4 << 0x18
 28494: d4 ba 0a                 a3 = a3 | a4
 28497: d4 a8 08                 a1 = a1 | a3
 28500: 97 88 20                 a1 = a1 << 0x20
 28503: d4 87 07                 a0 = a0 | a1
 28506: 7b 17 68 01              u64 [sp + 0x168] = a0
 28510: 7c 57 c9 00              a0 = u8 [s0 + 0xc9]
 28514: 7c 58 c8 00              a1 = u8 [s0 + 0xc8]
 28518: 7c 59 ca 00              a2 = u8 [s0 + 0xca]
 28522: 7c 5a cb 00              a3 = u8 [s0 + 0xcb]
 28526: 97 77 08                 a0 = a0 << 0x8
 28529: d4 87 07                 a0 = a0 | a1
 28532: 97 99 10                 a2 = a2 << 0x10
 28535: 97 aa 18                 a3 = a3 << 0x18
 28538: d4 a9 09                 a2 = a2 | a3
 28541: d4 97 07                 a0 = a0 | a2
 28544: 7c 58 cd 00              a1 = u8 [s0 + 0xcd]
 28548: 7c 59 cc 00              a2 = u8 [s0 + 0xcc]
 28552: 7c 5a ce 00              a3 = u8 [s0 + 0xce]
 28556: 7c 5b cf 00              a4 = u8 [s0 + 0xcf]
 28560: 97 88 08                 a1 = a1 << 0x8
 28563: d4 98 08                 a1 = a1 | a2
 28566: 97 aa 10                 a3 = a3 << 0x10
 28569: 97 bb 18                 a4 = a4 << 0x18
 28572: d4 ba 0a                 a3 = a3 | a4
 28575: d4 a8 08                 a1 = a1 | a3
 28578: 97 88 20                 a1 = a1 << 0x20
 28581: d4 87 07                 a0 = a0 | a1
 28584: 7b 17 60 01              u64 [sp + 0x160] = a0
 28588: 95 18 60 01              a1 = sp + 0x160
 28592: 64 67                    a0 = s1
 28594: 50 20 2e 01 63 e6        ra = 302, jump @1396
      :                          @1567 [@dyn 151]
 28600: 82 17 20                 a0 = u64 [sp + 0x20]
 28603: 82 19 18                 a2 = u64 [sp + 0x18]
 28606: 33 0a 07                 a3 = 0x7
 28609: 94 7a 04                 a3 = 0x4 if a0 != 0
 28612: ac a9 5f 02              jump @1614 if a2 <u a3
      :                          @1568
 28616: 81 57 18                 a0 = i32 [s0 + 0x18]
 28619: 82 58 10                 a1 = u64 [s0 + 0x10]
 28622: 82 5a 08                 a3 = u64 [s0 + 0x8]
 28625: 82 59                    a2 = u64 [s0]
 28627: 7a 17 70 01              u32 [sp + 0x170] = a0
 28631: 7b 18 68 01              u64 [sp + 0x168] = a1
 28635: 7b 1a 60 01              u64 [sp + 0x160] = a3
 28639: 95 17 08                 a0 = sp + 0x8
 28642: 95 18 60 01              a1 = sp + 0x160
 28646: 50 20 30 01 dc e8        ra = 304, jump @1412
      :                          @1569 [@dyn 152]
 28652: 81 57 38                 a0 = i32 [s0 + 0x38]
 28655: 82 58 30                 a1 = u64 [s0 + 0x30]
 28658: 82 5a 28                 a3 = u64 [s0 + 0x28]
 28661: 82 59 20                 a2 = u64 [s0 + 0x20]
 28664: 7a 17 70 01              u32 [sp + 0x170] = a0
 28668: 7b 18 68 01              u64 [sp + 0x168] = a1
 28672: 7b 1a 60 01              u64 [sp + 0x160] = a3
 28676: 95 17 08                 a0 = sp + 0x8
 28679: 95 18 60 01              a1 = sp + 0x160
 28683: 50 20 32 01 b7 e8        ra = 306, jump @1412
      :                          @1570 [@dyn 153]
 28689: 81 57 58                 a0 = i32 [s0 + 0x58]
 28692: 82 58 50                 a1 = u64 [s0 + 0x50]
 28695: 82 5a 48                 a3 = u64 [s0 + 0x48]
 28698: 82 59 40                 a2 = u64 [s0 + 0x40]
 28701: 7a 17 70 01              u32 [sp + 0x170] = a0
 28705: 7b 18 68 01              u64 [sp + 0x168] = a1
 28709: 7b 1a 60 01              u64 [sp + 0x160] = a3
 28713: 95 17 08                 a0 = sp + 0x8
 28716: 95 18 60 01              a1 = sp + 0x160
 28720: 50 20 34 01 92 e8        ra = 308, jump @1412
      :                          @1571 [@dyn 154]
 28726: 81 57 78                 a0 = i32 [s0 + 0x78]
 28729: 82 58 70                 a1 = u64 [s0 + 0x70]
 28732: 82 5a 68                 a3 = u64 [s0 + 0x68]
 28735: 82 59 60                 a2 = u64 [s0 + 0x60]
 28738: 7a 17 70 01              u32 [sp + 0x170] = a0
 28742: 7b 18 68 01              u64 [sp + 0x168] = a1
 28746: 7b 1a 60 01              u64 [sp + 0x160] = a3
 28750: 95 17 08                 a0 = sp + 0x8
 28753: 95 18 60 01              a1 = sp + 0x160
 28757: 50 20 36 01 6d e8        ra = 310, jump @1412
      :                          @1572 [@dyn 155]
 28763: 81 57 98 00              a0 = i32 [s0 + 0x98]
 28767: 82 58 90 00              a1 = u64 [s0 + 0x90]
 28771: 82 5a 88 00              a3 = u64 [s0 + 0x88]
 28775: 82 59 80 00              a2 = u64 [s0 + 0x80]
 28779: 7a 17 70 01              u32 [sp + 0x170] = a0
 28783: 7b 18 68 01              u64 [sp + 0x168] = a1
 28787: 7b 1a 60 01              u64 [sp + 0x160] = a3
 28791: 95 17 08                 a0 = sp + 0x8
 28794: 95 18 60 01              a1 = sp + 0x160
 28798: 50 20 38 01 44 e8        ra = 312, jump @1412
      :                          @1573 [@dyn 156]
 28804: 81 57 b8 00              a0 = i32 [s0 + 0xb8]
 28808: 82 58 b0 00              a1 = u64 [s0 + 0xb0]
 28812: 82 5a a8 00              a3 = u64 [s0 + 0xa8]
 28816: 82 59 a0 00              a2 = u64 [s0 + 0xa0]
 28820: 7a 17 70 01              u32 [sp + 0x170] = a0
 28824: 7b 18 68 01              u64 [sp + 0x168] = a1
 28828: 7b 1a 60 01              u64 [sp + 0x160] = a3
 28832: 95 17 08                 a0 = sp + 0x8
 28835: 95 18 60 01              a1 = sp + 0x160
 28839: 50 20 3a 01 1b e8        ra = 314, jump @1412
      :                          @1574 [@dyn 157]
 28845: 81 57 d8 00              a0 = i32 [s0 + 0xd8]
 28849: 82 58 d0 00              a1 = u64 [s0 + 0xd0]
 28853: 82 5a c8 00              a3 = u64 [s0 + 0xc8]
 28857: 82 59 c0 00              a2 = u64 [s0 + 0xc0]
 28861: 7a 17 70 01              u32 [sp + 0x170] = a0
 28865: 7b 18 68 01              u64 [sp + 0x168] = a1
 28869: 7b 1a 60 01              u64 [sp + 0x160] = a3
 28873: 95 17 08                 a0 = sp + 0x8
 28876: 95 18 60 01              a1 = sp + 0x160
 28880: 50 20 3c 01 f2 e7        ra = 316, jump @1412
      :                          @1575 [@dyn 158]
 28886: 33 02 80 00 03           t0 = 0x30080
 28891: 95 27 00 10              a0 = t0 + 0x1000
 28895: 01                       fallthrough
      :                          @1576
 28896: 82 78                    a1 = u64 [a0]
 28898: c9 87 09                 a2 = a0 - a1
 28901: ab 59 10                 jump @1580 if a2 != s0
      :                          @1577
 28904: 95 89 20 ff              a2 = a1 + 0xffffffffffffff20
 28908: 01                       fallthrough
      :                          @1578
 28909: 82 7a                    a3 = u64 [a0]
 28911: ab 8a f1                 jump @1576 if a3 != a1
      :                          @1579
 28914: 7b 79                    u64 [a0] = a2
 28916: 01                       fallthrough
      :                          @1580
 28917: 95 27 00 10              a0 = t0 + 0x1000
 28921: 33 08 a8 0f              a1 = 0xfa8
 28925: 82 13                    t1 = u64 [sp]
 28927: 01                       fallthrough
      :                          @1581
 28928: 82 79                    a2 = u64 [a0]
 28930: ac 98 c3 8f              jump @24 if a1 <u a2
      :                          @1582
 28934: c9 93 0a                 a3 = t1 - a2
 28937: c8 2a 0a                 a3 = a3 + t0
 28940: 95 aa 90 00              a3 = a3 + 0x90
 28944: 84 ab 07                 a4 = a3 & 0x7
 28947: c8 b9 0c                 a5 = a2 + a4
 28950: 95 cc 50                 a5 = a5 + 0x50
 28953: 01                       fallthrough
      :                          @1583
 28954: 82 76                    s1 = u64 [a0]
 28956: ab 96 e4                 jump @1581 if s1 != a2
      :                          @1584
 28959: 7b 7c                    u64 [a0] = a5
 28961: c9 ba 05                 s0 = a3 - a4
 28964: 95 18 08                 a1 = sp + 0x8
 28967: 33 09 50                 a2 = 0x50
 28970: 64 57                    a0 = s0
 28972: 50 20 3e 01 07 19        ra = 318, jump @1890
      :                          @1585 [@dyn 159]
 28978: 33 08 40 00 03           a1 = 0x30040
 28983: 01                       fallthrough
      :                          @1586
 28984: 3a 03 40 00 03           t1 = u64 [0x30040]
 28989: 52 03 0b                 jump @1588 if t1 != 0
      :                          @1587
 28992: 3e 05 40 00 03           u64 [0x30040] = s0
 28997: 33 09                    a2 = 0
 28999: 01                       fallthrough
      :                          @1588
 29000: 51 03 ae 00              jump @1609 if t1 == 0
      :                          @1589
 29004: 82 59 08                 a2 = u64 [s0 + 0x8]
 29007: 33 0a 00 f0              a3 = 0xfffffffffffff000
 29011: 33 02 ff ef              t0 = 0xffffffffffffefff
 29015: 33 04 80 00 03           t2 = 0x30080
 29020: 51 09 36                 jump @1596 if a2 == 0
      :                          @1590
 29023: 97 9b 05                 a4 = a2 << 0x5
 29026: c8 b9 09                 a2 = a2 + a4
 29029: 95 99 29                 a2 = a2 + 0x29
 29032: 95 9c ff ef              a5 = a2 + 0xffffffffffffefff
 29036: 53 2c 00 f0 26           jump @1596 if a5 <u 4294963200
      :                          @1591
 29041: 82 5a                    a3 = u64 [s0]
 29043: c9 ba 0a                 a3 = a3 - a4
 29046: 95 aa e0                 a3 = a3 + 0xffffffffffffffe0
 29049: 95 46 00 10              s1 = t2 + 0x1000
 29053: 01                       fallthrough
      :                          @1592
 29054: 82 6c                    a5 = u64 [s1]
 29056: c9 c6 0b                 a4 = s1 - a5
 29059: ab ab 0f                 jump @1596 if a4 != a3
      :                          @1593
 29062: c9 9c 0b                 a4 = a5 - a2
 29065: 01                       fallthrough
      :                          @1594
 29066: 82 68                    a1 = u64 [s1]
 29068: ab c8 f2                 jump @1592 if a1 != a5
      :                          @1595
 29071: 7b 6b                    u64 [s1] = a4
 29073: 01                       fallthrough
      :                          @1596
 29074: 82 59 30                 a2 = u64 [s0 + 0x30]
 29077: 51 09 40                 jump @1603 if a2 == 0
      :                          @1597
 29080: 96 97 14                 a0 = a2 * 0x14
 29083: 95 77 1b                 a0 = a0 + 0x1b
 29086: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 29089: c8 a9 09                 a2 = a2 + a3
 29092: 95 99 09                 a2 = a2 + 0x9
 29095: c8 92 02                 t0 = t0 + a2
 29098: 53 22 00 f0 2b           jump @1603 if t0 <u 4294963200
      :                          @1598
 29103: 82 58 28                 a1 = u64 [s0 + 0x28]
 29106: c9 a8 08                 a1 = a1 - a3
 29109: 95 4a 00 10              a3 = t2 + 0x1000
 29113: 01                       fallthrough
      :                          @1599
 29114: 82 ab                    a4 = u64 [a3]
 29116: c9 ba 07                 a0 = a3 - a4
 29119: ab 87 16                 jump @1603 if a0 != a1
      :                          @1600
 29122: c9 9b 07                 a0 = a4 - a2
 29125: 01                       fallthrough
      :                          @1601
 29126: 82 ac                    a5 = u64 [a3]
 29128: ab bc f2                 jump @1599 if a5 != a4
      :                          @1602
 29131: 7b a7                    u64 [a3] = a0
 29133: 33 06                    s1 = 0
 29135: 95 48 00 10              a1 = t2 + 0x1000
 29139: 28 07                    jump @1604
      :                          @1603
 29141: 95 48 00 10              a1 = t2 + 0x1000
 29145: 01                       fallthrough
      :                          @1604
 29146: 82 89                    a2 = u64 [a1]
 29148: c9 98 07                 a0 = a1 - a2
 29151: ab 57 14                 jump @1608 if a0 != s0
      :                          @1605
 29154: 95 97 b0                 a0 = a2 + 0xffffffffffffffb0
 29157: 01                       fallthrough
      :                          @1606
 29158: 82 8a                    a3 = u64 [a1]
 29160: ab 9a f2                 jump @1604 if a3 != a2
      :                          @1607
 29163: 7b 87                    u64 [a1] = a0
 29165: 33 0b                    a4 = 0
 29167: 64 35                    s0 = t1
 29169: 28 05                    jump @1609
      :                          @1608
 29171: 64 35                    s0 = t1
 29173: 01                       fallthrough
      :                          @1609
 29174: 64 57                    a0 = s0
 29176: 82 10 88 01              ra = u64 [sp + 0x188]
 29180: 82 15 80 01              s0 = u64 [sp + 0x180]
 29184: 82 16 78 01              s1 = u64 [sp + 0x178]
 29188: 95 11 90 01              sp = sp + 0x190
 29192: 32 00                    ret
      :                          @1610
 29194: 50 20 40 01 2a           ra = 320, jump @1616
      :                          @1611 [@dyn 160]
 29199: 64 75                    s0 = a0
 29201: 28 01 f7                 jump @1552
      :                          @1612
 29204: 82 19 50                 a2 = u64 [sp + 0x50]
 29207: 95 17 30                 a0 = sp + 0x30
 29210: 50 20 42 01 33 c7        ra = 322, jump @1126
      :                          @1613 [@dyn 161]
 29216: 28 46 f8                 jump @1560
      :                          @1614
 29219: 64 a8                    a1 = a3
 29221: 82 19 28                 a2 = u64 [sp + 0x28]
 29224: 95 17 08                 a0 = sp + 0x8
 29227: 50 20 44 01 2d d0        ra = 324, jump @1198
      :                          @1615 [@dyn 162]
 29233: 28 97 fd                 jump @1568
      :                          @1616
 29236: 95 11 48 ff              sp = sp + 0xffffffffffffff48
 29240: 7b 10 b0 00              u64 [sp + 0xb0] = ra
 29244: 7b 15 a8 00              u64 [sp + 0xa8] = s0
 29248: 7b 16 a0 00              u64 [sp + 0xa0] = s1
 29252: 3a 05 30 00 03           s0 = u64 [0x30030]
 29257: 51 05 8e 01              jump @1650 if s0 == 0
      :                          @1617
 29261: 95 17 50                 a0 = sp + 0x50
 29264: 64 58                    a1 = s0
 29266: 50 20 46 01 cc dc        ra = 326, jump @1325
      :                          @1618 [@dyn 163]
 29272: 95 58 28                 a1 = s0 + 0x28
 29275: 95 17 78                 a0 = sp + 0x78
 29278: 50 20 48 01 18 de        ra = 328, jump @1347
      :                          @1619 [@dyn 164]
 29284: 82 17 70                 a0 = u64 [sp + 0x70]
 29287: 82 18 68                 a1 = u64 [sp + 0x68]
 29290: 7b 17 20                 u64 [sp + 0x20] = a0
 29293: 7b 18 18                 u64 [sp + 0x18] = a1
 29296: 82 17 60                 a0 = u64 [sp + 0x60]
 29299: 82 18 58                 a1 = u64 [sp + 0x58]
 29302: 82 19 50                 a2 = u64 [sp + 0x50]
 29305: 82 1a 78                 a3 = u64 [sp + 0x78]
 29308: 7b 17 10                 u64 [sp + 0x10] = a0
 29311: 7b 18 08                 u64 [sp + 0x8] = a1
 29314: 7b 19                    u64 [sp] = a2
 29316: 7b 1a 28                 u64 [sp + 0x28] = a3
 29319: 82 17 80 00              a0 = u64 [sp + 0x80]
 29323: 82 18 88 00              a1 = u64 [sp + 0x88]
 29327: 82 19 90 00              a2 = u64 [sp + 0x90]
 29331: 82 1a 98 00              a3 = u64 [sp + 0x98]
 29335: 7b 17 30                 u64 [sp + 0x30] = a0
 29338: 7b 18 38                 u64 [sp + 0x38] = a1
 29341: 7b 19 40                 u64 [sp + 0x40] = a2
 29344: 7b 1a 48                 u64 [sp + 0x48] = a3
 29347: 33 07 5a 01              a0 = 0x15a
 29351: 7b 17 50                 u64 [sp + 0x50] = a0
 29354: 49 11 58                 u64 [sp + 88] = 0
 29357: 49 11 60                 u64 [sp + 96] = 0
 29360: 48 11 68 00 00 00 0a     u32 [sp + 104] = 0xa000000
 29367: 64 17                    a0 = sp
 29369: 95 18 50                 a1 = sp + 0x50
 29372: 50 20 4a 01 2f 03        ra = 330, jump @1694
      :                          @1620 [@dyn 165]
 29378: 33 02 80 00 03           t0 = 0x30080
 29383: 95 27 00 10              a0 = t0 + 0x1000
 29387: 33 08 a8 0f              a1 = 0xfa8
 29391: 01                       fallthrough
      :                          @1621
 29392: 82 79                    a2 = u64 [a0]
 29394: ac 98 f3 8d              jump @24 if a1 <u a2
      :                          @1622
 29398: c9 92 0a                 a3 = t0 - a2
 29401: 95 aa ff 07              a3 = a3 + 0x7ff
 29405: 95 aa b1 07              a3 = a3 + 0x7b1
 29409: 84 ab 07                 a4 = a3 & 0x7
 29412: c8 b9 0c                 a5 = a2 + a4
 29415: 95 cc 50                 a5 = a5 + 0x50
 29418: 01                       fallthrough
      :                          @1623
 29419: 82 75                    s0 = u64 [a0]
 29421: ab 95 e3                 jump @1621 if s0 != a2
      :                          @1624
 29424: 7b 7c                    u64 [a0] = a5
 29426: 64 26                    s1 = t0
 29428: c9 ba 05                 s0 = a3 - a4
 29431: 64 18                    a1 = sp
 29433: 33 09 50                 a2 = 0x50
 29436: 64 57                    a0 = s0
 29438: 50 20 4c 01 35 17        ra = 332, jump @1890
      :                          @1625 [@dyn 166]
 29444: 33 08 38 00 03           a1 = 0x30038
 29449: 01                       fallthrough
      :                          @1626
 29450: 3a 03 38 00 03           t1 = u64 [0x30038]
 29455: 52 03 0b                 jump @1628 if t1 != 0
      :                          @1627
 29458: 3e 05 38 00 03           u64 [0x30038] = s0
 29463: 33 09                    a2 = 0
 29465: 01                       fallthrough
      :                          @1628
 29466: 51 03 a9 00              jump @1649 if t1 == 0
      :                          @1629
 29470: 82 59 08                 a2 = u64 [s0 + 0x8]
 29473: 33 0a 00 f0              a3 = 0xfffffffffffff000
 29477: 33 02 ff ef              t0 = 0xffffffffffffefff
 29481: 64 64                    t2 = s1
 29483: 51 09 36                 jump @1636 if a2 == 0
      :                          @1630
 29486: 97 9b 05                 a4 = a2 << 0x5
 29489: c8 b9 09                 a2 = a2 + a4
 29492: 95 99 29                 a2 = a2 + 0x29
 29495: 95 9c ff ef              a5 = a2 + 0xffffffffffffefff
 29499: 53 2c 00 f0 26           jump @1636 if a5 <u 4294963200
      :                          @1631
 29504: 82 5a                    a3 = u64 [s0]
 29506: c9 ba 0a                 a3 = a3 - a4
 29509: 95 aa e0                 a3 = a3 + 0xffffffffffffffe0
 29512: 95 46 00 10              s1 = t2 + 0x1000
 29516: 01                       fallthrough
      :                          @1632
 29517: 82 6c                    a5 = u64 [s1]
 29519: c9 c6 0b                 a4 = s1 - a5
 29522: ab ab 0f                 jump @1636 if a4 != a3
      :                          @1633
 29525: c9 9c 0b                 a4 = a5 - a2
 29528: 01                       fallthrough
      :                          @1634
 29529: 82 68                    a1 = u64 [s1]
 29531: ab c8 f2                 jump @1632 if a1 != a5
      :                          @1635
 29534: 7b 6b                    u64 [s1] = a4
 29536: 01                       fallthrough
      :                          @1636
 29537: 82 59 30                 a2 = u64 [s0 + 0x30]
 29540: 51 09 3e                 jump @1643 if a2 == 0
      :                          @1637
 29543: 96 97 14                 a0 = a2 * 0x14
 29546: 95 77 1b                 a0 = a0 + 0x1b
 29549: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 29552: c8 a9 09                 a2 = a2 + a3
 29555: 95 99 09                 a2 = a2 + 0x9
 29558: c8 92 02                 t0 = t0 + a2
 29561: 53 22 00 f0 29           jump @1643 if t0 <u 4294963200
      :                          @1638
 29566: 82 58 28                 a1 = u64 [s0 + 0x28]
 29569: c9 a8 08                 a1 = a1 - a3
 29572: 95 4a 00 10              a3 = t2 + 0x1000
 29576: 01                       fallthrough
      :                          @1639
 29577: 82 ab                    a4 = u64 [a3]
 29579: c9 ba 07                 a0 = a3 - a4
 29582: ab 87 14                 jump @1643 if a0 != a1
      :                          @1640
 29585: c9 9b 07                 a0 = a4 - a2
 29588: 01                       fallthrough
      :                          @1641
 29589: 82 ac                    a5 = u64 [a3]
 29591: ab bc f2                 jump @1639 if a5 != a4
      :                          @1642
 29594: 7b a7                    u64 [a3] = a0
 29596: 95 46 00 10              s1 = t2 + 0x1000
 29600: 28 07                    jump @1644
      :                          @1643
 29602: 95 46 00 10              s1 = t2 + 0x1000
 29606: 01                       fallthrough
      :                          @1644
 29607: 82 68                    a1 = u64 [s1]
 29609: c9 86 07                 a0 = s1 - a1
 29612: ab 57 14                 jump @1648 if a0 != s0
      :                          @1645
 29615: 95 87 b0                 a0 = a1 + 0xffffffffffffffb0
 29618: 01                       fallthrough
      :                          @1646
 29619: 82 69                    a2 = u64 [s1]
 29621: ab 89 f2                 jump @1644 if a2 != a1
      :                          @1647
 29624: 7b 67                    u64 [s1] = a0
 29626: 33 0a                    a3 = 0
 29628: 64 35                    s0 = t1
 29630: 28 05                    jump @1649
      :                          @1648
 29632: 64 35                    s0 = t1
 29634: 01                       fallthrough
      :                          @1649
 29635: 64 57                    a0 = s0
 29637: 82 10 b0 00              ra = u64 [sp + 0xb0]
 29641: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 29645: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 29649: 95 11 b8 00              sp = sp + 0xb8
 29653: 32 00                    ret
      :                          @1650
 29655: 50 20 4e 01 0a           ra = 334, jump @1652
      :                          @1651 [@dyn 167]
 29660: 64 75                    s0 = a0
 29662: 28 6f fe                 jump @1617
      :                          @1652
 29665: 95 11 48 ff              sp = sp + 0xffffffffffffff48
 29669: 7b 10 b0 00              u64 [sp + 0xb0] = ra
 29673: 7b 15 a8 00              u64 [sp + 0xa8] = s0
 29677: 7b 16 a0 00              u64 [sp + 0xa0] = s1
 29681: 3a 05 28 00 03           s0 = u64 [0x30028]
 29686: 51 05 7c 01              jump @1686 if s0 == 0
      :                          @1653
 29690: 95 17 50                 a0 = sp + 0x50
 29693: 64 58                    a1 = s0
 29695: 50 20 50 01 1f db        ra = 336, jump @1325
      :                          @1654 [@dyn 168]
 29701: 95 58 28                 a1 = s0 + 0x28
 29704: 95 17 78                 a0 = sp + 0x78
 29707: 50 20 52 01 6b dc        ra = 338, jump @1347
      :                          @1655 [@dyn 169]
 29713: 82 17 70                 a0 = u64 [sp + 0x70]
 29716: 82 18 68                 a1 = u64 [sp + 0x68]
 29719: 7b 17 20                 u64 [sp + 0x20] = a0
 29722: 7b 18 18                 u64 [sp + 0x18] = a1
 29725: 82 17 60                 a0 = u64 [sp + 0x60]
 29728: 82 18 58                 a1 = u64 [sp + 0x58]
 29731: 82 19 50                 a2 = u64 [sp + 0x50]
 29734: 82 1a 78                 a3 = u64 [sp + 0x78]
 29737: 7b 17 10                 u64 [sp + 0x10] = a0
 29740: 7b 18 08                 u64 [sp + 0x8] = a1
 29743: 7b 19                    u64 [sp] = a2
 29745: 7b 1a 28                 u64 [sp + 0x28] = a3
 29748: 82 17 80 00              a0 = u64 [sp + 0x80]
 29752: 82 18 88 00              a1 = u64 [sp + 0x88]
 29756: 82 19 90 00              a2 = u64 [sp + 0x90]
 29760: 82 1a 98 00              a3 = u64 [sp + 0x98]
 29764: 7b 17 30                 u64 [sp + 0x30] = a0
 29767: 7b 18 38                 u64 [sp + 0x38] = a1
 29770: 7b 19 40                 u64 [sp + 0x40] = a2
 29773: 7b 1a 48                 u64 [sp + 0x48] = a3
 29776: 33 08 f8 02 01           a1 = 0x102f8
 29781: 64 17                    a0 = sp
 29783: 50 20 54 01 94 01        ra = 340, jump @1694
      :                          @1656 [@dyn 170]
 29789: 33 02 80 00 03           t0 = 0x30080
 29794: 95 27 00 10              a0 = t0 + 0x1000
 29798: 33 08 a8 0f              a1 = 0xfa8
 29802: 01                       fallthrough
      :                          @1657
 29803: 82 79                    a2 = u64 [a0]
 29805: ac 98 58 8c              jump @24 if a1 <u a2
      :                          @1658
 29809: c9 92 0a                 a3 = t0 - a2
 29812: 95 aa ff 07              a3 = a3 + 0x7ff
 29816: 95 aa b1 07              a3 = a3 + 0x7b1
 29820: 84 ab 07                 a4 = a3 & 0x7
 29823: c8 b9 0c                 a5 = a2 + a4
 29826: 95 cc 50                 a5 = a5 + 0x50
 29829: 01                       fallthrough
      :                          @1659
 29830: 82 75                    s0 = u64 [a0]
 29832: ab 95 e3                 jump @1657 if s0 != a2
      :                          @1660
 29835: 7b 7c                    u64 [a0] = a5
 29837: 64 26                    s1 = t0
 29839: c9 ba 05                 s0 = a3 - a4
 29842: 64 18                    a1 = sp
 29844: 33 09 50                 a2 = 0x50
 29847: 64 57                    a0 = s0
 29849: 50 20 56 01 9a 15        ra = 342, jump @1890
      :                          @1661 [@dyn 171]
 29855: 33 08 30 00 03           a1 = 0x30030
 29860: 01                       fallthrough
      :                          @1662
 29861: 3a 03 30 00 03           t1 = u64 [0x30030]
 29866: 52 03 0b                 jump @1664 if t1 != 0
      :                          @1663
 29869: 3e 05 30 00 03           u64 [0x30030] = s0
 29874: 33 09                    a2 = 0
 29876: 01                       fallthrough
      :                          @1664
 29877: 51 03 a9 00              jump @1685 if t1 == 0
      :                          @1665
 29881: 82 59 08                 a2 = u64 [s0 + 0x8]
 29884: 33 0a 00 f0              a3 = 0xfffffffffffff000
 29888: 33 02 ff ef              t0 = 0xffffffffffffefff
 29892: 64 64                    t2 = s1
 29894: 51 09 36                 jump @1672 if a2 == 0
      :                          @1666
 29897: 97 9b 05                 a4 = a2 << 0x5
 29900: c8 b9 09                 a2 = a2 + a4
 29903: 95 99 29                 a2 = a2 + 0x29
 29906: 95 9c ff ef              a5 = a2 + 0xffffffffffffefff
 29910: 53 2c 00 f0 26           jump @1672 if a5 <u 4294963200
      :                          @1667
 29915: 82 5a                    a3 = u64 [s0]
 29917: c9 ba 0a                 a3 = a3 - a4
 29920: 95 aa e0                 a3 = a3 + 0xffffffffffffffe0
 29923: 95 46 00 10              s1 = t2 + 0x1000
 29927: 01                       fallthrough
      :                          @1668
 29928: 82 6c                    a5 = u64 [s1]
 29930: c9 c6 0b                 a4 = s1 - a5
 29933: ab ab 0f                 jump @1672 if a4 != a3
      :                          @1669
 29936: c9 9c 0b                 a4 = a5 - a2
 29939: 01                       fallthrough
      :                          @1670
 29940: 82 68                    a1 = u64 [s1]
 29942: ab c8 f2                 jump @1668 if a1 != a5
      :                          @1671
 29945: 7b 6b                    u64 [s1] = a4
 29947: 01                       fallthrough
      :                          @1672
 29948: 82 59 30                 a2 = u64 [s0 + 0x30]
 29951: 51 09 3e                 jump @1679 if a2 == 0
      :                          @1673
 29954: 96 97 14                 a0 = a2 * 0x14
 29957: 95 77 1b                 a0 = a0 + 0x1b
 29960: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 29963: c8 a9 09                 a2 = a2 + a3
 29966: 95 99 09                 a2 = a2 + 0x9
 29969: c8 92 02                 t0 = t0 + a2
 29972: 53 22 00 f0 29           jump @1679 if t0 <u 4294963200
      :                          @1674
 29977: 82 58 28                 a1 = u64 [s0 + 0x28]
 29980: c9 a8 08                 a1 = a1 - a3
 29983: 95 4a 00 10              a3 = t2 + 0x1000
 29987: 01                       fallthrough
      :                          @1675
 29988: 82 ab                    a4 = u64 [a3]
 29990: c9 ba 07                 a0 = a3 - a4
 29993: ab 87 14                 jump @1679 if a0 != a1
      :                          @1676
 29996: c9 9b 07                 a0 = a4 - a2
 29999: 01                       fallthrough
      :                          @1677
 30000: 82 ac                    a5 = u64 [a3]
 30002: ab bc f2                 jump @1675 if a5 != a4
      :                          @1678
 30005: 7b a7                    u64 [a3] = a0
 30007: 95 46 00 10              s1 = t2 + 0x1000
 30011: 28 07                    jump @1680
      :                          @1679
 30013: 95 46 00 10              s1 = t2 + 0x1000
 30017: 01                       fallthrough
      :                          @1680
 30018: 82 68                    a1 = u64 [s1]
 30020: c9 86 07                 a0 = s1 - a1
 30023: ab 57 14                 jump @1684 if a0 != s0
      :                          @1681
 30026: 95 87 b0                 a0 = a1 + 0xffffffffffffffb0
 30029: 01                       fallthrough
      :                          @1682
 30030: 82 69                    a2 = u64 [s1]
 30032: ab 89 f2                 jump @1680 if a2 != a1
      :                          @1683
 30035: 7b 67                    u64 [s1] = a0
 30037: 33 0a                    a3 = 0
 30039: 64 35                    s0 = t1
 30041: 28 05                    jump @1685
      :                          @1684
 30043: 64 35                    s0 = t1
 30045: 01                       fallthrough
      :                          @1685
 30046: 64 57                    a0 = s0
 30048: 82 10 b0 00              ra = u64 [sp + 0xb0]
 30052: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 30056: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 30060: 95 11 b8 00              sp = sp + 0xb8
 30064: 32 00                    ret
      :                          @1686
 30066: 50 20 58 01 15 02        ra = 344, jump @1713
      :                          @1687 [@dyn 172]
 30072: 64 75                    s0 = a0
 30074: 28 80 fe                 jump @1653
      :                          @1688 [@dyn 173]
 30077: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 30080: 7b 10 10                 u64 [sp + 0x10] = ra
 30083: 7b 15 08                 u64 [sp + 0x8] = s0
 30086: 7b 16                    u64 [sp] = s1
 30088: 33 08 48 00 03           a1 = 0x30048
 30093: 33 02 80 00 03           t0 = 0x30080
 30098: 95 29 00 10              a2 = t0 + 0x1000
 30102: 33 0a f8 03              a3 = 0x3f8
 30106: 01                       fallthrough
      :                          @1689
 30107: 82 9b                    a4 = u64 [a2]
 30109: 98 bc 02                 a5 = a4 >> 0x2
 30112: ac ca 25 8b              jump @24 if a3 <u a5
      :                          @1690
 30116: 95 bc 1c                 a5 = a4 + 0x1c
 30119: 01                       fallthrough
      :                          @1691
 30120: 82 95                    s0 = u64 [a2]
 30122: ab b5 f1                 jump @1689 if s0 != a4
      :                          @1692
 30125: 7b 9c                    u64 [a2] = a5
 30127: c9 b2 08                 a1 = t0 - a4
 30130: 95 88 ff 07              a1 = a1 + 0x7ff
 30134: 95 85 e5 07              s0 = a1 + 0x7e5
 30138: 33 08 18 03 01           a1 = 0x10318
 30143: 33 09 1c                 a2 = 0x1c
 30146: 64 76                    s1 = a0
 30148: 64 57                    a0 = s0
 30150: 50 20 5c 01 6d 14        ra = 348, jump @1890
      :                          @1693 [@dyn 174]
 30156: 49 16 08 0c              u64 [s1 + 8] = 0xc
 30160: 33 07 1c                 a0 = 0x1c
 30163: 7b 67 10                 u64 [s1 + 0x10] = a0
 30166: 7b 65 18                 u64 [s1 + 0x18] = s0
 30169: 7b 67 20                 u64 [s1 + 0x20] = a0
 30172: 49 06                    u64 [s1 + 0] = 0
 30174: 82 10 10                 ra = u64 [sp + 0x10]
 30177: 82 15 08                 s0 = u64 [sp + 0x8]
 30180: 82 16                    s1 = u64 [sp]
 30182: 95 11 18                 sp = sp + 0x18
 30185: 32 00                    ret
      :                          @1694
 30187: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 30190: 7b 10 38                 u64 [sp + 0x38] = ra
 30193: 7b 15 30                 u64 [sp + 0x30] = s0
 30196: 7b 16 28                 u64 [sp + 0x28] = s1
 30199: 33 09 48 00 03           a2 = 0x30048
 30204: 33 04 80 00 03           t2 = 0x30080
 30209: 95 43 00 10              t1 = t2 + 0x1000
 30213: 33 02 d8 0f              t0 = 0xfd8
 30217: 01                       fallthrough
      :                          @1695
 30218: 82 36                    s1 = u64 [t1]
 30220: ac 62 b9 8a              jump @24 if t0 <u s1
      :                          @1696
 30224: c9 64 0c                 a5 = t2 - s1
 30227: 95 cc ff 07              a5 = a5 + 0x7ff
 30231: 95 c5 e1 07              s0 = a5 + 0x7e1
 30235: 84 5c 07                 a5 = s0 & 0x7
 30238: c8 c6 0b                 a4 = s1 + a5
 30241: 95 bb 20                 a4 = a4 + 0x20
 30244: 01                       fallthrough
      :                          @1697
 30245: 82 3a                    a3 = u64 [t1]
 30247: ab 6a e3                 jump @1695 if a3 != s1
      :                          @1698
 30250: 7b 3b                    u64 [t1] = a4
 30252: 01                       fallthrough
      :                          @1699
 30253: 82 89 18                 a2 = u64 [a1 + 0x18]
 30256: c9 c5 05                 s0 = s0 - a5
 30259: 7b 59 18                 u64 [s0 + 0x18] = a2
 30262: 82 89 10                 a2 = u64 [a1 + 0x10]
 30265: 82 8a 08                 a3 = u64 [a1 + 0x8]
 30268: 82 88                    a1 = u64 [a1]
 30270: 82 7b 38                 a4 = u64 [a0 + 0x38]
 30273: 7b 59 10                 u64 [s0 + 0x10] = a2
 30276: 7b 5a 08                 u64 [s0 + 0x8] = a3
 30279: 7b 58                    u64 [s0] = a1
 30281: 7b 17 08                 u64 [sp + 0x8] = a0
 30284: 95 77 28                 a0 = a0 + 0x28
 30287: 51 0b 0c 01              jump @1709 if a4 == 0
      :                          @1700
 30291: 7c 58 19                 a1 = u8 [s0 + 0x19]
 30294: 7c 59 18                 a2 = u8 [s0 + 0x18]
 30297: 7c 5a 1a                 a3 = u8 [s0 + 0x1a]
 30300: 7c 5b 1b                 a4 = u8 [s0 + 0x1b]
 30303: 97 88 08                 a1 = a1 << 0x8
 30306: d4 98 08                 a1 = a1 | a2
 30309: 97 aa 10                 a3 = a3 << 0x10
 30312: 97 bb 18                 a4 = a4 << 0x18
 30315: d4 ba 0a                 a3 = a3 | a4
 30318: d4 a8 08                 a1 = a1 | a3
 30321: 7a 18 20                 u32 [sp + 0x20] = a1
 30324: 7c 58 11                 a1 = u8 [s0 + 0x11]
 30327: 7c 59 10                 a2 = u8 [s0 + 0x10]
 30330: 7c 5a 12                 a3 = u8 [s0 + 0x12]
 30333: 7c 5b 13                 a4 = u8 [s0 + 0x13]
 30336: 97 88 08                 a1 = a1 << 0x8
 30339: d4 98 08                 a1 = a1 | a2
 30342: 97 aa 10                 a3 = a3 << 0x10
 30345: 97 bb 18                 a4 = a4 << 0x18
 30348: d4 ba 0a                 a3 = a3 | a4
 30351: d4 a8 08                 a1 = a1 | a3
 30354: 7c 59 15                 a2 = u8 [s0 + 0x15]
 30357: 7c 5a 14                 a3 = u8 [s0 + 0x14]
 30360: 7c 5b 16                 a4 = u8 [s0 + 0x16]
 30363: 7c 5c 17                 a5 = u8 [s0 + 0x17]
 30366: 97 99 08                 a2 = a2 << 0x8
 30369: d4 a9 09                 a2 = a2 | a3
 30372: 97 bb 10                 a4 = a4 << 0x10
 30375: 97 cc 18                 a5 = a5 << 0x18
 30378: d4 cb 0b                 a4 = a4 | a5
 30381: d4 b9 09                 a2 = a2 | a4
 30384: 97 99 20                 a2 = a2 << 0x20
 30387: d4 98 08                 a1 = a1 | a2
 30390: 7b 18 18                 u64 [sp + 0x18] = a1
 30393: 7c 58 09                 a1 = u8 [s0 + 0x9]
 30396: 7c 59 08                 a2 = u8 [s0 + 0x8]
 30399: 7c 5a 0a                 a3 = u8 [s0 + 0xa]
 30402: 7c 5b 0b                 a4 = u8 [s0 + 0xb]
 30405: 97 88 08                 a1 = a1 << 0x8
 30408: d4 98 08                 a1 = a1 | a2
 30411: 97 aa 10                 a3 = a3 << 0x10
 30414: 97 bb 18                 a4 = a4 << 0x18
 30417: d4 ba 0a                 a3 = a3 | a4
 30420: d4 a8 08                 a1 = a1 | a3
 30423: 7c 59 0d                 a2 = u8 [s0 + 0xd]
 30426: 7c 5a 0c                 a3 = u8 [s0 + 0xc]
 30429: 7c 5b 0e                 a4 = u8 [s0 + 0xe]
 30432: 7c 5c 0f                 a5 = u8 [s0 + 0xf]
 30435: 97 99 08                 a2 = a2 << 0x8
 30438: d4 a9 09                 a2 = a2 | a3
 30441: 97 bb 10                 a4 = a4 << 0x10
 30444: 97 cc 18                 a5 = a5 << 0x18
 30447: d4 cb 0b                 a4 = a4 | a5
 30450: d4 b9 09                 a2 = a2 | a4
 30453: 97 99 20                 a2 = a2 << 0x20
 30456: d4 98 08                 a1 = a1 | a2
 30459: 7b 18 10                 u64 [sp + 0x10] = a1
 30462: 95 18 10                 a1 = sp + 0x10
 30465: 50 20 5e 01 14 df        ra = 350, jump @1396
      :                          @1701 [@dyn 175]
 30471: 82 17 08                 a0 = u64 [sp + 0x8]
 30474: 82 78 10                 a1 = u64 [a0 + 0x10]
 30477: 51 08 66                 jump @1711 if a1 == 0
      :                          @1702
 30480: 81 58 18                 a1 = i32 [s0 + 0x18]
 30483: 82 5a 10                 a3 = u64 [s0 + 0x10]
 30486: 82 5b 08                 a4 = u64 [s0 + 0x8]
 30489: 82 59                    a2 = u64 [s0]
 30491: 7a 18 20                 u32 [sp + 0x20] = a1
 30494: 7b 1a 18                 u64 [sp + 0x18] = a3
 30497: 7b 1b 10                 u64 [sp + 0x10] = a4
 30500: 95 18 10                 a1 = sp + 0x10
 30503: 50 20 60 01 9b e1        ra = 352, jump @1412
      :                          @1703 [@dyn 176]
 30509: 33 07 80 00 03           a0 = 0x30080
 30514: 95 76 00 10              s1 = a0 + 0x1000
 30518: 01                       fallthrough
      :                          @1704
 30519: 82 67                    a0 = u64 [s1]
 30521: c9 76 08                 a1 = s1 - a0
 30524: ab 58 11                 jump @1708 if a1 != s0
      :                          @1705
 30527: 95 78 e0                 a1 = a0 + 0xffffffffffffffe0
 30530: 01                       fallthrough
      :                          @1706
 30531: 82 69                    a2 = u64 [s1]
 30533: ab 79 f2                 jump @1704 if a2 != a0
      :                          @1707
 30536: 7b 68                    u64 [s1] = a1
 30538: 33 0a                    a3 = 0
 30540: 01                       fallthrough
      :                          @1708
 30541: 82 10 38                 ra = u64 [sp + 0x38]
 30544: 82 15 30                 s0 = u64 [sp + 0x30]
 30547: 82 16 28                 s1 = u64 [sp + 0x28]
 30550: 95 11 40                 sp = sp + 0x40
 30553: 32 00                    ret
      :                          @1709
 30555: 82 18 08                 a1 = u64 [sp + 0x8]
 30558: 82 89 48                 a2 = u64 [a1 + 0x48]
 30561: 33 08 01                 a1 = 0x1
 30564: 7b 17                    u64 [sp] = a0
 30566: 82 17                    a0 = u64 [sp]
 30568: 50 20 62 01 e5 c1        ra = 354, jump @1126
      :                          @1710 [@dyn 177]
 30574: 82 17                    a0 = u64 [sp]
 30576: 28 e3 fe                 jump @1700
      :                          @1711
 30579: 82 79 20                 a2 = u64 [a0 + 0x20]
 30582: 33 08 01                 a1 = 0x1
 30585: 82 17 08                 a0 = u64 [sp + 0x8]
 30588: 50 20 64 01 dc ca        ra = 356, jump @1198
      :                          @1712 [@dyn 178]
 30594: 82 17 08                 a0 = u64 [sp + 0x8]
 30597: 28 8b                    jump @1702
      :                          @1713
 30599: 95 11 f0 fe              sp = sp + 0xfffffffffffffef0
 30603: 7b 10 08 01              u64 [sp + 0x108] = ra
 30607: 7b 15 00 01              u64 [sp + 0x100] = s0
 30611: 7b 16 f8 00              u64 [sp + 0xf8] = s1
 30615: 3a 05 20 00 03           s0 = u64 [0x30020]
 30620: 51 05 d2 01              jump @1747 if s0 == 0
      :                          @1714
 30624: 95 17 50                 a0 = sp + 0x50
 30627: 64 58                    a1 = s0
 30629: 50 20 66 01 79 d7        ra = 358, jump @1325
      :                          @1715 [@dyn 179]
 30635: 95 58 28                 a1 = s0 + 0x28
 30638: 95 17 d0 00              a0 = sp + 0xd0
 30642: 50 20 68 01 c4 d8        ra = 360, jump @1347
      :                          @1716 [@dyn 180]
 30648: 82 17 70                 a0 = u64 [sp + 0x70]
 30651: 82 18 68                 a1 = u64 [sp + 0x68]
 30654: 7b 17 20                 u64 [sp + 0x20] = a0
 30657: 7b 18 18                 u64 [sp + 0x18] = a1
 30660: 82 17 60                 a0 = u64 [sp + 0x60]
 30663: 82 18 58                 a1 = u64 [sp + 0x58]
 30666: 82 19 50                 a2 = u64 [sp + 0x50]
 30669: 82 1a d0 00              a3 = u64 [sp + 0xd0]
 30673: 7b 17 10                 u64 [sp + 0x10] = a0
 30676: 7b 18 08                 u64 [sp + 0x8] = a1
 30679: 7b 19                    u64 [sp] = a2
 30681: 7b 1a 28                 u64 [sp + 0x28] = a3
 30684: 82 17 d8 00              a0 = u64 [sp + 0xd8]
 30688: 82 18 e0 00              a1 = u64 [sp + 0xe0]
 30692: 82 19 e8 00              a2 = u64 [sp + 0xe8]
 30696: 82 1a f0 00              a3 = u64 [sp + 0xf0]
 30700: 7b 17 30                 u64 [sp + 0x30] = a0
 30703: 7b 18 38                 u64 [sp + 0x38] = a1
 30706: 7b 19 40                 u64 [sp + 0x40] = a2
 30709: 7b 1a 48                 u64 [sp + 0x48] = a3
 30712: 49 11 68 00 00 00 06     u64 [sp + 104] = 0x6000000
 30719: 49 11 60                 u64 [sp + 96] = 0
 30722: 49 11 58                 u64 [sp + 88] = 0
 30725: 49 11 50 c0 a8 09        u64 [sp + 80] = 0x9a8c0
 30731: 49 11 70 9c a8 09        u64 [sp + 112] = 0x9a89c
 30737: 49 11 78                 u64 [sp + 120] = 0
 30740: 49 21 80 00              u64 [sp + 128] = 0
 30744: 49 21 88 00 00 00 00 07  u64 [sp + 136] = 0x7000000
 30752: 49 21 90 00 70 a8 09     u64 [sp + 144] = 0x9a870
 30759: 49 21 98 00              u64 [sp + 152] = 0
 30763: 49 21 a0 00              u64 [sp + 160] = 0
 30767: 49 21 a8 00 00 00 00 08  u64 [sp + 168] = 0x8000000
 30775: 49 21 c8 00 00 00 00 09  u64 [sp + 200] = 0x9000000
 30783: 49 21 c0 00              u64 [sp + 192] = 0
 30787: 49 21 b8 00              u64 [sp + 184] = 0
 30791: 49 21 b0 00 ee 99 09     u64 [sp + 176] = 0x999ee
 30798: 64 17                    a0 = sp
 30800: 95 18 50                 a1 = sp + 0x50
 30803: 50 20 6a 01 9b d9        ra = 362, jump @1371
      :                          @1717 [@dyn 181]
 30809: 33 02 80 00 03           t0 = 0x30080
 30814: 95 27 00 10              a0 = t0 + 0x1000
 30818: 33 08 a8 0f              a1 = 0xfa8
 30822: 01                       fallthrough
      :                          @1718
 30823: 82 79                    a2 = u64 [a0]
 30825: ac 98 5c 88              jump @24 if a1 <u a2
      :                          @1719
 30829: c9 92 0a                 a3 = t0 - a2
 30832: 95 aa ff 07              a3 = a3 + 0x7ff
 30836: 95 aa b1 07              a3 = a3 + 0x7b1
 30840: 84 ab 07                 a4 = a3 & 0x7
 30843: c8 b9 0c                 a5 = a2 + a4
 30846: 95 cc 50                 a5 = a5 + 0x50
 30849: 01                       fallthrough
      :                          @1720
 30850: 82 75                    s0 = u64 [a0]
 30852: ab 95 e3                 jump @1718 if s0 != a2
      :                          @1721
 30855: 7b 7c                    u64 [a0] = a5
 30857: 64 26                    s1 = t0
 30859: c9 ba 05                 s0 = a3 - a4
 30862: 64 18                    a1 = sp
 30864: 33 09 50                 a2 = 0x50
 30867: 64 57                    a0 = s0
 30869: 50 20 6c 01 9e 11        ra = 364, jump @1890
      :                          @1722 [@dyn 182]
 30875: 33 08 28 00 03           a1 = 0x30028
 30880: 01                       fallthrough
      :                          @1723
 30881: 3a 03 28 00 03           t1 = u64 [0x30028]
 30886: 52 03 0b                 jump @1725 if t1 != 0
      :                          @1724
 30889: 3e 05 28 00 03           u64 [0x30028] = s0
 30894: 33 09                    a2 = 0
 30896: 01                       fallthrough
      :                          @1725
 30897: 51 03 a9 00              jump @1746 if t1 == 0
      :                          @1726
 30901: 82 59 08                 a2 = u64 [s0 + 0x8]
 30904: 33 0a 00 f0              a3 = 0xfffffffffffff000
 30908: 33 02 ff ef              t0 = 0xffffffffffffefff
 30912: 64 64                    t2 = s1
 30914: 51 09 36                 jump @1733 if a2 == 0
      :                          @1727
 30917: 97 9b 05                 a4 = a2 << 0x5
 30920: c8 b9 09                 a2 = a2 + a4
 30923: 95 99 29                 a2 = a2 + 0x29
 30926: 95 9c ff ef              a5 = a2 + 0xffffffffffffefff
 30930: 53 2c 00 f0 26           jump @1733 if a5 <u 4294963200
      :                          @1728
 30935: 82 5a                    a3 = u64 [s0]
 30937: c9 ba 0a                 a3 = a3 - a4
 30940: 95 aa e0                 a3 = a3 + 0xffffffffffffffe0
 30943: 95 46 00 10              s1 = t2 + 0x1000
 30947: 01                       fallthrough
      :                          @1729
 30948: 82 6c                    a5 = u64 [s1]
 30950: c9 c6 0b                 a4 = s1 - a5
 30953: ab ab 0f                 jump @1733 if a4 != a3
      :                          @1730
 30956: c9 9c 0b                 a4 = a5 - a2
 30959: 01                       fallthrough
      :                          @1731
 30960: 82 68                    a1 = u64 [s1]
 30962: ab c8 f2                 jump @1729 if a1 != a5
      :                          @1732
 30965: 7b 6b                    u64 [s1] = a4
 30967: 01                       fallthrough
      :                          @1733
 30968: 82 59 30                 a2 = u64 [s0 + 0x30]
 30971: 51 09 3e                 jump @1740 if a2 == 0
      :                          @1734
 30974: 96 97 14                 a0 = a2 * 0x14
 30977: 95 77 1b                 a0 = a0 + 0x1b
 30980: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 30983: c8 a9 09                 a2 = a2 + a3
 30986: 95 99 09                 a2 = a2 + 0x9
 30989: c8 92 02                 t0 = t0 + a2
 30992: 53 22 00 f0 29           jump @1740 if t0 <u 4294963200
      :                          @1735
 30997: 82 58 28                 a1 = u64 [s0 + 0x28]
 31000: c9 a8 08                 a1 = a1 - a3
 31003: 95 4a 00 10              a3 = t2 + 0x1000
 31007: 01                       fallthrough
      :                          @1736
 31008: 82 ab                    a4 = u64 [a3]
 31010: c9 ba 07                 a0 = a3 - a4
 31013: ab 87 14                 jump @1740 if a0 != a1
      :                          @1737
 31016: c9 9b 07                 a0 = a4 - a2
 31019: 01                       fallthrough
      :                          @1738
 31020: 82 ac                    a5 = u64 [a3]
 31022: ab bc f2                 jump @1736 if a5 != a4
      :                          @1739
 31025: 7b a7                    u64 [a3] = a0
 31027: 95 46 00 10              s1 = t2 + 0x1000
 31031: 28 07                    jump @1741
      :                          @1740
 31033: 95 46 00 10              s1 = t2 + 0x1000
 31037: 01                       fallthrough
      :                          @1741
 31038: 82 68                    a1 = u64 [s1]
 31040: c9 86 07                 a0 = s1 - a1
 31043: ab 57 14                 jump @1745 if a0 != s0
      :                          @1742
 31046: 95 87 b0                 a0 = a1 + 0xffffffffffffffb0
 31049: 01                       fallthrough
      :                          @1743
 31050: 82 69                    a2 = u64 [s1]
 31052: ab 89 f2                 jump @1741 if a2 != a1
      :                          @1744
 31055: 7b 67                    u64 [s1] = a0
 31057: 33 0a                    a3 = 0
 31059: 64 35                    s0 = t1
 31061: 28 05                    jump @1746
      :                          @1745
 31063: 64 35                    s0 = t1
 31065: 01                       fallthrough
      :                          @1746
 31066: 64 57                    a0 = s0
 31068: 82 10 08 01              ra = u64 [sp + 0x108]
 31072: 82 15 00 01              s0 = u64 [sp + 0x100]
 31076: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 31080: 95 11 10 01              sp = sp + 0x110
 31084: 32 00                    ret
      :                          @1747
 31086: 50 20 6e 01 72 d1        ra = 366, jump @1252
      :                          @1748 [@dyn 183]
 31092: 64 75                    s0 = a0
 31094: 28 2a fe                 jump @1714
      :                          @1749 [@dyn 184]
 31097: 95 11 c8 fe              sp = sp + 0xfffffffffffffec8
 31101: 7b 10 30 01              u64 [sp + 0x130] = ra
 31105: 7b 15 28 01              u64 [sp + 0x128] = s0
 31109: 7b 16 20 01              u64 [sp + 0x120] = s1
 31113: 33 0a c8 00              a3 = 0xc8
 31117: ae a9 0b                 jump @1751 if a2 >=u a3
      :                          @1750
 31120: 49 17 08                 u64 [a0 + 8] = 0
 31123: 49 07                    u64 [a0 + 0] = 0
 31125: 28 e6 06                 jump @1782
      :                          @1751
 31128: 7b 17 70                 u64 [sp + 0x70] = a0
 31131: 82 8a 10                 a3 = u64 [a1 + 0x10]
 31134: 82 85 08                 s0 = u64 [a1 + 0x8]
 31137: 7b 1a 80 00              u64 [sp + 0x80] = a3
 31141: 7b 19 20                 u64 [sp + 0x20] = a2
 31144: 54 1a 1f 21 01           jump @1753 if a3 <=u 31
      :                          @1752
 31149: 7c 57 01                 a0 = u8 [s0 + 0x1]
 31152: 7c 58                    a1 = u8 [s0]
 31154: 7c 59 02                 a2 = u8 [s0 + 0x2]
 31157: 7c 5a 03                 a3 = u8 [s0 + 0x3]
 31160: 97 77 08                 a0 = a0 << 0x8
 31163: d4 87 07                 a0 = a0 | a1
 31166: 97 99 10                 a2 = a2 << 0x10
 31169: 97 aa 18                 a3 = a3 << 0x18
 31172: d4 a9 09                 a2 = a2 | a3
 31175: d4 97 07                 a0 = a0 | a2
 31178: 7c 58 05                 a1 = u8 [s0 + 0x5]
 31181: 7c 59 04                 a2 = u8 [s0 + 0x4]
 31184: 7c 5a 06                 a3 = u8 [s0 + 0x6]
 31187: 7c 5b 07                 a4 = u8 [s0 + 0x7]
 31190: 97 88 08                 a1 = a1 << 0x8
 31193: d4 98 08                 a1 = a1 | a2
 31196: 97 aa 10                 a3 = a3 << 0x10
 31199: 97 bb 18                 a4 = a4 << 0x18
 31202: d4 ba 0a                 a3 = a3 | a4
 31205: d4 a8 08                 a1 = a1 | a3
 31208: 97 89 20                 a2 = a1 << 0x20
 31211: d4 79 02                 t0 = a2 | a0
 31214: 7c 59 09                 a2 = u8 [s0 + 0x9]
 31217: 7c 5a 08                 a3 = u8 [s0 + 0x8]
 31220: 7c 5b 0a                 a4 = u8 [s0 + 0xa]
 31223: 7c 5c 0b                 a5 = u8 [s0 + 0xb]
 31226: 97 99 08                 a2 = a2 << 0x8
 31229: d4 a9 09                 a2 = a2 | a3
 31232: 97 bb 10                 a4 = a4 << 0x10
 31235: 97 cc 18                 a5 = a5 << 0x18
 31238: d4 cb 0b                 a4 = a4 | a5
 31241: d4 9b 0b                 a4 = a4 | a2
 31244: 7c 59 0d                 a2 = u8 [s0 + 0xd]
 31247: 7c 5a 0c                 a3 = u8 [s0 + 0xc]
 31250: 7c 5c 0e                 a5 = u8 [s0 + 0xe]
 31253: 7c 56 0f                 s1 = u8 [s0 + 0xf]
 31256: 97 99 08                 a2 = a2 << 0x8
 31259: d4 a9 09                 a2 = a2 | a3
 31262: 97 cc 10                 a5 = a5 << 0x10
 31265: 97 66 18                 s1 = s1 << 0x18
 31268: d4 6c 0c                 a5 = a5 | s1
 31271: d4 c9 09                 a2 = a2 | a5
 31274: 97 9a 20                 a3 = a2 << 0x20
 31277: d4 ba 0a                 a3 = a3 | a4
 31280: 7b 1a 68                 u64 [sp + 0x68] = a3
 31283: 7c 5a 11                 a3 = u8 [s0 + 0x11]
 31286: 7c 5b 10                 a4 = u8 [s0 + 0x10]
 31289: 7c 5c 12                 a5 = u8 [s0 + 0x12]
 31292: 7c 56 13                 s1 = u8 [s0 + 0x13]
 31295: 97 aa 08                 a3 = a3 << 0x8
 31298: d4 ba 0a                 a3 = a3 | a4
 31301: 97 cc 10                 a5 = a5 << 0x10
 31304: 97 66 18                 s1 = s1 << 0x18
 31307: d4 6c 0c                 a5 = a5 | s1
 31310: d4 ca 0a                 a3 = a3 | a5
 31313: 7c 5b 15                 a4 = u8 [s0 + 0x15]
 31316: 7c 5c 14                 a5 = u8 [s0 + 0x14]
 31319: 7c 56 16                 s1 = u8 [s0 + 0x16]
 31322: 7c 57 17                 a0 = u8 [s0 + 0x17]
 31325: 97 bb 08                 a4 = a4 << 0x8
 31328: d4 cb 0b                 a4 = a4 | a5
 31331: 97 66 10                 s1 = s1 << 0x10
 31334: 97 77 18                 a0 = a0 << 0x18
 31337: d4 67 07                 a0 = a0 | s1
 31340: d4 b7 07                 a0 = a0 | a4
 31343: 97 77 20                 a0 = a0 << 0x20
 31346: d4 a7 07                 a0 = a0 | a3
 31349: 7b 17 58                 u64 [sp + 0x58] = a0
 31352: 7c 57 19                 a0 = u8 [s0 + 0x19]
 31355: 7c 5a 18                 a3 = u8 [s0 + 0x18]
 31358: 7c 5b 1a                 a4 = u8 [s0 + 0x1a]
 31361: 7c 5c 1b                 a5 = u8 [s0 + 0x1b]
 31364: 97 77 08                 a0 = a0 << 0x8
 31367: d4 a7 07                 a0 = a0 | a3
 31370: 97 bb 10                 a4 = a4 << 0x10
 31373: 97 cc 18                 a5 = a5 << 0x18
 31376: 7c 5a 1d                 a3 = u8 [s0 + 0x1d]
 31379: 7c 56 1c                 s1 = u8 [s0 + 0x1c]
 31382: d4 cb 0b                 a4 = a4 | a5
 31385: d4 b7 07                 a0 = a0 | a4
 31388: 97 aa 08                 a3 = a3 << 0x8
 31391: d4 6a 0a                 a3 = a3 | s1
 31394: 7c 5b 1e                 a4 = u8 [s0 + 0x1e]
 31397: 7c 5c 1f                 a5 = u8 [s0 + 0x1f]
 31400: 8b 88 18                 i32 a1 = a1 >> 0x18
 31403: 8b 99 18                 i32 a2 = a2 >> 0x18
 31406: 7b 19 60                 u64 [sp + 0x60] = a2
 31409: 97 bb 10                 a4 = a4 << 0x10
 31412: 97 cc 18                 a5 = a5 << 0x18
 31415: d4 cb 0b                 a4 = a4 | a5
 31418: d4 ba 0a                 a3 = a3 | a4
 31421: 97 aa 20                 a3 = a3 << 0x20
 31424: d4 a7 07                 a0 = a0 | a3
 31427: 7b 17 50                 u64 [sp + 0x50] = a0
 31430: 28 a1 00                 jump @1755
      :                          @1753
 31433: 49 21 c0 00              u64 [sp + 192] = 0
 31437: 49 21 b8 00              u64 [sp + 184] = 0
 31441: 49 21 b0 00              u64 [sp + 176] = 0
 31445: 49 21 a8 00              u64 [sp + 168] = 0
 31449: 95 17 a8 00              a0 = sp + 0xa8
 31453: 64 58                    a1 = s0
 31455: 82 19 80 00              a2 = u64 [sp + 0x80]
 31459: 50 20 72 01 50 0f        ra = 370, jump @1890
      :                          @1754 [@dyn 185]
 31465: 7e 17 ac 00              a0 = u16 [sp + 0xac]
 31469: 7c 18 ae 00              a1 = u8 [sp + 0xae]
 31473: 80 19 a8 00              a2 = u32 [sp + 0xa8]
 31477: 97 77 20                 a0 = a0 << 0x20
 31480: 97 88 30                 a1 = a1 << 0x30
 31483: d4 87 07                 a0 = a0 | a1
 31486: d4 79 02                 t0 = a2 | a0
 31489: 7c 17 b0 00              a0 = u8 [sp + 0xb0]
 31493: 7c 18 af 00              a1 = u8 [sp + 0xaf]
 31497: 7c 19 b1 00              a2 = u8 [sp + 0xb1]
 31501: 7c 1a b2 00              a3 = u8 [sp + 0xb2]
 31505: 97 77 08                 a0 = a0 << 0x8
 31508: d4 87 07                 a0 = a0 | a1
 31511: 97 99 10                 a2 = a2 << 0x10
 31514: 97 aa 18                 a3 = a3 << 0x18
 31517: d4 a9 09                 a2 = a2 | a3
 31520: d4 97 07                 a0 = a0 | a2
 31523: 7c 18 b4 00              a1 = u8 [sp + 0xb4]
 31527: 7c 19 b3 00              a2 = u8 [sp + 0xb3]
 31531: 7c 1a b5 00              a3 = u8 [sp + 0xb5]
 31535: 7c 1b b6 00              a4 = u8 [sp + 0xb6]
 31539: 97 88 08                 a1 = a1 << 0x8
 31542: d4 98 08                 a1 = a1 | a2
 31545: 97 aa 10                 a3 = a3 << 0x10
 31548: 97 bb 18                 a4 = a4 << 0x18
 31551: d4 ba 0a                 a3 = a3 | a4
 31554: d4 a8 08                 a1 = a1 | a3
 31557: 7c 19 b7 00              a2 = u8 [sp + 0xb7]
 31561: 7b 19 60                 u64 [sp + 0x60] = a2
 31564: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 31568: 7b 19 58                 u64 [sp + 0x58] = a2
 31571: 82 19 c0 00              a2 = u64 [sp + 0xc0]
 31575: 7b 19 50                 u64 [sp + 0x50] = a2
 31578: 97 88 20                 a1 = a1 << 0x20
 31581: d4 78 08                 a1 = a1 | a0
 31584: 98 87 08                 a0 = a1 >> 0x8
 31587: 7b 17 68                 u64 [sp + 0x68] = a0
 31590: 01                       fallthrough
      :                          @1755
 31591: 33 03 ff                 t1 = 0xffffffffffffffff
 31594: 97 84 38                 t2 = a1 << 0x38
 31597: 97 22 08                 t0 = t0 << 0x8
 31600: 98 20 08                 ra = t0 >> 0x8
 31603: 82 18 80 00              a1 = u64 [sp + 0x80]
 31607: 88 87 20                 a0 = a1 <u 0x20
 31610: 95 5a 20                 a3 = s0 + 0x20
 31613: 33 0b 20                 a4 = 0x20
 31616: e4 b8 09                 a2 = maxu(a1, a4)
 31619: 95 99 e0                 a2 = a2 + 0xffffffffffffffe0
 31622: 33 08 01                 a1 = 0x1
 31625: da 7a 08                 a1 = a3 if a0 == 0
 31628: ac b9 26 01              jump @1757 if a2 <u a4
      :                          @1756
 31632: 7c 87 01                 a0 = u8 [a1 + 0x1]
 31635: 7c 89                    a2 = u8 [a1]
 31637: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 31640: 7c 8b 03                 a4 = u8 [a1 + 0x3]
 31643: 97 77 08                 a0 = a0 << 0x8
 31646: d4 97 07                 a0 = a0 | a2
 31649: 97 aa 10                 a3 = a3 << 0x10
 31652: 97 bb 18                 a4 = a4 << 0x18
 31655: d4 ba 0a                 a3 = a3 | a4
 31658: d4 7a 0a                 a3 = a3 | a0
 31661: 7c 87 05                 a0 = u8 [a1 + 0x5]
 31664: 7c 89 04                 a2 = u8 [a1 + 0x4]
 31667: 7c 8b 06                 a4 = u8 [a1 + 0x6]
 31670: 7c 8c 07                 a5 = u8 [a1 + 0x7]
 31673: 97 77 08                 a0 = a0 << 0x8
 31676: d4 97 07                 a0 = a0 | a2
 31679: 97 bb 10                 a4 = a4 << 0x10
 31682: 97 cc 18                 a5 = a5 << 0x18
 31685: d4 cb 0b                 a4 = a4 | a5
 31688: d4 7b 02                 t0 = a4 | a0
 31691: 97 29 20                 a2 = t0 << 0x20
 31694: d4 a9 09                 a2 = a2 | a3
 31697: 7b 19 48                 u64 [sp + 0x48] = a2
 31700: 7c 89 09                 a2 = u8 [a1 + 0x9]
 31703: 7c 8a 08                 a3 = u8 [a1 + 0x8]
 31706: 7c 8b 0a                 a4 = u8 [a1 + 0xa]
 31709: 7c 8c 0b                 a5 = u8 [a1 + 0xb]
 31712: 97 99 08                 a2 = a2 << 0x8
 31715: d4 a9 09                 a2 = a2 | a3
 31718: 97 bb 10                 a4 = a4 << 0x10
 31721: 97 cc 18                 a5 = a5 << 0x18
 31724: d4 cb 0b                 a4 = a4 | a5
 31727: d4 9b 0b                 a4 = a4 | a2
 31730: 7c 89 0d                 a2 = u8 [a1 + 0xd]
 31733: 7c 8a 0c                 a3 = u8 [a1 + 0xc]
 31736: 7c 8c 0e                 a5 = u8 [a1 + 0xe]
 31739: 7c 86 0f                 s1 = u8 [a1 + 0xf]
 31742: 97 99 08                 a2 = a2 << 0x8
 31745: d4 a9 09                 a2 = a2 | a3
 31748: 97 cc 10                 a5 = a5 << 0x10
 31751: 97 66 18                 s1 = s1 << 0x18
 31754: d4 6c 0c                 a5 = a5 | s1
 31757: d4 c9 09                 a2 = a2 | a5
 31760: 97 9a 20                 a3 = a2 << 0x20
 31763: d4 ba 0a                 a3 = a3 | a4
 31766: 7b 1a 38                 u64 [sp + 0x38] = a3
 31769: 7c 8a 11                 a3 = u8 [a1 + 0x11]
 31772: 7c 8b 10                 a4 = u8 [a1 + 0x10]
 31775: 7c 8c 12                 a5 = u8 [a1 + 0x12]
 31778: 7c 86 13                 s1 = u8 [a1 + 0x13]
 31781: 97 aa 08                 a3 = a3 << 0x8
 31784: d4 ba 0a                 a3 = a3 | a4
 31787: 97 cc 10                 a5 = a5 << 0x10
 31790: 97 66 18                 s1 = s1 << 0x18
 31793: d4 6c 0c                 a5 = a5 | s1
 31796: d4 ca 0a                 a3 = a3 | a5
 31799: 7c 8b 15                 a4 = u8 [a1 + 0x15]
 31802: 7c 8c 14                 a5 = u8 [a1 + 0x14]
 31805: 7c 86 16                 s1 = u8 [a1 + 0x16]
 31808: 7c 87 17                 a0 = u8 [a1 + 0x17]
 31811: 97 bb 08                 a4 = a4 << 0x8
 31814: d4 cb 0b                 a4 = a4 | a5
 31817: 97 66 10                 s1 = s1 << 0x10
 31820: 97 77 18                 a0 = a0 << 0x18
 31823: d4 67 07                 a0 = a0 | s1
 31826: d4 b7 07                 a0 = a0 | a4
 31829: 97 77 20                 a0 = a0 << 0x20
 31832: d4 a7 07                 a0 = a0 | a3
 31835: 7b 17 28                 u64 [sp + 0x28] = a0
 31838: 7c 87 19                 a0 = u8 [a1 + 0x19]
 31841: 7c 8a 18                 a3 = u8 [a1 + 0x18]
 31844: 7c 8b 1a                 a4 = u8 [a1 + 0x1a]
 31847: 7c 8c 1b                 a5 = u8 [a1 + 0x1b]
 31850: 97 77 08                 a0 = a0 << 0x8
 31853: d4 a7 07                 a0 = a0 | a3
 31856: 97 bb 10                 a4 = a4 << 0x10
 31859: 97 cc 18                 a5 = a5 << 0x18
 31862: 7c 8a 1d                 a3 = u8 [a1 + 0x1d]
 31865: 7c 86 1c                 s1 = u8 [a1 + 0x1c]
 31868: d4 cb 0b                 a4 = a4 | a5
 31871: d4 b7 07                 a0 = a0 | a4
 31874: 97 aa 08                 a3 = a3 << 0x8
 31877: d4 6a 0a                 a3 = a3 | s1
 31880: 7c 8b 1e                 a4 = u8 [a1 + 0x1e]
 31883: 7c 88 1f                 a1 = u8 [a1 + 0x1f]
 31886: 8b 2c 18                 i32 a5 = t0 >> 0x18
 31889: 7b 1c 40                 u64 [sp + 0x40] = a5
 31892: 8b 99 18                 i32 a2 = a2 >> 0x18
 31895: 7b 19 30                 u64 [sp + 0x30] = a2
 31898: 97 bb 10                 a4 = a4 << 0x10
 31901: 97 88 18                 a1 = a1 << 0x18
 31904: d4 b8 08                 a1 = a1 | a4
 31907: d4 a8 08                 a1 = a1 | a3
 31910: 97 88 20                 a1 = a1 << 0x20
 31913: d4 87 07                 a0 = a0 | a1
 31916: 7b 17 18                 u64 [sp + 0x18] = a0
 31919: 28 b2 00                 jump @1759
      :                          @1757
 31922: 49 21 c0 00              u64 [sp + 192] = 0
 31926: 49 21 b8 00              u64 [sp + 184] = 0
 31930: 49 21 b0 00              u64 [sp + 176] = 0
 31934: 49 21 a8 00              u64 [sp + 168] = 0
 31938: 95 17 a8 00              a0 = sp + 0xa8
 31942: 64 46                    s1 = t2
 31944: 7b 15 78                 u64 [sp + 0x78] = s0
 31947: 64 05                    s0 = ra
 31949: 50 20 74 01 66 0d        ra = 372, jump @1890
      :                          @1758 [@dyn 186]
 31955: 64 50                    ra = s0
 31957: 82 15 78                 s0 = u64 [sp + 0x78]
 31960: 64 64                    t2 = s1
 31962: 33 03 ff                 t1 = 0xffffffffffffffff
 31965: 7e 17 ac 00              a0 = u16 [sp + 0xac]
 31969: 7c 18 ae 00              a1 = u8 [sp + 0xae]
 31973: 80 19 a8 00              a2 = u32 [sp + 0xa8]
 31977: 97 77 20                 a0 = a0 << 0x20
 31980: 97 88 30                 a1 = a1 << 0x30
 31983: d4 87 07                 a0 = a0 | a1
 31986: d4 97 07                 a0 = a0 | a2
 31989: 7b 17 48                 u64 [sp + 0x48] = a0
 31992: 7c 17 b0 00              a0 = u8 [sp + 0xb0]
 31996: 7c 18 af 00              a1 = u8 [sp + 0xaf]
 32000: 7c 19 b1 00              a2 = u8 [sp + 0xb1]
 32004: 7c 1a b2 00              a3 = u8 [sp + 0xb2]
 32008: 97 77 08                 a0 = a0 << 0x8
 32011: d4 87 07                 a0 = a0 | a1
 32014: 97 99 10                 a2 = a2 << 0x10
 32017: 97 aa 18                 a3 = a3 << 0x18
 32020: d4 a9 09                 a2 = a2 | a3
 32023: d4 97 07                 a0 = a0 | a2
 32026: 7c 18 b4 00              a1 = u8 [sp + 0xb4]
 32030: 7c 19 b3 00              a2 = u8 [sp + 0xb3]
 32034: 7c 1a b5 00              a3 = u8 [sp + 0xb5]
 32038: 7c 1b b6 00              a4 = u8 [sp + 0xb6]
 32042: 97 88 08                 a1 = a1 << 0x8
 32045: d4 98 08                 a1 = a1 | a2
 32048: 97 aa 10                 a3 = a3 << 0x10
 32051: 97 bb 18                 a4 = a4 << 0x18
 32054: d4 ba 0a                 a3 = a3 | a4
 32057: d4 a8 08                 a1 = a1 | a3
 32060: 7c 19 b7 00              a2 = u8 [sp + 0xb7]
 32064: 7b 19 30                 u64 [sp + 0x30] = a2
 32067: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 32071: 7b 19 28                 u64 [sp + 0x28] = a2
 32074: 82 19 c0 00              a2 = u64 [sp + 0xc0]
 32078: 7b 19 18                 u64 [sp + 0x18] = a2
 32081: 97 88 20                 a1 = a1 << 0x20
 32084: d4 87 07                 a0 = a0 | a1
 32087: 7b 17 40                 u64 [sp + 0x40] = a0
 32090: 98 77 08                 a0 = a0 >> 0x8
 32093: 7b 17 38                 u64 [sp + 0x38] = a0
 32096: 01                       fallthrough
      :                          @1759
 32097: d4 04 07                 a0 = t2 | ra
 32100: 7b 17 78                 u64 [sp + 0x78] = a0
 32103: 82 1a 80 00              a3 = u64 [sp + 0x80]
 32107: 88 a7 40                 a0 = a3 <u 0x40
 32110: 95 59 40                 a2 = s0 + 0x40
 32113: 33 08 01                 a1 = 0x1
 32116: da 79 08                 a1 = a2 if a0 == 0
 32119: 33 07 40                 a0 = 0x40
 32122: e4 7a 07                 a0 = maxu(a3, a0)
 32125: 95 79 c0                 a2 = a0 + 0xffffffffffffffc0
 32128: 14 06 ff ff ff ff ff ff ff 00 s1 = 0xffffffffffffff
 32138: 53 19 20 2f 01           jump @1762 if a2 <u 32
      :                          @1760
 32143: 7c 87 01                 a0 = u8 [a1 + 0x1]
 32146: 7c 89                    a2 = u8 [a1]
 32148: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 32151: 7c 8b 03                 a4 = u8 [a1 + 0x3]
 32154: 97 77 08                 a0 = a0 << 0x8
 32157: d4 97 07                 a0 = a0 | a2
 32160: 97 aa 10                 a3 = a3 << 0x10
 32163: 97 bb 18                 a4 = a4 << 0x18
 32166: d4 ba 0a                 a3 = a3 | a4
 32169: d4 a7 07                 a0 = a0 | a3
 32172: 7c 89 05                 a2 = u8 [a1 + 0x5]
 32175: 7c 8a 04                 a3 = u8 [a1 + 0x4]
 32178: 7c 8b 06                 a4 = u8 [a1 + 0x6]
 32181: 7c 8c 07                 a5 = u8 [a1 + 0x7]
 32184: 97 99 08                 a2 = a2 << 0x8
 32187: d4 a9 09                 a2 = a2 | a3
 32190: 97 bb 10                 a4 = a4 << 0x10
 32193: 97 cc 18                 a5 = a5 << 0x18
 32196: d4 cb 0b                 a4 = a4 | a5
 32199: d4 9b 04                 t2 = a4 | a2
 32202: 97 4a 20                 a3 = t2 << 0x20
 32205: d4 a7 07                 a0 = a0 | a3
 32208: 7b 17 10                 u64 [sp + 0x10] = a0
 32211: 7c 87 09                 a0 = u8 [a1 + 0x9]
 32214: 7c 8a 08                 a3 = u8 [a1 + 0x8]
 32217: 7c 8b 0a                 a4 = u8 [a1 + 0xa]
 32220: 7c 8c 0b                 a5 = u8 [a1 + 0xb]
 32223: 97 77 08                 a0 = a0 << 0x8
 32226: d4 a7 07                 a0 = a0 | a3
 32229: 97 bb 10                 a4 = a4 << 0x10
 32232: 97 cc 18                 a5 = a5 << 0x18
 32235: d4 cb 0b                 a4 = a4 | a5
 32238: d4 b7 07                 a0 = a0 | a4
 32241: 7c 8a 0d                 a3 = u8 [a1 + 0xd]
 32244: 7c 8b 0c                 a4 = u8 [a1 + 0xc]
 32247: 7c 8c 0e                 a5 = u8 [a1 + 0xe]
 32250: 14 03 ff ff ff ff ff ff ff 00 t1 = 0xffffffffffffff
 32260: 7c 86 0f                 s1 = u8 [a1 + 0xf]
 32263: 97 aa 08                 a3 = a3 << 0x8
 32266: d4 ba 0a                 a3 = a3 | a4
 32269: 97 cc 10                 a5 = a5 << 0x10
 32272: 97 66 18                 s1 = s1 << 0x18
 32275: d4 6c 0c                 a5 = a5 | s1
 32278: d4 ac 0c                 a5 = a5 | a3
 32281: 97 cb 20                 a4 = a5 << 0x20
 32284: d4 7b 02                 t0 = a4 | a0
 32287: 7c 87 11                 a0 = u8 [a1 + 0x11]
 32290: 7c 8a 10                 a3 = u8 [a1 + 0x10]
 32293: 7c 86 12                 s1 = u8 [a1 + 0x12]
 32296: 7c 8b 13                 a4 = u8 [a1 + 0x13]
 32299: 97 77 08                 a0 = a0 << 0x8
 32302: d4 a7 07                 a0 = a0 | a3
 32305: 97 66 10                 s1 = s1 << 0x10
 32308: 97 bb 18                 a4 = a4 << 0x18
 32311: d4 6b 0b                 a4 = a4 | s1
 32314: d4 b7 07                 a0 = a0 | a4
 32317: 7c 8a 15                 a3 = u8 [a1 + 0x15]
 32320: 7c 8b 14                 a4 = u8 [a1 + 0x14]
 32323: 7c 86 16                 s1 = u8 [a1 + 0x16]
 32326: 7c 89 17                 a2 = u8 [a1 + 0x17]
 32329: 97 aa 08                 a3 = a3 << 0x8
 32332: d4 ba 0a                 a3 = a3 | a4
 32335: 97 66 10                 s1 = s1 << 0x10
 32338: 97 99 18                 a2 = a2 << 0x18
 32341: d4 69 09                 a2 = a2 | s1
 32344: d4 a9 09                 a2 = a2 | a3
 32347: 97 99 20                 a2 = a2 << 0x20
 32350: d4 79 00                 ra = a2 | a0
 32353: 7c 87 19                 a0 = u8 [a1 + 0x19]
 32356: 7c 89 18                 a2 = u8 [a1 + 0x18]
 32359: 7c 8b 1a                 a4 = u8 [a1 + 0x1a]
 32362: 7c 86 1b                 s1 = u8 [a1 + 0x1b]
 32365: 97 77 08                 a0 = a0 << 0x8
 32368: d4 97 07                 a0 = a0 | a2
 32371: 97 bb 10                 a4 = a4 << 0x10
 32374: 97 66 18                 s1 = s1 << 0x18
 32377: 7c 89 1d                 a2 = u8 [a1 + 0x1d]
 32380: 7c 8a 1c                 a3 = u8 [a1 + 0x1c]
 32383: d4 6b 0b                 a4 = a4 | s1
 32386: d4 7b 0b                 a4 = a4 | a0
 32389: 97 99 08                 a2 = a2 << 0x8
 32392: d4 9a 0a                 a3 = a3 | a2
 32395: 7c 86 1e                 s1 = u8 [a1 + 0x1e]
 32398: 7c 88 1f                 a1 = u8 [a1 + 0x1f]
 32401: 8b 47 18                 i32 a0 = t2 >> 0x18
 32404: 8b c9 18                 i32 a2 = a5 >> 0x18
 32407: 97 66 10                 s1 = s1 << 0x10
 32410: 97 88 18                 a1 = a1 << 0x18
 32413: d4 68 08                 a1 = a1 | s1
 32416: d4 a8 08                 a1 = a1 | a3
 32419: 97 88 20                 a1 = a1 << 0x20
 32422: d4 b8 08                 a1 = a1 | a4
 32425: d2 32 0b                 a4 = t0 & t1
 32428: 82 12 10                 t0 = u64 [sp + 0x10]
 32431: 82 1a 78                 a3 = u64 [sp + 0x78]
 32434: 51 0a 9f 00              jump @1764 if a3 == 0
      :                          @1761
 32438: 28 91 01                 jump @1777
      :                          @1762
 32441: 49 21 c0 00              u64 [sp + 192] = 0
 32445: 49 21 b8 00              u64 [sp + 184] = 0
 32449: 49 21 b0 00              u64 [sp + 176] = 0
 32453: 49 21 a8 00              u64 [sp + 168] = 0
 32457: 95 17 a8 00              a0 = sp + 0xa8
 32461: 50 20 76 01 66 0b        ra = 374, jump @1890
      :                          @1763 [@dyn 187]
 32467: 7e 17 ac 00              a0 = u16 [sp + 0xac]
 32471: 7c 18 ae 00              a1 = u8 [sp + 0xae]
 32475: 80 19 a8 00              a2 = u32 [sp + 0xa8]
 32479: 97 77 20                 a0 = a0 << 0x20
 32482: 97 88 30                 a1 = a1 << 0x30
 32485: d4 87 07                 a0 = a0 | a1
 32488: d4 79 02                 t0 = a2 | a0
 32491: 7c 17 b0 00              a0 = u8 [sp + 0xb0]
 32495: 7c 18 af 00              a1 = u8 [sp + 0xaf]
 32499: 7c 19 b1 00              a2 = u8 [sp + 0xb1]
 32503: 7c 1a b2 00              a3 = u8 [sp + 0xb2]
 32507: 97 77 08                 a0 = a0 << 0x8
 32510: d4 87 07                 a0 = a0 | a1
 32513: 97 99 10                 a2 = a2 << 0x10
 32516: 97 aa 18                 a3 = a3 << 0x18
 32519: d4 a9 09                 a2 = a2 | a3
 32522: d4 97 07                 a0 = a0 | a2
 32525: 7c 18 b4 00              a1 = u8 [sp + 0xb4]
 32529: 7c 19 b3 00              a2 = u8 [sp + 0xb3]
 32533: 7c 1a b5 00              a3 = u8 [sp + 0xb5]
 32537: 7c 1b b6 00              a4 = u8 [sp + 0xb6]
 32541: 97 88 08                 a1 = a1 << 0x8
 32544: d4 98 08                 a1 = a1 | a2
 32547: 97 aa 10                 a3 = a3 << 0x10
 32550: 97 bb 18                 a4 = a4 << 0x18
 32553: d4 ba 0a                 a3 = a3 | a4
 32556: d4 a8 08                 a1 = a1 | a3
 32559: 97 8a 20                 a3 = a1 << 0x20
 32562: 7c 19 b7 00              a2 = u8 [sp + 0xb7]
 32566: 82 10 b8 00              ra = u64 [sp + 0xb8]
 32570: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 32574: d4 a7 07                 a0 = a0 | a3
 32577: 98 7b 08                 a4 = a0 >> 0x8
 32580: 84 77 ff 00              a0 = a0 & 0xff
 32584: 64 63                    t1 = s1
 32586: 82 1a 78                 a3 = u64 [sp + 0x78]
 32589: 52 0a fa 00              jump @1777 if a3 != 0
      :                          @1764
 32593: 82 1a 60                 a3 = u64 [sp + 0x60]
 32596: 97 aa 38                 a3 = a3 << 0x38
 32599: 82 1c 68                 a5 = u64 [sp + 0x68]
 32602: d2 3c 0c                 a5 = a5 & t1
 32605: d4 ca 0a                 a3 = a3 | a5
 32608: 52 0a e7 00              jump @1777 if a3 != 0
      :                          @1765
 32612: 82 1a 58                 a3 = u64 [sp + 0x58]
 32615: 52 0a e0 00              jump @1777 if a3 != 0
      :                          @1766
 32619: 97 77 38                 a0 = a0 << 0x38
 32622: 97 22 08                 t0 = t0 << 0x8
 32625: 98 2a 08                 a3 = t0 >> 0x8
 32628: d4 a7 07                 a0 = a0 | a3
 32631: 52 07 d5 00              jump @1778 if a0 != 0
      :                          @1767
 32635: 97 99 38                 a2 = a2 << 0x38
 32638: d4 b9 09                 a2 = a2 | a4
 32641: 52 09 cb 00              jump @1778 if a2 != 0
      :                          @1768
 32645: 52 00 c7 00              jump @1778 if ra != 0
      :                          @1769
 32649: 82 17 50                 a0 = u64 [sp + 0x50]
 32652: 6f 7a                    a3 = reverse a0
 32654: 6f 87                    a0 = reverse a1
 32656: 7b 17 78                 u64 [sp + 0x78] = a0
 32659: d4 a7 07                 a0 = a0 | a3
 32662: 51 07 bb 00              jump @1779 if a0 == 0
      :                          @1770
 32666: 82 17 48                 a0 = u64 [sp + 0x48]
 32669: 97 77 08                 a0 = a0 << 0x8
 32672: 82 18 40                 a1 = u64 [sp + 0x40]
 32675: 97 88 38                 a1 = a1 << 0x38
 32678: 98 77 08                 a0 = a0 >> 0x8
 32681: d4 87 07                 a0 = a0 | a1
 32684: 52 07 c2 00              jump @1780 if a0 != 0
      :                          @1771
 32688: 82 17 30                 a0 = u64 [sp + 0x30]
 32691: 97 77 38                 a0 = a0 << 0x38
 32694: 82 18 38                 a1 = u64 [sp + 0x38]
 32697: d2 38 08                 a1 = a1 & t1
 32700: d4 87 07                 a0 = a0 | a1
 32703: 52 07 af 00              jump @1780 if a0 != 0
      :                          @1772
 32707: 82 17 28                 a0 = u64 [sp + 0x28]
 32710: 52 07 a8 00              jump @1780 if a0 != 0
      :                          @1773
 32714: 33 02 20                 t0 = 0x20
 32717: 82 19 80 00              a2 = u64 [sp + 0x80]
 32721: 88 97 60                 a0 = a2 <u 0x60
 32724: 95 5b 60                 a4 = s0 + 0x60
 32727: 33 08 60                 a1 = 0x60
 32730: e4 89 08                 a1 = maxu(a2, a1)
 32733: 95 8c a0                 a5 = a1 + 0xffffffffffffffa0
 32736: 94 7b 01                 a4 = 0x1 if a0 != 0
 32739: d8 ac 07                 a0 = a5 <u a3
 32742: 7b 1b 60                 u64 [sp + 0x60] = a4
 32745: c8 ab 08                 a1 = a4 + a3
 32748: 94 78 01                 a1 = 0x1 if a0 != 0
 32751: 7b 1c 58                 u64 [sp + 0x58] = a5
 32754: e4 ac 07                 a0 = maxu(a5, a3)
 32757: c9 a7 05                 s0 = a0 - a3
 32760: 82 17 18                 a0 = u64 [sp + 0x18]
 32763: 6f 7b                    a4 = reverse a0
 32765: 7b 1b 80 00              u64 [sp + 0x80] = a4
 32769: 7b 1a 68                 u64 [sp + 0x68] = a3
 32772: 7b 13 08                 u64 [sp + 0x8] = t1
 32775: ae 25 86 00              jump @1783 if s0 >=u t0
      :                          @1774
 32779: 49 21 18 01              u64 [sp + 280] = 0
 32783: 49 21 10 01              u64 [sp + 272] = 0
 32787: 49 21 08 01              u64 [sp + 264] = 0
 32791: 49 21 00 01              u64 [sp + 256] = 0
 32795: 95 17 00 01              a0 = sp + 0x100
 32799: 64 59                    a2 = s0
 32801: 50 20 78 01 12 0a        ra = 376, jump @1890
      :                          @1775 [@dyn 188]
 32807: 95 16 a9 00              s1 = sp + 0xa9
 32811: 95 18 00 01              a1 = sp + 0x100
 32815: 33 09 20                 a2 = 0x20
 32818: 64 67                    a0 = s1
 32820: 50 20 7a 01 ff 09        ra = 378, jump @1890
      :                          @1776 [@dyn 189]
 32826: 33 02 20                 t0 = 0x20
 32829: 82 1b 80 00              a4 = u64 [sp + 0x80]
 32833: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 32837: 28 4f                    jump @1784
      :                          @1777
 32839: 33 07 04                 a0 = 0x4
 32842: 28 28                    jump @1781
      :                          @1778
 32844: 33 07 05                 a0 = 0x5
 32847: 28 23                    jump @1781
      :                          @1779
 32849: 33 07 d0 02 01           a0 = 0x102d0
 32854: 82 18 70                 a1 = u64 [sp + 0x70]
 32857: 7b 87                    u64 [a1] = a0
 32859: 49 18 08 01              u64 [a1 + 8] = 0x1
 32863: 49 18 10                 u64 [a1 + 16] = 0
 32866: 49 18 18                 u64 [a1 + 24] = 0
 32869: 33 07 c8 00              a0 = 0xc8
 32873: 7b 87 20                 u64 [a1 + 0x20] = a0
 32876: 28 0f                    jump @1782
      :                          @1780
 32878: 33 07 03                 a0 = 0x3
 32881: 01                       fallthrough
      :                          @1781
 32882: 82 18 70                 a1 = u64 [sp + 0x70]
 32885: 7b 87 08                 u64 [a1 + 0x8] = a0
 32888: 49 08                    u64 [a1 + 0] = 0
 32890: 01                       fallthrough
      :                          @1782
 32891: 82 10 30 01              ra = u64 [sp + 0x130]
 32895: 82 15 28 01              s0 = u64 [sp + 0x128]
 32899: 82 16 20 01              s1 = u64 [sp + 0x120]
 32903: 95 11 38 01              sp = sp + 0x138
 32907: 32 00                    ret
      :                          @1783
 32909: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 32913: 64 86                    s1 = a1
 32915: 01                       fallthrough
      :                          @1784
 32916: 54 1b 1f 39 01           jump @1786 if a4 <=u 31
      :                          @1785
 32921: 88 54 20                 t2 = s0 <u 0x20
 32924: 7c 67 01                 a0 = u8 [s1 + 0x1]
 32927: 7c 6a                    a3 = u8 [s1]
 32929: 7c 6b 02                 a4 = u8 [s1 + 0x2]
 32932: 7c 6c 03                 a5 = u8 [s1 + 0x3]
 32935: 97 77 08                 a0 = a0 << 0x8
 32938: d4 a7 07                 a0 = a0 | a3
 32941: 97 bb 10                 a4 = a4 << 0x10
 32944: 97 cc 18                 a5 = a5 << 0x18
 32947: d4 cb 0b                 a4 = a4 | a5
 32950: d4 b7 07                 a0 = a0 | a4
 32953: 7c 6a 05                 a3 = u8 [s1 + 0x5]
 32956: 7c 6b 04                 a4 = u8 [s1 + 0x4]
 32959: 7c 6c 06                 a5 = u8 [s1 + 0x6]
 32962: 7c 66 07                 s1 = u8 [s1 + 0x7]
 32965: 97 aa 08                 a3 = a3 << 0x8
 32968: d4 ba 0a                 a3 = a3 | a4
 32971: 97 cc 10                 a5 = a5 << 0x10
 32974: 97 66 18                 s1 = s1 << 0x18
 32977: d4 c6 0b                 a4 = s1 | a5
 32980: d4 ab 00                 ra = a4 | a3
 32983: 97 0a 20                 a3 = ra << 0x20
 32986: d4 7a 02                 t0 = a3 | a0
 32989: 95 1a b1 00              a3 = sp + 0xb1
 32993: 95 8c 08                 a5 = a1 + 0x8
 32996: db 4a 0c                 a5 = a3 if t2 != 0
 32999: 7c ca 01                 a3 = u8 [a5 + 0x1]
 33002: 7c c6                    s1 = u8 [a5]
 33004: 7c c5 02                 s0 = u8 [a5 + 0x2]
 33007: 7c c7 03                 a0 = u8 [a5 + 0x3]
 33010: 97 aa 08                 a3 = a3 << 0x8
 33013: d4 6a 0a                 a3 = a3 | s1
 33016: 97 55 10                 s0 = s0 << 0x10
 33019: 97 77 18                 a0 = a0 << 0x18
 33022: d4 57 07                 a0 = a0 | s0
 33025: d4 a7 07                 a0 = a0 | a3
 33028: 7c ca 05                 a3 = u8 [a5 + 0x5]
 33031: 7c c6 04                 s1 = u8 [a5 + 0x4]
 33034: 7c c5 06                 s0 = u8 [a5 + 0x6]
 33037: 7c cc 07                 a5 = u8 [a5 + 0x7]
 33040: 97 aa 08                 a3 = a3 << 0x8
 33043: d4 6a 0a                 a3 = a3 | s1
 33046: 97 55 10                 s0 = s0 << 0x10
 33049: 97 cc 18                 a5 = a5 << 0x18
 33052: d4 5c 0c                 a5 = a5 | s0
 33055: d4 ac 06                 s1 = a5 | a3
 33058: 97 6a 20                 a3 = s1 << 0x20
 33061: d4 7a 03                 t1 = a3 | a0
 33064: 95 17 b9 00              a0 = sp + 0xb9
 33068: 95 8c 10                 a5 = a1 + 0x10
 33071: db 47 0c                 a5 = a0 if t2 != 0
 33074: 7c c7 01                 a0 = u8 [a5 + 0x1]
 33077: 7c c5                    s0 = u8 [a5]
 33079: 7c ca 02                 a3 = u8 [a5 + 0x2]
 33082: 7c c9 03                 a2 = u8 [a5 + 0x3]
 33085: 97 77 08                 a0 = a0 << 0x8
 33088: d4 57 07                 a0 = a0 | s0
 33091: 97 aa 10                 a3 = a3 << 0x10
 33094: 97 99 18                 a2 = a2 << 0x18
 33097: 7c c5 05                 s0 = u8 [a5 + 0x5]
 33100: 7c cb 04                 a4 = u8 [a5 + 0x4]
 33103: d4 a9 09                 a2 = a2 | a3
 33106: d4 97 07                 a0 = a0 | a2
 33109: 97 55 08                 s0 = s0 << 0x8
 33112: d4 b5 05                 s0 = s0 | a4
 33115: 7c c9 06                 a2 = u8 [a5 + 0x6]
 33118: 7c ca 07                 a3 = u8 [a5 + 0x7]
 33121: 8b 0c 18                 i32 a5 = ra >> 0x18
 33124: 8b 6b 18                 i32 a4 = s1 >> 0x18
 33127: 97 99 10                 a2 = a2 << 0x10
 33130: 97 aa 18                 a3 = a3 << 0x18
 33133: d4 a9 09                 a2 = a2 | a3
 33136: d4 59 09                 a2 = a2 | s0
 33139: 97 99 20                 a2 = a2 << 0x20
 33142: d4 79 00                 ra = a2 | a0
 33145: 95 17 c1 00              a0 = sp + 0xc1
 33149: 95 88 18                 a1 = a1 + 0x18
 33152: db 47 08                 a1 = a0 if t2 != 0
 33155: 7c 87 01                 a0 = u8 [a1 + 0x1]
 33158: 7c 89                    a2 = u8 [a1]
 33160: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 33163: 7c 86 03                 s1 = u8 [a1 + 0x3]
 33166: 97 77 08                 a0 = a0 << 0x8
 33169: d4 97 07                 a0 = a0 | a2
 33172: 97 aa 10                 a3 = a3 << 0x10
 33175: 97 66 18                 s1 = s1 << 0x18
 33178: d4 6a 0a                 a3 = a3 | s1
 33181: d4 a7 07                 a0 = a0 | a3
 33184: 7c 89 05                 a2 = u8 [a1 + 0x5]
 33187: 7c 8a 04                 a3 = u8 [a1 + 0x4]
 33190: 7c 86 06                 s1 = u8 [a1 + 0x6]
 33193: 7c 88 07                 a1 = u8 [a1 + 0x7]
 33196: 97 99 08                 a2 = a2 << 0x8
 33199: d4 a9 09                 a2 = a2 | a3
 33202: 97 66 10                 s1 = s1 << 0x10
 33205: 97 88 18                 a1 = a1 << 0x18
 33208: d4 68 08                 a1 = a1 | s1
 33211: d4 98 08                 a1 = a1 | a2
 33214: 97 88 20                 a1 = a1 << 0x20
 33217: d4 78 04                 t2 = a1 | a0
 33220: 82 17 08                 a0 = u64 [sp + 0x8]
 33223: d2 73 08                 a1 = t1 & a0
 33226: 28 9e 00                 jump @1788
      :                          @1786
 33229: e6 2b 09                 a2 = minu(a4, t0)
 33232: 49 21 18 01              u64 [sp + 280] = 0
 33236: 49 21 10 01              u64 [sp + 272] = 0
 33240: 49 21 08 01              u64 [sp + 264] = 0
 33244: 49 21 00 01              u64 [sp + 256] = 0
 33248: 95 17 00 01              a0 = sp + 0x100
 33252: c9 97 07                 a0 = a0 - a2
 33255: 95 77 20                 a0 = a0 + 0x20
 33258: 64 68                    a1 = s1
 33260: 50 20 7c 01 47 08        ra = 380, jump @1890
      :                          @1787 [@dyn 190]
 33266: 7e 17 04 01              a0 = u16 [sp + 0x104]
 33270: 7c 18 06 01              a1 = u8 [sp + 0x106]
 33274: 80 19 00 01              a2 = u32 [sp + 0x100]
 33278: 97 77 20                 a0 = a0 << 0x20
 33281: 97 88 30                 a1 = a1 << 0x30
 33284: d4 87 07                 a0 = a0 | a1
 33287: d4 79 02                 t0 = a2 | a0
 33290: 7c 17 08 01              a0 = u8 [sp + 0x108]
 33294: 7c 18 07 01              a1 = u8 [sp + 0x107]
 33298: 7c 19 09 01              a2 = u8 [sp + 0x109]
 33302: 7c 1a 0a 01              a3 = u8 [sp + 0x10a]
 33306: 97 77 08                 a0 = a0 << 0x8
 33309: d4 87 07                 a0 = a0 | a1
 33312: 97 99 10                 a2 = a2 << 0x10
 33315: 97 aa 18                 a3 = a3 << 0x18
 33318: d4 a9 09                 a2 = a2 | a3
 33321: d4 97 07                 a0 = a0 | a2
 33324: 7c 18 0c 01              a1 = u8 [sp + 0x10c]
 33328: 7c 19 0b 01              a2 = u8 [sp + 0x10b]
 33332: 7c 1a 0d 01              a3 = u8 [sp + 0x10d]
 33336: 7c 1b 0e 01              a4 = u8 [sp + 0x10e]
 33340: 97 88 08                 a1 = a1 << 0x8
 33343: d4 98 08                 a1 = a1 | a2
 33346: 97 aa 10                 a3 = a3 << 0x10
 33349: 97 bb 18                 a4 = a4 << 0x18
 33352: d4 ba 0a                 a3 = a3 | a4
 33355: d4 a8 08                 a1 = a1 | a3
 33358: 97 88 20                 a1 = a1 << 0x20
 33361: 7c 1b 0f 01              a4 = u8 [sp + 0x10f]
 33365: 82 10 10 01              ra = u64 [sp + 0x110]
 33369: 82 14 18 01              t2 = u64 [sp + 0x118]
 33373: d4 87 07                 a0 = a0 | a1
 33376: 98 78 08                 a1 = a0 >> 0x8
 33379: 84 7c ff 00              a5 = a0 & 0xff
 33383: 01                       fallthrough
      :                          @1788
 33384: 6f 45                    s0 = reverse t2
 33386: 6f 03                    t1 = reverse ra
 33388: 97 bb 38                 a4 = a4 << 0x38
 33391: d4 8b 09                 a2 = a4 | a1
 33394: 6f 9a                    a3 = reverse a2
 33396: 97 cc 38                 a5 = a5 << 0x38
 33399: 97 22 08                 t0 = t0 << 0x8
 33402: 98 26 08                 s1 = t0 >> 0x8
 33405: d4 c6 06                 s1 = s1 | a5
 33408: 6f 6b                    a4 = reverse s1
 33410: 7b 15 88 00              u64 [sp + 0x88] = s0
 33414: 7b 13 90 00              u64 [sp + 0x90] = t1
 33418: 7b 1a 98 00              u64 [sp + 0x98] = a3
 33422: 7b 1b a0 00              u64 [sp + 0xa0] = a4
 33426: 82 18 80 00              a1 = u64 [sp + 0x80]
 33430: 56 18 20 6a              jump @1796 if a1 >u 32
      :                          @1789
 33434: 7b 1a 40                 u64 [sp + 0x40] = a3
 33437: 7b 19 48                 u64 [sp + 0x48] = a2
 33440: 7b 13 30                 u64 [sp + 0x30] = t1
 33443: 7b 1b 50                 u64 [sp + 0x50] = a4
 33446: 7b 14 28                 u64 [sp + 0x28] = t2
 33449: 7b 10 38                 u64 [sp + 0x38] = ra
 33452: 33 08 30 02 01           a1 = 0x10230
 33457: 95 17 88 00              a0 = sp + 0x88
 33461: 33 09 20                 a2 = 0x20
 33464: 50 20 7e 01 2c 0a        ra = 382, jump @1954
      :                          @1790 [@dyn 191]
 33470: 83 77                    i32 a0 = a0 + 0
 33472: 51 07 88 02              jump @1831 if a0 == 0
      :                          @1791
 33476: 33 07 00 ff              a0 = 0xffffffffffffff00
 33480: 82 1b 68                 a4 = u64 [sp + 0x68]
 33483: 82 19 50                 a2 = u64 [sp + 0x50]
 33486: 52 06 28                 jump @1795 if s1 != 0
      :                          @1792
 33489: 33 07 40 ff              a0 = 0xffffffffffffff40
 33493: 82 19 40                 a2 = u64 [sp + 0x40]
 33496: 82 18 48                 a1 = u64 [sp + 0x48]
 33499: 52 08 1b                 jump @1795 if a1 != 0
      :                          @1793
 33502: 33 07 80                 a0 = 0xffffffffffffff80
 33505: 82 19 30                 a2 = u64 [sp + 0x30]
 33508: 82 18 38                 a1 = u64 [sp + 0x38]
 33511: 52 08 0f                 jump @1795 if a1 != 0
      :                          @1794
 33514: 33 07 c0                 a0 = 0xffffffffffffffc0
 33517: 64 59                    a2 = s0
 33519: 82 18 28                 a1 = u64 [sp + 0x28]
 33522: 51 08 67 02              jump @1833 if a1 == 0
      :                          @1795
 33526: 68 98                    a1 = clz a2
 33528: d4 87 07                 a0 = a0 | a1
 33531: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 33534: 28 48                    jump @1802
      :                          @1796
 33536: 95 87 e0                 a0 = a1 + 0xffffffffffffffe0
 33539: 98 78 3d                 a1 = a0 >> 0x3d
 33542: 97 7c 03                 a5 = a0 << 0x3
 33545: 33 07 ff                 a0 = 0xffffffffffffffff
 33548: da 8c 07                 a0 = a5 if a1 == 0
 33551: 33 08 00 ff              a1 = 0xffffffffffffff00
 33555: 52 06 1d                 jump @1800 if s1 != 0
      :                          @1797
 33558: 33 08 40 ff              a1 = 0xffffffffffffff40
 33562: 64 ab                    a4 = a3
 33564: 52 09 14                 jump @1800 if a2 != 0
      :                          @1798
 33567: 33 08 80                 a1 = 0xffffffffffffff80
 33570: 64 3b                    a4 = t1
 33572: 52 00 0c                 jump @1800 if ra != 0
      :                          @1799
 33575: 33 08 c0                 a1 = 0xffffffffffffffc0
 33578: 64 5b                    a4 = s0
 33580: 51 04 28 02              jump @1832 if t2 == 0
      :                          @1800
 33584: 68 b9                    a2 = clz a4
 33586: d4 98 08                 a1 = a1 | a2
 33589: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 33592: 01                       fallthrough
      :                          @1801
 33593: 82 1b 68                 a4 = u64 [sp + 0x68]
 33596: 85 89 ff                 a2 = a1 ^ 0xffffffffffffffff
 33599: e6 97 07                 a0 = minu(a0, a2)
 33602: c8 87 07                 a0 = a0 + a1
 33605: 01                       fallthrough
      :                          @1802
 33606: 82 16 78                 s1 = u64 [sp + 0x78]
 33609: 33 08 01                 a1 = 0x1
 33612: e4 87 07                 a0 = maxu(a0, a1)
 33615: 01                       fallthrough
      :                          @1803
 33616: e4 b6 08                 a1 = maxu(s1, a4)
 33619: 98 89 03                 a2 = a1 >> 0x3
 33622: 84 88 07                 a1 = a1 & 0x7
 33625: 8e 88                    a1 = a1 >u 0
 33627: c8 98 08                 a1 = a1 + a2
 33630: ca 88 09                 a2 = a1 * a1
 33633: d6 88 08                 a1 = a1 mulhu a1
 33636: ca 79 0a                 a3 = a2 * a0
 33639: d6 79 09                 a2 = a2 mulhu a0
 33642: 64 b5                    s0 = a4
 33644: d6 78 0b                 a4 = a1 mulhu a0
 33647: ca 78 07                 a0 = a1 * a0
 33650: c8 97 07                 a0 = a0 + a2
 33653: d8 97 08                 a1 = a0 <u a2
 33656: c8 b8 08                 a1 = a1 + a4
 33659: 49 21 c0 00              u64 [sp + 192] = 0
 33663: 49 21 b8 00              u64 [sp + 184] = 0
 33667: 49 21 b0 00              u64 [sp + 176] = 0
 33671: 7b 1a 00 01              u64 [sp + 0x100] = a3
 33675: 7b 17 08 01              u64 [sp + 0x108] = a0
 33679: 7b 18 10 01              u64 [sp + 0x110] = a1
 33683: 49 21 18 01              u64 [sp + 280] = 0
 33687: 49 21 a8 00 03           u64 [sp + 168] = 0x3
 33692: 95 17 00 01              a0 = sp + 0x100
 33696: 95 18 a8 00              a1 = sp + 0xa8
 33700: 50 20 80 01 e8 d8        ra = 384, jump @1440
      :                          @1804 [@dyn 192]
 33706: 82 17 10 01              a0 = u64 [sp + 0x110]
 33710: 82 18 18 01              a1 = u64 [sp + 0x118]
 33714: 82 19 08 01              a2 = u64 [sp + 0x108]
 33718: 82 1a 00 01              a3 = u64 [sp + 0x100]
 33722: d4 87 07                 a0 = a0 | a1
 33725: d4 97 07                 a0 = a0 | a2
 33728: 33 08 c8 00              a1 = 0xc8
 33732: e4 8a 08                 a1 = maxu(a3, a1)
 33735: 33 09 ff                 a2 = 0xffffffffffffffff
 33738: da 78 09                 a2 = a1 if a0 == 0
 33741: 82 17 20                 a0 = u64 [sp + 0x20]
 33744: ae 97 0e                 jump @1806 if a0 >=u a2
      :                          @1805
 33747: 82 17 70                 a0 = u64 [sp + 0x70]
 33750: 49 17 08                 u64 [a0 + 8] = 0
 33753: 49 07                    u64 [a0 + 0] = 0
 33755: 28 a0 fc                 jump @1782
      :                          @1806
 33758: 7b 19 50                 u64 [sp + 0x50] = a2
 33761: 64 69                    a2 = s1
 33763: 64 56                    s1 = s0
 33765: 82 15 80 00              s0 = u64 [sp + 0x80]
 33769: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
 33772: e6 76 07                 a0 = minu(s1, a0)
 33775: c8 57 07                 a0 = a0 + s0
 33778: 85 98 ff                 a1 = a2 ^ 0xffffffffffffffff
 33781: e6 87 0a                 a3 = minu(a0, a1)
 33784: c8 9a 0a                 a3 = a3 + a2
 33787: 95 17 d0 00              a0 = sp + 0xd0
 33791: 82 18 60                 a1 = u64 [sp + 0x60]
 33794: 82 19 58                 a2 = u64 [sp + 0x58]
 33797: 50 20 82 01 5b 01        ra = 386, jump @1835
      :                          @1807 [@dyn 193]
 33803: 82 17 e0 00              a0 = u64 [sp + 0xe0]
 33807: ac 67 50 01              jump @1834 if a0 <u s1
      :                          @1808
 33811: c9 67 07                 a0 = a0 - s1
 33814: ac 57 49 01              jump @1834 if a0 <u s0
      :                          @1809
 33818: 64 5b                    a4 = s0
 33820: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 33824: 82 1a d0 00              a3 = u64 [sp + 0xd0]
 33828: 7b 1a 58                 u64 [sp + 0x58] = a3
 33831: c8 68 0a                 a3 = a1 + s1
 33834: c8 5a 0c                 a5 = a3 + s0
 33837: c9 57 05                 s0 = a0 - s0
 33840: 95 17 e8 00              a0 = sp + 0xe8
 33844: 7b 15                    u64 [sp] = s0
 33846: 7b 18 60                 u64 [sp + 0x60] = a1
 33849: 64 69                    a2 = s1
 33851: 33 00 84 01              ra = 0x184
 33855: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
 33859: 7b 10 98 01              u64 [sp + 0x198] = ra
 33863: 7b 15 90 01              u64 [sp + 0x190] = s0
 33867: 7b 16 88 01              u64 [sp + 0x188] = s1
 33871: 82 16 a0 01              s1 = u64 [sp + 0x1a0]
 33875: 7b 16 c0 00              u64 [sp + 0xc0] = s1
 33879: 7b 1c b8 00              u64 [sp + 0xb8] = a5
 33883: 64 b6                    s1 = a4
 33885: 64 a5                    s0 = a3
 33887: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 33891: 95 17 c8 00              a0 = sp + 0xc8
 33895: 33 00 08                 ra = 0x8
 33898: 28 94 8e                 jump @420
      :                          @1810 [@dyn 194]
 33901: 82 15 f0 00              s0 = u64 [sp + 0xf0]
 33905: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 33909: 95 17 a8 00              a0 = sp + 0xa8
 33913: 64 58                    a1 = s0
 33915: 82 1a 78                 a3 = u64 [sp + 0x78]
 33918: 50 20 86 01 76 01        ra = 390, jump @1847
      :                          @1811 [@dyn 195]
 33924: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 33928: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 33938: ab 87 17                 jump @1814 if a0 != a1
      :                          @1812
 33941: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 33945: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 33949: 95 17 00 01              a0 = sp + 0x100
 33953: 50 20 88 01 84 d7        ra = 392, jump @1429
      :                          @1813 [@dyn 196]
 33959: 28 1b                    jump @1815
      :                          @1814
 33961: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 33965: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 33969: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 33973: 7b 17 10 01              u64 [sp + 0x110] = a0
 33977: 7b 18 08 01              u64 [sp + 0x108] = a1
 33981: 7b 19 00 01              u64 [sp + 0x100] = a2
 33985: 01                       fallthrough
      :                          @1815
 33986: 95 18 00 01              a1 = sp + 0x100
 33990: 82 16 70                 s1 = u64 [sp + 0x70]
 33993: 64 67                    a0 = s1
 33995: 50 20 8a 01 fa af        ra = 394, jump @1055
      :                          @1816 [@dyn 197]
 34001: 82 17 e8 00              a0 = u64 [sp + 0xe8]
 34005: 95 79 ff ef              a2 = a0 + 0xffffffffffffefff
 34009: 82 1a 50                 a3 = u64 [sp + 0x50]
 34012: 7b 6a 20                 u64 [s1 + 0x20] = a3
 34015: 53 29 00 f0 23           jump @1822 if a2 <u 4294963200
      :                          @1817
 34020: 33 08 80 00 03           a1 = 0x30080
 34025: 95 88 00 10              a1 = a1 + 0x1000
 34029: 01                       fallthrough
      :                          @1818
 34030: 82 89                    a2 = u64 [a1]
 34032: c9 98 0a                 a3 = a1 - a2
 34035: ab 5a 0f                 jump @1822 if a3 != s0
      :                          @1819
 34038: c9 79 0a                 a3 = a2 - a0
 34041: 01                       fallthrough
      :                          @1820
 34042: 82 8b                    a4 = u64 [a1]
 34044: ab 9b f2                 jump @1818 if a4 != a2
      :                          @1821
 34047: 7b 8a                    u64 [a1] = a3
 34049: 01                       fallthrough
      :                          @1822
 34050: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 34060: 82 16 58                 s1 = u64 [sp + 0x58]
 34063: d4 76 08                 a1 = s1 | a0
 34066: 82 1c 60                 a5 = u64 [sp + 0x60]
 34069: aa 78 66 fb              jump @1782 if a1 == a0
      :                          @1823
 34073: 33 07 00 10              a0 = 0x1000
 34077: ac 67 5e fb              jump @1782 if a0 <u s1
      :                          @1824
 34081: 33 08 80 00 03           a1 = 0x30080
 34086: 95 87 00 10              a0 = a1 + 0x1000
 34090: 01                       fallthrough
      :                          @1825
 34091: 82 78                    a1 = u64 [a0]
 34093: c9 87 09                 a2 = a0 - a1
 34096: ab c9 4b fb              jump @1782 if a2 != a5
      :                          @1826
 34100: c9 68 09                 a2 = a1 - s1
 34103: 01                       fallthrough
      :                          @1827
 34104: 82 7a                    a3 = u64 [a0]
 34106: ab 8a f1                 jump @1825 if a3 != a1
      :                          @1828
 34109: 7b 79                    u64 [a0] = a2
 34111: 33 0b                    a4 = 0
 34113: 01                       fallthrough
      :                          @1829
 34114: ab 8a e9                 jump @1825 if a3 != a1
      :                          @1830
 34117: 28 36 fb                 jump @1782
      :                          @1831
 34120: 33 07 01                 a0 = 0x1
 34123: 82 16 78                 s1 = u64 [sp + 0x78]
 34126: 82 1b 68                 a4 = u64 [sp + 0x68]
 34129: 28 ff fd                 jump @1803
      :                          @1832
 34132: 33 08                    a1 = 0
 34134: 28 e3 fd                 jump @1801
      :                          @1833
 34137: 33 07 ff                 a0 = 0xffffffffffffffff
 34140: 28 ea fd                 jump @1802
      :                          @1834
 34143: 00                       trap
      :                          @1835
 34144: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 34147: 7b 10 28                 u64 [sp + 0x28] = ra
 34150: 7b 15 20                 u64 [sp + 0x20] = s0
 34153: 7b 16 18                 u64 [sp + 0x18] = s1
 34156: ae a9 66                 jump @1844 if a2 >=u a3
      :                          @1836
 34159: 57 0a 84 00              jump @1846 if a3 <s 0
      :                          @1837
 34163: 33 0c 00 10              a5 = 0x1000
 34167: 33 02 80 00 03           t0 = 0x30080
 34172: c8 c2 03                 t1 = t0 + a5
 34175: 01                       fallthrough
      :                          @1838
 34176: 82 36                    s1 = u64 [t1]
 34178: c8 a6 0b                 a4 = s1 + a3
 34181: ac 6b 40 7b ff           jump @24 if a4 <u s1
      :                          @1839
 34186: 98 b5 0c                 s0 = a4 >> 0xc
 34189: 52 05 38 7b ff           jump @24 if s0 != 0
      :                          @1840
 34194: 82 35                    s0 = u64 [t1]
 34196: ab 65 ec                 jump @1838 if s0 != s1
      :                          @1841
 34199: 7b 3b                    u64 [t1] = a4
 34201: 33 0c                    a5 = 0
 34203: c9 b2 05                 s0 = t0 - a4
 34206: 95 55 00 10              s0 = s0 + 0x1000
 34210: 64 76                    s1 = a0
 34212: 64 57                    a0 = s0
 34214: 7b 18                    u64 [sp] = a1
 34216: 33 08                    a1 = 0
 34218: 7b 19 08                 u64 [sp + 0x8] = a2
 34221: 64 a9                    a2 = a3
 34223: 7b 1a 10                 u64 [sp + 0x10] = a3
 34226: 50 20 8c 01 c8 06        ra = 396, jump @1942
      :                          @1842 [@dyn 198]
 34232: 64 57                    a0 = s0
 34234: 82 18                    a1 = u64 [sp]
 34236: 82 19 08                 a2 = u64 [sp + 0x8]
 34239: 50 20 8e 01 74 04        ra = 398, jump @1890
      :                          @1843 [@dyn 199]
 34245: 82 17 10                 a0 = u64 [sp + 0x10]
 34248: 7b 67                    u64 [s1] = a0
 34250: 7b 65 08                 u64 [s1 + 0x8] = s0
 34253: 7b 67 10                 u64 [s1 + 0x10] = a0
 34256: 28 15                    jump @1845
      :                          @1844
 34258: 7b 78 08                 u64 [a0 + 0x8] = a1
 34261: 7b 7a 10                 u64 [a0 + 0x10] = a3
 34264: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 34274: 7b 78                    u64 [a0] = a1
 34276: 01                       fallthrough
      :                          @1845
 34277: 82 10 28                 ra = u64 [sp + 0x28]
 34280: 82 15 20                 s0 = u64 [sp + 0x20]
 34283: 82 16 18                 s1 = u64 [sp + 0x18]
 34286: 95 11 30                 sp = sp + 0x30
 34289: 32 00                    ret
      :                          @1846
 34291: 00                       trap
      :                          @1847
 34292: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 34295: 7b 10 28                 u64 [sp + 0x28] = ra
 34298: 7b 15 20                 u64 [sp + 0x20] = s0
 34301: 7b 16 18                 u64 [sp + 0x18] = s1
 34304: ae a9 6f                 jump @1856 if a2 >=u a3
      :                          @1848
 34307: 57 0a 8d 00              jump @1858 if a3 <s 0
      :                          @1849
 34311: 33 0c 00 10              a5 = 0x1000
 34315: 33 02 80 00 03           t0 = 0x30080
 34320: c8 c2 03                 t1 = t0 + a5
 34323: 01                       fallthrough
      :                          @1850
 34324: 82 36                    s1 = u64 [t1]
 34326: c8 a6 0b                 a4 = s1 + a3
 34329: ac 6b ac 7a ff           jump @24 if a4 <u s1
      :                          @1851
 34334: 98 b5 0c                 s0 = a4 >> 0xc
 34337: 52 05 a4 7a ff           jump @24 if s0 != 0
      :                          @1852
 34342: 82 35                    s0 = u64 [t1]
 34344: ab 65 ec                 jump @1850 if s0 != s1
      :                          @1853
 34347: 7b 3b                    u64 [t1] = a4
 34349: 33 0c                    a5 = 0
 34351: c9 b2 05                 s0 = t0 - a4
 34354: 95 5b 00 10              a4 = s0 + 0x1000
 34358: 7b 1b 10                 u64 [sp + 0x10] = a4
 34361: 64 76                    s1 = a0
 34363: 64 b7                    a0 = a4
 34365: 7b 18 08                 u64 [sp + 0x8] = a1
 34368: 33 08                    a1 = 0
 34370: 7b 19                    u64 [sp] = a2
 34372: 64 a9                    a2 = a3
 34374: 64 a5                    s0 = a3
 34376: 50 20 90 01 32 06        ra = 400, jump @1942
      :                          @1854 [@dyn 200]
 34382: 82 19                    a2 = u64 [sp]
 34384: c9 95 07                 a0 = s0 - a2
 34387: 82 18 10                 a1 = u64 [sp + 0x10]
 34390: c8 87 07                 a0 = a0 + a1
 34393: 82 18 08                 a1 = u64 [sp + 0x8]
 34396: 50 20 92 01 d7 03        ra = 402, jump @1890
      :                          @1855 [@dyn 201]
 34402: 7b 65                    u64 [s1] = s0
 34404: 82 17 10                 a0 = u64 [sp + 0x10]
 34407: 7b 67 08                 u64 [s1 + 0x8] = a0
 34410: 7b 65 10                 u64 [s1 + 0x10] = s0
 34413: 28 15                    jump @1857
      :                          @1856
 34415: 7b 78 08                 u64 [a0 + 0x8] = a1
 34418: 7b 7a 10                 u64 [a0 + 0x10] = a3
 34421: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 34431: 7b 78                    u64 [a0] = a1
 34433: 01                       fallthrough
      :                          @1857
 34434: 82 10 28                 ra = u64 [sp + 0x28]
 34437: 82 15 20                 s0 = u64 [sp + 0x20]
 34440: 82 16 18                 s1 = u64 [sp + 0x18]
 34443: 95 11 30                 sp = sp + 0x30
 34446: 32 00                    ret
      :                          @1858
 34448: 00                       trap
      :                          @1859
 34449: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 34452: 7b 10 58                 u64 [sp + 0x58] = ra
 34455: 7b 15 50                 u64 [sp + 0x50] = s0
 34458: 7b 16 48                 u64 [sp + 0x48] = s1
 34461: 64 82                    t0 = a1
 34463: 68 bc                    a5 = clz a4
 34465: 68 a6                    s1 = clz a3
 34467: 95 64 40                 t2 = s1 + 0x40
 34470: db bc 04                 t2 = a5 if a4 != 0
 34473: 68 9c                    a5 = clz a2
 34475: 68 86                    s1 = clz a1
 34477: 95 66 40                 s1 = s1 + 0x40
 34480: db 9c 06                 s1 = a5 if a2 != 0
 34483: 64 70                    ra = a0
 34485: ae 46 16                 jump @1862 if s1 >=u t2
      :                          @1860
 34488: 54 16 3f 4e              jump @1864 if s1 <=u 63
      :                          @1861
 34492: 33 03                    t1 = 0
 34494: 33 09                    a2 = 0
 34496: cb a2 08                 a1 = t0 /u a3
 34499: ca a8 07                 a0 = a1 * a3
 34502: c9 72 02                 t0 = t0 - a0
 34505: 28 24                    jump @1863
      :                          @1862
 34507: 33 03                    t1 = 0
 34509: d8 a2 07                 a0 = t0 <u a3
 34512: d3 b9 0c                 a5 = a2 ^ a4
 34515: d8 b9 06                 s1 = a2 <u a4
 34518: da c7 06                 s1 = a0 if a5 == 0
 34521: 85 68 01                 a1 = s1 ^ 0x1
 34524: 94 6b                    a4 = 0 if s1 != 0
 34526: 94 6a                    a3 = 0 if s1 != 0
 34528: d8 a2 07                 a0 = t0 <u a3
 34531: c9 b9 09                 a2 = a2 - a4
 34534: c9 79 09                 a2 = a2 - a0
 34537: c9 a2 02                 t0 = t0 - a3
 34540: 01                       fallthrough
      :                          @1863
 34541: 7b 08                    u64 [ra] = a1
 34543: 7b 03 08                 u64 [ra + 0x8] = t1
 34546: 7b 02 10                 u64 [ra + 0x10] = t0
 34549: 7b 09 18                 u64 [ra + 0x18] = a2
 34552: 82 10 58                 ra = u64 [sp + 0x58]
 34555: 82 15 50                 s0 = u64 [sp + 0x50]
 34558: 82 16 48                 s1 = u64 [sp + 0x48]
 34561: 95 11 60                 sp = sp + 0x60
 34564: 32 00                    ret
      :                          @1864
 34566: 54 14 5f 4a              jump @1866 if t2 <=u 95
      :                          @1865
 34570: 97 a7 20                 a0 = a3 << 0x20
 34573: 98 77 20                 a0 = a0 >> 0x20
 34576: cb 79 0b                 a4 = a2 /u a0
 34579: ca ab 0c                 a5 = a4 * a3
 34582: bf c9 09                 i32 a2 = a2 - a5
 34585: 97 99 20                 a2 = a2 << 0x20
 34588: 98 2c 20                 a5 = t0 >> 0x20
 34591: d4 c9 09                 a2 = a2 | a5
 34594: cb 79 09                 a2 = a2 /u a0
 34597: 97 28 20                 a1 = t0 << 0x20
 34600: 98 88 20                 a1 = a1 >> 0x20
 34603: ca a9 0a                 a3 = a2 * a3
 34606: bf ac 0c                 i32 a5 = a5 - a3
 34609: 97 cc 20                 a5 = a5 << 0x20
 34612: d4 c8 08                 a1 = a1 | a5
 34615: cb 78 0a                 a3 = a1 /u a0
 34618: ca 7a 07                 a0 = a3 * a0
 34621: c9 78 02                 t0 = a1 - a0
 34624: 97 97 20                 a0 = a2 << 0x20
 34627: 98 99 20                 a2 = a2 >> 0x20
 34630: d4 b9 03                 t1 = a2 | a4
 34633: d4 a7 08                 a1 = a0 | a3
 34636: 33 09                    a2 = 0
 34638: 28 9f                    jump @1863
      :                          @1866
 34640: c9 64 07                 a0 = t2 - s1
 34643: 7b 1a 30                 u64 [sp + 0x30] = a3
 34646: 55 17 20 7f              jump @1870 if a0 >=u 32
      :                          @1867
 34650: 8d 67 40                 i32 a0 = 0x40 - s1
 34653: 8d 63                    i32 t1 = -s1
 34655: 82 1a 30                 a3 = u64 [sp + 0x30]
 34658: 64 28                    a1 = t0
 34660: d0 3a 02                 t0 = a3 >> t1
 34663: 97 77 20                 a0 = a0 << 0x20
 34666: 98 77 20                 a0 = a0 >> 0x20
 34669: 85 74 ff                 t2 = a0 ^ 0xffffffffffffffff
 34672: 97 b6 01                 s1 = a4 << 0x1
 34675: cf 46 06                 s1 = s1 << t2
 34678: d4 62 02                 t0 = t0 | s1
 34681: d0 7b 06                 s1 = a4 >> a0
 34684: 95 7c c0                 a5 = a0 + 0xffffffffffffffc0
 34687: 89 cc                    a5 = a5 <s 0
 34689: db c2 06                 s1 = t0 if a5 != 0
 34692: d0 38 02                 t0 = a1 >> t1
 34695: 97 95 01                 s0 = a2 << 0x1
 34698: cf 45 05                 s0 = s0 << t2
 34701: d4 52 05                 s0 = t0 | s0
 34704: 64 82                    t0 = a1
 34706: 82 1a 30                 a3 = u64 [sp + 0x30]
 34709: d0 79 07                 a0 = a2 >> a0
 34712: db c5 07                 a0 = s0 if a5 != 0
 34715: cb 67 08                 a1 = a0 /u s1
 34718: d6 8a 07                 a0 = a3 mulhu a1
 34721: d6 8b 0c                 a5 = a4 mulhu a1
 34724: ca 8b 06                 s1 = a4 * a1
 34727: c8 76 06                 s1 = s1 + a0
 34730: d8 76 07                 a0 = s1 <u a0
 34733: c8 c7 07                 a0 = a0 + a5
 34736: ca 8a 04                 t2 = a3 * a1
 34739: 52 07 3f 01              jump @1877 if a0 != 0
      :                          @1868
 34743: d8 42 05                 s0 = t0 <u t2
 34746: d3 69 07                 a0 = a2 ^ s1
 34749: d8 69 0c                 a5 = a2 <u s1
 34752: da 75 0c                 a5 = s0 if a0 == 0
 34755: 52 0c 2f 01              jump @1877 if a5 != 0
      :                          @1869
 34759: 33 03                    t1 = 0
 34761: c9 69 09                 a2 = a2 - s1
 34764: c9 59 09                 a2 = a2 - s0
 34767: c9 42 02                 t0 = t0 - t2
 34770: 28 1b ff                 jump @1863
      :                          @1870
 34773: 7b 10 08                 u64 [sp + 0x8] = ra
 34776: 33 08                    a1 = 0
 34778: 33 03                    t1 = 0
 34780: 9a 4c 60                 a5 = 0x60 - t2
 34783: d0 ca 00                 ra = a3 >> a5
 34786: 64 ca                    a3 = a5
 34788: 97 cc 20                 a5 = a5 << 0x20
 34791: 98 cc 20                 a5 = a5 >> 0x20
 34794: 85 c5 ff                 s0 = a5 ^ 0xffffffffffffffff
 34797: 97 b7 01                 a0 = a4 << 0x1
 34800: 7b 17                    u64 [sp] = a0
 34802: cf 57 05                 s0 = a0 << s0
 34805: d4 50 07                 a0 = ra | s0
 34808: d0 cb 05                 s0 = a4 >> a5
 34811: 95 cc c0                 a5 = a5 + 0xffffffffffffffc0
 34814: 89 cc                    a5 = a5 <s 0
 34816: db c7 05                 s0 = a0 if a5 != 0
 34819: 97 55 20                 s0 = s0 << 0x20
 34822: 98 55 20                 s0 = s0 >> 0x20
 34825: 95 55 01                 s0 = s0 + 0x1
 34828: 7b 15 18                 u64 [sp + 0x18] = s0
 34831: 7b 1b 28                 u64 [sp + 0x28] = a4
 34834: 7b 14 20                 u64 [sp + 0x20] = t2
 34837: 7b 1a 10                 u64 [sp + 0x10] = a3
 34840: 01                       fallthrough
      :                          @1871
 34841: 7b 18 40                 u64 [sp + 0x40] = a1
 34844: 8d 65 40                 i32 s0 = 0x40 - s1
 34847: d0 52 07                 a0 = t0 >> s0
 34850: 97 5c 20                 a5 = s0 << 0x20
 34853: 98 cc 20                 a5 = a5 >> 0x20
 34856: 85 c0 ff                 ra = a5 ^ 0xffffffffffffffff
 34859: 97 96 01                 s1 = a2 << 0x1
 34862: cf 06 06                 s1 = s1 << ra
 34865: d4 67 08                 a1 = a0 | s1
 34868: d0 c9 06                 s1 = a2 >> a5
 34871: 95 c7 c0                 a0 = a5 + 0xffffffffffffffc0
 34874: 89 77                    a0 = a0 <s 0
 34876: db 78 06                 s1 = a1 if a0 != 0
 34879: ac a5 d5 00              jump @1878 if s0 <u a3
      :                          @1872
 34883: 82 17 18                 a0 = u64 [sp + 0x18]
 34886: cb 76 06                 s1 = s1 /u a0
 34889: bf a5 00                 i32 ra = s0 - a3
 34892: 84 07 7f                 a0 = ra & 0x7f
 34895: cf 76 08                 a1 = s1 << a0
 34898: 98 65 01                 s0 = s1 >> 0x1
 34901: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 34904: 7b 13 38                 u64 [sp + 0x38] = t1
 34907: d0 c5 03                 t1 = s0 >> a5
 34910: 95 74 c0                 t2 = a0 + 0xffffffffffffffc0
 34913: 89 4a                    a3 = t2 <s 0
 34915: da a8 03                 t1 = a1 if a3 == 0
 34918: ca b6 08                 a1 = s1 * a4
 34921: 82 1b 30                 a4 = u64 [sp + 0x30]
 34924: d6 b6 05                 s0 = s1 mulhu a4
 34927: c8 58 08                 a1 = a1 + s0
 34930: ca b6 0b                 a4 = s1 * a4
 34933: 98 b5 01                 s0 = a4 >> 0x1
 34936: d0 c5 0c                 a5 = s0 >> a5
 34939: cf 08 05                 s0 = a1 << ra
 34942: d4 5c 0c                 a5 = a5 | s0
 34945: cf 7b 07                 a0 = a4 << a0
 34948: db ac 07                 a0 = a5 if a3 != 0
 34951: 82 18 38                 a1 = u64 [sp + 0x38]
 34954: c8 83 03                 t1 = t1 + a1
 34957: cf 06 0a                 a3 = s1 << ra
 34960: cf 0b 0b                 a4 = a4 << ra
 34963: 99 4c 3f                 a5 = t2 >>a 0x3f
 34966: 82 14 20                 t2 = u64 [sp + 0x20]
 34969: d2 ca 0a                 a3 = a3 & a5
 34972: d2 cb 0b                 a4 = a4 & a5
 34975: d8 b2 0c                 a5 = t0 <u a4
 34978: c9 c9 09                 a2 = a2 - a5
 34981: c9 79 09                 a2 = a2 - a0
 34984: c9 b2 02                 t0 = t0 - a4
 34987: 68 97                    a0 = clz a2
 34989: 68 2b                    a4 = clz t0
 34991: 95 b6 40                 s1 = a4 + 0x40
 34994: db 97 06                 s1 = a0 if a2 != 0
 34997: 82 18 40                 a1 = u64 [sp + 0x40]
 35000: c8 a8 08                 a1 = a1 + a3
 35003: d8 a8 07                 a0 = a1 <u a3
 35006: c8 73 03                 t1 = t1 + a0
 35009: ae 46 bd 00              jump @1882 if s1 >=u t2
      :                          @1873
 35013: 82 1b 28                 a4 = u64 [sp + 0x28]
 35016: 82 1a 10                 a3 = u64 [sp + 0x10]
 35019: 33 07 3f                 a0 = 0x3f
 35022: ae 67 4b ff              jump @1871 if a0 >=u s1
      :                          @1874
 35026: 82 1a 30                 a3 = u64 [sp + 0x30]
 35029: 51 0a 07                 jump @1876 if a3 == 0
      :                          @1875
 35032: cb a2 07                 a0 = t0 /u a3
 35035: 01                       fallthrough
      :                          @1876
 35036: 82 10 08                 ra = u64 [sp + 0x8]
 35039: 33 09                    a2 = 0
 35041: cd a2 02                 t0 = t0 %u a3
 35044: c8 87 07                 a0 = a0 + a1
 35047: d8 87 0a                 a3 = a0 <u a1
 35050: c8 a3 03                 t1 = t1 + a3
 35053: 64 78                    a1 = a0
 35055: 28 fe fd                 jump @1863
      :                          @1877
 35058: 33 03                    t1 = 0
 35060: c8 b9 09                 a2 = a2 + a4
 35063: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 35066: c8 2a 08                 a1 = a3 + t0
 35069: d8 a8 07                 a0 = a1 <u a3
 35072: c8 97 07                 a0 = a0 + a2
 35075: c9 67 07                 a0 = a0 - s1
 35078: d8 48 09                 a2 = a1 <u t2
 35081: c9 97 09                 a2 = a0 - a2
 35084: c9 48 02                 t0 = a1 - t2
 35087: 64 b8                    a1 = a4
 35089: 28 dc fd                 jump @1863
      :                          @1878
 35092: 64 28                    a1 = t0
 35094: 82 1a 30                 a3 = u64 [sp + 0x30]
 35097: d0 5a 02                 t0 = a3 >> s0
 35100: 82 1a                    a3 = u64 [sp]
 35102: cf 0a 05                 s0 = a3 << ra
 35105: d4 52 05                 s0 = t0 | s0
 35108: d0 cb 0c                 a5 = a4 >> a5
 35111: db 75 0c                 a5 = s0 if a0 != 0
 35114: 51 0c 07                 jump @1880 if a5 == 0
      :                          @1879
 35117: cb c6 05                 s0 = s1 /u a5
 35120: 01                       fallthrough
      :                          @1880
 35121: 82 10 08                 ra = u64 [sp + 0x8]
 35124: 82 1a 30                 a3 = u64 [sp + 0x30]
 35127: d6 a5 06                 s1 = s0 mulhu a3
 35130: ca b5 07                 a0 = s0 * a4
 35133: c8 76 06                 s1 = s1 + a0
 35136: ca a5 02                 t0 = s0 * a3
 35139: d3 69 04                 t2 = a2 ^ s1
 35142: d8 69 0c                 a5 = a2 <u s1
 35145: d8 28 07                 a0 = a1 <u t0
 35148: da 47 0c                 a5 = a0 if t2 == 0
 35151: 51 0c 4e                 jump @1884 if a5 == 0
      :                          @1881
 35154: 82 17 40                 a0 = u64 [sp + 0x40]
 35157: c8 75 05                 s0 = s0 + a0
 35160: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 35163: d8 75 07                 a0 = s0 <u a0
 35166: c8 73 03                 t1 = t1 + a0
 35169: c8 8a 0a                 a3 = a3 + a1
 35172: d8 8a 07                 a0 = a3 <u a1
 35175: c8 b9 09                 a2 = a2 + a4
 35178: c8 97 07                 a0 = a0 + a2
 35181: c9 67 07                 a0 = a0 - s1
 35184: d8 2a 08                 a1 = a3 <u t0
 35187: c9 87 09                 a2 = a0 - a1
 35190: c9 2a 02                 t0 = a3 - t0
 35193: 64 58                    a1 = s0
 35195: 28 72 fd                 jump @1863
      :                          @1882
 35198: 64 86                    s1 = a1
 35200: 82 1c 30                 a5 = u64 [sp + 0x30]
 35203: d8 c2 07                 a0 = t0 <u a5
 35206: 82 18 28                 a1 = u64 [sp + 0x28]
 35209: d3 89 0a                 a3 = a2 ^ a1
 35212: d8 89 0b                 a4 = a2 <u a1
 35215: da a7 0b                 a4 = a0 if a3 == 0
 35218: 82 10 08                 ra = u64 [sp + 0x8]
 35221: 51 0b 22                 jump @1885 if a4 == 0
      :                          @1883
 35224: 64 68                    a1 = s1
 35226: 28 53 fd                 jump @1863
      :                          @1884
 35229: 82 1a 40                 a3 = u64 [sp + 0x40]
 35232: c8 a5 05                 s0 = s0 + a3
 35235: d8 a5 0a                 a3 = s0 <u a3
 35238: c8 a3 03                 t1 = t1 + a3
 35241: c9 69 09                 a2 = a2 - s1
 35244: c9 79 09                 a2 = a2 - a0
 35247: c9 28 02                 t0 = a1 - t0
 35250: 64 58                    a1 = s0
 35252: 28 39 fd                 jump @1863
      :                          @1885
 35255: 95 66 01                 s1 = s1 + 0x1
 35258: 88 6a 01                 a3 = s1 <u 0x1
 35261: c8 a3 03                 t1 = t1 + a3
 35264: c9 89 09                 a2 = a2 - a1
 35267: 64 68                    a1 = s1
 35269: c9 79 09                 a2 = a2 - a0
 35272: c9 c2 02                 t0 = t0 - a5
 35275: 28 22 fd                 jump @1863
      :                          @1886
 35278: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 35281: 7b 10 28                 u64 [sp + 0x28] = ra
 35284: 7b 15 20                 u64 [sp + 0x20] = s0
 35287: 95 15 30                 s0 = sp + 0x30
 35290: 84 11 f0                 sp = sp & 0xfffffffffffffff0
 35293: 64 ab                    a4 = a3
 35295: 64 9a                    a3 = a2
 35297: 64 89                    a2 = a1
 35299: 64 78                    a1 = a0
 35301: 64 17                    a0 = sp
 35303: 50 20 94 01 aa fc        ra = 404, jump @1859
      :                          @1887 [@dyn 202]
 35309: 82 18 08                 a1 = u64 [sp + 0x8]
 35312: 82 17                    a0 = u64 [sp]
 35314: 95 51 d0                 sp = s0 + 0xffffffffffffffd0
 35317: 82 10 28                 ra = u64 [sp + 0x28]
 35320: 82 15 20                 s0 = u64 [sp + 0x20]
 35323: 95 11 30                 sp = sp + 0x30
 35326: 32 00                    ret
      :                          @1888
 35328: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 35331: 7b 10 28                 u64 [sp + 0x28] = ra
 35334: 7b 15 20                 u64 [sp + 0x20] = s0
 35337: 95 15 30                 s0 = sp + 0x30
 35340: 84 11 f0                 sp = sp & 0xfffffffffffffff0
 35343: 33 0b                    a4 = 0
 35345: 64 9a                    a3 = a2
 35347: 64 89                    a2 = a1
 35349: 64 78                    a1 = a0
 35351: 64 17                    a0 = sp
 35353: 50 20 96 01 78 fc        ra = 406, jump @1859
      :                          @1889 [@dyn 203]
 35359: 82 18 18                 a1 = u64 [sp + 0x18]
 35362: 82 17 10                 a0 = u64 [sp + 0x10]
 35365: 95 51 d0                 sp = s0 + 0xffffffffffffffd0
 35368: 82 10 28                 ra = u64 [sp + 0x28]
 35371: 82 15 20                 s0 = u64 [sp + 0x20]
 35374: 95 11 30                 sp = sp + 0x30
 35377: 32 00                    ret
      :                          @1890
 35379: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 35382: 7b 10 10                 u64 [sp + 0x10] = ra
 35385: 7b 15 08                 u64 [sp + 0x8] = s0
 35388: 7b 16                    u64 [sp] = s1
 35390: 53 19 10 59              jump @1900 if a2 <u 16
      :                          @1891
 35394: 8d 7a                    i32 a3 = -a0
 35396: 84 a2 07                 t0 = a3 & 0x7
 35399: c8 27 06                 s1 = a0 + t0
 35402: ae 67 1a                 jump @1894 if a0 >=u s1
      :                          @1892
 35405: 64 2c                    a5 = t0
 35407: 64 7a                    a3 = a0
 35409: 64 8b                    a4 = a1
 35411: 01                       fallthrough
      :                          @1893
 35412: 7c b5                    s0 = u8 [a4]
 35414: 78 a5                    u8 [a3] = s0
 35416: 95 aa 01                 a3 = a3 + 0x1
 35419: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 35422: 95 bb 01                 a4 = a4 + 0x1
 35425: 52 0c f3                 jump @1893 if a5 != 0
      :                          @1894
 35428: c8 28 08                 a1 = a1 + t0
 35431: c9 29 09                 a2 = a2 - t0
 35434: 84 9c f8                 a5 = a2 & 0xfffffffffffffff8
 35437: 84 8b 07                 a4 = a1 & 0x7
 35440: c8 c6 0a                 a3 = s1 + a5
 35443: 52 0b 49                 jump @1903 if a4 != 0
      :                          @1895
 35446: ae a6 13                 jump @1898 if s1 >=u a3
      :                          @1896
 35449: 64 8b                    a4 = a1
 35451: 01                       fallthrough
      :                          @1897
 35452: 82 b5                    s0 = u64 [a4]
 35454: 7b 65                    u64 [s1] = s0
 35456: 95 66 08                 s1 = s1 + 0x8
 35459: 95 bb 08                 a4 = a4 + 0x8
 35462: ac a6 f6                 jump @1897 if s1 <u a3
      :                          @1898
 35465: c8 c8 08                 a1 = a1 + a5
 35468: 84 99 07                 a2 = a2 & 0x7
 35471: c8 9a 0b                 a4 = a3 + a2
 35474: ac ba 0d                 jump @1901 if a3 <u a4
      :                          @1899
 35477: 28 1a                    jump @1902
      :                          @1900
 35479: 64 7a                    a3 = a0
 35481: c8 97 0b                 a4 = a0 + a2
 35484: ae b7 13                 jump @1902 if a0 >=u a4
      :                          @1901
 35487: 7c 8b                    a4 = u8 [a1]
 35489: 78 ab                    u8 [a3] = a4
 35491: 95 aa 01                 a3 = a3 + 0x1
 35494: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 35497: 95 88 01                 a1 = a1 + 0x1
 35500: 52 09 f3                 jump @1901 if a2 != 0
      :                          @1902
 35503: 82 10 10                 ra = u64 [sp + 0x10]
 35506: 82 15 08                 s0 = u64 [sp + 0x8]
 35509: 82 16                    s1 = u64 [sp]
 35511: 95 11 18                 sp = sp + 0x18
 35514: 32 00                    ret
      :                          @1903
 35516: ae a6 cd                 jump @1898 if s1 >=u a3
      :                          @1904
 35519: 97 85 03                 s0 = a1 << 0x3
 35522: 84 52 38                 t0 = s0 & 0x38
 35525: 84 84 f8                 t2 = a1 & 0xfffffffffffffff8
 35528: 82 4b                    a4 = u64 [t2]
 35530: 8d 55                    i32 s0 = -s0
 35532: 84 53 38                 t1 = s0 & 0x38
 35535: 95 44 08                 t2 = t2 + 0x8
 35538: 01                       fallthrough
      :                          @1905
 35539: 82 45                    s0 = u64 [t2]
 35541: d0 2b 00                 ra = a4 >> t0
 35544: cf 35 0b                 a4 = s0 << t1
 35547: d4 0b 0b                 a4 = a4 | ra
 35550: 7b 6b                    u64 [s1] = a4
 35552: 95 66 08                 s1 = s1 + 0x8
 35555: 95 44 08                 t2 = t2 + 0x8
 35558: 64 5b                    a4 = s0
 35560: ac a6 eb                 jump @1905 if s1 <u a3
      :                          @1906
 35563: 28 9e                    jump @1898
      :                          @1907
 35565: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 35568: 7b 10 20                 u64 [sp + 0x20] = ra
 35571: 7b 15 18                 u64 [sp + 0x18] = s0
 35574: 7b 16 10                 u64 [sp + 0x10] = s1
 35577: c9 87 0a                 a3 = a0 - a1
 35580: ae 9a 8a 00              jump @1921 if a3 >=u a2
      :                          @1908
 35584: c8 97 0c                 a5 = a0 + a2
 35587: 33 0a 10                 a3 = 0x10
 35590: c8 98 04                 t2 = a1 + a2
 35593: ac a9 60                 jump @1917 if a2 <u a3
      :                          @1909
 35596: 84 c3 07                 t1 = a5 & 0x7
 35599: 84 c6 f8                 s1 = a5 & 0xfffffffffffffff8
 35602: 9a 32                    t0 = -t1
 35604: ae c6 1a                 jump @1912 if s1 >=u a5
      :                          @1910
 35607: c8 98 05                 s0 = a1 + a2
 35610: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 35613: 01                       fallthrough
      :                          @1911
 35614: 7c 5a                    a3 = u8 [s0]
 35616: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 35619: 78 ca ff                 u8 [a5 + 0xffffffffffffffff] = a3
 35622: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 35625: 64 bc                    a5 = a4
 35627: ac b6 f3                 jump @1911 if s1 <u a4
      :                          @1912
 35630: c8 42 02                 t0 = t0 + t2
 35633: c9 39 09                 a2 = a2 - t1
 35636: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 35639: 84 25 07                 s0 = t0 & 0x7
 35642: 9a a0                    ra = -a3
 35644: c9 a6 0c                 a5 = s1 - a3
 35647: 52 05 c7 00              jump @1934 if s0 != 0
      :                          @1913
 35651: ae 6c 1c                 jump @1916 if a5 >=u s1
      :                          @1914
 35654: c8 98 08                 a1 = a1 + a2
 35657: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 35660: 64 6a                    a3 = s1
 35662: 01                       fallthrough
      :                          @1915
 35663: 82 85                    s0 = u64 [a1]
 35665: 95 ab f8                 a4 = a3 + 0xfffffffffffffff8
 35668: 7b a5 f8                 u64 [a3 + 0xfffffffffffffff8] = s0
 35671: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 35674: 64 ba                    a3 = a4
 35676: ac bc f3                 jump @1915 if a5 <u a4
      :                          @1916
 35679: c8 06 0c                 a5 = s1 + ra
 35682: c8 02 04                 t2 = t0 + ra
 35685: 84 99 07                 a2 = a2 & 0x7
 35688: 01                       fallthrough
      :                          @1917
 35689: c9 9c 08                 a1 = a5 - a2
 35692: ae c8 8c 00              jump @1933 if a1 >=u a5
      :                          @1918
 35696: 95 4b ff                 a4 = t2 + 0xffffffffffffffff
 35699: 01                       fallthrough
      :                          @1919
 35700: 7c b9                    a2 = u8 [a4]
 35702: 95 ca ff                 a3 = a5 + 0xffffffffffffffff
 35705: 78 c9 ff                 u8 [a5 + 0xffffffffffffffff] = a2
 35708: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 35711: 64 ac                    a5 = a3
 35713: ac a8 f3                 jump @1919 if a1 <u a3
      :                          @1920
 35716: 28 74                    jump @1933
      :                          @1921
 35718: 53 19 10 5a              jump @1931 if a2 <u 16
      :                          @1922
 35722: 8d 7a                    i32 a3 = -a0
 35724: 84 a2 07                 t0 = a3 & 0x7
 35727: c8 27 05                 s0 = a0 + t0
 35730: ae 57 1a                 jump @1925 if a0 >=u s0
      :                          @1923
 35733: 64 2c                    a5 = t0
 35735: 64 7a                    a3 = a0
 35737: 64 8b                    a4 = a1
 35739: 01                       fallthrough
      :                          @1924
 35740: 7c b6                    s1 = u8 [a4]
 35742: 78 a6                    u8 [a3] = s1
 35744: 95 aa 01                 a3 = a3 + 0x1
 35747: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 35750: 95 bb 01                 a4 = a4 + 0x1
 35753: 52 0c f3                 jump @1924 if a5 != 0
      :                          @1925
 35756: c8 28 08                 a1 = a1 + t0
 35759: c9 29 09                 a2 = a2 - t0
 35762: 84 9c f8                 a5 = a2 & 0xfffffffffffffff8
 35765: 84 8b 07                 a4 = a1 & 0x7
 35768: c8 c5 0a                 a3 = s0 + a5
 35771: 52 0b 8d 00              jump @1938 if a4 != 0
      :                          @1926
 35775: ae a5 13                 jump @1929 if s0 >=u a3
      :                          @1927
 35778: 64 8b                    a4 = a1
 35780: 01                       fallthrough
      :                          @1928
 35781: 82 b6                    s1 = u64 [a4]
 35783: 7b 56                    u64 [s0] = s1
 35785: 95 55 08                 s0 = s0 + 0x8
 35788: 95 bb 08                 a4 = a4 + 0x8
 35791: ac a5 f6                 jump @1928 if s0 <u a3
      :                          @1929
 35794: c8 c8 08                 a1 = a1 + a5
 35797: 84 99 07                 a2 = a2 & 0x7
 35800: c8 9a 0b                 a4 = a3 + a2
 35803: ac ba 0d                 jump @1932 if a3 <u a4
      :                          @1930
 35806: 28 1a                    jump @1933
      :                          @1931
 35808: 64 7a                    a3 = a0
 35810: c8 97 0b                 a4 = a0 + a2
 35813: ae b7 13                 jump @1933 if a0 >=u a4
      :                          @1932
 35816: 7c 8b                    a4 = u8 [a1]
 35818: 78 ab                    u8 [a3] = a4
 35820: 95 aa 01                 a3 = a3 + 0x1
 35823: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 35826: 95 88 01                 a1 = a1 + 0x1
 35829: 52 09 f3                 jump @1932 if a2 != 0
      :                          @1933
 35832: 82 10 20                 ra = u64 [sp + 0x20]
 35835: 82 15 18                 s0 = u64 [sp + 0x18]
 35838: 82 16 10                 s1 = u64 [sp + 0x10]
 35841: 95 11 28                 sp = sp + 0x28
 35844: 32 00                    ret
      :                          @1934
 35846: ae 6c 59 ff              jump @1916 if a5 >=u s1
      :                          @1935
 35850: 97 28 03                 a1 = t0 << 0x3
 35853: 84 8a 38                 a3 = a1 & 0x38
 35856: 7b 1a 08                 u64 [sp + 0x8] = a3
 35859: 84 2a f8                 a3 = t0 & 0xfffffffffffffff8
 35862: 82 a5                    s0 = u64 [a3]
 35864: 8d 88                    i32 a1 = -a1
 35866: 84 88 38                 a1 = a1 & 0x38
 35869: 7b 18                    u64 [sp] = a1
 35871: 95 a8 f8                 a1 = a3 + 0xfffffffffffffff8
 35874: 64 6a                    a3 = s1
 35876: 01                       fallthrough
      :                          @1936
 35877: 82 84                    t2 = u64 [a1]
 35879: 82 1b                    a4 = u64 [sp]
 35881: cf b5 0b                 a4 = s0 << a4
 35884: 82 15 08                 s0 = u64 [sp + 0x8]
 35887: d0 54 03                 t1 = t2 >> s0
 35890: d4 b3 05                 s0 = t1 | a4
 35893: 95 a3 f8                 t1 = a3 + 0xfffffffffffffff8
 35896: 7b a5 f8                 u64 [a3 + 0xfffffffffffffff8] = s0
 35899: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 35902: 64 3a                    a3 = t1
 35904: 64 45                    s0 = t2
 35906: ac 3c e3                 jump @1936 if a5 <u t1
      :                          @1937
 35909: 28 1a ff                 jump @1916
      :                          @1938
 35912: ae a5 8a                 jump @1929 if s0 >=u a3
      :                          @1939
 35915: 97 86 03                 s1 = a1 << 0x3
 35918: 84 62 38                 t0 = s1 & 0x38
 35921: 84 84 f8                 t2 = a1 & 0xfffffffffffffff8
 35924: 82 4b                    a4 = u64 [t2]
 35926: 8d 66                    i32 s1 = -s1
 35928: 84 63 38                 t1 = s1 & 0x38
 35931: 95 44 08                 t2 = t2 + 0x8
 35934: 01                       fallthrough
      :                          @1940
 35935: 82 46                    s1 = u64 [t2]
 35937: d0 2b 00                 ra = a4 >> t0
 35940: cf 36 0b                 a4 = s1 << t1
 35943: d4 0b 0b                 a4 = a4 | ra
 35946: 7b 5b                    u64 [s0] = a4
 35948: 95 55 08                 s0 = s0 + 0x8
 35951: 95 44 08                 t2 = t2 + 0x8
 35954: 64 6b                    a4 = s1
 35956: ac a5 eb                 jump @1940 if s0 <u a3
      :                          @1941
 35959: 28 5b ff                 jump @1929
      :                          @1942
 35962: 53 19 10 60              jump @1952 if a2 <u 16
      :                          @1943
 35966: 8d 7a                    i32 a3 = -a0
 35968: 84 a2 07                 t0 = a3 & 0x7
 35971: c8 27 0b                 a4 = a0 + t0
 35974: ae b7 13                 jump @1946 if a0 >=u a4
      :                          @1944
 35977: 64 2c                    a5 = t0
 35979: 64 7a                    a3 = a0
 35981: 01                       fallthrough
      :                          @1945
 35982: 78 a8                    u8 [a3] = a1
 35984: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 35987: 95 aa 01                 a3 = a3 + 0x1
 35990: 52 0c f8                 jump @1945 if a5 != 0
      :                          @1946
 35993: c9 29 09                 a2 = a2 - t0
 35996: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 35999: c8 ba 0a                 a3 = a3 + a4
 36002: ae ab 22                 jump @1949 if a4 >=u a3
      :                          @1947
 36005: 97 82 38                 t0 = a1 << 0x38
 36008: 14 0c 00 01 01 01 01 00 00 00 a5 = 0x101010100
 36018: d6 c2 02                 t0 = t0 mulhu a5
 36021: 97 2c 20                 a5 = t0 << 0x20
 36024: d4 2c 0c                 a5 = a5 | t0
 36027: 01                       fallthrough
      :                          @1948
 36028: 7b bc                    u64 [a4] = a5
 36030: 95 bb 08                 a4 = a4 + 0x8
 36033: ac ab fb                 jump @1948 if a4 <u a3
      :                          @1949
 36036: 84 99 07                 a2 = a2 & 0x7
 36039: c8 9a 0b                 a4 = a3 + a2
 36042: ae ba 0e                 jump @1951 if a3 >=u a4
      :                          @1950
 36045: 78 a8                    u8 [a3] = a1
 36047: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 36050: 95 aa 01                 a3 = a3 + 0x1
 36053: 52 09 f8                 jump @1950 if a2 != 0
      :                          @1951
 36056: 32 00                    ret
      :                          @1952
 36058: 64 7a                    a3 = a0
 36060: c8 97 0b                 a4 = a0 + a2
 36063: ac b7 ee                 jump @1950 if a0 <u a4
      :                          @1953
 36066: 28 f6                    jump @1951
      :                          @1954
 36068: 51 09 16                 jump @1957 if a2 == 0
      :                          @1955
 36071: 7c 7a                    a3 = u8 [a0]
 36073: 7c 8b                    a4 = u8 [a1]
 36075: ab ba 13                 jump @1958 if a3 != a4
      :                          @1956
 36078: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 36081: 95 88 01                 a1 = a1 + 0x1
 36084: 95 77 01                 a0 = a0 + 0x1
 36087: 52 09 f0                 jump @1955 if a2 != 0
      :                          @1957
 36090: 33 07                    a0 = 0
 36092: 32 00                    ret
      :                          @1958
 36094: c9 ba 07                 a0 = a3 - a4
 36097: 32 00                    ret
